#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TitleCtrl

#include "Basic.hpp"

#include "BP_TitleCtrl_classes.hpp"
#include "BP_TitleCtrl_parameters.hpp"


namespace SDK
{

// Function BP_TitleCtrl.BP_TitleCtrl_C.ExecuteUbergraph_BP_TitleCtrl
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::ExecuteUbergraph_BP_TitleCtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "ExecuteUbergraph_BP_TitleCtrl");

	Params::BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.private_LoadHeader
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::Private_LoadHeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "private_LoadHeader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "ReceiveEndPlay");

	Params::BP_TitleCtrl_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.private_Initialize
// (BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::Private_Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "private_Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.StartCtrl
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::StartCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "StartCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_TitleCtrl_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "ReceiveTick");

	Params::BP_TitleCtrl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TitleCtrl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_73E854CA4A4A00CCF0276EAD888280E9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TitleCtrl_C::OnLoaded_73E854CA4A4A00CCF0276EAD888280E9(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "OnLoaded_73E854CA4A4A00CCF0276EAD888280E9");

	Params::BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_F626ACB2404288A4FBFAD08736779276
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TitleCtrl_C::OnLoaded_F626ACB2404288A4FBFAD08736779276(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "OnLoaded_F626ACB2404288A4FBFAD08736779276");

	Params::BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_70DE6DFF41872028BF2E12927655FE49
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TitleCtrl_C::OnLoaded_70DE6DFF41872028BF2E12927655FE49(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "OnLoaded_70DE6DFF41872028BF2E12927655FE49");

	Params::BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TitleCtrl_C::OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6");

	Params::BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TitleCtrl_C::OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2");

	Params::BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_39B295964692A44CB6EAE6A93C776812
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TitleCtrl_C::OnLoaded_39B295964692A44CB6EAE6A93C776812(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "OnLoaded_39B295964692A44CB6EAE6A93C776812");

	Params::BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_TitleTop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::TickFunc_TitleTop(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_TitleTop");

	Params::BP_TitleCtrl_C_TickFunc_TitleTop Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.DestroyCreatedObj
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::DestroyCreatedObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "DestroyCreatedObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.UpdateTopInput
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ButtonNum                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Cursornum                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TriggerNum                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TitleCtrl_C::UpdateTopInput(int32* ButtonNum, int32* Cursornum, bool* TriggerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "UpdateTopInput");

	Params::BP_TitleCtrl_C_UpdateTopInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ButtonNum != nullptr)
		*ButtonNum = Parms.ButtonNum;

	if (Cursornum != nullptr)
		*Cursornum = Parms.Cursornum;

	if (TriggerNum != nullptr)
		*TriggerNum = Parms.TriggerNum;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Initializing
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickFunc_Initializing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_Initializing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartTitleTop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickStartTitleTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickStartTitleTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartContinue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickStartContinue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickStartContinue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartOption
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickStartOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickStartOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Continue
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickFunc_Continue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_Continue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Option
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickFunc_Option()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_Option");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.EndCtrl
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TitleEndType                          In_EndType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_NewGameType                           In_NewGameType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   In_SaveDataID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::EndCtrl(E_TitleEndType In_EndType, E_NewGameType In_NewGameType, int32 In_SaveDataID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "EndCtrl");

	Params::BP_TitleCtrl_C_EndCtrl Parms{};

	Parms.In_EndType = In_EndType;
	Parms.In_NewGameType = In_NewGameType;
	Parms.In_SaveDataID = In_SaveDataID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnOptionCtrl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::SpawnOptionCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "SpawnOptionCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnDifficultySelectCtrl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::SpawnDifficultySelectCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "SpawnDifficultySelectCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartDifficultySelect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickStartDifficultySelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickStartDifficultySelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_DifficultySelect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickFunc_DifficultySelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_DifficultySelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnBenefitSelectCtrl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::SpawnBenefitSelectCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "SpawnBenefitSelectCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnCopyrightCtrl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::SpawnCopyrightCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "SpawnCopyrightCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnConvertCtrl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::SpawnConvertCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "SpawnConvertCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.HelpWindowExecutionClose
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::HelpWindowExecutionClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "HelpWindowExecutionClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.DispFunc_OnHoveredMouse
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::DispFunc_OnHoveredMouse(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "DispFunc_OnHoveredMouse");

	Params::BP_TitleCtrl_C_DispFunc_OnHoveredMouse Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.DispFunc_OnClickedMouse
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::DispFunc_OnClickedMouse(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "DispFunc_OnClickedMouse");

	Params::BP_TitleCtrl_C_DispFunc_OnClickedMouse Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.DecideTopSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::DecideTopSelection(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "DecideTopSelection");

	Params::BP_TitleCtrl_C_DecideTopSelection Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.ChangeTopCursor
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Set                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLimitStop                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TitleCtrl_C::ChangeTopCursor(int32 Add, int32 Set, bool IsLimitStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "ChangeTopCursor");

	Params::BP_TitleCtrl_C_ChangeTopCursor Parms{};

	Parms.Add = Add;
	Parms.Set = Set;
	Parms.IsLimitStop = IsLimitStop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Copyright
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickFunc_Copyright()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_Copyright");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_SelectEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickFunc_SelectEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_SelectEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Convert
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickFunc_Convert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickFunc_Convert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartOption_Copyright
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickStartOption_Copyright()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickStartOption_Copyright");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartOption_SelectEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickStartOption_SelectEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickStartOption_SelectEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartOption_Convert
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::TickStartOption_Convert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "TickStartOption_Convert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.OpenDialogYesNo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DialogTextLabel                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InitCursorPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::OpenDialogYesNo(class UScriptMessageAsset* InScriptMessageAsset, class FName DialogTextLabel, int32 InitCursorPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "OpenDialogYesNo");

	Params::BP_TitleCtrl_C_OpenDialogYesNo Parms{};

	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.DialogTextLabel = DialogTextLabel;
	Parms.InitCursorPosition = InitCursorPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.DialogCtrlInput
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InputButtonNum                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InputCursorNum                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTriggerInput                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TitleCtrl_C::DialogCtrlInput(int32* InputButtonNum, int32* InputCursorNum, bool* IsTriggerInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "DialogCtrlInput");

	Params::BP_TitleCtrl_C_DialogCtrlInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputButtonNum != nullptr)
		*InputButtonNum = Parms.InputButtonNum;

	if (InputCursorNum != nullptr)
		*InputCursorNum = Parms.InputCursorNum;

	if (IsTriggerInput != nullptr)
		*IsTriggerInput = Parms.IsTriggerInput;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.DialogCtrlUpdate
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SelectedYes                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SelectedNo                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TitleCtrl_C::DialogCtrlUpdate(bool* SelectedYes, bool* SelectedNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "DialogCtrlUpdate");

	Params::BP_TitleCtrl_C_DialogCtrlUpdate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedYes != nullptr)
		*SelectedYes = Parms.SelectedYes;

	if (SelectedNo != nullptr)
		*SelectedNo = Parms.SelectedNo;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnItemMovieCtrl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TitleCtrl_C::SpawnItemMovieCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "SpawnItemMovieCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.GetNewgameType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NewGameType                           Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::GetNewgameType(E_NewGameType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "GetNewgameType");

	Params::BP_TitleCtrl_C_GetNewgameType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.GetSaveDataIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::GetSaveDataIndex(int32* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "GetSaveDataIndex");

	Params::BP_TitleCtrl_C_GetSaveDataIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.GetEndType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TitleEndType                          Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::GetEndType(E_TitleEndType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "GetEndType");

	Params::BP_TitleCtrl_C_GetEndType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.IsEndTitleCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TitleCtrl_C::IsEndTitleCtrl(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "IsEndTitleCtrl");

	Params::BP_TitleCtrl_C_IsEndTitleCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.GetDifficulty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_GAME_DIFFICULTY                       Difficulty                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TitleCtrl_C::GetDifficulty(E_GAME_DIFFICULTY* Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "GetDifficulty");

	Params::BP_TitleCtrl_C_GetDifficulty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Difficulty != nullptr)
		*Difficulty = Parms.Difficulty;
}


// Function BP_TitleCtrl.BP_TitleCtrl_C.GetBenefitData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBenefitData                     Data                                                   (Parm, OutParm)

void ABP_TitleCtrl_C::GetBenefitData(struct FBenefitData* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TitleCtrl_C", "GetBenefitData");

	Params::BP_TitleCtrl_C_GetBenefitData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}

}

