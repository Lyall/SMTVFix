#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_MsgCtrl

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowIn
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowIn final
{
public:
	E_WIDGET_PRIO                                 InPriority;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowIn) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowIn");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowIn) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgWindowIn");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowIn, InPriority) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowIn::InPriority' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ICanSetMsg
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_ICanSetMsg final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ICanSetMsg) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_ICanSetMsg");
static_assert(sizeof(BPI_MsgCtrl_C_ICanSetMsg) == 0x000001, "Wrong size on BPI_MsgCtrl_C_ICanSetMsg");
static_assert(offsetof(BPI_MsgCtrl_C_ICanSetMsg, OutFinished) == 0x000000, "Member 'BPI_MsgCtrl_C_ICanSetMsg::OutFinished' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetMsgText
// 0x0018 (0x0018 - 0x0000)
struct BPI_MsgCtrl_C_ISetMsgText final
{
public:
	class UScriptMessageAsset*                    ArgScriptMessageAsset;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ArgLabel;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArgExecutionText;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ArgShowPageIconAfterCompleted;                     // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetMsgText) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetMsgText");
static_assert(sizeof(BPI_MsgCtrl_C_ISetMsgText) == 0x000018, "Wrong size on BPI_MsgCtrl_C_ISetMsgText");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgText, ArgScriptMessageAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetMsgText::ArgScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgText, ArgLabel) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetMsgText::ArgLabel' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgText, ArgExecutionText) == 0x000010, "Member 'BPI_MsgCtrl_C_ISetMsgText::ArgExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgText, ArgShowPageIconAfterCompleted) == 0x000011, "Member 'BPI_MsgCtrl_C_ISetMsgText::ArgShowPageIconAfterCompleted' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IExecutionMsgWindowIn
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IExecutionMsgWindowIn final
{
public:
	E_WIDGET_PRIO                                 InPriority;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IExecutionMsgWindowIn) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IExecutionMsgWindowIn");
static_assert(sizeof(BPI_MsgCtrl_C_IExecutionMsgWindowIn) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IExecutionMsgWindowIn");
static_assert(offsetof(BPI_MsgCtrl_C_IExecutionMsgWindowIn, InPriority) == 0x000000, "Member 'BPI_MsgCtrl_C_IExecutionMsgWindowIn::InPriority' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IIsFinishedWindowOut
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IIsFinishedWindowOut final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IIsFinishedWindowOut) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IIsFinishedWindowOut");
static_assert(sizeof(BPI_MsgCtrl_C_IIsFinishedWindowOut) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IIsFinishedWindowOut");
static_assert(offsetof(BPI_MsgCtrl_C_IIsFinishedWindowOut, OutFinished) == 0x000000, "Member 'BPI_MsgCtrl_C_IIsFinishedWindowOut::OutFinished' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetMsgSelectMenu
// 0x0048 (0x0048 - 0x0000)
struct BPI_MsgCtrl_C_ISetMsgSelectMenu final
{
public:
	int32                                         InMenuNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInitCursorPosition;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           InSelectItemName;                                  // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InUseNewIcon;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3806[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  InSelectItemNewIcon;                               // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  InSelectTextDisabledColor;                         // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetMsgSelectMenu) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetMsgSelectMenu");
static_assert(sizeof(BPI_MsgCtrl_C_ISetMsgSelectMenu) == 0x000048, "Wrong size on BPI_MsgCtrl_C_ISetMsgSelectMenu");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenu, InMenuNumber) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenu::InMenuNumber' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenu, InInitCursorPosition) == 0x000004, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenu::InInitCursorPosition' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenu, InScriptMessageAsset) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenu::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenu, InSelectItemName) == 0x000010, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenu::InSelectItemName' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenu, InUseNewIcon) == 0x000020, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenu::InUseNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenu, InSelectItemNewIcon) == 0x000028, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenu::InSelectItemNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenu, InSelectTextDisabledColor) == 0x000038, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenu::InSelectTextDisabledColor' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMoveSelectCursor
// 0x0004 (0x0004 - 0x0000)
struct BPI_MsgCtrl_C_IMoveSelectCursor final
{
public:
	int32                                         InParam;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMoveSelectCursor) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMoveSelectCursor");
static_assert(sizeof(BPI_MsgCtrl_C_IMoveSelectCursor) == 0x000004, "Wrong size on BPI_MsgCtrl_C_IMoveSelectCursor");
static_assert(offsetof(BPI_MsgCtrl_C_IMoveSelectCursor, InParam) == 0x000000, "Member 'BPI_MsgCtrl_C_IMoveSelectCursor::InParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IGetSelectedCursorPosition
// 0x0004 (0x0004 - 0x0000)
struct BPI_MsgCtrl_C_IGetSelectedCursorPosition final
{
public:
	int32                                         OutIndex;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IGetSelectedCursorPosition) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IGetSelectedCursorPosition");
static_assert(sizeof(BPI_MsgCtrl_C_IGetSelectedCursorPosition) == 0x000004, "Wrong size on BPI_MsgCtrl_C_IGetSelectedCursorPosition");
static_assert(offsetof(BPI_MsgCtrl_C_IGetSelectedCursorPosition, OutIndex) == 0x000000, "Member 'BPI_MsgCtrl_C_IGetSelectedCursorPosition::OutIndex' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetMsgTextByIndex
// 0x0010 (0x0010 - 0x0000)
struct BPI_MsgCtrl_C_ISetMsgTextByIndex final
{
public:
	class UScriptMessageAsset*                    ArgScriptMessageAsset;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Argindex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArgExecutionText;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ArgShowPageIconAfterCompleted;                     // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetMsgTextByIndex) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetMsgTextByIndex");
static_assert(sizeof(BPI_MsgCtrl_C_ISetMsgTextByIndex) == 0x000010, "Wrong size on BPI_MsgCtrl_C_ISetMsgTextByIndex");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgTextByIndex, ArgScriptMessageAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetMsgTextByIndex::ArgScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgTextByIndex, Argindex) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetMsgTextByIndex::Argindex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgTextByIndex, ArgExecutionText) == 0x00000C, "Member 'BPI_MsgCtrl_C_ISetMsgTextByIndex::ArgExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgTextByIndex, ArgShowPageIconAfterCompleted) == 0x00000D, "Member 'BPI_MsgCtrl_C_ISetMsgTextByIndex::ArgShowPageIconAfterCompleted' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetMsgSelectMenuByIndex
// 0x0048 (0x0048 - 0x0000)
struct BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex final
{
public:
	int32                                         InMenuNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInitCursorPosition;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 InSelectItemIndex;                                 // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InUseNewIcon;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3807[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  InSelectItemNewIcon;                               // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  InSelectTextDisabledColor;                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex");
static_assert(sizeof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex) == 0x000048, "Wrong size on BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex, InMenuNumber) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex::InMenuNumber' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex, InInitCursorPosition) == 0x000004, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex::InInitCursorPosition' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex, InScriptMessageAsset) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex, InSelectItemIndex) == 0x000010, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex::InSelectItemIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex, InUseNewIcon) == 0x000020, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex::InUseNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex, InSelectItemNewIcon) == 0x000028, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex::InSelectItemNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex, InSelectTextDisabledColor) == 0x000038, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndex::InSelectTextDisabledColor' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IIsFinishedWindowIn
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IIsFinishedWindowIn final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IIsFinishedWindowIn) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IIsFinishedWindowIn");
static_assert(sizeof(BPI_MsgCtrl_C_IIsFinishedWindowIn) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IIsFinishedWindowIn");
static_assert(offsetof(BPI_MsgCtrl_C_IIsFinishedWindowIn, OutFinished) == 0x000000, "Member 'BPI_MsgCtrl_C_IIsFinishedWindowIn::OutFinished' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IIsCompletedMsg
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IIsCompletedMsg final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IIsCompletedMsg) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IIsCompletedMsg");
static_assert(sizeof(BPI_MsgCtrl_C_IIsCompletedMsg) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IIsCompletedMsg");
static_assert(offsetof(BPI_MsgCtrl_C_IIsCompletedMsg, OutFinished) == 0x000000, "Member 'BPI_MsgCtrl_C_IIsCompletedMsg::OutFinished' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetRichMsgTextByLable
// 0x0018 (0x0018 - 0x0000)
struct BPI_MsgCtrl_C_ISetRichMsgTextByLable final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowPageIconAfterCompleted;                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetRichMsgTextByLable) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetRichMsgTextByLable");
static_assert(sizeof(BPI_MsgCtrl_C_ISetRichMsgTextByLable) == 0x000018, "Wrong size on BPI_MsgCtrl_C_ISetRichMsgTextByLable");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByLable, InScriptMessageAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByLable::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByLable, InLabel) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByLable::InLabel' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByLable, InExecutionText) == 0x000010, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByLable::InExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByLable, InShowPageIconAfterCompleted) == 0x000011, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByLable::InShowPageIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByLable, InBuildText) == 0x000012, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByLable::InBuildText' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetRichMsgTextByIndex
// 0x0010 (0x0010 - 0x0000)
struct BPI_MsgCtrl_C_ISetRichMsgTextByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowPageIconAfterCompleted;                      // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetRichMsgTextByIndex) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetRichMsgTextByIndex");
static_assert(sizeof(BPI_MsgCtrl_C_ISetRichMsgTextByIndex) == 0x000010, "Wrong size on BPI_MsgCtrl_C_ISetRichMsgTextByIndex");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByIndex, InScriptMessageAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByIndex, InIndex) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByIndex, InExecutionText) == 0x00000C, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByIndex, InShowPageIconAfterCompleted) == 0x00000D, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByIndex::InShowPageIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetRichMsgTextByIndex, InBuildText) == 0x00000E, "Member 'BPI_MsgCtrl_C_ISetRichMsgTextByIndex::InBuildText' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowSettings
// 0x0004 (0x0004 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowSettings final
{
public:
	int32                                         InType;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowSettings) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowSettings");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowSettings) == 0x000004, "Wrong size on BPI_MsgCtrl_C_IMsgWindowSettings");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowSettings, InType) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowSettings::InType' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowGetCentering
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowGetCentering final
{
public:
	bool                                          OutCentering;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowGetCentering) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowGetCentering");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowGetCentering) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgWindowGetCentering");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowGetCentering, OutCentering) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowGetCentering::OutCentering' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowGetVoiceCompornent
// 0x0008 (0x0008 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowGetVoiceCompornent final
{
public:
	class UAtomComponent*                         OutVoiceCompornent;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowGetVoiceCompornent) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowGetVoiceCompornent");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowGetVoiceCompornent) == 0x000008, "Wrong size on BPI_MsgCtrl_C_IMsgWindowGetVoiceCompornent");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowGetVoiceCompornent, OutVoiceCompornent) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowGetVoiceCompornent::OutVoiceCompornent' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetMsgSelectMenuByIndexAfterBuild
// 0x0050 (0x0050 - 0x0000)
struct BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild final
{
public:
	int32                                         InMenuNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInitCursorPosition;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 NSelectItemIndex;                                  // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InUseNewIcon;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3808[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  InSelectItemNewIcon;                               // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  InSelectTextDisabledColor;                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InBuildTextLater;                                  // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild");
static_assert(sizeof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild) == 0x000050, "Wrong size on BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, InMenuNumber) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::InMenuNumber' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, InInitCursorPosition) == 0x000004, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::InInitCursorPosition' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, InScriptMessageAsset) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, NSelectItemIndex) == 0x000010, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::NSelectItemIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, InUseNewIcon) == 0x000020, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::InUseNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, InSelectItemNewIcon) == 0x000028, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::InSelectItemNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, InSelectTextDisabledColor) == 0x000038, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::InSelectTextDisabledColor' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild, InBuildTextLater) == 0x000048, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByIndexAfterBuild::InBuildTextLater' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetMsgSelectMenuByLabelAfterBuild
// 0x0050 (0x0050 - 0x0000)
struct BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild final
{
public:
	int32                                         InMenuNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInitCursorPosition;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           InSelectItemName;                                  // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InUseNewIcon;                                      // 0x0020(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3809[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  InSelectItemNewIcon;                               // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  InSelectTextDisabledColor;                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InBuildTextLater;                                  // 0x0048(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild");
static_assert(sizeof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild) == 0x000050, "Wrong size on BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InMenuNumber) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InMenuNumber' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InInitCursorPosition) == 0x000004, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InInitCursorPosition' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InScriptMessageAsset) == 0x000008, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InSelectItemName) == 0x000010, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InSelectItemName' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InUseNewIcon) == 0x000020, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InUseNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InSelectItemNewIcon) == 0x000028, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InSelectItemNewIcon' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InSelectTextDisabledColor) == 0x000038, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InSelectTextDisabledColor' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild, InBuildTextLater) == 0x000048, "Member 'BPI_MsgCtrl_C_ISetMsgSelectMenuByLabelAfterBuild::InBuildTextLater' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetMsgEventFlag
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_ISetMsgEventFlag final
{
public:
	bool                                          InEventFlag;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetMsgEventFlag) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_ISetMsgEventFlag");
static_assert(sizeof(BPI_MsgCtrl_C_ISetMsgEventFlag) == 0x000001, "Wrong size on BPI_MsgCtrl_C_ISetMsgEventFlag");
static_assert(offsetof(BPI_MsgCtrl_C_ISetMsgEventFlag, InEventFlag) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetMsgEventFlag::InEventFlag' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgSetRichSelectTextValueParam
// 0x000C (0x000C - 0x0000)
struct BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam final
{
public:
	int32                                         InSelectIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValueIndex;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValueParam;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam) == 0x00000C, "Wrong size on BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam, InSelectIndex) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam::InSelectIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam, InValueIndex) == 0x000004, "Member 'BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam::InValueIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam, InValueParam) == 0x000008, "Member 'BPI_MsgCtrl_C_IMsgSetRichSelectTextValueParam::InValueParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgSetRichTextValueParam
// 0x0008 (0x0008 - 0x0000)
struct BPI_MsgCtrl_C_IMsgSetRichTextValueParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValueParam;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgSetRichTextValueParam) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgSetRichTextValueParam");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgSetRichTextValueParam) == 0x000008, "Wrong size on BPI_MsgCtrl_C_IMsgSetRichTextValueParam");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetRichTextValueParam, InIndex) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgSetRichTextValueParam::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetRichTextValueParam, InValueParam) == 0x000004, "Member 'BPI_MsgCtrl_C_IMsgSetRichTextValueParam::InValueParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgGetDrawStrLen
// 0x0004 (0x0004 - 0x0000)
struct BPI_MsgCtrl_C_IMsgGetDrawStrLen final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgGetDrawStrLen) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgGetDrawStrLen");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgGetDrawStrLen) == 0x000004, "Wrong size on BPI_MsgCtrl_C_IMsgGetDrawStrLen");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgGetDrawStrLen, ReturnValue) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgGetDrawStrLen::ReturnValue' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgSetRichTextProgramValue
// 0x0018 (0x0018 - 0x0000)
struct BPI_MsgCtrl_C_IMsgSetRichTextProgramValue final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InValue;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgSetRichTextProgramValue) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_IMsgSetRichTextProgramValue");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgSetRichTextProgramValue) == 0x000018, "Wrong size on BPI_MsgCtrl_C_IMsgSetRichTextProgramValue");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetRichTextProgramValue, InIndex) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgSetRichTextProgramValue::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetRichTextProgramValue, InValue) == 0x000008, "Member 'BPI_MsgCtrl_C_IMsgSetRichTextProgramValue::InValue' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IIsCompletedPage
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IIsCompletedPage final
{
public:
	bool                                          IsFinish;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IIsCompletedPage) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IIsCompletedPage");
static_assert(sizeof(BPI_MsgCtrl_C_IIsCompletedPage) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IIsCompletedPage");
static_assert(offsetof(BPI_MsgCtrl_C_IIsCompletedPage, IsFinish) == 0x000000, "Member 'BPI_MsgCtrl_C_IIsCompletedPage::IsFinish' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IIsVisibleWindow
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IIsVisibleWindow final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IIsVisibleWindow) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IIsVisibleWindow");
static_assert(sizeof(BPI_MsgCtrl_C_IIsVisibleWindow) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IIsVisibleWindow");
static_assert(offsetof(BPI_MsgCtrl_C_IIsVisibleWindow, IsVisible) == 0x000000, "Member 'BPI_MsgCtrl_C_IIsVisibleWindow::IsVisible' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.ISetWindowVisibility
// 0x0002 (0x0002 - 0x0000)
struct BPI_MsgCtrl_C_ISetWindowVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RerurnVisible;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_ISetWindowVisibility) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_ISetWindowVisibility");
static_assert(sizeof(BPI_MsgCtrl_C_ISetWindowVisibility) == 0x000002, "Wrong size on BPI_MsgCtrl_C_ISetWindowVisibility");
static_assert(offsetof(BPI_MsgCtrl_C_ISetWindowVisibility, IsVisible) == 0x000000, "Member 'BPI_MsgCtrl_C_ISetWindowVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_ISetWindowVisibility, RerurnVisible) == 0x000001, "Member 'BPI_MsgCtrl_C_ISetWindowVisibility::RerurnVisible' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgSetSelectCursorMin
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgSetSelectCursorMin final
{
public:
	bool                                          OutParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgSetSelectCursorMin) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgSetSelectCursorMin");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgSetSelectCursorMin) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgSetSelectCursorMin");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetSelectCursorMin, OutParam) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgSetSelectCursorMin::OutParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgSetSelectCursorMax
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgSetSelectCursorMax final
{
public:
	bool                                          OutParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgSetSelectCursorMax) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgSetSelectCursorMax");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgSetSelectCursorMax) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgSetSelectCursorMax");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetSelectCursorMax, OutParam) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgSetSelectCursorMax::OutParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IGetSelectCursorNum
// 0x0004 (0x0004 - 0x0000)
struct BPI_MsgCtrl_C_IGetSelectCursorNum final
{
public:
	int32                                         OutCursorNum;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IGetSelectCursorNum) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IGetSelectCursorNum");
static_assert(sizeof(BPI_MsgCtrl_C_IGetSelectCursorNum) == 0x000004, "Wrong size on BPI_MsgCtrl_C_IGetSelectCursorNum");
static_assert(offsetof(BPI_MsgCtrl_C_IGetSelectCursorNum, OutCursorNum) == 0x000000, "Member 'BPI_MsgCtrl_C_IGetSelectCursorNum::OutCursorNum' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgGetStrLenExcludingTag
// 0x0004 (0x0004 - 0x0000)
struct BPI_MsgCtrl_C_IMsgGetStrLenExcludingTag final
{
public:
	int32                                         StrLen;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgGetStrLenExcludingTag) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgGetStrLenExcludingTag");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgGetStrLenExcludingTag) == 0x000004, "Wrong size on BPI_MsgCtrl_C_IMsgGetStrLenExcludingTag");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgGetStrLenExcludingTag, StrLen) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgGetStrLenExcludingTag::StrLen' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowIsNextPageIconClicked
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowIsNextPageIconClicked final
{
public:
	bool                                          OutClicked;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowIsNextPageIconClicked) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowIsNextPageIconClicked");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowIsNextPageIconClicked) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgWindowIsNextPageIconClicked");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowIsNextPageIconClicked, OutClicked) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowIsNextPageIconClicked::OutClicked' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowIsConfirmedMouse
// 0x0008 (0x0008 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutSelectedIndex;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse) == 0x000008, "Wrong size on BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse, OutFinished) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse::OutFinished' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse, OutSelectedIndex) == 0x000004, "Member 'BPI_MsgCtrl_C_IMsgWindowIsConfirmedMouse::OutSelectedIndex' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowIsMovedCursorMouse
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowIsMovedCursorMouse final
{
public:
	bool                                          OutMoved;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowIsMovedCursorMouse) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowIsMovedCursorMouse");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowIsMovedCursorMouse) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgWindowIsMovedCursorMouse");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowIsMovedCursorMouse, OutMoved) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowIsMovedCursorMouse::OutMoved' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgSetGardenTalkIcon
// 0x0008 (0x0008 - 0x0000)
struct BPI_MsgCtrl_C_IMsgSetGardenTalkIcon final
{
public:
	int32                                         InCursorIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgSetGardenTalkIcon) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgSetGardenTalkIcon");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgSetGardenTalkIcon) == 0x000008, "Wrong size on BPI_MsgCtrl_C_IMsgSetGardenTalkIcon");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetGardenTalkIcon, InCursorIndex) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgSetGardenTalkIcon::InCursorIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetGardenTalkIcon, OutParam) == 0x000004, "Member 'BPI_MsgCtrl_C_IMsgSetGardenTalkIcon::OutParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgResetGardenTalkIcon
// 0x0008 (0x0008 - 0x0000)
struct BPI_MsgCtrl_C_IMsgResetGardenTalkIcon final
{
public:
	int32                                         InCursorIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgResetGardenTalkIcon) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgResetGardenTalkIcon");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgResetGardenTalkIcon) == 0x000008, "Wrong size on BPI_MsgCtrl_C_IMsgResetGardenTalkIcon");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgResetGardenTalkIcon, InCursorIndex) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgResetGardenTalkIcon::InCursorIndex' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgResetGardenTalkIcon, OutParam) == 0x000004, "Member 'BPI_MsgCtrl_C_IMsgResetGardenTalkIcon::OutParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgCtrl_GetIsMacroEnd
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgCtrl_GetIsMacroEnd final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgCtrl_GetIsMacroEnd) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgCtrl_GetIsMacroEnd");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgCtrl_GetIsMacroEnd) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgCtrl_GetIsMacroEnd");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_GetIsMacroEnd, IsEnd) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgCtrl_GetIsMacroEnd::IsEnd' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgCtrl_DrawCommonMsgTextIndex
// 0x0020 (0x0020 - 0x0000)
struct BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex final
{
public:
	class UScriptMessageAsset*                    MessageAsset;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExecutionText;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowPageIconAfterCompleted;                        // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380C[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpeakingActor;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FullvoiceText;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex) == 0x000020, "Wrong size on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex, MessageAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex::MessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex, Param_Index) == 0x000008, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex, ExecutionText) == 0x00000C, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex::ExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex, ShowPageIconAfterCompleted) == 0x00000D, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex::ShowPageIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex, SpeakingActor) == 0x000010, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex::SpeakingActor' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex, FullvoiceText) == 0x000018, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextIndex::FullvoiceText' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgCtrl_DrawCommonMsgTextLabel
// 0x0028 (0x0028 - 0x0000)
struct BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel final
{
public:
	class UScriptMessageAsset*                    ScriptMessageAsset;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Label;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExecutionText;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowPageIconAfterCompleted;                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380D[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpeakingActor;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FullvoiceText;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel) == 0x000028, "Wrong size on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel, ScriptMessageAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel::ScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel, Label) == 0x000008, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel::Label' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel, ExecutionText) == 0x000010, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel::ExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel, ShowPageIconAfterCompleted) == 0x000011, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel::ShowPageIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel, SpeakingActor) == 0x000018, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel::SpeakingActor' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel, FullvoiceText) == 0x000020, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLabel::FullvoiceText' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgCtrl_DrawCommonMsgTextLipSync
// 0x0020 (0x0020 - 0x0000)
struct BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync final
{
public:
	class UScriptMessageAsset*                    ScriptMessageAsset;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Label;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExecutionText;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowPageIconAfterCompleted;                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380E[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpeakingActor;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync) == 0x000020, "Wrong size on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync, ScriptMessageAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync::ScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync, Label) == 0x000008, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync::Label' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync, ExecutionText) == 0x000010, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync::ExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync, ShowPageIconAfterCompleted) == 0x000011, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync::ShowPageIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync, SpeakingActor) == 0x000018, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgTextLipSync::SpeakingActor' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgCtrl_DrawCommonMsgSelectEx
// 0x0038 (0x0038 - 0x0000)
struct BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx final
{
public:
	class UScriptMessageAsset*                    SelectAsset;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           SelectArray;                                       // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         SelectNum;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorPosition;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  GrayText;                                          // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          EnterDelay;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseCancel;                                         // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx) == 0x000038, "Wrong size on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx, SelectAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx::SelectAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx, SelectArray) == 0x000008, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx::SelectArray' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx, SelectNum) == 0x000018, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx::SelectNum' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx, CursorPosition) == 0x00001C, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx::CursorPosition' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx, GrayText) == 0x000020, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx::GrayText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx, EnterDelay) == 0x000030, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx::EnterDelay' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx, UseCancel) == 0x000031, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectEx::UseCancel' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgCtrl_DrawCommonMsgSelectExIndex
// 0x0038 (0x0038 - 0x0000)
struct BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex final
{
public:
	class UScriptMessageAsset*                    SelectAsset;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 SelectArray;                                       // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         SelectNum;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorPosition;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  GrayText;                                          // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          EnterDelay;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseCancel;                                         // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex) == 0x000008, "Wrong alignment on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex) == 0x000038, "Wrong size on BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex, SelectAsset) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex::SelectAsset' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex, SelectArray) == 0x000008, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex::SelectArray' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex, SelectNum) == 0x000018, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex::SelectNum' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex, CursorPosition) == 0x00001C, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex::CursorPosition' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex, GrayText) == 0x000020, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex::GrayText' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex, EnterDelay) == 0x000030, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex::EnterDelay' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex, UseCancel) == 0x000031, "Member 'BPI_MsgCtrl_C_IMsgCtrl_DrawCommonMsgSelectExIndex::UseCancel' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgCtrl_GetValueMacroEnd
// 0x0004 (0x0004 - 0x0000)
struct BPI_MsgCtrl_C_IMsgCtrl_GetValueMacroEnd final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgCtrl_GetValueMacroEnd) == 0x000004, "Wrong alignment on BPI_MsgCtrl_C_IMsgCtrl_GetValueMacroEnd");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgCtrl_GetValueMacroEnd) == 0x000004, "Wrong size on BPI_MsgCtrl_C_IMsgCtrl_GetValueMacroEnd");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgCtrl_GetValueMacroEnd, Return) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgCtrl_GetValueMacroEnd::Return' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgWindowResetConfirmedMouse
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsgWindowResetConfirmedMouse final
{
public:
	bool                                          OutParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgWindowResetConfirmedMouse) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgWindowResetConfirmedMouse");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgWindowResetConfirmedMouse) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsgWindowResetConfirmedMouse");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgWindowResetConfirmedMouse, OutParam) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgWindowResetConfirmedMouse::OutParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsg Select Menu Hover Off
// 0x0001 (0x0001 - 0x0000)
struct BPI_MsgCtrl_C_IMsg_Select_Menu_Hover_Off final
{
public:
	bool                                          OutParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsg_Select_Menu_Hover_Off) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsg_Select_Menu_Hover_Off");
static_assert(sizeof(BPI_MsgCtrl_C_IMsg_Select_Menu_Hover_Off) == 0x000001, "Wrong size on BPI_MsgCtrl_C_IMsg_Select_Menu_Hover_Off");
static_assert(offsetof(BPI_MsgCtrl_C_IMsg_Select_Menu_Hover_Off, OutParam) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsg_Select_Menu_Hover_Off::OutParam' has a wrong offset!");

// Function BPI_MsgCtrl.BPI_MsgCtrl_C.IMsgSetMouseMaskFlag
// 0x0002 (0x0002 - 0x0000)
struct BPI_MsgCtrl_C_IMsgSetMouseMaskFlag final
{
public:
	bool                                          InMaskOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MsgCtrl_C_IMsgSetMouseMaskFlag) == 0x000001, "Wrong alignment on BPI_MsgCtrl_C_IMsgSetMouseMaskFlag");
static_assert(sizeof(BPI_MsgCtrl_C_IMsgSetMouseMaskFlag) == 0x000002, "Wrong size on BPI_MsgCtrl_C_IMsgSetMouseMaskFlag");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetMouseMaskFlag, InMaskOn) == 0x000000, "Member 'BPI_MsgCtrl_C_IMsgSetMouseMaskFlag::InMaskOn' has a wrong offset!");
static_assert(offsetof(BPI_MsgCtrl_C_IMsgSetMouseMaskFlag, OutParam) == 0x000001, "Member 'BPI_MsgCtrl_C_IMsgSetMouseMaskFlag::OutParam' has a wrong offset!");

}

