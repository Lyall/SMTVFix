#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharaChanger_Battle2

#include "Basic.hpp"

#include "ST_StBattleCameraSetUp_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_TalkCameraOffset_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharaChanger_Battle2.BP_CharaChanger_Battle2_C
// 0x0220 (0x0440 - 0x0220)
class ABP_CharaChanger_Battle2_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_UI_STATUS_CTRL_TYPE                         M_Type;                                            // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E8C[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             M_DefaultTransform;                                // 0x0240(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_AnalyzeItemMode;                                 // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E8D[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           M_LoadedModelActor;                                // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 M_DefaultCameraTarget;                             // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    M_BattleParty;                                     // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UUIStatusCtrlDataObjBtl_C*              M_CtrlDataObjBtl;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_EnableCtrlDataObj;                               // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E8E[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_SpawnModelID;                                    // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DEFAULT_CAMERA_DISTANCE;                           // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E8F[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           TargetChara;                                       // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E90[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetFace;                                        // 0x02C0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             BaseEyeTransform;                                  // 0x02F0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LOOK_OFFSET;                                       // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EYE_OFFSET;                                        // 0x032C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraScale;                                       // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BASE_OFFSET;                                       // 0x033C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             M_BattleStatusTable;                               // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_StBattleCameraSetUp                M_BattleStatusData;                                // 0x0350(0x002C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                M_DefaultForwardVector;                            // 0x037C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                M_SavedForwardVector;                              // 0x0388(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E91[0xC];                                     // 0x0394(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             M_SavedActorTransform;                             // 0x03A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         M_ReqID;                                           // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_NowLoadingModel;                                 // 0x03D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E92[0x3];                                     // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   M_DevilActorClassRef;                              // 0x03D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          M_NeedToFinalize;                                  // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E93[0x7];                                     // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             M_TalkCameraOffsetTable;                           // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_TalkCameraOffset                   M_CameraOffset;                                    // 0x0410(0x0028)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             M_PartyStatusCameraOffsetTable;                    // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CharaChanger_Battle2(int32 EntryPoint);
	void ViewStart();
	void ViewEnd();
	void ChangeChara(int32 DevilID, bool IsUnknown);
	void SpawnStockDevil();
	void Init(const struct FTransform& SpawnPos, E_UI_STATUS_CTRL_TYPE Type);
	void Init_Battle(const struct FTransform& SpawnPos, E_UI_STATUS_CTRL_TYPE Type, class UObject* StatusCtrlDataBtl, bool UseAnalyzeItem);
	void ReceiveTick(float DeltaSeconds);
	void PreRequest(int32 DevilID);
	void OnLoaded_CDB3BABB4D9D1D885E2ECFAFCDC9FA47(TSubclassOf<class UObject> Loaded);
	void DestroyDevilModel(bool* Destroyed);
	void CameraReset(int32 EnemyID, struct FVector& ActorForwardVector, struct FTransform& ActorTransform, float Param_CameraScale);
	void GetSocketPos(class AActor* Object, struct FVector* Transform);
	int32 GetNearlyNum(int32 InputPin);
	void CalcBaseLocation(struct FVector& ActorForwardVector, struct FTransform& ActorTransform);
	void SetTargetChara(class AActor* InActor);
	void CalcCamera(struct FTransform& ActorTransform, struct FVector* Eye, struct FVector* Look);
	void ModifyEyeFromCameraScale(const struct FVector& InEye, const struct FVector& InLook, float InCameraScale, struct FVector* OutEye);
	void UpdateVisibilityForBattleMember(int32 PartyIndex);
	void SetTracedTransform(class ACharaBase_C* InChara, const struct FTransform& InTransform);
	void HideAllBattleMember();
	void GetEyeOffset(struct FVector* EyeOffset);
	void GetLookOffset(struct FVector* LookOffset);
	void SetBattleStatusData(int32 EnemyID, struct FST_StBattleCameraSetUp* BattleCameraData);
	void GetTargetFaceLocation(struct FTransform& ActorTransform, struct FVector* Location);
	void CheckIsChangedRequest(bool* NoChange);
	void NeedToFinalize(bool* IsNeedToFinalize);
	void SetTalkCameraOffsetTable(int32 DevilID, bool IsEnemy, struct FST_TalkCameraOffset* CameraOffset);
	bool NeedEnemyCameraData();
	void IsEndPreparation(int32 DevilID, bool* IsEnd);
	void NewInit(class UObject* DataObject, const struct FTransform& SpawnTransform, bool WithModelLoad, bool WithModelSpawn, bool* Success);
	void CallVoice(EDevilVoiceType VoiceType, bool* Dummy);
	void NewInit_Battle(class UObject* StatusCtrlDataBtl, class UObject* BattleParty, E_UI_STATUS_CTRL_TYPE Type, bool UseAnalyzeItem, bool* Dummy);
	void DisableRotation(bool IsDisable, bool* NoUse);
	void SetDelayInInit(int32 Num, bool* Dummy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharaChanger_Battle2_C">();
	}
	static class ABP_CharaChanger_Battle2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CharaChanger_Battle2_C>();
	}
};
static_assert(alignof(ABP_CharaChanger_Battle2_C) == 0x000010, "Wrong alignment on ABP_CharaChanger_Battle2_C");
static_assert(sizeof(ABP_CharaChanger_Battle2_C) == 0x000440, "Wrong size on ABP_CharaChanger_Battle2_C");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, UberGraphFrame) == 0x000220, "Member 'ABP_CharaChanger_Battle2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, Camera) == 0x000228, "Member 'ABP_CharaChanger_Battle2_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_CharaChanger_Battle2_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_Type) == 0x000238, "Member 'ABP_CharaChanger_Battle2_C::M_Type' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_DefaultTransform) == 0x000240, "Member 'ABP_CharaChanger_Battle2_C::M_DefaultTransform' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_AnalyzeItemMode) == 0x000270, "Member 'ABP_CharaChanger_Battle2_C::M_AnalyzeItemMode' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_LoadedModelActor) == 0x000278, "Member 'ABP_CharaChanger_Battle2_C::M_LoadedModelActor' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_DefaultCameraTarget) == 0x000280, "Member 'ABP_CharaChanger_Battle2_C::M_DefaultCameraTarget' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_BattleParty) == 0x000288, "Member 'ABP_CharaChanger_Battle2_C::M_BattleParty' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_CtrlDataObjBtl) == 0x000298, "Member 'ABP_CharaChanger_Battle2_C::M_CtrlDataObjBtl' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_EnableCtrlDataObj) == 0x0002A0, "Member 'ABP_CharaChanger_Battle2_C::M_EnableCtrlDataObj' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_SpawnModelID) == 0x0002A4, "Member 'ABP_CharaChanger_Battle2_C::M_SpawnModelID' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, DEFAULT_CAMERA_DISTANCE) == 0x0002A8, "Member 'ABP_CharaChanger_Battle2_C::DEFAULT_CAMERA_DISTANCE' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, TargetChara) == 0x0002B0, "Member 'ABP_CharaChanger_Battle2_C::TargetChara' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, TargetFace) == 0x0002C0, "Member 'ABP_CharaChanger_Battle2_C::TargetFace' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, BaseEyeTransform) == 0x0002F0, "Member 'ABP_CharaChanger_Battle2_C::BaseEyeTransform' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, LOOK_OFFSET) == 0x000320, "Member 'ABP_CharaChanger_Battle2_C::LOOK_OFFSET' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, EYE_OFFSET) == 0x00032C, "Member 'ABP_CharaChanger_Battle2_C::EYE_OFFSET' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, CameraScale) == 0x000338, "Member 'ABP_CharaChanger_Battle2_C::CameraScale' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, BASE_OFFSET) == 0x00033C, "Member 'ABP_CharaChanger_Battle2_C::BASE_OFFSET' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_BattleStatusTable) == 0x000348, "Member 'ABP_CharaChanger_Battle2_C::M_BattleStatusTable' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_BattleStatusData) == 0x000350, "Member 'ABP_CharaChanger_Battle2_C::M_BattleStatusData' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_DefaultForwardVector) == 0x00037C, "Member 'ABP_CharaChanger_Battle2_C::M_DefaultForwardVector' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_SavedForwardVector) == 0x000388, "Member 'ABP_CharaChanger_Battle2_C::M_SavedForwardVector' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_SavedActorTransform) == 0x0003A0, "Member 'ABP_CharaChanger_Battle2_C::M_SavedActorTransform' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_ReqID) == 0x0003D0, "Member 'ABP_CharaChanger_Battle2_C::M_ReqID' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_NowLoadingModel) == 0x0003D4, "Member 'ABP_CharaChanger_Battle2_C::M_NowLoadingModel' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_DevilActorClassRef) == 0x0003D8, "Member 'ABP_CharaChanger_Battle2_C::M_DevilActorClassRef' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_NeedToFinalize) == 0x000400, "Member 'ABP_CharaChanger_Battle2_C::M_NeedToFinalize' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_TalkCameraOffsetTable) == 0x000408, "Member 'ABP_CharaChanger_Battle2_C::M_TalkCameraOffsetTable' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_CameraOffset) == 0x000410, "Member 'ABP_CharaChanger_Battle2_C::M_CameraOffset' has a wrong offset!");
static_assert(offsetof(ABP_CharaChanger_Battle2_C, M_PartyStatusCameraOffsetTable) == 0x000438, "Member 'ABP_CharaChanger_Battle2_C::M_PartyStatusCameraOffsetTable' has a wrong offset!");

}

