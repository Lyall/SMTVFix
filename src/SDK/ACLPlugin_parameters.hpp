#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ACLPlugin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ACLPlugin_structs.hpp"


namespace SDK::Params
{

// Function ACLPlugin.AnimationCompressionLibraryDatabase.GetVisualFidelity
// 0x0010 (0x0010 - 0x0000)
struct AnimationCompressionLibraryDatabase_GetVisualFidelity final
{
public:
	class UAnimationCompressionLibraryDatabase*   DatabaseAsset;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EACLVisualFidelity                            ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimationCompressionLibraryDatabase_GetVisualFidelity) == 0x000008, "Wrong alignment on AnimationCompressionLibraryDatabase_GetVisualFidelity");
static_assert(sizeof(AnimationCompressionLibraryDatabase_GetVisualFidelity) == 0x000010, "Wrong size on AnimationCompressionLibraryDatabase_GetVisualFidelity");
static_assert(offsetof(AnimationCompressionLibraryDatabase_GetVisualFidelity, DatabaseAsset) == 0x000000, "Member 'AnimationCompressionLibraryDatabase_GetVisualFidelity::DatabaseAsset' has a wrong offset!");
static_assert(offsetof(AnimationCompressionLibraryDatabase_GetVisualFidelity, ReturnValue) == 0x000008, "Member 'AnimationCompressionLibraryDatabase_GetVisualFidelity::ReturnValue' has a wrong offset!");

// Function ACLPlugin.AnimationCompressionLibraryDatabase.SetVisualFidelity
// 0x0030 (0x0030 - 0x0000)
struct AnimationCompressionLibraryDatabase_SetVisualFidelity final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimationCompressionLibraryDatabase*   DatabaseAsset;                                     // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EACLVisualFidelityChangeResult                Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EACLVisualFidelity                            VisualFidelity;                                    // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimationCompressionLibraryDatabase_SetVisualFidelity) == 0x000008, "Wrong alignment on AnimationCompressionLibraryDatabase_SetVisualFidelity");
static_assert(sizeof(AnimationCompressionLibraryDatabase_SetVisualFidelity) == 0x000030, "Wrong size on AnimationCompressionLibraryDatabase_SetVisualFidelity");
static_assert(offsetof(AnimationCompressionLibraryDatabase_SetVisualFidelity, WorldContextObject) == 0x000000, "Member 'AnimationCompressionLibraryDatabase_SetVisualFidelity::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AnimationCompressionLibraryDatabase_SetVisualFidelity, LatentInfo) == 0x000008, "Member 'AnimationCompressionLibraryDatabase_SetVisualFidelity::LatentInfo' has a wrong offset!");
static_assert(offsetof(AnimationCompressionLibraryDatabase_SetVisualFidelity, DatabaseAsset) == 0x000020, "Member 'AnimationCompressionLibraryDatabase_SetVisualFidelity::DatabaseAsset' has a wrong offset!");
static_assert(offsetof(AnimationCompressionLibraryDatabase_SetVisualFidelity, Result) == 0x000028, "Member 'AnimationCompressionLibraryDatabase_SetVisualFidelity::Result' has a wrong offset!");
static_assert(offsetof(AnimationCompressionLibraryDatabase_SetVisualFidelity, VisualFidelity) == 0x000029, "Member 'AnimationCompressionLibraryDatabase_SetVisualFidelity::VisualFidelity' has a wrong offset!");

}

