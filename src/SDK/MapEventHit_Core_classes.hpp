#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapEventHit_Core

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_MEH_TYPE_structs.hpp"
#include "MapActorCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MapEventHit_Core.MapEventHit_Core_C
// 0x0108 (0x0380 - 0x0278)
class AMapEventHit_Core_C : public AMapActorCore_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MapEventHit_Core_C;                 // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        MEC_TASK;                                          // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Hit;                                               // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   DebugEventHitMemo;                                 // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DbgPlane1;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DbgPlane6;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DbgPlane5;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DbgPlane4;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DbgPlane3;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DbgPlane2;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   HitName;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitSize;                                           // 0x02D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MEH_TYPE                                    MEH_TYPE;                                          // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitView;                                           // 0x02E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DebugViewHidden;                                   // 0x02E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256B[0x1];                                     // 0x02E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           DebugPlaneList;                                    // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FVector>                        DebugPlanePos;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             CallEventHitAction;                                // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             CallEventHitIn;                                    // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             CallEventHitOut;                                   // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USceneComponent*                        LocalTask;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMEC_BaseTask_C*>                Tasklist;                                          // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         TaskIndex;                                         // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256C[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       Mid;                                               // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             CallTaskEnd;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IgnorePause;                                       // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256D[0x3];                                     // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MyAreaId;                                          // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MapEventHit_Core(int32 EntryPoint);
	void CallTaskEnd__DelegateSignature();
	void CallEventHitOut__DelegateSignature();
	void CallEventHitIn__DelegateSignature();
	void CallEventHitAction__DelegateSignature();
	void IsEventHitPaused(bool* Paused);
	void IsMyArea(bool* Param_IsMyArea);
	void Hidden(bool NewHidden);
	void FlagCh(bool* OK);
	void UserConstructionScript();
	void EventHitAction();
	void EventHitIN();
	void EventHitOUT();
	void EventHitActivate(bool Active);
	void ReceiveBeginPlay();
	void DebugView(bool Bool);
	void HiddenVolume(bool Param_Hidden);
	void ReShapeColor(const struct FLinearColor& Value);
	void StartTask();
	void TaskManager();
	void NextCallTask();
	void HitOFF();
	void HitON();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MapEventHit_Core_C">();
	}
	static class AMapEventHit_Core_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMapEventHit_Core_C>();
	}
};
static_assert(alignof(AMapEventHit_Core_C) == 0x000008, "Wrong alignment on AMapEventHit_Core_C");
static_assert(sizeof(AMapEventHit_Core_C) == 0x000380, "Wrong size on AMapEventHit_Core_C");
static_assert(offsetof(AMapEventHit_Core_C, UberGraphFrame_MapEventHit_Core_C) == 0x000278, "Member 'AMapEventHit_Core_C::UberGraphFrame_MapEventHit_Core_C' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, MEC_TASK) == 0x000280, "Member 'AMapEventHit_Core_C::MEC_TASK' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, Hit) == 0x000288, "Member 'AMapEventHit_Core_C::Hit' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DebugEventHitMemo) == 0x000290, "Member 'AMapEventHit_Core_C::DebugEventHitMemo' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, Scene) == 0x000298, "Member 'AMapEventHit_Core_C::Scene' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DbgPlane1) == 0x0002A0, "Member 'AMapEventHit_Core_C::DbgPlane1' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DbgPlane6) == 0x0002A8, "Member 'AMapEventHit_Core_C::DbgPlane6' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DbgPlane5) == 0x0002B0, "Member 'AMapEventHit_Core_C::DbgPlane5' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DbgPlane4) == 0x0002B8, "Member 'AMapEventHit_Core_C::DbgPlane4' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DbgPlane3) == 0x0002C0, "Member 'AMapEventHit_Core_C::DbgPlane3' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DbgPlane2) == 0x0002C8, "Member 'AMapEventHit_Core_C::DbgPlane2' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, HitName) == 0x0002D0, "Member 'AMapEventHit_Core_C::HitName' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, HitSize) == 0x0002D8, "Member 'AMapEventHit_Core_C::HitSize' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, MEH_TYPE) == 0x0002E4, "Member 'AMapEventHit_Core_C::MEH_TYPE' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, HitView) == 0x0002E5, "Member 'AMapEventHit_Core_C::HitView' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DebugViewHidden) == 0x0002E6, "Member 'AMapEventHit_Core_C::DebugViewHidden' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DebugPlaneList) == 0x0002E8, "Member 'AMapEventHit_Core_C::DebugPlaneList' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, DebugPlanePos) == 0x0002F8, "Member 'AMapEventHit_Core_C::DebugPlanePos' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, CallEventHitAction) == 0x000308, "Member 'AMapEventHit_Core_C::CallEventHitAction' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, CallEventHitIn) == 0x000318, "Member 'AMapEventHit_Core_C::CallEventHitIn' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, CallEventHitOut) == 0x000328, "Member 'AMapEventHit_Core_C::CallEventHitOut' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, LocalTask) == 0x000338, "Member 'AMapEventHit_Core_C::LocalTask' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, Tasklist) == 0x000340, "Member 'AMapEventHit_Core_C::Tasklist' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, TaskIndex) == 0x000350, "Member 'AMapEventHit_Core_C::TaskIndex' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, Mid) == 0x000358, "Member 'AMapEventHit_Core_C::Mid' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, CallTaskEnd) == 0x000368, "Member 'AMapEventHit_Core_C::CallTaskEnd' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, IgnorePause) == 0x000378, "Member 'AMapEventHit_Core_C::IgnorePause' has a wrong offset!");
static_assert(offsetof(AMapEventHit_Core_C, MyAreaId) == 0x00037C, "Member 'AMapEventHit_Core_C::MyAreaId' has a wrong offset!");

}

