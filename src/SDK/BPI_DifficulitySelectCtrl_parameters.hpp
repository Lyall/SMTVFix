#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DifficulitySelectCtrl

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "E_DifficulitySelectEndType_structs.hpp"
#include "E_DifficulitySelectPlace_structs.hpp"


namespace SDK::Params
{

// Function BPI_DifficulitySelectCtrl.BPI_DifficulitySelectCtrl_C.startDifficultySelect
// 0x0001 (0x0001 - 0x0000)
struct BPI_DifficulitySelectCtrl_C_StartDifficultySelect final
{
public:
	E_DifficulitySelectPlace                      InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DifficulitySelectCtrl_C_StartDifficultySelect) == 0x000001, "Wrong alignment on BPI_DifficulitySelectCtrl_C_StartDifficultySelect");
static_assert(sizeof(BPI_DifficulitySelectCtrl_C_StartDifficultySelect) == 0x000001, "Wrong size on BPI_DifficulitySelectCtrl_C_StartDifficultySelect");
static_assert(offsetof(BPI_DifficulitySelectCtrl_C_StartDifficultySelect, InType) == 0x000000, "Member 'BPI_DifficulitySelectCtrl_C_StartDifficultySelect::InType' has a wrong offset!");

// Function BPI_DifficulitySelectCtrl.BPI_DifficulitySelectCtrl_C.getDifficulitySelectEndType
// 0x0001 (0x0001 - 0x0000)
struct BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType final
{
public:
	E_DifficulitySelectEndType                    OutType;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType) == 0x000001, "Wrong alignment on BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType");
static_assert(sizeof(BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType) == 0x000001, "Wrong size on BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType");
static_assert(offsetof(BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType, OutType) == 0x000000, "Member 'BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType::OutType' has a wrong offset!");

// Function BPI_DifficulitySelectCtrl.BPI_DifficulitySelectCtrl_C.getSelectDifficulity
// 0x0001 (0x0001 - 0x0000)
struct BPI_DifficulitySelectCtrl_C_GetSelectDifficulity final
{
public:
	E_GAME_DIFFICULTY                             OutType;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DifficulitySelectCtrl_C_GetSelectDifficulity) == 0x000001, "Wrong alignment on BPI_DifficulitySelectCtrl_C_GetSelectDifficulity");
static_assert(sizeof(BPI_DifficulitySelectCtrl_C_GetSelectDifficulity) == 0x000001, "Wrong size on BPI_DifficulitySelectCtrl_C_GetSelectDifficulity");
static_assert(offsetof(BPI_DifficulitySelectCtrl_C_GetSelectDifficulity, OutType) == 0x000000, "Member 'BPI_DifficulitySelectCtrl_C_GetSelectDifficulity::OutType' has a wrong offset!");

}

