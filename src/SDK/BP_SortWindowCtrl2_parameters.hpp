#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SortWindowCtrl2

#include "Basic.hpp"

#include "E_SORTWINDOW_SCROLL_OFFSET_PATTERN_structs.hpp"
#include "Engine_structs.hpp"
#include "E_SORTWINDOW_ANIM_STATE_structs.hpp"
#include "Project_structs.hpp"
#include "E_SORTWINDOW_POS_TYPE_structs.hpp"
#include "E_SORTWINDOW_MOUSE_EVENT_TYPE_structs.hpp"


namespace SDK::Params
{

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.MouseInputEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature final
{
public:
	E_SORTWINDOW_MOUSE_EVENT_TYPE                 MouseEventType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C33[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectListIdx;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectSlotIdx;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ListDrawOffset;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature");
static_assert(sizeof(BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature) == 0x000010, "Wrong size on BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature");
static_assert(offsetof(BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature, MouseEventType) == 0x000000, "Member 'BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature::MouseEventType' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature, SelectListIdx) == 0x000004, "Member 'BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature::SelectListIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature, SelectSlotIdx) == 0x000008, "Member 'BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature::SelectSlotIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature, ListDrawOffset) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_MouseInputEvent__DelegateSignature::ListDrawOffset' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.ExecuteUbergraph_BP_SortWindowCtrl2
// 0x003C (0x003C - 0x0000)
struct BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_10;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C34[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InScrollNum;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsPlaySE_9;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_EnableMouseHit;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InListIndex_2;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsSave_SortSetting;                   // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsSave_SortOrder;                     // 0x0019(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_8;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C35[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InListIndex_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_SCROLL_OFFSET_PATTERN            K2Node_Event_InScrollOffsetPattern;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsInitSetting_1;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_7;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsSkipAnimation_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_InListIndex;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InScrollOffset;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsInitSetting;                        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_6;                           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORT_WINDOW_SORT_TYPE                       K2Node_Event_InSortScene;                          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_POS_TYPE                         K2Node_Event_InPosType;                            // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsSkipAnimation;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsAutoSetupCursor;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsAutoSetupDecideSlot;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_5;                           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_4;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_3;                           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_2;                           // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE_1;                           // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlaySE;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2");
static_assert(sizeof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2) == 0x00003C, "Wrong size on BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, EntryPoint) == 0x000000, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, CallFunc_IsInViewport_ReturnValue) == 0x000004, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_10) == 0x000005, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_10' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InScrollNum) == 0x000008, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InScrollNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_9) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_9' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_EnableMouseHit) == 0x00000D, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_EnableMouseHit' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_EndPlayReason) == 0x00000E, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, CallFunc_AddToWidgetPrio_ReturnValue) == 0x00000F, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InListIndex_2) == 0x000014, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InListIndex_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsSave_SortSetting) == 0x000018, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsSave_SortSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsSave_SortOrder) == 0x000019, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsSave_SortOrder' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_8) == 0x00001A, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_8' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InListIndex_1) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InListIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InScrollOffsetPattern) == 0x000020, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InScrollOffsetPattern' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsInitSetting_1) == 0x000021, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsInitSetting_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_7) == 0x000022, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_7' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsSkipAnimation_1) == 0x000023, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsSkipAnimation_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InListIndex) == 0x000024, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InListIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InScrollOffset) == 0x000028, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InScrollOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsInitSetting) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsInitSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_6) == 0x00002D, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_6' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InSortScene) == 0x00002E, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InSortScene' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_InPosType) == 0x00002F, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_InPosType' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsSkipAnimation) == 0x000030, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsAutoSetupCursor) == 0x000031, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsAutoSetupCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsAutoSetupDecideSlot) == 0x000032, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsAutoSetupDecideSlot' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_5) == 0x000033, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_5' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_4) == 0x000034, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_4' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_3) == 0x000035, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_2) == 0x000036, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE_1) == 0x000037, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2, K2Node_Event_IsPlaySE) == 0x000038, "Member 'BP_SortWindowCtrl2_C_ExecuteUbergraph_BP_SortWindowCtrl2::K2Node_Event_IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_MoveCursor_Up
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_MoveCursor_Up final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Up) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_MoveCursor_Up");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Up) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_MoveCursor_Up");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Up, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_MoveCursor_Up::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_MoveCursor_Down
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_MoveCursor_Down final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Down) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_MoveCursor_Down");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Down) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_MoveCursor_Down");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Down, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_MoveCursor_Down::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_Page_UP
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_Page_UP final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_Page_UP) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_Page_UP");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_Page_UP) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_Page_UP");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_Page_UP, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_Page_UP::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_Page_Down
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_Page_Down final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_Page_Down) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_Page_Down");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_Page_Down) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_Page_Down");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_Page_Down, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_Page_Down::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_MoveCursor_Top
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_MoveCursor_Top final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Top) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_MoveCursor_Top");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Top) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_MoveCursor_Top");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Top, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_MoveCursor_Top::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_MoveCursor_Bottom
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_MoveCursor_Bottom final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Bottom) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_MoveCursor_Bottom");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Bottom) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_MoveCursor_Bottom");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_MoveCursor_Bottom, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_MoveCursor_Bottom::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_OpenWindow
// 0x0005 (0x0005 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_OpenWindow final
{
public:
	E_SORT_WINDOW_SORT_TYPE                       InSortScene;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_POS_TYPE                         InPosType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipAnimation;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAutoSetupCursor;                                 // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAutoSetupDecideSlot;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_OpenWindow) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_OpenWindow");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_OpenWindow) == 0x000005, "Wrong size on BP_SortWindowCtrl2_C_BPI_OpenWindow");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_OpenWindow, InSortScene) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_OpenWindow::InSortScene' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_OpenWindow, InPosType) == 0x000001, "Member 'BP_SortWindowCtrl2_C_BPI_OpenWindow::InPosType' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_OpenWindow, IsSkipAnimation) == 0x000002, "Member 'BP_SortWindowCtrl2_C_BPI_OpenWindow::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_OpenWindow, IsAutoSetupCursor) == 0x000003, "Member 'BP_SortWindowCtrl2_C_BPI_OpenWindow::IsAutoSetupCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_OpenWindow, IsAutoSetupDecideSlot) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_OpenWindow::IsAutoSetupDecideSlot' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_SetCursorAndOffsetIdx
// 0x000C (0x000C - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx final
{
public:
	int32                                         InListIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InScrollOffset;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitSetting;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaySE;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx) == 0x00000C, "Wrong size on BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx, InListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx::InListIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx, InScrollOffset) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx::InScrollOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx, IsInitSetting) == 0x000008, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx::IsInitSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx, IsPlaySE) == 0x000009, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetIdx::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_CloseWindow
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_CloseWindow final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_CloseWindow) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_CloseWindow");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_CloseWindow) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_CloseWindow");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_CloseWindow, IsSkipAnimation) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_CloseWindow::IsSkipAnimation' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_SetCursorAndOffsetPattern
// 0x0008 (0x0008 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern final
{
public:
	int32                                         InListIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_SCROLL_OFFSET_PATTERN            InScrollOffsetPattern;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitSetting;                                     // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaySE;                                          // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern) == 0x000008, "Wrong size on BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern, InListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern::InListIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern, InScrollOffsetPattern) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern::InScrollOffsetPattern' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern, IsInitSetting) == 0x000005, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern::IsInitSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern, IsPlaySE) == 0x000006, "Member 'BP_SortWindowCtrl2_C_BPI_SetCursorAndOffsetPattern::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_SetDecideSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_SetDecideSlot final
{
public:
	int32                                         InListIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSave_SortSetting;                                // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSave_SortOrder;                                  // 0x0005(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaySE;                                          // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_SetDecideSlot) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_SetDecideSlot");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_SetDecideSlot) == 0x000008, "Wrong size on BP_SortWindowCtrl2_C_BPI_SetDecideSlot");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetDecideSlot, InListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_SetDecideSlot::InListIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetDecideSlot, IsSave_SortSetting) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_SetDecideSlot::IsSave_SortSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetDecideSlot, IsSave_SortOrder) == 0x000005, "Member 'BP_SortWindowCtrl2_C_BPI_SetDecideSlot::IsSave_SortOrder' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetDecideSlot, IsPlaySE) == 0x000006, "Member 'BP_SortWindowCtrl2_C_BPI_SetDecideSlot::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SortWindowCtrl2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_ReceiveTick");
static_assert(sizeof(BP_SortWindowCtrl2_C_ReceiveTick) == 0x000004, "Wrong size on BP_SortWindowCtrl2_C_ReceiveTick");
static_assert(offsetof(BP_SortWindowCtrl2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SortWindowCtrl2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_ReceiveEndPlay");
static_assert(sizeof(BP_SortWindowCtrl2_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_ReceiveEndPlay");
static_assert(offsetof(BP_SortWindowCtrl2_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SortWindowCtrl2_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_SetMouseHitVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_SetMouseHitVisibility final
{
public:
	bool                                          EnableMouseHit;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_SetMouseHitVisibility) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_SetMouseHitVisibility");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_SetMouseHitVisibility) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_SetMouseHitVisibility");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetMouseHitVisibility, EnableMouseHit) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_SetMouseHitVisibility::EnableMouseHit' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_ScrollList
// 0x0008 (0x0008 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_ScrollList final
{
public:
	int32                                         InScrollNum;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaySE;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_ScrollList) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_ScrollList");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_ScrollList) == 0x000008, "Wrong size on BP_SortWindowCtrl2_C_BPI_ScrollList");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_ScrollList, InScrollNum) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_ScrollList::InScrollNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_ScrollList, IsPlaySE) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_ScrollList::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_CheckMouseWheel
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_CheckMouseWheel final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_CheckMouseWheel) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_CheckMouseWheel");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_CheckMouseWheel) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_BPI_CheckMouseWheel");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_CheckMouseWheel, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_CheckMouseWheel::IsPlaySE' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.Init
// 0x0010 (0x0010 - 0x0000)
struct BP_SortWindowCtrl2_C_Init final
{
public:
	class UWB_SortWindow2_C*                      CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_Init) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_Init");
static_assert(sizeof(BP_SortWindowCtrl2_C_Init) == 0x000010, "Wrong size on BP_SortWindowCtrl2_C_Init");
static_assert(offsetof(BP_SortWindowCtrl2_C_Init, CallFunc_Create_ReturnValue) == 0x000000, "Member 'BP_SortWindowCtrl2_C_Init::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Init, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.OpenSortWindow
// 0x00A0 (0x00A0 - 0x0000)
struct BP_SortWindowCtrl2_C_OpenSortWindow final
{
public:
	E_SORT_WINDOW_SORT_TYPE                       InSortScene;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_POS_TYPE                         InPosType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipAnimaiton;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAutoSetupCursorPos;                              // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAutoSetupDecideSlot;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORT_WINDOW_SORT_TYPE                       L_PreviousScene;                                   // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C36[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C37[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C38[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_2;              // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C39[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_2;   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3A[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ClampCursorAndOffset_ClampCursor;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ClampCursorAndOffset_ClampOffset;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_getSotrWindowIndex_ReturnValue;           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_OpenSortWindow) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_OpenSortWindow");
static_assert(sizeof(BP_SortWindowCtrl2_C_OpenSortWindow) == 0x0000A0, "Wrong size on BP_SortWindowCtrl2_C_OpenSortWindow");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, InSortScene) == 0x000000, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::InSortScene' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, InPosType) == 0x000001, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::InPosType' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, IsSkipAnimaiton) == 0x000002, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::IsSkipAnimaiton' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, IsAutoSetupCursorPos) == 0x000003, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::IsAutoSetupCursorPos' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, IsAutoSetupDecideSlot) == 0x000004, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::IsAutoSetupDecideSlot' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, L_PreviousScene) == 0x000005, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::L_PreviousScene' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000028, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1) == 0x000050, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_Get_ReturnValue_1) == 0x000060, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, K2Node_DynamicCast_AsBPI_UIManager_2) == 0x000068, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::K2Node_DynamicCast_AsBPI_UIManager_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000079, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_2) == 0x000080, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000091, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_ClampCursorAndOffset_ClampCursor) == 0x000094, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_ClampCursorAndOffset_ClampCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_ClampCursorAndOffset_ClampOffset) == 0x000098, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_ClampCursorAndOffset_ClampOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OpenSortWindow, CallFunc_getSotrWindowIndex_ReturnValue) == 0x00009C, "Member 'BP_SortWindowCtrl2_C_OpenSortWindow::CallFunc_getSotrWindowIndex_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.CloseSortWindow
// 0x0068 (0x0068 - 0x0000)
struct BP_SortWindowCtrl2_C_CloseSortWindow final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3C[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3D[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1;   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_CloseSortWindow) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_CloseSortWindow");
static_assert(sizeof(BP_SortWindowCtrl2_C_CloseSortWindow) == 0x000068, "Wrong size on BP_SortWindowCtrl2_C_CloseSortWindow");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, IsSkipAnimation) == 0x000000, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000028, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, CallFunc_Get_ReturnValue_1) == 0x000038, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000051, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CloseSortWindow, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1) == 0x000058, "Member 'BP_SortWindowCtrl2_C_CloseSortWindow::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.End
// 0x0002 (0x0002 - 0x0000)
struct BP_SortWindowCtrl2_C_End final
{
public:
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_End) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_End");
static_assert(sizeof(BP_SortWindowCtrl2_C_End) == 0x000002, "Wrong size on BP_SortWindowCtrl2_C_End");
static_assert(offsetof(BP_SortWindowCtrl2_C_End, CallFunc_IsInViewport_ReturnValue) == 0x000000, "Member 'BP_SortWindowCtrl2_C_End::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_End, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_SortWindowCtrl2_C_End::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.UpdateScrollBarRate
// 0x0050 (0x0050 - 0x0000)
struct BP_SortWindowCtrl2_C_UpdateScrollBarRate final
{
public:
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_1;        // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3F[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_UpdateScrollBarRate) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_UpdateScrollBarRate");
static_assert(sizeof(BP_SortWindowCtrl2_C_UpdateScrollBarRate) == 0x000050, "Wrong size on BP_SortWindowCtrl2_C_UpdateScrollBarRate");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_GetSlotDrawNum_SlotNum) == 0x000000, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_GetSortItemList_All_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000024, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_GetSortItemList_All_ReturnValue_1) == 0x000028, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_GetSortItemList_All_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateScrollBarRate, CallFunc_FClamp_ReturnValue) == 0x00004C, "Member 'BP_SortWindowCtrl2_C_UpdateScrollBarRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.UpdateWidgetInfo
// 0x0060 (0x0060 - 0x0000)
struct BP_SortWindowCtrl2_C_UpdateWidgetInfo final
{
public:
	bool                                          IsUpdateText;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUpdateScrollBar;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUpdateCursorSlot;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUpdateDecideSlot;                                // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C40[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C41[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C42[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C43[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_InRange_ReturnValue;      // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_SortWindowCtrl2_C_UpdateWidgetInfo) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_UpdateWidgetInfo");
static_assert(sizeof(BP_SortWindowCtrl2_C_UpdateWidgetInfo) == 0x000060, "Wrong size on BP_SortWindowCtrl2_C_UpdateWidgetInfo");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, IsUpdateText) == 0x000000, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::IsUpdateText' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, IsUpdateScrollBar) == 0x000001, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::IsUpdateScrollBar' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, IsUpdateCursorSlot) == 0x000002, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::IsUpdateCursorSlot' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, IsUpdateDecideSlot) == 0x000003, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::IsUpdateDecideSlot' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_GetSlotDrawNum_SlotNum) == 0x000008, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_GetSortItemList_All_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000034, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_GetSlotDrawNum_SlotNum_2) == 0x000040, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_GetSlotDrawNum_SlotNum_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateWidgetInfo, CallFunc_GetSortItemList_InRange_ReturnValue) == 0x000050, "Member 'BP_SortWindowCtrl2_C_UpdateWidgetInfo::CallFunc_GetSortItemList_InRange_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.UpdateHelpMessage
// 0x00C8 (0x00C8 - 0x0000)
struct BP_SortWindowCtrl2_C_UpdateHelpMessage final
{
public:
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> L_HelpWindowCtrl;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_getSotrWindowIndex_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C44[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHelpMsgIdx_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C45[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x0030(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTextByLabel_ReturnValue_1;             // 0x0060(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C46[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPI_GetAppliedSetting_AppliedSetting;     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORT_WINDOW_SORT_ORDER                      CallFunc_BPI_GetAppliedSetting_AppliedOrder;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C47[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_UpdateHelpMessage) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_UpdateHelpMessage");
static_assert(sizeof(BP_SortWindowCtrl2_C_UpdateHelpMessage) == 0x0000C8, "Wrong size on BP_SortWindowCtrl2_C_UpdateHelpMessage");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, L_MsgAsset) == 0x000000, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, L_HelpWindowCtrl) == 0x000008, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::L_HelpWindowCtrl' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_getSotrWindowIndex_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_getSotrWindowIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_GetHelpMsgIdx_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_GetHelpMsgIdx_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_MakeLiteralName_ReturnValue) == 0x000024, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_GetTextByLabel_ReturnValue) == 0x000030, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000058, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_GetTextByLabel_ReturnValue_1) == 0x000060, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_GetTextByLabel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000078, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_Get_ReturnValue) == 0x000088, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, K2Node_DynamicCast_AsBPI_UIManager) == 0x000090, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_BPI_GetAppliedSetting_AppliedSetting) == 0x0000A4, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_BPI_GetAppliedSetting_AppliedSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_BPI_GetAppliedSetting_AppliedOrder) == 0x0000A8, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_BPI_GetAppliedSetting_AppliedOrder' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x0000B0, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, K2Node_SwitchEnum_CmpSuccess) == 0x0000C0, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateHelpMessage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'BP_SortWindowCtrl2_C_UpdateHelpMessage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.UpdateBtnHelp
// 0x0038 (0x0038 - 0x0000)
struct BP_SortWindowCtrl2_C_UpdateBtnHelp final
{
public:
	bool                                          IsInitSetting;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C48[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> L_HelpWindowCtrl;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C49[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPI_GetAppliedSetting_AppliedSetting;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORT_WINDOW_SORT_ORDER                      CallFunc_BPI_GetAppliedSetting_AppliedOrder;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4A[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_getSotrWindowIndex_ReturnValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_UpdateBtnHelp) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_UpdateBtnHelp");
static_assert(sizeof(BP_SortWindowCtrl2_C_UpdateBtnHelp) == 0x000038, "Wrong size on BP_SortWindowCtrl2_C_UpdateBtnHelp");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, IsInitSetting) == 0x000000, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::IsInitSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, L_MsgAsset) == 0x000008, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, L_HelpWindowCtrl) == 0x000010, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::L_HelpWindowCtrl' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_MakeLiteralByte_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000021, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000023, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000024, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000025, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_BPI_GetAppliedSetting_AppliedSetting) == 0x000028, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_BPI_GetAppliedSetting_AppliedSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_BPI_GetAppliedSetting_AppliedOrder) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_BPI_GetAppliedSetting_AppliedOrder' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, K2Node_SwitchEnum_CmpSuccess) == 0x00002D, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_getSotrWindowIndex_ReturnValue) == 0x000030, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_getSotrWindowIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_UpdateBtnHelp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000035, "Member 'BP_SortWindowCtrl2_C_UpdateBtnHelp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.ClampCursorAndOffset
// 0x0098 (0x0098 - 0x0000)
struct BP_SortWindowCtrl2_C_ClampCursorAndOffset final
{
public:
	int32                                         InCursor;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InOffset;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClampCursor;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClampOffset;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_RetOffset;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_RetCursor;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Offset_Max;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Offset_Min;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_1;        // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4C[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4D[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_2;        // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_ClampCursorAndOffset) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_ClampCursorAndOffset");
static_assert(sizeof(BP_SortWindowCtrl2_C_ClampCursorAndOffset) == 0x000098, "Wrong size on BP_SortWindowCtrl2_C_ClampCursorAndOffset");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, InCursor) == 0x000000, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::InCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, InOffset) == 0x000004, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::InOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, ClampCursor) == 0x000008, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::ClampCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, ClampOffset) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::ClampOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, L_RetOffset) == 0x000010, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::L_RetOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, L_RetCursor) == 0x000014, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::L_RetCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, L_Offset_Max) == 0x000018, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::L_Offset_Max' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, L_Offset_Min) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::L_Offset_Min' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_GetSlotDrawNum_SlotNum) == 0x000024, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_GetSortItemList_All_ReturnValue) == 0x000028, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000038, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_GetSortItemList_All_ReturnValue_1) == 0x000040, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_GetSortItemList_All_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_GetSlotDrawNum_SlotNum_2) == 0x000060, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_GetSlotDrawNum_SlotNum_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_GetSortItemList_All_ReturnValue_2) == 0x000068, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_GetSortItemList_All_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Array_Length_ReturnValue_2) == 0x00007C, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000080, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000084, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Max_ReturnValue) == 0x000088, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Clamp_ReturnValue) == 0x00008C, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ClampCursorAndOffset, CallFunc_Clamp_ReturnValue_1) == 0x000090, "Member 'BP_SortWindowCtrl2_C_ClampCursorAndOffset::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.SetScrollOffsetPattern
// 0x0020 (0x0020 - 0x0000)
struct BP_SortWindowCtrl2_C_SetScrollOffsetPattern final
{
public:
	E_SORTWINDOW_SCROLL_OFFSET_PATTERN            InOffsetPattern;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4E[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_SetScrollOffsetPattern");
static_assert(sizeof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern) == 0x000020, "Wrong size on BP_SortWindowCtrl2_C_SetScrollOffsetPattern");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, InOffsetPattern) == 0x000000, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::InOffsetPattern' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, CallFunc_GetSlotDrawNum_SlotNum) == 0x000004, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000010, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetScrollOffsetPattern, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_SetScrollOffsetPattern::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.GetSlotDrawNum
// 0x0028 (0x0028 - 0x0000)
struct BP_SortWindowCtrl2_C_GetSlotDrawNum final
{
public:
	int32                                         SlotNum;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMaxNum_SlotMaxNum;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_GetSlotDrawNum) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_GetSlotDrawNum");
static_assert(sizeof(BP_SortWindowCtrl2_C_GetSlotDrawNum) == 0x000028, "Wrong size on BP_SortWindowCtrl2_C_GetSlotDrawNum");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetSlotDrawNum, SlotNum) == 0x000000, "Member 'BP_SortWindowCtrl2_C_GetSlotDrawNum::SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetSlotDrawNum, CallFunc_GetSortItemList_All_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_GetSlotDrawNum::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetSlotDrawNum, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_GetSlotDrawNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetSlotDrawNum, CallFunc_GetSlotMaxNum_SlotMaxNum) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_GetSlotDrawNum::CallFunc_GetSlotMaxNum_SlotMaxNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetSlotDrawNum, CallFunc_Min_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_GetSlotDrawNum::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.SetCursorAndOffsetIdx
// 0x0030 (0x0030 - 0x0000)
struct BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx final
{
public:
	int32                                         InListIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InScrollOffset;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitSetting;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaySE;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C50[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Offset_Max;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Offset_Min;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ClampCursorAndOffset_ClampCursor;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ClampCursorAndOffset_ClampOffset;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C51[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx");
static_assert(sizeof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx) == 0x000030, "Wrong size on BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, InListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::InListIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, InScrollOffset) == 0x000004, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::InScrollOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, IsInitSetting) == 0x000008, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::IsInitSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, IsPlaySE) == 0x000009, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, L_Offset_Max) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::L_Offset_Max' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, L_Offset_Min) == 0x000010, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::L_Offset_Min' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, CallFunc_GetSlotDrawNum_SlotNum) == 0x000014, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, CallFunc_ClampCursorAndOffset_ClampCursor) == 0x000018, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::CallFunc_ClampCursorAndOffset_ClampCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, CallFunc_ClampCursorAndOffset_ClampOffset) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::CallFunc_ClampCursorAndOffset_ClampOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx, CallFunc_Get_ReturnValue) == 0x000028, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetIdx::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.SetCursorAndOffsetPattern
// 0x0018 (0x0018 - 0x0000)
struct BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern final
{
public:
	int32                                         InListIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_SCROLL_OFFSET_PATTERN            InScrollOffsetPattern;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitSetting;                                     // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaySE;                                          // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C52[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Offset_Max;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Offset_Min;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern");
static_assert(sizeof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern) == 0x000018, "Wrong size on BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, InListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::InListIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, InScrollOffsetPattern) == 0x000004, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::InScrollOffsetPattern' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, IsInitSetting) == 0x000005, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::IsInitSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, IsPlaySE) == 0x000006, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, L_Offset_Max) == 0x000008, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::L_Offset_Max' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, L_Offset_Min) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::L_Offset_Min' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, CallFunc_GetSlotDrawNum_SlotNum) == 0x000010, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_SortWindowCtrl2_C_SetCursorAndOffsetPattern::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.CursorMove_Up
// 0x0088 (0x0088 - 0x0000)
struct BP_SortWindowCtrl2_C_CursorMove_Up final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C53[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C54[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C55[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C56[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_1;        // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C57[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C58[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C59[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_CursorMove_Up) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_CursorMove_Up");
static_assert(sizeof(BP_SortWindowCtrl2_C_CursorMove_Up) == 0x000088, "Wrong size on BP_SortWindowCtrl2_C_CursorMove_Up");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, Temp_int_Variable) == 0x000004, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_GetSlotDrawNum_SlotNum) == 0x000010, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_GetSortItemList_All_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Array_LastIndex_ReturnValue) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000030, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_GetSortItemList_All_ReturnValue_1) == 0x000038, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_GetSortItemList_All_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Max_ReturnValue) == 0x000054, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000060, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000064, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x00006C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, Temp_int_Variable_1) == 0x000070, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_GetCursorIdx_CursorIdx) == 0x000074, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, CallFunc_Less_IntInt_ReturnValue_2) == 0x000079, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, Temp_int_Variable_2) == 0x00007C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, Temp_int_Variable_3) == 0x000080, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Up, Temp_int_Variable_4) == 0x000084, "Member 'BP_SortWindowCtrl2_C_CursorMove_Up::Temp_int_Variable_4' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.CursorMove_Down
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SortWindowCtrl2_C_CursorMove_Down final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_1;        // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5C[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_2;        // 0x0060(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_2;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5D[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_3;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5E[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5F[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_CursorMove_Down) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_CursorMove_Down");
static_assert(sizeof(BP_SortWindowCtrl2_C_CursorMove_Down) == 0x0000B0, "Wrong size on BP_SortWindowCtrl2_C_CursorMove_Down");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, Temp_int_Variable) == 0x000004, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Add_IntInt_ReturnValue_2) == 0x000010, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetSortItemList_All_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetSlotDrawNum_SlotNum) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetSortItemList_All_ReturnValue_1) == 0x000030, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetSortItemList_All_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, Temp_int_Variable_1) == 0x000040, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Max_ReturnValue) == 0x00004C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Add_IntInt_ReturnValue_4) == 0x000058, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x00005C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetSortItemList_All_ReturnValue_2) == 0x000060, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetSortItemList_All_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, Temp_int_Variable_2) == 0x000070, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Max_ReturnValue_1) == 0x00007C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetSlotDrawNum_SlotNum_2) == 0x000080, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetSlotDrawNum_SlotNum_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, Temp_int_Variable_3) == 0x00008C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Get_ReturnValue) == 0x000090, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetSlotDrawNum_SlotNum_3) == 0x000098, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetSlotDrawNum_SlotNum_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_GetCursorIdx_CursorIdx) == 0x0000A0, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Down, Temp_int_Variable_4) == 0x0000A8, "Member 'BP_SortWindowCtrl2_C_CursorMove_Down::Temp_int_Variable_4' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.CursorMove_Top
// 0x0018 (0x0018 - 0x0000)
struct BP_SortWindowCtrl2_C_CursorMove_Top final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C60[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_CursorMove_Top) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_CursorMove_Top");
static_assert(sizeof(BP_SortWindowCtrl2_C_CursorMove_Top) == 0x000018, "Wrong size on BP_SortWindowCtrl2_C_CursorMove_Top");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Top, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_CursorMove_Top::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Top, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_CursorMove_Top::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Top, CallFunc_GetSlotDrawNum_SlotNum) == 0x000010, "Member 'BP_SortWindowCtrl2_C_CursorMove_Top::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Top, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_SortWindowCtrl2_C_CursorMove_Top::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.CursorMove_Bottom
// 0x0050 (0x0050 - 0x0000)
struct BP_SortWindowCtrl2_C_CursorMove_Bottom final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C61[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_1;        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C62[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_CursorMove_Bottom) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_CursorMove_Bottom");
static_assert(sizeof(BP_SortWindowCtrl2_C_CursorMove_Bottom) == 0x000050, "Wrong size on BP_SortWindowCtrl2_C_CursorMove_Bottom");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_GetSortItemList_All_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_GetSlotDrawNum_SlotNum) == 0x000018, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_GetSortItemList_All_ReturnValue_1) == 0x000020, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_GetSortItemList_All_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_Max_ReturnValue) == 0x000038, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_Get_ReturnValue) == 0x000040, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000048, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CursorMove_Bottom, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SortWindowCtrl2_C_CursorMove_Bottom::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.Page_Up
// 0x0068 (0x0068 - 0x0000)
struct BP_SortWindowCtrl2_C_Page_Up final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C63[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C64[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_1;        // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C65[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_Page_Up) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_Page_Up");
static_assert(sizeof(BP_SortWindowCtrl2_C_Page_Up) == 0x000068, "Wrong size on BP_SortWindowCtrl2_C_Page_Up");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_Page_Up::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_GetSlotDrawNum_SlotNum) == 0x000004, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_GetSortItemList_All_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Max_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_GetCursorIdx_CursorIdx) == 0x000024, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000028, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000034, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Max_ReturnValue_1) == 0x000038, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_GetSortItemList_All_ReturnValue_1) == 0x000040, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_GetSortItemList_All_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Array_LastIndex_ReturnValue) == 0x000050, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Less_IntInt_ReturnValue_1) == 0x000055, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_Get_ReturnValue) == 0x000058, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_GetSlotDrawNum_SlotNum_2) == 0x000060, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_GetSlotDrawNum_SlotNum_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Up, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_SortWindowCtrl2_C_Page_Up::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.Page_Down
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SortWindowCtrl2_C_Page_Down final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C66[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_1;        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_2;        // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C67[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_3;        // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C68[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue_4;        // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C69[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum_4;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_Page_Down) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_Page_Down");
static_assert(sizeof(BP_SortWindowCtrl2_C_Page_Down) == 0x0000C0, "Wrong size on BP_SortWindowCtrl2_C_Page_Down");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_Page_Down::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSortItemList_All_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSlotDrawNum_SlotNum) == 0x000018, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSortItemList_All_ReturnValue_1) == 0x000020, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSortItemList_All_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSortItemList_All_ReturnValue_2) == 0x000038, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSortItemList_All_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Max_ReturnValue) == 0x000048, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00004C, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSlotDrawNum_SlotNum_1) == 0x000054, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSlotDrawNum_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetCursorIdx_CursorIdx) == 0x000058, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSortItemList_All_ReturnValue_3) == 0x000060, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSortItemList_All_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSlotDrawNum_SlotNum_2) == 0x000074, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSlotDrawNum_SlotNum_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Min_ReturnValue) == 0x000084, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSlotDrawNum_SlotNum_3) == 0x000088, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSlotDrawNum_SlotNum_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSortItemList_All_ReturnValue_4) == 0x000090, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSortItemList_All_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000A4, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_Get_ReturnValue) == 0x0000B0, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_GetSlotDrawNum_SlotNum_4) == 0x0000B8, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_GetSlotDrawNum_SlotNum_4' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_Page_Down, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_SortWindowCtrl2_C_Page_Down::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.SetDecideSlot
// 0x0038 (0x0038 - 0x0000)
struct BP_SortWindowCtrl2_C_SetDecideSlot final
{
public:
	int32                                         InListIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSaveSortSetting;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSaveSortOrder;                                   // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaySE;                                          // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORT_WINDOW_SORT_ORDER                      Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORT_WINDOW_SORT_ORDER                      Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6A[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORT_WINDOW_SORT_ORDER                      Temp_byte_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORT_WINDOW_SORT_ORDER                      Temp_byte_Variable_3;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_getSotrWindowOrder_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORT_WINDOW_SORT_ORDER                      K2Node_Select_Default;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_SetDecideSlot) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_SetDecideSlot");
static_assert(sizeof(BP_SortWindowCtrl2_C_SetDecideSlot) == 0x000038, "Wrong size on BP_SortWindowCtrl2_C_SetDecideSlot");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, InListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::InListIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, IsSaveSortSetting) == 0x000004, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::IsSaveSortSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, IsSaveSortOrder) == 0x000005, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::IsSaveSortOrder' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, IsPlaySE) == 0x000006, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, Temp_byte_Variable) == 0x000007, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, Temp_byte_Variable_1) == 0x000009, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000A, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_GetSlotDrawNum_SlotNum) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_GetSortItemList_All_ReturnValue) == 0x000010, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, Temp_byte_Variable_2) == 0x00002A, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, Temp_byte_Variable_3) == 0x00002B, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_getSotrWindowOrder_ReturnValue) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_getSotrWindowOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_GetValidValue_ReturnValue) == 0x00002D, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002E, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, K2Node_Select_Default) == 0x00002F, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetDecideSlot, CallFunc_Get_ReturnValue) == 0x000030, "Member 'BP_SortWindowCtrl2_C_SetDecideSlot::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.GetDispMaxOffset
// 0x0028 (0x0028 - 0x0000)
struct BP_SortWindowCtrl2_C_GetDispMaxOffset final
{
public:
	int32                                         SlotNum;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawNum_SlotNum;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_GetDispMaxOffset) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_GetDispMaxOffset");
static_assert(sizeof(BP_SortWindowCtrl2_C_GetDispMaxOffset) == 0x000028, "Wrong size on BP_SortWindowCtrl2_C_GetDispMaxOffset");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetDispMaxOffset, SlotNum) == 0x000000, "Member 'BP_SortWindowCtrl2_C_GetDispMaxOffset::SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetDispMaxOffset, CallFunc_GetSlotDrawNum_SlotNum) == 0x000004, "Member 'BP_SortWindowCtrl2_C_GetDispMaxOffset::CallFunc_GetSlotDrawNum_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetDispMaxOffset, CallFunc_GetSortItemList_All_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_GetDispMaxOffset::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetDispMaxOffset, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_GetDispMaxOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetDispMaxOffset, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_GetDispMaxOffset::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_GetDispMaxOffset, CallFunc_Max_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_GetDispMaxOffset::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BindMouseInputEvent
// 0x0030 (0x0030 - 0x0000)
struct BP_SortWindowCtrl2_C_BindMouseInputEvent final
{
public:
	TDelegate<void(float ScrollRate)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SlotIdx)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SlotIdx)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BindMouseInputEvent) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BindMouseInputEvent");
static_assert(sizeof(BP_SortWindowCtrl2_C_BindMouseInputEvent) == 0x000030, "Wrong size on BP_SortWindowCtrl2_C_BindMouseInputEvent");
static_assert(offsetof(BP_SortWindowCtrl2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_SortWindowCtrl2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'BP_SortWindowCtrl2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.CheckMouseWheel
// 0x0038 (0x0038 - 0x0000)
struct BP_SortWindowCtrl2_C_CheckMouseWheel final
{
public:
	bool                                          IsPlaySE;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDispMaxOffset_SlotNum;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMouseWheelAxis_Axis;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6E[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableMouseWheel_IsEnable;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_CheckMouseWheel) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_CheckMouseWheel");
static_assert(sizeof(BP_SortWindowCtrl2_C_CheckMouseWheel) == 0x000038, "Wrong size on BP_SortWindowCtrl2_C_CheckMouseWheel");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, IsPlaySE) == 0x000000, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_GetDispMaxOffset_SlotNum) == 0x000004, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_GetDispMaxOffset_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_GetCursorIdx_CursorIdx) == 0x000008, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_GetMouseWheelAxis_Axis) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_GetMouseWheelAxis_Axis' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Less_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Less_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000022, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_Get_ReturnValue) == 0x000028, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_CheckMouseWheel, CallFunc_IsEnableMouseWheel_IsEnable) == 0x000030, "Member 'BP_SortWindowCtrl2_C_CheckMouseWheel::CallFunc_IsEnableMouseWheel_IsEnable' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.IsEnableMouseWheel
// 0x0010 (0x0010 - 0x0000)
struct BP_SortWindowCtrl2_C_IsEnableMouseWheel final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDispMaxOffset_SlotNum;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_BPI_GetAnimState_AnimState;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableMouseWheel_IsEnableScroll;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetButtonS5ExclusiveDragging_ReturnValue; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_IsEnableMouseWheel) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_IsEnableMouseWheel");
static_assert(sizeof(BP_SortWindowCtrl2_C_IsEnableMouseWheel) == 0x000010, "Wrong size on BP_SortWindowCtrl2_C_IsEnableMouseWheel");
static_assert(offsetof(BP_SortWindowCtrl2_C_IsEnableMouseWheel, IsEnable) == 0x000000, "Member 'BP_SortWindowCtrl2_C_IsEnableMouseWheel::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_IsEnableMouseWheel, CallFunc_GetDispMaxOffset_SlotNum) == 0x000004, "Member 'BP_SortWindowCtrl2_C_IsEnableMouseWheel::CallFunc_GetDispMaxOffset_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_IsEnableMouseWheel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_IsEnableMouseWheel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_IsEnableMouseWheel, CallFunc_BPI_GetAnimState_AnimState) == 0x000009, "Member 'BP_SortWindowCtrl2_C_IsEnableMouseWheel::CallFunc_BPI_GetAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_IsEnableMouseWheel, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BP_SortWindowCtrl2_C_IsEnableMouseWheel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_IsEnableMouseWheel, CallFunc_IsEnableMouseWheel_IsEnableScroll) == 0x00000B, "Member 'BP_SortWindowCtrl2_C_IsEnableMouseWheel::CallFunc_IsEnableMouseWheel_IsEnableScroll' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_IsEnableMouseWheel, CallFunc_GetButtonS5ExclusiveDragging_ReturnValue) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_IsEnableMouseWheel::CallFunc_GetButtonS5ExclusiveDragging_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.OnHoveredSlot_ByMouse
// 0x0020 (0x0020 - 0x0000)
struct BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CommonUI_EventCtrl_C*               CallFunc_GetCommonUI_EventCtrl_outActor;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C70[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_BPI_GetAnimState_AnimState;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse");
static_assert(sizeof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse) == 0x000020, "Wrong size on BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse, InSlotIdx) == 0x000000, "Member 'BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse::InSlotIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse, CallFunc_GetCursorIdx_CursorIdx) == 0x000004, "Member 'BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse, CallFunc_GetCommonUI_EventCtrl_outActor) == 0x000008, "Member 'BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse::CallFunc_GetCommonUI_EventCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse, CallFunc_BPI_GetAnimState_AnimState) == 0x000018, "Member 'BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse::CallFunc_BPI_GetAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_SortWindowCtrl2_C_OnHoveredSlot_ByMouse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.OnClickedSlot_ByMouse
// 0x0020 (0x0020 - 0x0000)
struct BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C71[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CommonUI_EventCtrl_C*               CallFunc_GetCommonUI_EventCtrl_outActor;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_BPI_GetAnimState_AnimState;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C72[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse");
static_assert(sizeof(BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse) == 0x000020, "Wrong size on BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse, InSlotIdx) == 0x000000, "Member 'BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse::InSlotIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse, CallFunc_GetCommonUI_EventCtrl_outActor) == 0x000008, "Member 'BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse::CallFunc_GetCommonUI_EventCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse, CallFunc_BPI_GetAnimState_AnimState) == 0x000010, "Member 'BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse::CallFunc_BPI_GetAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_SortWindowCtrl2_C_OnClickedSlot_ByMouse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.OnMovedScrollBar_ByMouse
// 0x0040 (0x0040 - 0x0000)
struct BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse final
{
public:
	float                                         InScrollRate;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C73[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMaxNum_SlotMaxNum;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CommonUI_EventCtrl_C*               CallFunc_GetCommonUI_EventCtrl_outActor;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BarPositionToTopIndex_OutTopIndex;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDispMaxOffset_SlotNum;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_BPI_GetAnimState_AnimState;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse");
static_assert(sizeof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse) == 0x000040, "Wrong size on BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, InScrollRate) == 0x000000, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::InScrollRate' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_GetSortItemList_All_ReturnValue) == 0x000008, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_GetSlotMaxNum_SlotMaxNum) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_GetSlotMaxNum_SlotMaxNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_GetCommonUI_EventCtrl_outActor) == 0x000020, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_GetCommonUI_EventCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_GetCursorIdx_CursorIdx) == 0x000028, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_BarPositionToTopIndex_OutTopIndex) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_BarPositionToTopIndex_OutTopIndex' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_GetDispMaxOffset_SlotNum) == 0x000030, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_GetDispMaxOffset_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000039, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, CallFunc_BPI_GetAnimState_AnimState) == 0x00003A, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::CallFunc_BPI_GetAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse, K2Node_SwitchEnum_CmpSuccess) == 0x00003B, "Member 'BP_SortWindowCtrl2_C_OnMovedScrollBar_ByMouse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.ScrollList
// 0x0038 (0x0038 - 0x0000)
struct BP_SortWindowCtrl2_C_ScrollList final
{
public:
	int32                                         InScrollNum;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaySE;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C74[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_OldOffset;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDispMaxOffset_SlotNum;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDispMaxOffset_SlotNum_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C75[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C76[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_ScrollList) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_ScrollList");
static_assert(sizeof(BP_SortWindowCtrl2_C_ScrollList) == 0x000038, "Wrong size on BP_SortWindowCtrl2_C_ScrollList");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, InScrollNum) == 0x000000, "Member 'BP_SortWindowCtrl2_C_ScrollList::InScrollNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, IsPlaySE) == 0x000004, "Member 'BP_SortWindowCtrl2_C_ScrollList::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, L_OldOffset) == 0x000008, "Member 'BP_SortWindowCtrl2_C_ScrollList::L_OldOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_GetDispMaxOffset_SlotNum) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_GetDispMaxOffset_SlotNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_GetCursorIdx_CursorIdx) == 0x000010, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_GetDispMaxOffset_SlotNum_1) == 0x000018, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_GetDispMaxOffset_SlotNum_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_Get_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_ScrollList, CallFunc_Clamp_ReturnValue) == 0x000030, "Member 'BP_SortWindowCtrl2_C_ScrollList::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.SetMouseHitVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_SortWindowCtrl2_C_SetMouseHitVisibility final
{
public:
	bool                                          EnableMouseHit;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_SetMouseHitVisibility) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_SetMouseHitVisibility");
static_assert(sizeof(BP_SortWindowCtrl2_C_SetMouseHitVisibility) == 0x000001, "Wrong size on BP_SortWindowCtrl2_C_SetMouseHitVisibility");
static_assert(offsetof(BP_SortWindowCtrl2_C_SetMouseHitVisibility, EnableMouseHit) == 0x000000, "Member 'BP_SortWindowCtrl2_C_SetMouseHitVisibility::EnableMouseHit' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_GetCursor
// 0x0004 (0x0004 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_GetCursor final
{
public:
	int32                                         ListIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_GetCursor) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_GetCursor");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_GetCursor) == 0x000004, "Wrong size on BP_SortWindowCtrl2_C_BPI_GetCursor");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetCursor, ListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_GetCursor::ListIndex' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_GetAppliedSetting
// 0x0014 (0x0014 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_GetAppliedSetting final
{
public:
	E_SORT_WINDOW_SORT_TYPE                       InSortScene;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C77[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AppliedSetting;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORT_WINDOW_SORT_ORDER                      AppliedOrder;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C78[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_getSotrWindowIndex_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_getSotrWindowOrder_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_GetAppliedSetting");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting) == 0x000014, "Wrong size on BP_SortWindowCtrl2_C_BPI_GetAppliedSetting");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting, InSortScene) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_GetAppliedSetting::InSortScene' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting, AppliedSetting) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_GetAppliedSetting::AppliedSetting' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting, AppliedOrder) == 0x000008, "Member 'BP_SortWindowCtrl2_C_BPI_GetAppliedSetting::AppliedOrder' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting, CallFunc_getSotrWindowIndex_ReturnValue) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_BPI_GetAppliedSetting::CallFunc_getSotrWindowIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting, CallFunc_getSotrWindowOrder_ReturnValue) == 0x000010, "Member 'BP_SortWindowCtrl2_C_BPI_GetAppliedSetting::CallFunc_getSotrWindowOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAppliedSetting, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'BP_SortWindowCtrl2_C_BPI_GetAppliedSetting::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_GetAnimState
// 0x0003 (0x0003 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_GetAnimState final
{
public:
	E_SORTWINDOW_ANIM_STATE                       AnimState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_GetAnimState_AinmState;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_GetAnimState) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_GetAnimState");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_GetAnimState) == 0x000003, "Wrong size on BP_SortWindowCtrl2_C_BPI_GetAnimState");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAnimState, AnimState) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_GetAnimState::AnimState' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAnimState, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_SortWindowCtrl2_C_BPI_GetAnimState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetAnimState, CallFunc_GetAnimState_AinmState) == 0x000002, "Member 'BP_SortWindowCtrl2_C_BPI_GetAnimState::CallFunc_GetAnimState_AinmState' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_GetDecideSlot
// 0x0004 (0x0004 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_GetDecideSlot final
{
public:
	int32                                         ListIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_GetDecideSlot) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_GetDecideSlot");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_GetDecideSlot) == 0x000004, "Wrong size on BP_SortWindowCtrl2_C_BPI_GetDecideSlot");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetDecideSlot, ListIndex) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_GetDecideSlot::ListIndex' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_GetListNum
// 0x0030 (0x0030 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_GetListNum final
{
public:
	int32                                         ListNum;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C79[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C7A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSortItemList_All_ReturnValue;          // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_GetListNum) == 0x000008, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_GetListNum");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_GetListNum) == 0x000030, "Wrong size on BP_SortWindowCtrl2_C_BPI_GetListNum");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetListNum, ListNum) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_GetListNum::ListNum' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetListNum, Temp_bool_Variable) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_GetListNum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetListNum, Temp_int_Variable) == 0x000008, "Member 'BP_SortWindowCtrl2_C_BPI_GetListNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetListNum, CallFunc_GetSortItemList_All_ReturnValue) == 0x000010, "Member 'BP_SortWindowCtrl2_C_BPI_GetListNum::CallFunc_GetSortItemList_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetListNum, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SortWindowCtrl2_C_BPI_GetListNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetListNum, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_SortWindowCtrl2_C_BPI_GetListNum::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetListNum, K2Node_Select_Default) == 0x000028, "Member 'BP_SortWindowCtrl2_C_BPI_GetListNum::K2Node_Select_Default' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_GetScrollOffset
// 0x0014 (0x0014 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_GetScrollOffset final
{
public:
	int32                                         ScrollOffset;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7D[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_GetScrollOffset) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_GetScrollOffset");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_GetScrollOffset) == 0x000014, "Wrong size on BP_SortWindowCtrl2_C_BPI_GetScrollOffset");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetScrollOffset, ScrollOffset) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_GetScrollOffset::ScrollOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetScrollOffset, Temp_bool_Variable) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_GetScrollOffset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetScrollOffset, Temp_int_Variable) == 0x000008, "Member 'BP_SortWindowCtrl2_C_BPI_GetScrollOffset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetScrollOffset, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_BPI_GetScrollOffset::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_GetScrollOffset, K2Node_Select_Default) == 0x000010, "Member 'BP_SortWindowCtrl2_C_BPI_GetScrollOffset::K2Node_Select_Default' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_SetScrollOffsetPattern
// 0x0010 (0x0010 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern final
{
public:
	E_SORTWINDOW_SCROLL_OFFSET_PATTERN            InOffssetPattern;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C7E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScrollOffset;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ClampCursorAndOffset_ClampCursor;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ClampCursorAndOffset_ClampOffset;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern) == 0x000004, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern) == 0x000010, "Wrong size on BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern, InOffssetPattern) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern::InOffssetPattern' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern, ScrollOffset) == 0x000004, "Member 'BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern::ScrollOffset' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern, CallFunc_ClampCursorAndOffset_ClampCursor) == 0x000008, "Member 'BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern::CallFunc_ClampCursorAndOffset_ClampCursor' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern, CallFunc_ClampCursorAndOffset_ClampOffset) == 0x00000C, "Member 'BP_SortWindowCtrl2_C_BPI_SetScrollOffsetPattern::CallFunc_ClampCursorAndOffset_ClampOffset' has a wrong offset!");

// Function BP_SortWindowCtrl2.BP_SortWindowCtrl2_C.BPI_IsEnableMouseWheel
// 0x0002 (0x0002 - 0x0000)
struct BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableMouseWheel_IsEnable;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel) == 0x000001, "Wrong alignment on BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel");
static_assert(sizeof(BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel) == 0x000002, "Wrong size on BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel, IsEnable) == 0x000000, "Member 'BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel, CallFunc_IsEnableMouseWheel_IsEnable) == 0x000001, "Member 'BP_SortWindowCtrl2_C_BPI_IsEnableMouseWheel::CallFunc_IsEnableMouseWheel_IsEnable' has a wrong offset!");

}

