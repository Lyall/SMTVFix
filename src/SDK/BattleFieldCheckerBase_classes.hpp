#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleFieldCheckerBase

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EncountPostTableData_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BattleFieldCheckerBase.BattleFieldCheckerBase_C
// 0x02C0 (0x04E0 - 0x0220)
class ABattleFieldCheckerBase_C : public ABattleFieldWorkBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   Playerside;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   EnemySide;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene2;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TraceChip;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   IgnoreObstacle;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        IgnoreObstacleField;                               // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BottomCollision;                                   // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CelingCollision;                                   // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BottomField;                                       // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CeilingField;                                      // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EnemyBufferField;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlayerBufferField;                                 // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EnemyField;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlayerSideField;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CaseOrigin;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bottom;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ceiling;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                M_PlayerFieldChip;                                 // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USceneComponent*>                M_EnemyFieldChip;                                  // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USceneComponent*>                M_PlayerBufferChip;                                // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USceneComponent*>                M_EnemyBufferChip;                                 // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USceneComponent*>                M_AllChip;                                         // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                M_WorldUpVector;                                   // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         M_IgnoreObstacleHeight;                            // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      M_BottomObject;                                    // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             Evt_TraceFailed;                                   // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EvtTraceSuccess;                                   // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          M_IsFailed;                                        // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_567C[0x3];                                     // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                M_TraceLocation;                                   // 0x0364(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_SafetySlope;                                     // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_567D[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        M_TraceLocationArray;                              // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USceneComponent*>                M_ValidFieldChip;                                  // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class AActor*>                         M_HiddenActorList;                                 // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<int32>                                 M_CheckCount;                                      // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class USceneComponent*, struct FVector>  M_ChipTraceLocation;                               // 0x03B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         M_SearchArea;                                      // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_SearchInterval;                                  // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                M_PlayerAbount;                                    // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USceneComponent*>                M_EnemyAbout;                                      // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                M_FieldUpVector;                                   // 0x0430(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_567E[0x4];                                     // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         M_DitherActorList;                                 // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          M_IsValidField;                                    // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_567F[0x3];                                     // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         M_HiSlope;                                         // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NewVar_0;                                          // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_Angle;                                           // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5680[0x4];                                     // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Evt_Err_OriginTrace;                               // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         AngleRevize;                                       // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckExecute;                                      // 0x047C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_ENEMY_FIELD                             M_EnemyField;                                      // 0x047D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5681[0x2];                                     // 0x047E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_EncountID;                                       // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5682[0x4];                                     // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEncountPostTableData                  M_EncountPostData;                                 // 0x0488(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class USceneComponent*>                M_OtherObject;                                     // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          M_IsEditor;                                        // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_5683[0x3];                                     // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         M_CeilingCheckRadius;                              // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_TraceHit;                                        // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5684[0x3];                                     // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                M_TraceAfter;                                      // 0x04CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_IsLogOn;                                         // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_IsEvent;                                         // 0x04D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void Evt_TraceFailed__DelegateSignature();
	void EvtTraceSuccess__DelegateSignature();
	void Evt_Err_OriginTrace__DelegateSignature();
	void ExecuteUbergraph_BattleFieldCheckerBase(int32 EntryPoint);
	void Evt_BattleFinished();
	void Evt_Err_Bottom(class UObject* InMesh);
	void Evt_CellingFinished();
	void Evt_Err_Celling(class UObject* InMesh, class UObject* ErrorObject);
	void Evt_ChipAngleFinished();
	void Evt_Err_ChipAngle(class UObject* InMesh, float Angle);
	void Evt_Err_Origin();
	void Evt_Err_EFAngle(float Angle);
	void Evt_Err_PFAngle(float Angle);
	void Evt_AboutAngle();
	void Evt_Success();
	void Evt_TraceBottom();
	void Evt_TraceCeiling();
	void Evt_Failed();
	void Evt_TraceAngle();
	void StartTrace();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void TraceGroundObject(const struct FVector& Base, const struct FVector& Direction, float Length, float Radius, EDrawDebugTrace DrawDebugType, bool* Hit, struct FVector* Location, struct FVector* Normal, EPhysicalSurface* Surface, class AActor** HitActor, class UPrimitiveComponent** HitComponent);
	void HiddenObject(const class AActor*& Actor);
	void AroundSearch();
	struct FVector TriNormal(const struct FVector& V0, const struct FVector& V1, const struct FVector& V2);
	void ChipNormal(class USceneComponent* InChip, bool* Hit, struct FVector* Location, struct FVector* Normal);
	void Initialize();
	void SetAllVisibility(bool Sw);
	void ChipTraceGround(TArray<class USceneComponent*>& ChipLocationPoint, const struct FVector& UpVector, bool* Hit, struct FVector* Location, struct FVector* Normal);
	void DebugLog(const class FString& Str);
	void DisableMeshCollision();
	void GetEncountIDStr(int32 InValue, class FString* RetValue);
	void ApplyEncountPostData(bool* IsDone);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleFieldCheckerBase_C">();
	}
	static class ABattleFieldCheckerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABattleFieldCheckerBase_C>();
	}
};
static_assert(alignof(ABattleFieldCheckerBase_C) == 0x000008, "Wrong alignment on ABattleFieldCheckerBase_C");
static_assert(sizeof(ABattleFieldCheckerBase_C) == 0x0004E0, "Wrong size on ABattleFieldCheckerBase_C");
static_assert(offsetof(ABattleFieldCheckerBase_C, UberGraphFrame) == 0x000220, "Member 'ABattleFieldCheckerBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Playerside) == 0x000228, "Member 'ABattleFieldCheckerBase_C::Playerside' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, EnemySide) == 0x000230, "Member 'ABattleFieldCheckerBase_C::EnemySide' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Scene2) == 0x000238, "Member 'ABattleFieldCheckerBase_C::Scene2' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Scene1) == 0x000240, "Member 'ABattleFieldCheckerBase_C::Scene1' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Scene) == 0x000248, "Member 'ABattleFieldCheckerBase_C::Scene' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, TraceChip) == 0x000250, "Member 'ABattleFieldCheckerBase_C::TraceChip' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, IgnoreObstacle) == 0x000258, "Member 'ABattleFieldCheckerBase_C::IgnoreObstacle' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, IgnoreObstacleField) == 0x000260, "Member 'ABattleFieldCheckerBase_C::IgnoreObstacleField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, BottomCollision) == 0x000268, "Member 'ABattleFieldCheckerBase_C::BottomCollision' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, StaticMesh) == 0x000270, "Member 'ABattleFieldCheckerBase_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, CelingCollision) == 0x000278, "Member 'ABattleFieldCheckerBase_C::CelingCollision' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, BottomField) == 0x000280, "Member 'ABattleFieldCheckerBase_C::BottomField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, CeilingField) == 0x000288, "Member 'ABattleFieldCheckerBase_C::CeilingField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, EnemyBufferField) == 0x000290, "Member 'ABattleFieldCheckerBase_C::EnemyBufferField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, PlayerBufferField) == 0x000298, "Member 'ABattleFieldCheckerBase_C::PlayerBufferField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, EnemyField) == 0x0002A0, "Member 'ABattleFieldCheckerBase_C::EnemyField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, PlayerSideField) == 0x0002A8, "Member 'ABattleFieldCheckerBase_C::PlayerSideField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, CaseOrigin) == 0x0002B0, "Member 'ABattleFieldCheckerBase_C::CaseOrigin' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Bottom) == 0x0002B8, "Member 'ABattleFieldCheckerBase_C::Bottom' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Ceiling) == 0x0002C0, "Member 'ABattleFieldCheckerBase_C::Ceiling' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABattleFieldCheckerBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_PlayerFieldChip) == 0x0002D0, "Member 'ABattleFieldCheckerBase_C::M_PlayerFieldChip' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_EnemyFieldChip) == 0x0002E0, "Member 'ABattleFieldCheckerBase_C::M_EnemyFieldChip' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_PlayerBufferChip) == 0x0002F0, "Member 'ABattleFieldCheckerBase_C::M_PlayerBufferChip' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_EnemyBufferChip) == 0x000300, "Member 'ABattleFieldCheckerBase_C::M_EnemyBufferChip' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_AllChip) == 0x000310, "Member 'ABattleFieldCheckerBase_C::M_AllChip' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_WorldUpVector) == 0x000320, "Member 'ABattleFieldCheckerBase_C::M_WorldUpVector' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_IgnoreObstacleHeight) == 0x00032C, "Member 'ABattleFieldCheckerBase_C::M_IgnoreObstacleHeight' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_BottomObject) == 0x000330, "Member 'ABattleFieldCheckerBase_C::M_BottomObject' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Evt_TraceFailed) == 0x000340, "Member 'ABattleFieldCheckerBase_C::Evt_TraceFailed' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, EvtTraceSuccess) == 0x000350, "Member 'ABattleFieldCheckerBase_C::EvtTraceSuccess' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_IsFailed) == 0x000360, "Member 'ABattleFieldCheckerBase_C::M_IsFailed' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_TraceLocation) == 0x000364, "Member 'ABattleFieldCheckerBase_C::M_TraceLocation' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_SafetySlope) == 0x000370, "Member 'ABattleFieldCheckerBase_C::M_SafetySlope' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_TraceLocationArray) == 0x000378, "Member 'ABattleFieldCheckerBase_C::M_TraceLocationArray' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_ValidFieldChip) == 0x000388, "Member 'ABattleFieldCheckerBase_C::M_ValidFieldChip' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_HiddenActorList) == 0x000398, "Member 'ABattleFieldCheckerBase_C::M_HiddenActorList' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_CheckCount) == 0x0003A8, "Member 'ABattleFieldCheckerBase_C::M_CheckCount' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_ChipTraceLocation) == 0x0003B8, "Member 'ABattleFieldCheckerBase_C::M_ChipTraceLocation' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_SearchArea) == 0x000408, "Member 'ABattleFieldCheckerBase_C::M_SearchArea' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_SearchInterval) == 0x00040C, "Member 'ABattleFieldCheckerBase_C::M_SearchInterval' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_PlayerAbount) == 0x000410, "Member 'ABattleFieldCheckerBase_C::M_PlayerAbount' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_EnemyAbout) == 0x000420, "Member 'ABattleFieldCheckerBase_C::M_EnemyAbout' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_FieldUpVector) == 0x000430, "Member 'ABattleFieldCheckerBase_C::M_FieldUpVector' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_DitherActorList) == 0x000440, "Member 'ABattleFieldCheckerBase_C::M_DitherActorList' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_IsValidField) == 0x000450, "Member 'ABattleFieldCheckerBase_C::M_IsValidField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_HiSlope) == 0x000454, "Member 'ABattleFieldCheckerBase_C::M_HiSlope' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, NewVar_0) == 0x000458, "Member 'ABattleFieldCheckerBase_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_Angle) == 0x000460, "Member 'ABattleFieldCheckerBase_C::M_Angle' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, Evt_Err_OriginTrace) == 0x000468, "Member 'ABattleFieldCheckerBase_C::Evt_Err_OriginTrace' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, AngleRevize) == 0x000478, "Member 'ABattleFieldCheckerBase_C::AngleRevize' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, CheckExecute) == 0x00047C, "Member 'ABattleFieldCheckerBase_C::CheckExecute' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_EnemyField) == 0x00047D, "Member 'ABattleFieldCheckerBase_C::M_EnemyField' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_EncountID) == 0x000480, "Member 'ABattleFieldCheckerBase_C::M_EncountID' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_EncountPostData) == 0x000488, "Member 'ABattleFieldCheckerBase_C::M_EncountPostData' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_OtherObject) == 0x0004B0, "Member 'ABattleFieldCheckerBase_C::M_OtherObject' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_IsEditor) == 0x0004C0, "Member 'ABattleFieldCheckerBase_C::M_IsEditor' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_CeilingCheckRadius) == 0x0004C4, "Member 'ABattleFieldCheckerBase_C::M_CeilingCheckRadius' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_TraceHit) == 0x0004C8, "Member 'ABattleFieldCheckerBase_C::M_TraceHit' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_TraceAfter) == 0x0004CC, "Member 'ABattleFieldCheckerBase_C::M_TraceAfter' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_IsLogOn) == 0x0004D8, "Member 'ABattleFieldCheckerBase_C::M_IsLogOn' has a wrong offset!");
static_assert(offsetof(ABattleFieldCheckerBase_C, M_IsEvent) == 0x0004D9, "Member 'ABattleFieldCheckerBase_C::M_IsEvent' has a wrong offset!");

}

