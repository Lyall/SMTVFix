#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_MagatsuhiGaugeCtrl

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_GetWidgetBase
// 0x0008 (0x0008 - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_GetWidgetBase final
{
public:
	class UUIBtlUpliftingGaugeBase*               WidgetBase;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_GetWidgetBase) == 0x000008, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_GetWidgetBase");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_GetWidgetBase) == 0x000008, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_GetWidgetBase");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_GetWidgetBase, WidgetBase) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_GetWidgetBase::WidgetBase' has a wrong offset!");

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_SlideIn
// 0x000C (0x000C - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn final
{
public:
	bool                                          UpperPos;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InitialValue;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn) == 0x000004, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn) == 0x00000C, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn, UpperPos) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn::UpperPos' has a wrong offset!");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn, InitialValue) == 0x000004, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn::InitialValue' has a wrong offset!");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn, Immediately) == 0x000008, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_SlideIn::Immediately' has a wrong offset!");

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_SetGaugeValue
// 0x0004 (0x0004 - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeValue) == 0x000004, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeValue");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeValue) == 0x000004, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeValue");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeValue, Value) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeValue::Value' has a wrong offset!");

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_SetGaugeReduceFlash
// 0x0001 (0x0001 - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeReduceFlash final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeReduceFlash) == 0x000001, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeReduceFlash");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeReduceFlash) == 0x000001, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeReduceFlash");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeReduceFlash, Show) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_SetGaugeReduceFlash::Show' has a wrong offset!");

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_IncreaseGauge
// 0x0004 (0x0004 - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_IncreaseGauge final
{
public:
	int32                                         Increase;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_IncreaseGauge) == 0x000004, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_IncreaseGauge");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_IncreaseGauge) == 0x000004, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_IncreaseGauge");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_IncreaseGauge, Increase) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_IncreaseGauge::Increase' has a wrong offset!");

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_ReduceGauge
// 0x0004 (0x0004 - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_ReduceGauge final
{
public:
	int32                                         Reduce;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_ReduceGauge) == 0x000004, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_ReduceGauge");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_ReduceGauge) == 0x000004, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_ReduceGauge");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_ReduceGauge, Reduce) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_ReduceGauge::Reduce' has a wrong offset!");

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_ChangeWidgetPrio
// 0x0001 (0x0001 - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_ChangeWidgetPrio final
{
public:
	E_WIDGET_PRIO                                 Prio;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_ChangeWidgetPrio) == 0x000001, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_ChangeWidgetPrio");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_ChangeWidgetPrio) == 0x000001, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_ChangeWidgetPrio");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_ChangeWidgetPrio, Prio) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_ChangeWidgetPrio::Prio' has a wrong offset!");

// Function BPI_MagatsuhiGaugeCtrl.BPI_MagatsuhiGaugeCtrl_C.BI_GetCurrentWidgetPrio
// 0x0001 (0x0001 - 0x0000)
struct BPI_MagatsuhiGaugeCtrl_C_BI_GetCurrentWidgetPrio final
{
public:
	E_WIDGET_PRIO                                 CurrentPrio;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_MagatsuhiGaugeCtrl_C_BI_GetCurrentWidgetPrio) == 0x000001, "Wrong alignment on BPI_MagatsuhiGaugeCtrl_C_BI_GetCurrentWidgetPrio");
static_assert(sizeof(BPI_MagatsuhiGaugeCtrl_C_BI_GetCurrentWidgetPrio) == 0x000001, "Wrong size on BPI_MagatsuhiGaugeCtrl_C_BI_GetCurrentWidgetPrio");
static_assert(offsetof(BPI_MagatsuhiGaugeCtrl_C_BI_GetCurrentWidgetPrio, CurrentPrio) == 0x000000, "Member 'BPI_MagatsuhiGaugeCtrl_C_BI_GetCurrentWidgetPrio::CurrentPrio' has a wrong offset!");

}

