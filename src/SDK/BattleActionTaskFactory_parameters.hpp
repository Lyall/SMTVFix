#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleActionTaskFactory

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BTL_ADD_DECAL_TASK_DATA_structs.hpp"
#include "BTL_CTRL_POST_PROCESS_DATA_structs.hpp"
#include "MaterialAnimSetting_T_structs.hpp"
#include "Project_structs.hpp"
#include "BTL_ADD_SKILL_LIGHT_TASK_DATA_structs.hpp"
#include "BTL_ADD_ANIM_CAM_TASK_DATA_structs.hpp"
#include "BTL_ADD_PLAY_EFFECT_TASK_DATA_structs.hpp"
#include "BadStatusParticles_T_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.ExecuteUbergraph_BattleActionTaskFactory
// 0x0290 (0x0290 - 0x0000)
struct BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_DynamicCast_AsCurve_Float;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugBattleTaskInfo                   K2Node_MakeStruct_DebugBattleTaskInfo;             // 0x00A0(0x00E0)()
	TSoftObjectPtr<class UParticleSystem>         CallFunc_Array_Get_Item_1;                         // 0x0180(0x0028)(HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_Array_Get_Item_2;                         // 0x01F8(0x0028)(HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             CallFunc_Array_Get_Item_3;                         // 0x0258(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory");
static_assert(sizeof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory) == 0x000290, "Wrong size on BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, EntryPoint) == 0x000000, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_int_Variable) == 0x000010, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_int_Variable_1) == 0x000024, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_CustomEvent_Loaded_2) == 0x000030, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_object_Variable) == 0x000058, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_int_Variable_2) == 0x000060, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_DynamicCast_AsCurve_Float) == 0x000068, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_DynamicCast_AsCurve_Float' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_CustomEvent_Loaded) == 0x000078, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_Event_DeltaSeconds) == 0x000080, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw) == 0x000084, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_MakeStruct_DebugBattleTaskInfo) == 0x0000A0, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_MakeStruct_DebugBattleTaskInfo' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001A8, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Length_ReturnValue_2) == 0x0001B8, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001BC, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C0, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_object_Variable_1) == 0x0001C8, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0001D0, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_CustomEvent_Loaded_1) == 0x0001E0, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001E8, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Length_ReturnValue_3) == 0x0001EC, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Add_ReturnValue) == 0x0001F0, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001F4, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Get_Item_2) == 0x0001F8, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_CreateDelegate_OutputDelegate_2) == 0x000220, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Add_IntInt_ReturnValue_3) == 0x000230, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, Temp_object_Variable_2) == 0x000238, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_DynamicCast_AsParticle_System) == 0x000240, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_DynamicCast_bSuccess_2) == 0x000248, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Add_ReturnValue_1) == 0x00024C, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Length_ReturnValue_4) == 0x000250, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Get_Item_3) == 0x000258, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Less_IntInt_ReturnValue_3) == 0x000280, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, CallFunc_Array_Add_ReturnValue_2) == 0x000284, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory, K2Node_Event_EndPlayReason) == 0x000288, "Member 'BattleActionTaskFactory_C_ExecuteUbergraph_BattleActionTaskFactory::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleActionTaskFactory_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleActionTaskFactory_C_ReceiveEndPlay");
static_assert(sizeof(BattleActionTaskFactory_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleActionTaskFactory_C_ReceiveEndPlay");
static_assert(offsetof(BattleActionTaskFactory_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleActionTaskFactory_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleActionTaskFactory_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_ReceiveTick");
static_assert(sizeof(BattleActionTaskFactory_C_ReceiveTick) == 0x000004, "Wrong size on BattleActionTaskFactory_C_ReceiveTick");
static_assert(offsetof(BattleActionTaskFactory_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleActionTaskFactory_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.OnLoaded_430CAF474B0F79C3F98FD98578ADF046
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_OnLoaded_430CAF474B0F79C3F98FD98578ADF046 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_OnLoaded_430CAF474B0F79C3F98FD98578ADF046) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_OnLoaded_430CAF474B0F79C3F98FD98578ADF046");
static_assert(sizeof(BattleActionTaskFactory_C_OnLoaded_430CAF474B0F79C3F98FD98578ADF046) == 0x000008, "Wrong size on BattleActionTaskFactory_C_OnLoaded_430CAF474B0F79C3F98FD98578ADF046");
static_assert(offsetof(BattleActionTaskFactory_C_OnLoaded_430CAF474B0F79C3F98FD98578ADF046, Loaded) == 0x000000, "Member 'BattleActionTaskFactory_C_OnLoaded_430CAF474B0F79C3F98FD98578ADF046::Loaded' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.OnLoaded_7D84137042529291144500850D49C96D
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_OnLoaded_7D84137042529291144500850D49C96D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_OnLoaded_7D84137042529291144500850D49C96D) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_OnLoaded_7D84137042529291144500850D49C96D");
static_assert(sizeof(BattleActionTaskFactory_C_OnLoaded_7D84137042529291144500850D49C96D) == 0x000008, "Wrong size on BattleActionTaskFactory_C_OnLoaded_7D84137042529291144500850D49C96D");
static_assert(offsetof(BattleActionTaskFactory_C_OnLoaded_7D84137042529291144500850D49C96D, Loaded) == 0x000000, "Member 'BattleActionTaskFactory_C_OnLoaded_7D84137042529291144500850D49C96D::Loaded' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.OnLoaded_55EF183A4BDF28D25C43F1BD691A7361
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_OnLoaded_55EF183A4BDF28D25C43F1BD691A7361 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_OnLoaded_55EF183A4BDF28D25C43F1BD691A7361) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_OnLoaded_55EF183A4BDF28D25C43F1BD691A7361");
static_assert(sizeof(BattleActionTaskFactory_C_OnLoaded_55EF183A4BDF28D25C43F1BD691A7361) == 0x000008, "Wrong size on BattleActionTaskFactory_C_OnLoaded_55EF183A4BDF28D25C43F1BD691A7361");
static_assert(offsetof(BattleActionTaskFactory_C_OnLoaded_55EF183A4BDF28D25C43F1BD691A7361, Loaded) == 0x000000, "Member 'BattleActionTaskFactory_C_OnLoaded_55EF183A4BDF28D25C43F1BD691A7361::Loaded' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.CheckTask
// 0x0060 (0x0060 - 0x0000)
struct BattleActionTaskFactory_C_CheckTask final
{
public:
	bool                                          CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_CheckTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_CheckTask");
static_assert(sizeof(BattleActionTaskFactory_C_CheckTask) == 0x000060, "Wrong size on BattleActionTaskFactory_C_CheckTask");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable) == 0x000000, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattleActionTaskFactory_C_CheckTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw) == 0x00000C, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_Length_ReturnValue_1) == 0x000010, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_Length_ReturnValue_2) == 0x000018, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Greater_IntInt_ReturnValue) == 0x00001D, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_Length_ReturnValue_3) == 0x000020, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_BooleanAND_ReturnValue_1) == 0x000025, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BattleActionTaskFactory_C_CheckTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_Length_ReturnValue_4) == 0x000040, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_RemoveItem_ReturnValue) == 0x000044, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'BattleActionTaskFactory_C_CheckTask::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BattleActionTaskFactory_C_CheckTask::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BattleActionTaskFactory_C_CheckTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetParentNameTaskCnt
// 0x0068 (0x0068 - 0x0000)
struct BattleActionTaskFactory_C_GetParentNameTaskCnt final
{
public:
	class FString                                 ParentName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetCnt;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Cnt;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_GetParentNameTaskCnt) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetParentNameTaskCnt");
static_assert(sizeof(BattleActionTaskFactory_C_GetParentNameTaskCnt) == 0x000068, "Wrong size on BattleActionTaskFactory_C_GetParentNameTaskCnt");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, ParentName) == 0x000000, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, RetCnt) == 0x000010, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::RetCnt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, Lo_Cnt) == 0x000014, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, Temp_int_Variable) == 0x000020, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, Temp_int_Variable_1) == 0x000034, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000045, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00005D, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetParentNameTaskCnt, CallFunc_Add_IntInt_ReturnValue_3) == 0x000060, "Member 'BattleActionTaskFactory_C_GetParentNameTaskCnt::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.SpawnActionTaskActor
// 0x0120 (0x0120 - 0x0000)
struct BattleActionTaskFactory_C_SpawnActionTaskActor final
{
public:
	struct FBtlTaskDesc                           InDesc;                                            // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<int32>                                 TaskWaitList;                                      // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Data;                                              // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ClassData;                                         // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TaskDuration;                                      // 0x00D0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    RetValue;                                          // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x00E0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable; // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_SpawnActionTaskActor) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_SpawnActionTaskActor");
static_assert(sizeof(BattleActionTaskFactory_C_SpawnActionTaskActor) == 0x000120, "Wrong size on BattleActionTaskFactory_C_SpawnActionTaskActor");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, InDesc) == 0x000000, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::InDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, TaskWaitList) == 0x0000A0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::TaskWaitList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, ParentName) == 0x0000B0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, Data) == 0x0000C0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, ClassData) == 0x0000C8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::ClassData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, TaskDuration) == 0x0000D0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::TaskDuration' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, RetValue) == 0x0000D8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, Temp_byte_Variable) == 0x0000E0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable) == 0x0000E1, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw) == 0x0000E9, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_GetMainWork_retValue) == 0x0000F0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000108, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_Array_Add_ReturnValue_1) == 0x000110, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor, CallFunc_Array_Add_ReturnValue_2) == 0x000114, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeCureTask
// 0x00D8 (0x00D8 - 0x0000)
struct BattleActionTaskFactory_C_MakeCureTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CURE                                    Type;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HpCure;                                            // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpCure;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bstCure;                                           // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CURE                                    Lo_CureType;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_BstCure;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_MPCure;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_HPCure;                                         // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DstPartyIndex;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SrcPartyIndex;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_name;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFullCure_retValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddBadStatusTask_retPecID;                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddApplyUnitStateTask_retPecID;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddHpMpTask_retPecID;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddHpMpTask_retPecID_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddHpMpTask_retPecID_2;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddHpMpTask_retPecID_3;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeCureTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeCureTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeCureTask) == 0x0000D8, "Wrong size on BattleActionTaskFactory_C_MakeCureTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeCureTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeCureTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeCureTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeCureTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Type) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeCureTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, HpCure) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakeCureTask::HpCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, MpCure) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeCureTask::MpCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, bstCure) == 0x000034, "Member 'BattleActionTaskFactory_C_MakeCureTask::bstCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_CureType) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_CureType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_BstCure) == 0x00003C, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_BstCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_MPCure) == 0x000040, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_MPCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_HPCure) == 0x000044, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_HPCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_DstPartyIndex) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_SrcPartyIndex) == 0x00004C, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_name) == 0x000050, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, Lo_WaitTaskList) == 0x000060, "Member 'BattleActionTaskFactory_C_MakeCureTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_MakeLiteralByte_ReturnValue) == 0x000070, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_GetPartySystem_retValue) == 0x000078, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_CheckBadStatus_ReturnValue) == 0x000080, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_BIT_ADD_ReturnValue) == 0x000084, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_BIT_ADD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_GetPartySystem_retValue_1) == 0x000090, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_IsFullCure_retValue) == 0x000098, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_IsFullCure_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_AddBadStatusTask_retPecID) == 0x00009C, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_AddBadStatusTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000A1, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_AddApplyUnitStateTask_retPecID) == 0x0000A4, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_AddApplyUnitStateTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_AddHpMpTask_retPecID) == 0x0000A8, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_AddHpMpTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_AddHpMpTask_retPecID_1) == 0x0000B0, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_AddHpMpTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000B4, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_AddHpMpTask_retPecID_2) == 0x0000B8, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_AddHpMpTask_retPecID_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_AddHpMpTask_retPecID_3) == 0x0000BC, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_AddHpMpTask_retPecID_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000C0, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0000C1, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_GetPartySystem_retValue_2) == 0x0000C8, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCureTask, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D0, "Member 'BattleActionTaskFactory_C_MakeCureTask::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetMainWork
// 0x0020 (0x0020 - 0x0000)
struct BattleActionTaskFactory_C_GetMainWork final
{
public:
	class ABattleMain_C*                          RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_GetMainWork) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetMainWork");
static_assert(sizeof(BattleActionTaskFactory_C_GetMainWork) == 0x000020, "Wrong size on BattleActionTaskFactory_C_GetMainWork");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainWork, RetValue) == 0x000000, "Member 'BattleActionTaskFactory_C_GetMainWork::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BattleActionTaskFactory_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainWork, K2Node_DynamicCast_AsBattle_Main) == 0x000010, "Member 'BattleActionTaskFactory_C_GetMainWork::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleActionTaskFactory_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetPartySystem
// 0x0010 (0x0010 - 0x0000)
struct BattleActionTaskFactory_C_GetPartySystem final
{
public:
	class UBattlePartySystem_C*                   RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_GetPartySystem) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetPartySystem");
static_assert(sizeof(BattleActionTaskFactory_C_GetPartySystem) == 0x000010, "Wrong size on BattleActionTaskFactory_C_GetPartySystem");
static_assert(offsetof(BattleActionTaskFactory_C_GetPartySystem, RetValue) == 0x000000, "Member 'BattleActionTaskFactory_C_GetPartySystem::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetPartySystem, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleActionTaskFactory_C_GetPartySystem::CallFunc_GetMainWork_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddNumEffectTask
// 0x0290 (0x0290 - 0x0000)
struct BattleActionTaskFactory_C_AddNumEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HPNum;                                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MPNum;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Type;                                              // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          HitType;                                           // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CriticalLevel;                                     // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandArea;                                          // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsResist;                                          // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PositionOffset;                                    // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_KUISHIBARI_LEVEL                            Kuishibari;                                        // 0x004D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipping;                                        // 0x004E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckTargetInCamera;                               // 0x004F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0058(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0088(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00C0(0x00A0)(Edit, BlueprintVisible)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0188(0x0030)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x01C0(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01F0(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddNumEffectTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddNumEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddNumEffectTask) == 0x000290, "Wrong size on BattleActionTaskFactory_C_AddNumEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, HPNum) == 0x000024, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::HPNum' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, MPNum) == 0x000028, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::MPNum' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, Type) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, HitType) == 0x00002D, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::HitType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CriticalLevel) == 0x000030, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CriticalLevel' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, RandArea) == 0x000034, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::RandArea' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, PlayRate) == 0x000038, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, IsResist) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::IsResist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, PositionOffset) == 0x000040, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::PositionOffset' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, IsDead) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::IsDead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, Kuishibari) == 0x00004D, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::Kuishibari' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, IsSkipping) == 0x00004E, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::IsSkipping' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CheckTargetInCamera) == 0x00004F, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CheckTargetInCamera' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, RetPecID) == 0x000050, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, Lo_Data2) == 0x000058, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, Lo_Data) == 0x000088, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, Param_Lo_Desc) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000170, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CallFunc_GetPecID_retValue) == 0x000174, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CallFunc_MakeVector_ReturnValue) == 0x000178, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, K2Node_MakeStruct_BtlTaskData) == 0x000188, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001B8, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddNumEffectTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001F0, "Member 'BattleActionTaskFactory_C_AddNumEffectTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSkillEffectTask
// 0x0210 (0x0210 - 0x0000)
struct BattleActionTaskFactory_C_AddSkillEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0170(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddSkillEffectTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSkillEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddSkillEffectTask) == 0x000210, "Wrong size on BattleActionTaskFactory_C_AddSkillEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, SkillId) == 0x000028, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillEffectTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000170, "Member 'BattleActionTaskFactory_C_AddSkillEffectTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeBadCureTask
// 0x00D8 (0x00D8 - 0x0000)
struct BattleActionTaskFactory_C_MakeBadCureTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CureBst;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoCureEffect;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLecerationDam;                                   // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOnlyShowTarget;                                  // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetValue;                                          // 0x0030(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0040(0x0010)(Edit, BlueprintVisible)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    K2Node_DynamicCast_AsBPI_Battle_Party;             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetEnemyLeaderIndex_PartyIndex;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID_1;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID;    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1;  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddApplyUnitStateTask_retPecID;           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBadStatusTask_retPecID;                // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeBadCureTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeBadCureTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeBadCureTask) == 0x0000D8, "Wrong size on BattleActionTaskFactory_C_MakeBadCureTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CureBst) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CureBst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, NoCureEffect) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::NoCureEffect' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, IsLecerationDam) == 0x000029, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::IsLecerationDam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, IsOnlyShowTarget) == 0x00002A, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::IsOnlyShowTarget' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, RetValue) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, Lo_WaitTaskList) == 0x000040, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_GetPartySystem_retValue) == 0x000050, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_GetHeroIndex_ReturnValue) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_GetPartySystem_retValue_1) == 0x000060, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, K2Node_DynamicCast_AsBPI_Battle_Party) == 0x000068, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::K2Node_DynamicCast_AsBPI_Battle_Party' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_GetPartySystem_retValue_2) == 0x000080, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_BI_GetEnemyLeaderIndex_PartyIndex) == 0x000088, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_BI_GetEnemyLeaderIndex_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_GetPartyUnit_retValue) == 0x000090, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x0000A0, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_AddUnitVisibilityTask_RetPecID_1) == 0x0000AC, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_AddUnitVisibilityTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID) == 0x0000B4, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1) == 0x0000B8, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_Array_Add_ReturnValue_2) == 0x0000BC, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_Array_Add_ReturnValue_3) == 0x0000C0, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_AddApplyUnitStateTask_retPecID) == 0x0000C4, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_AddApplyUnitStateTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_Array_Add_ReturnValue_4) == 0x0000C8, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_AddBadStatusTask_retPecID) == 0x0000CC, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_AddBadStatusTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadCureTask, CallFunc_Array_Add_ReturnValue_5) == 0x0000D0, "Member 'BattleActionTaskFactory_C_MakeBadCureTask::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDamageTask
// 0x0220 (0x0220 - 0x0000)
struct BattleActionTaskFactory_C_AddDamageTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weak;                                              // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCam;                                             // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0038(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0068(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0180(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddDamageTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDamageTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddDamageTask) == 0x000220, "Wrong size on BattleActionTaskFactory_C_AddDamageTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDamageTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDamageTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddDamageTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, Weak) == 0x000024, "Member 'BattleActionTaskFactory_C_AddDamageTask::Weak' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, Range) == 0x000028, "Member 'BattleActionTaskFactory_C_AddDamageTask::Range' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, IsCam) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddDamageTask::IsCam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_AddDamageTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, Lo_Data2) == 0x000038, "Member 'BattleActionTaskFactory_C_AddDamageTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, Lo_Data) == 0x000068, "Member 'BattleActionTaskFactory_C_AddDamageTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddDamageTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddDamageTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddDamageTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, CallFunc_GetPecID_retValue) == 0x000178, "Member 'BattleActionTaskFactory_C_AddDamageTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDamageTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000180, "Member 'BattleActionTaskFactory_C_AddDamageTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddHpMpTask
// 0x0210 (0x0210 - 0x0000)
struct BattleActionTaskFactory_C_AddHpMpTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHP;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0170(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddHpMpTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddHpMpTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddHpMpTask) == 0x000210, "Wrong size on BattleActionTaskFactory_C_AddHpMpTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddHpMpTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddHpMpTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddHpMpTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, Num) == 0x000024, "Member 'BattleActionTaskFactory_C_AddHpMpTask::Num' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, IsHP) == 0x000028, "Member 'BattleActionTaskFactory_C_AddHpMpTask::IsHP' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddHpMpTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddHpMpTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddHpMpTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddHpMpTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddHpMpTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddHpMpTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddHpMpTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHpMpTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000170, "Member 'BattleActionTaskFactory_C_AddHpMpTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddTemplate
// 0x0220 (0x0220 - 0x0000)
struct BattleActionTaskFactory_C_AddTemplate final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0140(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x01E8(0x0030)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddTemplate) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddTemplate");
static_assert(sizeof(BattleActionTaskFactory_C_AddTemplate) == 0x000220, "Wrong size on BattleActionTaskFactory_C_AddTemplate");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddTemplate::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddTemplate::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddTemplate::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddTemplate::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddTemplate::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddTemplate::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, CallFunc_SpawnActionTaskActor_retValue) == 0x000130, "Member 'BattleActionTaskFactory_C_AddTemplate::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, K2Node_MakeStruct_BtlTaskDesc) == 0x000140, "Member 'BattleActionTaskFactory_C_AddTemplate::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, CallFunc_GetPecID_retValue) == 0x0001E0, "Member 'BattleActionTaskFactory_C_AddTemplate::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTemplate, K2Node_MakeStruct_BtlTaskData) == 0x0001E8, "Member 'BattleActionTaskFactory_C_AddTemplate::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddMojiEffectTask
// 0x0130 (0x0130 - 0x0000)
struct BattleActionTaskFactory_C_AddMojiEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleActionTaskFactory_C_AddMojiEffectTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddMojiEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddMojiEffectTask) == 0x000130, "Wrong size on BattleActionTaskFactory_C_AddMojiEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddMojiEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddMojiEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMojiEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddMojiEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMojiEffectTask, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddMojiEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMojiEffectTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddMojiEffectTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMojiEffectTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddMojiEffectTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMojiEffectTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddMojiEffectTask::Param_Lo_Desc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCamMoveFixTask
// 0x0210 (0x0210 - 0x0000)
struct BattleActionTaskFactory_C_AddCamMoveFixTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Type;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0170(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddCamMoveFixTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCamMoveFixTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCamMoveFixTask) == 0x000210, "Wrong size on BattleActionTaskFactory_C_AddCamMoveFixTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, Type) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, DeltaTime) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamMoveFixTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000170, "Member 'BattleActionTaskFactory_C_AddCamMoveFixTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDeltaWaitTask
// 0x0210 (0x0210 - 0x0000)
struct BattleActionTaskFactory_C_AddDeltaWaitTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0170(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddDeltaWaitTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDeltaWaitTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddDeltaWaitTask) == 0x000210, "Wrong size on BattleActionTaskFactory_C_AddDeltaWaitTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, DeltaTime) == 0x000020, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeltaWaitTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000170, "Member 'BattleActionTaskFactory_C_AddDeltaWaitTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDeadFadeTask
// 0x0210 (0x0210 - 0x0000)
struct BattleActionTaskFactory_C_AddDeadFadeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DEAD_EFFECT                             DeadType;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0170(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddDeadFadeTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDeadFadeTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddDeadFadeTask) == 0x000210, "Wrong size on BattleActionTaskFactory_C_AddDeadFadeTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, DeltaTime) == 0x000024, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, DeadType) == 0x000028, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::DeadType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, Immediately) == 0x000029, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::Immediately' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDeadFadeTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000170, "Member 'BattleActionTaskFactory_C_AddDeadFadeTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitStayDirToTargetTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitStayDirToTargetTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseVector;                                         // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LoopPoint;                                         // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0040(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0070(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0150(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0220(0x0030)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitStayDirToTargetTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddUnitStayDirToTargetTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, Speed) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::Speed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, UseVector) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::UseVector' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, LoopPoint) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::LoopPoint' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, RetPecID) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, Lo_Data2) == 0x000040, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, Lo_Data) == 0x000070, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000140, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000150, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, CallFunc_GetPecID_retValue) == 0x0001F0, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, CallFunc_GetPartySystem_retValue) == 0x0001F8, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, CallFunc_GetPartyUnit_retValue) == 0x000200, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000208, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, CallFunc_SelectVector_ReturnValue) == 0x000214, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitStayDirToTargetTask, K2Node_MakeStruct_BtlTaskData) == 0x000220, "Member 'BattleActionTaskFactory_C_AddUnitStayDirToTargetTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCamRailTask
// 0x0270 (0x0270 - 0x0000)
struct BattleActionTaskFactory_C_AddCamRailTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CAM_TYPE                                Type;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InterpWait;                                        // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ManualName;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          StopWait;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaWait;                                         // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0048(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0078(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0150(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0180(0x0030)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCamRailTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCamRailTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCamRailTask) == 0x000270, "Wrong size on BattleActionTaskFactory_C_AddCamRailTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCamRailTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCamRailTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCamRailTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, Type) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCamRailTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, InterpWait) == 0x000025, "Member 'BattleActionTaskFactory_C_AddCamRailTask::InterpWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, ManualName) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCamRailTask::ManualName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, StopWait) == 0x000038, "Member 'BattleActionTaskFactory_C_AddCamRailTask::StopWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, DeltaWait) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddCamRailTask::DeltaWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, RetPecID) == 0x000040, "Member 'BattleActionTaskFactory_C_AddCamRailTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, Lo_Data2) == 0x000048, "Member 'BattleActionTaskFactory_C_AddCamRailTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, Lo_Data) == 0x000078, "Member 'BattleActionTaskFactory_C_AddCamRailTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, Param_Lo_Desc) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddCamRailTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, K2Node_MakeStruct_BtlTaskData) == 0x000150, "Member 'BattleActionTaskFactory_C_AddCamRailTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000180, "Member 'BattleActionTaskFactory_C_AddCamRailTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, CallFunc_BooleanOR_ReturnValue) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddCamRailTask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, CallFunc_SelectFloat_ReturnValue) == 0x0001B4, "Member 'BattleActionTaskFactory_C_AddCamRailTask::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddCamRailTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000260, "Member 'BattleActionTaskFactory_C_AddCamRailTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailTask, CallFunc_GetPecID_retValue) == 0x000268, "Member 'BattleActionTaskFactory_C_AddCamRailTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddHelpMesTask
// 0x0200 (0x0200 - 0x0000)
struct BattleActionTaskFactory_C_AddHelpMesTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         InID1;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InID2;                                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsErase;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddHelpMesTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddHelpMesTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddHelpMesTask) == 0x000200, "Wrong size on BattleActionTaskFactory_C_AddHelpMesTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, InID1) == 0x000020, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::InID1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, InID2) == 0x000024, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::InID2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, IsErase) == 0x000028, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::IsErase' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHelpMesTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddHelpMesTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeDamageTask
// 0x01B8 (0x01B8 - 0x0000)
struct BattleActionTaskFactory_C_MakeDamageTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         Type;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HpDamage;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpDamage;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bst;                                               // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeadType;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HP1;                                               // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Tasklist;                                          // 0x0050(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_HPDamageReal;                                   // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HP1;                                            // 0x0074(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_PlayRate;                                       // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_name;                                           // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_DeadType;                                       // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Dead;                                           // 0x00A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Bst;                                            // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         Lo_HitType;                                        // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_MPDamage;                                       // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_HPDamage;                                       // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DstIndex;                                       // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SrcIndex;                                       // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   Lo_PartyAccessor;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_1;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_2;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_3;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_4;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_5;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBattlePlayRate_PlayRate;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSetUnitMotion_retPecID;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID_1;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  CallFunc_GetNumEffType_Type;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         Temp_byte_Variable_6;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSide_ReturnValue;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          K2Node_Select_Default;                             // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddNumEffectTask_retPecID;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue_1;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSide_ReturnValue_1;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddSetUnitMotion_retPecID_1;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBadStatusTask_retPecID;                // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_BAD_STATUS>                          CallFunc_MakeBstArray_ReturnValue;                 // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddHpMpTask_retPecID;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddHpMpTask_retPecID_1;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeDamageTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeDamageTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeDamageTask) == 0x0001B8, "Wrong size on BattleActionTaskFactory_C_MakeDamageTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeDamageTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeDamageTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeDamageTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeDamageTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Type) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, HpDamage) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::HpDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, MpDamage) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeDamageTask::MpDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, bst) == 0x000034, "Member 'BattleActionTaskFactory_C_MakeDamageTask::bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Dead) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Dead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, DeadType) == 0x00003C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::DeadType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, HP1) == 0x000040, "Member 'BattleActionTaskFactory_C_MakeDamageTask::HP1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, PlayRate) == 0x000044, "Member 'BattleActionTaskFactory_C_MakeDamageTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, RetValue) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeDamageTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Tasklist) == 0x000050, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Tasklist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_RetTaskList) == 0x000060, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_HPDamageReal) == 0x000070, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_HPDamageReal' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_HP1) == 0x000074, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_HP1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_PlayRate) == 0x000078, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_name) == 0x000080, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_WaitTask) == 0x000090, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_DeadType) == 0x0000A0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_DeadType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_Dead) == 0x0000A4, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_Dead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_Bst) == 0x0000A8, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_Bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_HitType) == 0x0000AC, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_HitType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_MPDamage) == 0x0000B0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_MPDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_HPDamage) == 0x0000B4, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_HPDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_DstIndex) == 0x0000B8, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_SrcIndex) == 0x0000BC, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_SrcIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Lo_PartyAccessor) == 0x0000C0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Lo_PartyAccessor' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_byte_Variable) == 0x0000C8, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_byte_Variable_1) == 0x0000C9, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_byte_Variable_2) == 0x0000CA, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_byte_Variable_3) == 0x0000CB, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_byte_Variable_4) == 0x0000CC, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_byte_Variable_5) == 0x0000CD, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetBattlePlayRate_PlayRate) == 0x0000D0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetBattlePlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddSetUnitMotion_retPecID) == 0x0000D4, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddSetUnitMotion_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetPartySystem_retValue) == 0x0000D8, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E4, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetPartySystem_retValue_1) == 0x0000F0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetNowHP_ReturnValue) == 0x0000F8, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000FC, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000100, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x000104, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue_1) == 0x000108, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x00010C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddPartyPanelCtrlTask_retPecID_1) == 0x000110, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddPartyPanelCtrlTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue_2) == 0x000114, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetNumEffType_Type) == 0x000118, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetNumEffType_Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetMainWork_retValue) == 0x000120, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_byte_Variable_6) == 0x000128, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetSide_ReturnValue) == 0x000129, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, K2Node_Select_Default) == 0x00012A, "Member 'BattleActionTaskFactory_C_MakeDamageTask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00012B, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddNumEffectTask_retPecID) == 0x00012C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddNumEffectTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue_3) == 0x000130, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetMainWork_retValue_1) == 0x000138, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetMainWork_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetSide_ReturnValue_1) == 0x000140, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetSide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000141, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddSetUnitMotion_retPecID_1) == 0x000144, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddSetUnitMotion_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue_4) == 0x000148, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddBadStatusTask_retPecID) == 0x00014C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddBadStatusTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_MakeBstArray_ReturnValue) == 0x000150, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_MakeBstArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue_5) == 0x000160, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000168, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Greater_IntInt_ReturnValue) == 0x000169, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_int_Array_Index_Variable) == 0x00016C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Get_Item) == 0x000170, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000178, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddHpMpTask_retPecID) == 0x000188, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddHpMpTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue_6) == 0x00018C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x000190, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000194, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_AddHpMpTask_retPecID_1) == 0x000198, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_AddHpMpTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Array_Add_ReturnValue_7) == 0x00019C, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, Temp_int_Loop_Counter_Variable) == 0x0001A0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_GetPartySystem_retValue_2) == 0x0001A8, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Less_IntInt_ReturnValue) == 0x0001B0, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDamageTask, CallFunc_Add_IntInt_ReturnValue) == 0x0001B4, "Member 'BattleActionTaskFactory_C_MakeDamageTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeBadDamageTask
// 0x0630 (0x0630 - 0x0000)
struct BattleActionTaskFactory_C_MakeBadDamageTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  InBst;                                             // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HpDamage;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpDamage;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RetPecID;                                          // 0x0030(0x0010)(Parm, OutParm)
	bool                                          Lo_ReqDead;                                        // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_MsgParam1;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_DyingParam;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_MsgID;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_RequestDead;                                    // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsDeadDamage;                                   // 0x005D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_KuiCureHP;                                      // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KUISHIBARI_LEVEL                            Lo_kuiLevel;                                       // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0068(0x0010)(Edit, BlueprintVisible)
	E_BTL_NUMEFF                                  Lo_HitType;                                        // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_MPDam;                                          // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DamReal;                                        // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Kuishibari;                                     // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_CureBst;                                        // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Lo_Bst;                                            // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_name;                                           // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_Index;                                          // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_HPDam;                                          // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_BAD_STATUS_APPEAR                     Temp_byte_Variable;                                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_BAD_STATUS_APPEAR                     Temp_byte_Variable_1;                              // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Temp_byte_Variable_2;                              // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetMainWork_retValue;                  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_BI_GetPartyMemInterface_retValue;         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCurveFloat*                            CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetKuiDeadStockPartyIndex_ReturnValue; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x00F8(0x0148)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialAnimSetting_T                 K2Node_MakeStruct_MaterialAnimSetting_T;           // 0x0250(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Temp_byte_Variable_3;                              // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMaterialAnimSetting_T>         K2Node_MakeArray_Array;                            // 0x0278(0x0010)(ReferenceParm)
	int32                                         CallFunc_AddCtrlCharaMaterialTask_Ret_PecID;       // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_MakeMusMahDirection_RetWaitTaskList;   // 0x0290(0x0010)(ReferenceParm)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetMainWork_retValue_1;                // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleHitStopCtrl_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_BI_SetBossFlagDeadEffectOff_self_CastInput; // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_BI_CheckBossFlagDeadEffect_self_CastInput; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBossFlagDeadEffect_ReturnValue;   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue_1;                   // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_BI_UpdateAbsKuishibari_self_CastInput;    // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue_2;                   // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_UniqueSkill_BstDead_self_CastInput;    // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UniqueSkill_BstDead_ret;               // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID; // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetMainInterface_AsBPI_Main_Interface;    // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetBattlePlayRate_PlayRate;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBattlePlayRate_PlayRate_1;             // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBattlePlayRate_PlayRate_2;             // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddApplyUnitStateTask_retPecID;           // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0398(0x0030)()
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x03D0(0x0030)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0430(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddNumEffectTask_retValue;             // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDeltaWaitTask_retPecID;                // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue_3;                   // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetBattlePlayRate_self_CastInput;      // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BI_GetBattlePlayRate_PlayRate;            // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBossFlag_ReturnValue;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_3;                // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_4;                // 0x0490(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeroIndex_ReturnValue;                  // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Debug_IsDamage0_retValue;                 // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             K2Node_Select_Default;                             // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x049D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49E[0x2];                                      // 0x049E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeKuishibariInfoTask_RetPecIDs;         // 0x04A0(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_MakeKuishibariInfoTask_WaitIDs;           // 0x04B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNumEffectTask_retPecID;                // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x04D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_5;                // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKuishibariCureHP_ReturnValue;          // 0x04E8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KUISHIBARI_LEVEL                            CallFunc_BstDamageKuishibari_ReturnValue;          // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddSetUnitShake_retPecID;                 // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_6;                // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_7;                // 0x0500(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBossFlag_ReturnValue_1;              // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_8;                // 0x0510(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBossFlag_ReturnValue_2;              // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue_4;                   // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_BAD_STATUS_APPEAR                     K2Node_Select_Default_1;                           // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_T                  CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings; // 0x0530(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSetUnitMotion_retPecID;                // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPlaySEUnitAttachTask_retPecID;         // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x05B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x05B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x05B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStopAutoBattle_DoStop;               // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID_1;         // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddHpMpTask_retPecID;                     // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetMainWork_retValue_2;                // 0x05D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_EndAutoBattle_NoUse;                   // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID_2;         // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddHpMpTask_retPecID_1;                   // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_DEAD_EFFECT                             CallFunc_GetBadDeadType_retValue;                  // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_603[0x1];                                      // 0x0603(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeDeadTask_retValue;                    // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_9;                // 0x0618(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeadDamage_retValue;                    // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0x3];                                      // 0x0621(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNumEffectTask_retPecID_1;              // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeBadDamageTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_MakeBadDamageTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeBadDamageTask) == 0x000630, "Wrong size on BattleActionTaskFactory_C_MakeBadDamageTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, InBst) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::InBst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, HpDamage) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::HpDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, MpDamage) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::MpDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_ReqDead) == 0x000040, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_ReqDead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_MsgParam1) == 0x000044, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_MsgParam1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_DyingParam) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_DyingParam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_MsgID) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_MsgID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_RequestDead) == 0x00005C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_RequestDead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_IsDeadDamage) == 0x00005D, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_IsDeadDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_KuiCureHP) == 0x000060, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_KuiCureHP' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_kuiLevel) == 0x000064, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_kuiLevel' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_RetTaskList) == 0x000068, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_HitType) == 0x000078, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_HitType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_MPDam) == 0x00007C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_MPDam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_DamReal) == 0x000080, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_DamReal' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_Kuishibari) == 0x000084, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_Kuishibari' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_CureBst) == 0x000088, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_CureBst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_Bst) == 0x00008C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_Bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_name) == 0x000090, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_Index) == 0x0000A0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_HPDam) == 0x0000A4, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_HPDam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Lo_WaitTaskList) == 0x0000A8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_int_Variable) == 0x0000B8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_bool_Variable) == 0x0000BC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_byte_Variable) == 0x0000BD, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_byte_Variable_1) == 0x0000BE, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_byte_Variable_2) == 0x0000BF, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_GetMainWork_retValue) == 0x0000C0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_GetPartyMemInterface_retValue) == 0x0000D0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_GetPartyMemInterface_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_GetKuiDeadStockPartyIndex_ReturnValue) == 0x0000E8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_GetKuiDeadStockPartyIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue) == 0x0000F0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetBtlCharaData_ReturnValue) == 0x0000F8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Conv_StringToName_ReturnValue) == 0x000240, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_SwitchInteger_CmpSuccess) == 0x000248, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_MakeStruct_MaterialAnimSetting_T) == 0x000250, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_MakeStruct_MaterialAnimSetting_T' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_byte_Variable_3) == 0x000270, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_MakeArray_Array) == 0x000278, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddCtrlCharaMaterialTask_Ret_PecID) == 0x000288, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddCtrlCharaMaterialTask_Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00028C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Not_PreBool_ReturnValue) == 0x00028D, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_MakeMusMahDirection_RetWaitTaskList) == 0x000290, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_MakeMusMahDirection_RetWaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_1) == 0x0002A0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_GetMainWork_retValue_1) == 0x0002A8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_GetMainWork_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_MakeTransform_ReturnValue) == 0x0002C0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_bool_Variable_1) == 0x0002F0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002F8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x000300, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetMainWork_retValue) == 0x000308, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_SetBossFlagDeadEffectOff_self_CastInput) == 0x000310, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_SetBossFlagDeadEffectOff_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_CheckBossFlagDeadEffect_self_CastInput) == 0x000320, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_CheckBossFlagDeadEffect_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_CheckBossFlagDeadEffect_ReturnValue) == 0x000330, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_CheckBossFlagDeadEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetMainWork_retValue_1) == 0x000338, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetMainWork_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_UpdateAbsKuishibari_self_CastInput) == 0x000340, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_UpdateAbsKuishibari_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000350, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x000354, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetMainWork_retValue_2) == 0x000358, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetMainWork_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_UniqueSkill_BstDead_self_CastInput) == 0x000360, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_UniqueSkill_BstDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_UniqueSkill_BstDead_ret) == 0x000370, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_UniqueSkill_BstDead_ret' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID) == 0x000374, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetMainInterface_AsBPI_Main_Interface) == 0x000378, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetBattlePlayRate_PlayRate) == 0x000388, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetBattlePlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetBattlePlayRate_PlayRate_1) == 0x00038C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetBattlePlayRate_PlayRate_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetBattlePlayRate_PlayRate_2) == 0x000390, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetBattlePlayRate_PlayRate_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddApplyUnitStateTask_retPecID) == 0x000394, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddApplyUnitStateTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_MakeStruct_BtlTaskData) == 0x000398, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0003C8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0003D0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_MakeTransform_ReturnValue_1) == 0x000400, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, Temp_int_Variable_1) == 0x000430, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_AddPlayEffectTask_retValue) == 0x000434, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue) == 0x000438, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_AddNumEffectTask_retValue) == 0x00043C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_AddNumEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddDeltaWaitTask_retPecID) == 0x000440, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddDeltaWaitTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_1) == 0x000444, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_2) == 0x000448, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetMainWork_retValue_3) == 0x000450, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetMainWork_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Not_PreBool_ReturnValue_1) == 0x000458, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_GetBattlePlayRate_self_CastInput) == 0x000460, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_GetBattlePlayRate_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_GetBattlePlayRate_PlayRate) == 0x000470, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_GetBattlePlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_2) == 0x000478, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_CheckBossFlag_ReturnValue) == 0x000480, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_CheckBossFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_3) == 0x000488, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_4) == 0x000490, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_IsHeroIndex_ReturnValue) == 0x000498, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_IsHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BooleanAND_ReturnValue) == 0x000499, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Debug_IsDamage0_retValue) == 0x00049A, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Debug_IsDamage0_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BooleanAND_ReturnValue_1) == 0x00049B, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_Select_Default) == 0x00049C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_SwitchEnum_CmpSuccess) == 0x00049D, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_MakeKuishibariInfoTask_RetPecIDs) == 0x0004A0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_MakeKuishibariInfoTask_RetPecIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_MakeKuishibariInfoTask_WaitIDs) == 0x0004B0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_MakeKuishibariInfoTask_WaitIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x0004C0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_3) == 0x0004C4, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddNumEffectTask_retPecID) == 0x0004C8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddNumEffectTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_4) == 0x0004CC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_5) == 0x0004D0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Greater_IntInt_ReturnValue) == 0x0004D4, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004D5, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BooleanAND_ReturnValue_2) == 0x0004D6, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Greater_ByteByte_ReturnValue) == 0x0004D7, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BooleanAND_ReturnValue_3) == 0x0004D8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_5) == 0x0004E0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetKuishibariCureHP_ReturnValue) == 0x0004E8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetKuishibariCureHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BstDamageKuishibari_ReturnValue) == 0x0004EC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BstDamageKuishibari_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddSetUnitShake_retPecID) == 0x0004F0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddSetUnitShake_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_6) == 0x0004F8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_6' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_7) == 0x000500, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_7' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_CheckBossFlag_ReturnValue_1) == 0x000508, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_CheckBossFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_8) == 0x000510, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_8' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_CheckBossFlag_ReturnValue_2) == 0x000518, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_CheckBossFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetMainWork_retValue_4) == 0x000520, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetMainWork_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000528, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_Select_Default_1) == 0x000529, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings) == 0x000530, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000590, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddSetUnitMotion_retPecID) == 0x000598, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddSetUnitMotion_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0005A0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, K2Node_DynamicCast_bSuccess) == 0x0005A8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_6) == 0x0005AC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddPlaySEUnitAttachTask_retPecID) == 0x0005B0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0005B4, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0005B5, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BooleanAND_ReturnValue_4) == 0x0005B6, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0005B7, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x0005B8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Multiply_IntInt_ReturnValue) == 0x0005BC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0005C0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_CheckStopAutoBattle_DoStop) == 0x0005C4, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_CheckStopAutoBattle_DoStop' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddPartyPanelCtrlTask_retPecID_1) == 0x0005C8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddPartyPanelCtrlTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_7) == 0x0005CC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddHpMpTask_retPecID) == 0x0005D0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddHpMpTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_GetMainWork_retValue_2) == 0x0005D8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_GetMainWork_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BI_EndAutoBattle_NoUse) == 0x0005E8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BI_EndAutoBattle_NoUse' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x0005EC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddPartyPanelCtrlTask_retPecID_2) == 0x0005F0, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddPartyPanelCtrlTask_retPecID_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_8) == 0x0005F4, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x0005F8, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddHpMpTask_retPecID_1) == 0x0005FC, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddHpMpTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Not_PreBool_ReturnValue_3) == 0x000600, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_BooleanAND_ReturnValue_5) == 0x000601, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetBadDeadType_retValue) == 0x000602, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetBadDeadType_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_MakeDeadTask_retValue) == 0x000604, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_MakeDeadTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_9) == 0x000608, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetNowHP_ReturnValue) == 0x00060C, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Subtract_IntInt_ReturnValue) == 0x000610, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_GetPartySystem_retValue_9) == 0x000618, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_GetPartySystem_retValue_9' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_IsDeadDamage_retValue) == 0x000620, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_IsDeadDamage_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_AddNumEffectTask_retPecID_1) == 0x000624, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_AddNumEffectTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeBadDamageTask, CallFunc_Array_Add_ReturnValue_10) == 0x000628, "Member 'BattleActionTaskFactory_C_MakeBadDamageTask::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeTurnPrevCureTask
// 0x0060 (0x0060 - 0x0000)
struct BattleActionTaskFactory_C_MakeTurnPrevCureTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RetWaitList;                                       // 0x0028(0x0010)(Parm, OutParm)
	class FString                                 Lo_name;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_DstIndex;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SrcIndex;                                       // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeTurnPrevCureTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeTurnPrevCureTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeTurnPrevCureTask) == 0x000060, "Wrong size on BattleActionTaskFactory_C_MakeTurnPrevCureTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, RetWaitList) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::RetWaitList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, Lo_name) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::Lo_name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, Lo_WaitTask) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, Lo_DstIndex) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::Lo_DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTurnPrevCureTask, Lo_SrcIndex) == 0x00005C, "Member 'BattleActionTaskFactory_C_MakeTurnPrevCureTask::Lo_SrcIndex' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeAidTask
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_MakeAidTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetList;                                           // 0x0028(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_AddAidTask_retPecID;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeAidTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeAidTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeAidTask) == 0x000050, "Wrong size on BattleActionTaskFactory_C_MakeAidTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAidTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeAidTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAidTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeAidTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAidTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeAidTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAidTask, RetList) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeAidTask::RetList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAidTask, Lo_WaitTaskList) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeAidTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAidTask, CallFunc_AddAidTask_retPecID) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeAidTask::CallFunc_AddAidTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAidTask, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BattleActionTaskFactory_C_MakeAidTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddAidTask
// 0x0210 (0x0210 - 0x0000)
struct BattleActionTaskFactory_C_AddAidTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0170(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddAidTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddAidTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddAidTask) == 0x000210, "Wrong size on BattleActionTaskFactory_C_AddAidTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddAidTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddAidTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, SkillId) == 0x000020, "Member 'BattleActionTaskFactory_C_AddAidTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddAidTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddAidTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddAidTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddAidTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddAidTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddAidTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddAidTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAidTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000170, "Member 'BattleActionTaskFactory_C_AddAidTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeDeadTask
// 0x0390 (0x0390 - 0x0000)
struct BattleActionTaskFactory_C_MakeDeadTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DEAD_EFFECT                             DeadType;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEnemyKilled;                                 // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Ret;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDeadFadeTask_retPecID;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0060(0x0320)()
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeDeadTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_MakeDeadTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeDeadTask) == 0x000390, "Wrong size on BattleActionTaskFactory_C_MakeDeadTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeDeadTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeDeadTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeDeadTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, DeltaTime) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeDeadTask::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, DeadType) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeDeadTask::DeadType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, Immediately) == 0x000029, "Member 'BattleActionTaskFactory_C_MakeDeadTask::Immediately' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, IgnoreEnemyKilled) == 0x00002A, "Member 'BattleActionTaskFactory_C_MakeDeadTask::IgnoreEnemyKilled' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, RetValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakeDeadTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, Lo_Ret) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeDeadTask::Lo_Ret' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_AddDeadFadeTask_retPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_AddDeadFadeTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_GetMainWork_retValue) == 0x000040, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_GetPartySystem_retValue) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_GetCharaID_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_GetBtlPartyData_ReturnValue) == 0x000060, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_IsEnemy_retValue) == 0x000380, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeDeadTask, CallFunc_BooleanAND_ReturnValue) == 0x000381, "Member 'BattleActionTaskFactory_C_MakeDeadTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.PrintTaskType
// 0x0088 (0x0088 - 0x0000)
struct BattleActionTaskFactory_C_PrintTaskType final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_BTL_TASK_COM                                CallFunc_GetTaskType_retValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_PrintTaskType) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_PrintTaskType");
static_assert(sizeof(BattleActionTaskFactory_C_PrintTaskType) == 0x000088, "Wrong size on BattleActionTaskFactory_C_PrintTaskType");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleActionTaskFactory_C_PrintTaskType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleActionTaskFactory_C_PrintTaskType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_GetTaskType_retValue) == 0x000030, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_GetTaskType_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_PrintTaskType, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BattleActionTaskFactory_C_PrintTaskType::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCamSetTargetUnit
// 0x0230 (0x0230 - 0x0000)
struct BattleActionTaskFactory_C_AddCamSetTargetUnit final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeedRatio;                                  // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InterpWait;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Revise;                                            // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0050(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0080(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0150(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddCamSetTargetUnit) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCamSetTargetUnit");
static_assert(sizeof(BattleActionTaskFactory_C_AddCamSetTargetUnit) == 0x000230, "Wrong size on BattleActionTaskFactory_C_AddCamSetTargetUnit");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, InterpSpeedRatio) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::InterpSpeedRatio' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, InterpWait) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::InterpWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, SocketName) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, Revise) == 0x000040, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::Revise' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, RetPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, Lo_Data2) == 0x000050, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, Lo_Data) == 0x000080, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, Param_Lo_Desc) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, K2Node_MakeStruct_BtlTaskData) == 0x000150, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, CallFunc_SpawnActionTaskActor_retValue) == 0x000180, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, CallFunc_GetPecID_retValue) == 0x000188, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamSetTargetUnit, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddCamSetTargetUnit::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCamFovyTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddCamFovyTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         ToFovy;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeedRatio;                                  // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InterpWait;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01A0(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCamFovyTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCamFovyTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCamFovyTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddCamFovyTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, ToFovy) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::ToFovy' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, InterpSpeedRatio) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::InterpSpeedRatio' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, InterpWait) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::InterpWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000190, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamFovyTask, CallFunc_GetPecID_retValue) == 0x000240, "Member 'BattleActionTaskFactory_C_AddCamFovyTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetTaskForPecID
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_GetTaskForPecID final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_GetTaskForPecID) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetTaskForPecID");
static_assert(sizeof(BattleActionTaskFactory_C_GetTaskForPecID) == 0x000038, "Wrong size on BattleActionTaskFactory_C_GetTaskForPecID");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, RetValue) == 0x000008, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_GetTaskForPecID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSetUnitMotion
// 0x0260 (0x0260 - 0x0000)
struct BattleActionTaskFactory_C_AddSetUnitMotion final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMotionFinish;                                  // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartPosition;                                     // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayOneMotion;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0038(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0068(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0170(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01B0(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddSetUnitMotion) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSetUnitMotion");
static_assert(sizeof(BattleActionTaskFactory_C_AddSetUnitMotion) == 0x000260, "Wrong size on BattleActionTaskFactory_C_AddSetUnitMotion");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, MotionID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::MotionID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, PartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, WaitMotionFinish) == 0x000028, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::WaitMotionFinish' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, StartPosition) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::StartPosition' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, IsPlayOneMotion) == 0x000030, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::IsPlayOneMotion' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, RetPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, Lo_Data2) == 0x000038, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, Lo_Data) == 0x000068, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, K2Node_MakeStruct_BtlTaskData_1) == 0x000170, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, CallFunc_SpawnActionTaskActor_retValue) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, K2Node_MakeStruct_BtlTaskDesc) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitMotion, CallFunc_GetPecID_retValue) == 0x000250, "Member 'BattleActionTaskFactory_C_AddSetUnitMotion::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetBadDeadType
// 0x0003 (0x0003 - 0x0000)
struct BattleActionTaskFactory_C_GetBadDeadType final
{
public:
	E_BAD_STATUS                                  bst;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DEAD_EFFECT                             RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_GetBadDeadType) == 0x000001, "Wrong alignment on BattleActionTaskFactory_C_GetBadDeadType");
static_assert(sizeof(BattleActionTaskFactory_C_GetBadDeadType) == 0x000003, "Wrong size on BattleActionTaskFactory_C_GetBadDeadType");
static_assert(offsetof(BattleActionTaskFactory_C_GetBadDeadType, bst) == 0x000000, "Member 'BattleActionTaskFactory_C_GetBadDeadType::bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetBadDeadType, RetValue) == 0x000001, "Member 'BattleActionTaskFactory_C_GetBadDeadType::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetBadDeadType, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BattleActionTaskFactory_C_GetBadDeadType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCamRailSkillTask
// 0x0280 (0x0280 - 0x0000)
struct BattleActionTaskFactory_C_AddCamRailSkillTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Type;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Param_Name;                                        // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsHokan;                                           // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsConsiderActor;                                   // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOverrideHokanSpeed;                              // 0x0042(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHokanSpeedMax;                                   // 0x0043(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DoNotResetUnitAveLocation;                         // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0050(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0080(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_BoolToByte_ReturnValue;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0160(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0190(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01D0(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCamRailSkillTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCamRailSkillTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCamRailSkillTask) == 0x000280, "Wrong size on BattleActionTaskFactory_C_AddCamRailSkillTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, ActorIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, TargetIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, Type) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, Param_Name) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, IsHokan) == 0x000040, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::IsHokan' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, IsConsiderActor) == 0x000041, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::IsConsiderActor' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, IsOverrideHokanSpeed) == 0x000042, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::IsOverrideHokanSpeed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, IsHokanSpeedMax) == 0x000043, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::IsHokanSpeedMax' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, DoNotResetUnitAveLocation) == 0x000044, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::DoNotResetUnitAveLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, RetPecID) == 0x000048, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, Lo_Data2) == 0x000050, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, Lo_Data) == 0x000080, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, Param_Lo_Desc) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000150, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x000154, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, CallFunc_Conv_BoolToByte_ReturnValue) == 0x000158, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::CallFunc_Conv_BoolToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, K2Node_MakeStruct_BtlTaskData) == 0x000160, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000190, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, CallFunc_SpawnActionTaskActor_retValue) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001D0, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailSkillTask, CallFunc_GetPecID_retValue) == 0x000270, "Member 'BattleActionTaskFactory_C_AddCamRailSkillTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlayEffectTask
// 0x0260 (0x0260 - 0x0000)
struct BattleActionTaskFactory_C_AddPlayEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleData;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Lifetime;                                          // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TransPrio;                                         // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0080(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x00B0(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00E0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0180(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlayEffectTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlayEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlayEffectTask) == 0x000260, "Wrong size on BattleActionTaskFactory_C_AddPlayEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, SocketName) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, ParticleData) == 0x000038, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::ParticleData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, Transform) == 0x000040, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::Transform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, Lifetime) == 0x000070, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::Lifetime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, TransPrio) == 0x000074, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::TransPrio' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, RetPecID) == 0x000078, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, Lo_Data2) == 0x000080, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, Lo_Data) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, Param_Lo_Desc) == 0x0000E0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, K2Node_MakeStruct_BtlTaskData) == 0x000180, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, CallFunc_SpawnActionTaskActor_retValue) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, CallFunc_GetPecID_retValue) == 0x0001B8, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlayCamShake
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddPlayCamShake final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PlayID;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RowName;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 ShakeClass;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0048(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0078(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0150(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlayCamShake) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlayCamShake");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlayCamShake) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddPlayCamShake");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, PlayID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::PlayID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, RowName) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::RowName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, ShakeClass) == 0x000038, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::ShakeClass' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, Scale) == 0x000040, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::Scale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, RetPecID) == 0x000044, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, Lo_Data2) == 0x000048, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, Lo_Data) == 0x000078, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, Param_Lo_Desc) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, K2Node_MakeStruct_BtlTaskData) == 0x000150, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, CallFunc_SpawnActionTaskActor_retValue) == 0x000180, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShake, CallFunc_GetPecID_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddPlayCamShake::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddRadialBlurTask
// 0x0300 (0x0300 - 0x0000)
struct BattleActionTaskFactory_C_AddRadialBlurTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Danage;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAmount;                                       // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAmount;                                         // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartKeepSec;                                      // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpSec;                                           // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0054(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOrigin;                                         // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0078(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x00A8(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00E0(0x00A0)(Edit, BlueprintVisible)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x01A8(0x0030)()
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0220(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0250(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddRadialBlurTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddRadialBlurTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddRadialBlurTask) == 0x000300, "Wrong size on BattleActionTaskFactory_C_AddRadialBlurTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, SocketName) == 0x000028, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Value) == 0x000038, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Sw) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Danage) == 0x000040, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Danage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, StartAmount) == 0x000044, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::StartAmount' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, EndAmount) == 0x000048, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::EndAmount' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, StartKeepSec) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::StartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, LerpSec) == 0x000050, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::LerpSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Origin) == 0x000054, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Origin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Offset) == 0x000060, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Offset' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, UseOrigin) == 0x00006C, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::UseOrigin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, RetPecID) == 0x000070, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Lo_Data2) == 0x000078, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Lo_Data) == 0x0000A8, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, Param_Lo_Desc) == 0x0000E0, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, CallFunc_SelectVector_ReturnValue) == 0x000180, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, CallFunc_MakeVector_ReturnValue) == 0x00018C, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, CallFunc_Add_VectorVector_ReturnValue) == 0x000198, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, K2Node_MakeStruct_BtlTaskData) == 0x0001A8, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, CallFunc_MakeVector_ReturnValue_1) == 0x000210, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000220, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000250, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, CallFunc_SpawnActionTaskActor_retValue) == 0x0002F0, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRadialBlurTask, CallFunc_GetPecID_retValue) == 0x0002F8, "Member 'BattleActionTaskFactory_C_AddRadialBlurTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitBackStepTask
// 0x0210 (0x0210 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitBackStepTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitEnd;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AVOID_DIRECTION                             Direction;                                         // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitBackStepTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitBackStepTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitBackStepTask) == 0x000210, "Wrong size on BattleActionTaskFactory_C_AddUnitBackStepTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, WaitEnd) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::WaitEnd' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, Direction) == 0x000025, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::Direction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000200, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitBackStepTask, CallFunc_GetPecID_retValue) == 0x000208, "Member 'BattleActionTaskFactory_C_AddUnitBackStepTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitAttackMoveTask
// 0x0270 (0x0270 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitAttackMoveTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcIndex;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstIndex;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitEnd;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevDeg;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocationMove;                                    // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MoveLocation;                                      // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookLocation;                                      // 0x0044(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             AttackMotion;                                      // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0058(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0088(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00C0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0160(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0190(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitAttackMoveTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitAttackMoveTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitAttackMoveTask) == 0x000270, "Wrong size on BattleActionTaskFactory_C_AddUnitAttackMoveTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, SrcIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, DstIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, WaitEnd) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::WaitEnd' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, Speed) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::Speed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, RevDeg) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::RevDeg' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, IsLocationMove) == 0x000034, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::IsLocationMove' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, MoveLocation) == 0x000038, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::MoveLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, LookLocation) == 0x000044, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::LookLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, AttackMotion) == 0x000050, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::AttackMotion' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, RetPecID) == 0x000054, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, Lo_Data2) == 0x000058, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, Lo_Data) == 0x000088, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, Param_Lo_Desc) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, K2Node_MakeStruct_BtlTaskData) == 0x000160, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000190, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000260, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitAttackMoveTask, CallFunc_GetPecID_retValue) == 0x000268, "Member 'BattleActionTaskFactory_C_AddUnitAttackMoveTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddMessageTask
// 0x02A0 (0x02A0 - 0x0000)
struct BattleActionTaskFactory_C_AddMessageTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MessageID;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Program_no;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AddString;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Elementnumber;                                     // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShowPosition;                                      // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkillOrItemName;                                 // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillId;                                           // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillAptitude;                                     // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemId;                                            // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0090(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00C0(0x00A0)(Edit, BlueprintVisible)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0180(0x0030)()
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x01B8(0x0030)()
	uint8                                         Pad_1E8[0x8];                                      // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01F0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddMessageTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddMessageTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddMessageTask) == 0x0002A0, "Wrong size on BattleActionTaskFactory_C_AddMessageTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddMessageTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddMessageTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, MessageID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddMessageTask::MessageID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, Program_no) == 0x000024, "Member 'BattleActionTaskFactory_C_AddMessageTask::Program_no' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, AddString) == 0x000028, "Member 'BattleActionTaskFactory_C_AddMessageTask::AddString' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, Sw) == 0x000038, "Member 'BattleActionTaskFactory_C_AddMessageTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, PlayRate) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddMessageTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, Elementnumber) == 0x000040, "Member 'BattleActionTaskFactory_C_AddMessageTask::Elementnumber' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, ShowPosition) == 0x000044, "Member 'BattleActionTaskFactory_C_AddMessageTask::ShowPosition' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, IsSkillOrItemName) == 0x000048, "Member 'BattleActionTaskFactory_C_AddMessageTask::IsSkillOrItemName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, SkillId) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddMessageTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, SkillAptitude) == 0x000050, "Member 'BattleActionTaskFactory_C_AddMessageTask::SkillAptitude' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, ItemId) == 0x000054, "Member 'BattleActionTaskFactory_C_AddMessageTask::ItemId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, RetPecID) == 0x000058, "Member 'BattleActionTaskFactory_C_AddMessageTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, Lo_Data2) == 0x000060, "Member 'BattleActionTaskFactory_C_AddMessageTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, Lo_Data) == 0x000090, "Member 'BattleActionTaskFactory_C_AddMessageTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, Param_Lo_Desc) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddMessageTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000164, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000168, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_Conv_IntToByte_ReturnValue) == 0x00016C, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_MakeVector_ReturnValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, K2Node_MakeStruct_BtlTaskData) == 0x000180, "Member 'BattleActionTaskFactory_C_AddMessageTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0001B8, "Member 'BattleActionTaskFactory_C_AddMessageTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001F0, "Member 'BattleActionTaskFactory_C_AddMessageTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000290, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMessageTask, CallFunc_GetPecID_retValue) == 0x000298, "Member 'BattleActionTaskFactory_C_AddMessageTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPartyPanelCtrlTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddPartyPanelCtrlTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PANEL_CTRL                              Ctrl;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPartyPanelCtrlTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddPartyPanelCtrlTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, Value) == 0x000024, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, Ctrl) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::Ctrl' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, Sw) == 0x000029, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPartyPanelCtrlTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddPartyPanelCtrlTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddBadStatusTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddBadStatusTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bst;                                               // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddBadStatusTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddBadStatusTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddBadStatusTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddBadStatusTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, bst) == 0x000024, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, Sw) == 0x000028, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBadStatusTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddBadStatusTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeTalkPartyInTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_MakeTalkPartyInTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddTalkPartyInTask_retPecID;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeTalkPartyInTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeTalkPartyInTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeTalkPartyInTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_MakeTalkPartyInTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTalkPartyInTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeTalkPartyInTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTalkPartyInTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeTalkPartyInTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTalkPartyInTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeTalkPartyInTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTalkPartyInTask, RetValue) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeTalkPartyInTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeTalkPartyInTask, CallFunc_AddTalkPartyInTask_retPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeTalkPartyInTask::CallFunc_AddTalkPartyInTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddTalkPartyInTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddTalkPartyInTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0200(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddTalkPartyInTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddTalkPartyInTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddTalkPartyInTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddTalkPartyInTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000200, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddTalkPartyInTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddTalkPartyInTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddApplyUnitStateTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddApplyUnitStateTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoCureEffect;                                      // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLecerationDam;                                   // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateLookAt;                                      // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0138(0x0030)()
	uint8                                         Temp_byte_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default;                             // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0170(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01A0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddApplyUnitStateTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddApplyUnitStateTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddApplyUnitStateTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddApplyUnitStateTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, NoCureEffect) == 0x000024, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::NoCureEffect' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, IsLecerationDam) == 0x000025, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::IsLecerationDam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, UpdateLookAt) == 0x000026, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::UpdateLookAt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, Temp_bool_Variable) == 0x000130, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, K2Node_MakeStruct_BtlTaskData) == 0x000138, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, Temp_byte_Variable) == 0x000168, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, Temp_byte_Variable_1) == 0x000169, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, K2Node_Select_Default) == 0x00016A, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000170, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000240, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddApplyUnitStateTask, CallFunc_GetPecID_retValue) == 0x000248, "Member 'BattleActionTaskFactory_C_AddApplyUnitStateTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddInfoMessTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddInfoMessTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_INFO_MESS_TIMING                      Timing;                                            // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  bst;                                               // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMaster;                                          // 0x002E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MessageID;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideDurationSec;                               // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0040(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0070(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0170(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01A0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddInfoMessTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddInfoMessTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddInfoMessTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddInfoMessTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, SkillId) == 0x000028, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, Timing) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::Timing' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, bst) == 0x00002D, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, IsMaster) == 0x00002E, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::IsMaster' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, MessageID) == 0x000030, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::MessageID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, PlayRate) == 0x000034, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, OverrideDurationSec) == 0x000038, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::OverrideDurationSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, RetPecID) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, Lo_Data2) == 0x000040, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, Lo_Data) == 0x000070, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000170, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000240, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessTask, CallFunc_GetPecID_retValue) == 0x000248, "Member 'BattleActionTaskFactory_C_AddInfoMessTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeHeroSummonTask
// 0x0068 (0x0068 - 0x0000)
struct BattleActionTaskFactory_C_MakeHeroSummonTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetValue;                                          // 0x0028(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddMessageTask_retPecID;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddRecomeTask_retPecID;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeHeroSummonTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeHeroSummonTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeHeroSummonTask) == 0x000068, "Wrong size on BattleActionTaskFactory_C_MakeHeroSummonTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, RetValue) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, Lo_WaitTaskList) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, Temp_int_Variable) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, CallFunc_AddCamRailTask_retPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, CallFunc_AddMessageTask_retPecID) == 0x000054, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::CallFunc_AddMessageTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, CallFunc_AddRecomeTask_retPecID) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::CallFunc_AddRecomeTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, CallFunc_Array_Add_ReturnValue_1) == 0x00005C, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeHeroSummonTask, CallFunc_Array_Add_ReturnValue_2) == 0x000060, "Member 'BattleActionTaskFactory_C_MakeHeroSummonTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddRecomeTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddRecomeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0200(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddRecomeTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddRecomeTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddRecomeTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddRecomeTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddRecomeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddRecomeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddRecomeTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddRecomeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddRecomeTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddRecomeTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddRecomeTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddRecomeTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddRecomeTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000200, "Member 'BattleActionTaskFactory_C_AddRecomeTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddRecomeTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddRecomeTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddRecomeTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeActEndByBstTask
// 0x0480 (0x0480 - 0x0000)
struct BattleActionTaskFactory_C_MakeActEndByBstTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  InBst;                                             // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillId;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            ExtraAction;                                       // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetPecID;                                          // 0x0038(0x0010)(Parm, OutParm)
	E_BTL_EXTRA_ACTION                            Lo_ExtraAction;                                    // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            Lo_Action;                                         // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_Time;                                           // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SkillId;                                        // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Lo_Bst;                                            // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_name;                                           // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_Index;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0070(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_T                  CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings; // 0x0088(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddPlaySEUnitAttachTask_retPecID;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPressIconTask_RetPecID;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Temp_byte_Variable;                                // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0130(0x0100)(ConstParm)
	class FText                                   CallFunc_GetSkillName_ReturnValue;                 // 0x0230(0x0018)(ConstParm)
	uint8                                         CallFunc_SkillBaseDataGetValue_Icon_ReturnValue;   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSwitchCommandTask_retPecID;            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddExtActMessTask_retPecID;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSide_ReturnValue;                      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable_1;                              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x1];                                      // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID;    // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeSideAllTask_RetPecID;            // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_3;                // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    K2Node_Select_Default;                             // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    K2Node_DynamicCast_AsBPI_Battle_Party;             // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1;  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetEnemyLeaderIndex_PartyIndex;        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID_1;         // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillTekisei_ReturnValue;              // 0x02E0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddMessageTask_retPecID;                  // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_4;                // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_5;                // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCharmSkillID_ReturnValue;              // 0x030C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue_1;           // 0x0310(0x0100)(ConstParm)
	int32                                         CallFunc_GetSkillTekisei_ReturnValue_1;            // 0x0410(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_SkillBaseDataGetValue_Icon_ReturnValue_1; // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415[0x3];                                      // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSkillName_ReturnValue_1;               // 0x0418(0x0018)(ConstParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_6;                // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddMessageTask_retPecID_1;                // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_7;                // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeActEndByBstTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeActEndByBstTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeActEndByBstTask) == 0x000480, "Wrong size on BattleActionTaskFactory_C_MakeActEndByBstTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, InBst) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::InBst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, SkillId) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, ExtraAction) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Time) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Time' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, RetPecID) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_ExtraAction) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_Action) == 0x000049, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_Action' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_Time) == 0x00004C, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_Time' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_SkillId) == 0x000050, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_Bst) == 0x000054, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_Bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_name) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_Index) == 0x000068, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Lo_WaitTaskList) == 0x000070, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000080, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings) == 0x000088, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_BooleanAND_ReturnValue) == 0x0000E8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000F0, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0000F8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddPlaySEUnitAttachTask_retPecID) == 0x000104, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddPressIconTask_RetPecID) == 0x000108, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddPressIconTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00010C, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00010D, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_BooleanOR_ReturnValue) == 0x00010E, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Temp_byte_Variable) == 0x00010F, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000110, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue) == 0x000118, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_IsEnemy_retValue) == 0x000120, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x000124, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetSkillBaseData_ReturnValue) == 0x000130, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetSkillName_ReturnValue) == 0x000230, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_SkillBaseDataGetValue_Icon_ReturnValue) == 0x000248, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_SkillBaseDataGetValue_Icon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Conv_TextToString_ReturnValue) == 0x000250, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000260, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddSwitchCommandTask_retPecID) == 0x000264, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddSwitchCommandTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_1) == 0x000268, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, K2Node_SwitchEnum_CmpSuccess) == 0x00026C, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddExtActMessTask_retPecID) == 0x000270, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddExtActMessTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_2) == 0x000274, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue_1) == 0x000278, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetSide_ReturnValue) == 0x000280, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Temp_byte_Variable_1) == 0x000281, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000282, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID) == 0x000284, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddBeHomeSideAllTask_RetPecID) == 0x000288, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddBeHomeSideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_3) == 0x00028C, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_4) == 0x000290, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x000294, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue_2) == 0x000298, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_5) == 0x0002A0, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, Temp_bool_Variable) == 0x0002A4, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue_3) == 0x0002A8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, K2Node_Select_Default) == 0x0002B0, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, K2Node_DynamicCast_AsBPI_Battle_Party) == 0x0002B8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::K2Node_DynamicCast_AsBPI_Battle_Party' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, K2Node_DynamicCast_bSuccess_1) == 0x0002C8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1) == 0x0002CC, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_BI_GetEnemyLeaderIndex_PartyIndex) == 0x0002D0, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_BI_GetEnemyLeaderIndex_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_6) == 0x0002D4, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddUnitVisibilityTask_RetPecID_1) == 0x0002D8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddUnitVisibilityTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_7) == 0x0002DC, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetSkillTekisei_ReturnValue) == 0x0002E0, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetSkillTekisei_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddMessageTask_retPecID) == 0x0002E4, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddMessageTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_8) == 0x0002E8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue_4) == 0x0002F0, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetHeroIndex_ReturnValue) == 0x0002F8, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue_5) == 0x000300, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000308, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetCharmSkillID_ReturnValue) == 0x00030C, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetCharmSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetSkillBaseData_ReturnValue_1) == 0x000310, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetSkillBaseData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetSkillTekisei_ReturnValue_1) == 0x000410, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetSkillTekisei_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_SkillBaseDataGetValue_Icon_ReturnValue_1) == 0x000414, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_SkillBaseDataGetValue_Icon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetSkillName_ReturnValue_1) == 0x000418, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetSkillName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000430, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000438, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue_6) == 0x000448, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue_6' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddMessageTask_retPecID_1) == 0x000450, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddMessageTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_9) == 0x000454, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartySystem_retValue_7) == 0x000458, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartySystem_retValue_7' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetPartyUnit_retValue) == 0x000460, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_GetOwner_ReturnValue) == 0x000468, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_IsValid_ReturnValue) == 0x000470, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_AddCamRailTask_retPecID) == 0x000474, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeActEndByBstTask, CallFunc_Array_Add_ReturnValue_10) == 0x000478, "Member 'BattleActionTaskFactory_C_MakeActEndByBstTask::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlayEffectTask2
// 0x0320 (0x0320 - 0x0000)
struct BattleActionTaskFactory_C_AddPlayEffectTask2 final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleData;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Desc_M_Task_Data;                               // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBtlTaskData                           Lo_Desc_M_Task_Data_2;                             // 0x0060(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FTransform                             Lo_Desc_M_Transform;                               // 0x0090(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class USkeletalMesh*                          ModSkeletalMesh;                                   // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ModAnim;                                           // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ModAttachSocketName;                               // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPairTargetLocationOverride;                      // 0x00D8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PairTargetLocation;                                // 0x00DC(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIgnoreSideScale;                                 // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x00EC(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x00F0(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0120(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0150(0x00A0)(Edit, BlueprintVisible)
	struct FBTL_ADD_PLAY_EFFECT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_PLAY_EFFECT_TASK_DATA;   // 0x01F0(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_228[0x8];                                      // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0230(0x00A0)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABTL_ADD_PLAY_EFFECT_TASK_OBJ_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlayEffectTask2) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlayEffectTask2");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlayEffectTask2) == 0x000320, "Wrong size on BattleActionTaskFactory_C_AddPlayEffectTask2");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, ParticleData) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::ParticleData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, ActorIndex) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, TargetIndex) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, Lo_Desc_M_Task_Data) == 0x000030, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::Lo_Desc_M_Task_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, Lo_Desc_M_Task_Data_2) == 0x000060, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::Lo_Desc_M_Task_Data_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, Lo_Desc_M_Transform) == 0x000090, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::Lo_Desc_M_Transform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, ModSkeletalMesh) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::ModSkeletalMesh' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, ModAnim) == 0x0000C8, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::ModAnim' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, ModAttachSocketName) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::ModAttachSocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, IsPairTargetLocationOverride) == 0x0000D8, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::IsPairTargetLocationOverride' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, PairTargetLocation) == 0x0000DC, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::PairTargetLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, IsIgnoreSideScale) == 0x0000E8, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::IsIgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, RetPecID) == 0x0000EC, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, Lo_Data2) == 0x0000F0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, Lo_Data) == 0x000120, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, Param_Lo_Desc) == 0x000150, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, K2Node_MakeStruct_BTL_ADD_PLAY_EFFECT_TASK_DATA) == 0x0001F0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::K2Node_MakeStruct_BTL_ADD_PLAY_EFFECT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, K2Node_MakeStruct_BtlTaskDesc) == 0x000230, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, CallFunc_MakeTransform_ReturnValue) == 0x0002D0, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000300, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, CallFunc_FinishSpawningActor_ReturnValue) == 0x000308, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, CallFunc_SpawnActionTaskActor_retValue) == 0x000310, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayEffectTask2, CallFunc_GetPecID_retValue) == 0x000318, "Member 'BattleActionTaskFactory_C_AddPlayEffectTask2::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitModelLoadTask
// 0x0280 (0x0280 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitModelLoadTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         LoadID;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         PartyIndex;                                        // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RegisterAsAnEnemy;                                 // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0070(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x00A0(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00D0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0170(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x01A0(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01D0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitModelLoadTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitModelLoadTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitModelLoadTask) == 0x000280, "Wrong size on BattleActionTaskFactory_C_AddUnitModelLoadTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, LoadID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::LoadID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, SpawnTransform) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, PartyIndex) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, RegisterAsAnEnemy) == 0x000064, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::RegisterAsAnEnemy' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, RetPecID) == 0x000068, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, Lo_Data2) == 0x000070, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, Lo_Data) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, Param_Lo_Desc) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, K2Node_MakeStruct_BtlTaskData) == 0x000170, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001D0, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000270, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitModelLoadTask, CallFunc_GetPecID_retValue) == 0x000278, "Member 'BattleActionTaskFactory_C_AddUnitModelLoadTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSummonTask
// 0x0290 (0x0290 - 0x0000)
struct BattleActionTaskFactory_C_AddSummonTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcIndex;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstIndex;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseForceTransform;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ForceTransform;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                ReturnEffectLocation;                              // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGodSkillSummon;                                  // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0078(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x00A8(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00E0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0180(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x01B0(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01E0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddSummonTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSummonTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddSummonTask) == 0x000290, "Wrong size on BattleActionTaskFactory_C_AddSummonTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSummonTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSummonTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, SrcIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSummonTask::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, DstIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddSummonTask::DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, UseForceTransform) == 0x000028, "Member 'BattleActionTaskFactory_C_AddSummonTask::UseForceTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, ForceTransform) == 0x000030, "Member 'BattleActionTaskFactory_C_AddSummonTask::ForceTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, ReturnEffectLocation) == 0x000060, "Member 'BattleActionTaskFactory_C_AddSummonTask::ReturnEffectLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, IsGodSkillSummon) == 0x00006C, "Member 'BattleActionTaskFactory_C_AddSummonTask::IsGodSkillSummon' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, RetPecID) == 0x000070, "Member 'BattleActionTaskFactory_C_AddSummonTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, Lo_Data2) == 0x000078, "Member 'BattleActionTaskFactory_C_AddSummonTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, Lo_Data) == 0x0000A8, "Member 'BattleActionTaskFactory_C_AddSummonTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, Param_Lo_Desc) == 0x0000E0, "Member 'BattleActionTaskFactory_C_AddSummonTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, K2Node_MakeStruct_BtlTaskData) == 0x000180, "Member 'BattleActionTaskFactory_C_AddSummonTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddSummonTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001E0, "Member 'BattleActionTaskFactory_C_AddSummonTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000280, "Member 'BattleActionTaskFactory_C_AddSummonTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTask, CallFunc_GetPecID_retValue) == 0x000288, "Member 'BattleActionTaskFactory_C_AddSummonTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSummonAfterTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddSummonAfterTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0200(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddSummonAfterTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSummonAfterTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddSummonAfterTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddSummonAfterTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000200, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonAfterTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddSummonAfterTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlayerRecomeTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddPlayerRecomeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0200(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlayerRecomeTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlayerRecomeTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlayerRecomeTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddPlayerRecomeTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000200, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlayerRecomeAfterTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddPlayerRecomeAfterTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0200(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlayerRecomeAfterTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddPlayerRecomeAfterTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000200, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayerRecomeAfterTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddPlayerRecomeAfterTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitActionTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitActionTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_ACTION_TYPE                           Action;                                            // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Option;                                            // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FloatOption;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitActionTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitActionTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitActionTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddUnitActionTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, Action) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::Action' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, Option) == 0x000025, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::Option' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, FloatOption) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::FloatOption' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitActionTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddUnitActionTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.IsExistTaskForPecID_Old
// 0x0018 (0x0018 - 0x0000)
struct BattleActionTaskFactory_C_IsExistTaskForPecID_Old final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_GetTaskForPecID_retValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_IsExistTaskForPecID_Old) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_IsExistTaskForPecID_Old");
static_assert(sizeof(BattleActionTaskFactory_C_IsExistTaskForPecID_Old) == 0x000018, "Wrong size on BattleActionTaskFactory_C_IsExistTaskForPecID_Old");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID_Old, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID_Old::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID_Old, RetValue) == 0x000004, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID_Old::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID_Old, CallFunc_GetTaskForPecID_retValue) == 0x000008, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID_Old::CallFunc_GetTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID_Old, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID_Old::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSwitchCommandTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddSwitchCommandTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SWITCH_COMMAND                          Command;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddSwitchCommandTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSwitchCommandTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddSwitchCommandTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddSwitchCommandTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, Command) == 0x000024, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::Command' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, Sw) == 0x000025, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSwitchCommandTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddSwitchCommandTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddBlankExistTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddBlankExistTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0200(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddBlankExistTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddBlankExistTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddBlankExistTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddBlankExistTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000200, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBlankExistTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddBlankExistTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.DestroyTaskForPecID
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_DestroyTaskForPecID final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    Lo_Target;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_DestroyTaskForPecID) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_DestroyTaskForPecID");
static_assert(sizeof(BattleActionTaskFactory_C_DestroyTaskForPecID) == 0x000030, "Wrong size on BattleActionTaskFactory_C_DestroyTaskForPecID");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, IsSuccess) == 0x000004, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::IsSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, Lo_Target) == 0x000008, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlaySETask
// 0x0260 (0x0260 - 0x0000)
struct BattleActionTaskFactory_C_AddPlaySETask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SEName;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Data;                                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlay2D;                                          // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnorePlayRate;                                    // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0050(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0080(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0150(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0180(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01B0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlaySETask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlaySETask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlaySETask) == 0x000260, "Wrong size on BattleActionTaskFactory_C_AddPlaySETask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlaySETask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlaySETask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, SEName) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlaySETask::SEName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, Data) == 0x000030, "Member 'BattleActionTaskFactory_C_AddPlaySETask::Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, Location) == 0x000038, "Member 'BattleActionTaskFactory_C_AddPlaySETask::Location' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, IsPlay2D) == 0x000044, "Member 'BattleActionTaskFactory_C_AddPlaySETask::IsPlay2D' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, IgnorePlayRate) == 0x000045, "Member 'BattleActionTaskFactory_C_AddPlaySETask::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, RetPecID) == 0x000048, "Member 'BattleActionTaskFactory_C_AddPlaySETask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, Lo_Data2) == 0x000050, "Member 'BattleActionTaskFactory_C_AddPlaySETask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, Lo_Data) == 0x000080, "Member 'BattleActionTaskFactory_C_AddPlaySETask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, Param_Lo_Desc) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddPlaySETask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, K2Node_MakeStruct_BtlTaskData) == 0x000150, "Member 'BattleActionTaskFactory_C_AddPlaySETask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, K2Node_MakeStruct_BtlTaskData_1) == 0x000180, "Member 'BattleActionTaskFactory_C_AddPlaySETask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddPlaySETask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, CallFunc_SpawnActionTaskActor_retValue) == 0x000250, "Member 'BattleActionTaskFactory_C_AddPlaySETask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySETask, CallFunc_GetPecID_retValue) == 0x000258, "Member 'BattleActionTaskFactory_C_AddPlaySETask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddAnimationCameraTask
// 0x0390 (0x0390 - 0x0000)
struct BattleActionTaskFactory_C_AddAnimationCameraTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECameraAnimationSpace                         Space;                                             // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  CameraAnimation;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         BlendInTime;                                       // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShowActorIndex;                                    // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsParty;                                           // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShowTargetIndex;                                   // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusTarget;                                       // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusActor;                                        // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CameraAnimation2nd;                                // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpAlpha;                                         // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 VisiblePartyIndexes;                               // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 InvisiblePartyIndexes;                             // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CleanUp;                                           // 0x00C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUseTargetScale;                                  // 0x00C1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x00C4(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_AnimTime2nd;                                    // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x00D0(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0100(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0130(0x00A0)(Edit, BlueprintVisible)
	uint8                                         CallFunc_Conv_BoolToByte_ReturnValue;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_ANIM_CAM_TASK_DATA            K2Node_MakeStruct_BTL_ADD_ANIM_CAM_TASK_DATA;      // 0x01D8(0x0040)(HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0218(0x0030)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0258(0x0030)()
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0290(0x00A0)()
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0xC];                                      // 0x0334(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABTL_ADD_ANIM_CAM_TASK_OBJ_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddAnimationCameraTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddAnimationCameraTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddAnimationCameraTask) == 0x000390, "Wrong size on BattleActionTaskFactory_C_AddAnimationCameraTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, Rate) == 0x000020, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::Rate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, Space) == 0x000024, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::Space' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CameraAnimation) == 0x000028, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CameraAnimation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, SpawnTransform) == 0x000030, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, BlendInTime) == 0x000060, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, BlendOutTime) == 0x000064, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, ShowActorIndex) == 0x000068, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::ShowActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, IsParty) == 0x00006C, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::IsParty' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, ShowTargetIndex) == 0x000070, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::ShowTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, FocusTarget) == 0x000074, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::FocusTarget' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, FocusActor) == 0x000078, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::FocusActor' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, SocketName) == 0x000080, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CameraAnimation2nd) == 0x000090, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CameraAnimation2nd' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, LerpAlpha) == 0x000098, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, VisiblePartyIndexes) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::VisiblePartyIndexes' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, InvisiblePartyIndexes) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::InvisiblePartyIndexes' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CleanUp) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CleanUp' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, IsUseTargetScale) == 0x0000C1, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::IsUseTargetScale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, RetPecID) == 0x0000C4, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, Lo_AnimTime2nd) == 0x0000C8, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::Lo_AnimTime2nd' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, Lo_Data2) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, Lo_Data) == 0x000100, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, Param_Lo_Desc) == 0x000130, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_Conv_BoolToByte_ReturnValue) == 0x0001D0, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_Conv_BoolToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, K2Node_MakeStruct_BTL_ADD_ANIM_CAM_TASK_DATA) == 0x0001D8, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::K2Node_MakeStruct_BTL_ADD_ANIM_CAM_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, K2Node_MakeStruct_BtlTaskData) == 0x000218, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_IsValid_ReturnValue) == 0x000248, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_MakeVector_ReturnValue) == 0x00024C, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000258, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000290, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_FMax_ReturnValue) == 0x000330, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_MakeTransform_ReturnValue) == 0x000340, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000370, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x000378, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000380, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddAnimationCameraTask, CallFunc_GetPecID_retValue) == 0x000388, "Member 'BattleActionTaskFactory_C_AddAnimationCameraTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCallSummonTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddCallSummonTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0210(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCallSummonTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCallSummonTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCallSummonTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddCallSummonTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, CallFunc_MakeVector_ReturnValue) == 0x000200, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000210, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000240, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSummonTask, CallFunc_GetPecID_retValue) == 0x000248, "Member 'BattleActionTaskFactory_C_AddCallSummonTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.Debug_IsDamage0
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_Debug_IsDamage0 final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetMainInterface_AsBPI_Main_Interface;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckBattleDebugFlag_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNKM_retValue;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHero_retValue;                          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag_ReturnValue_1;    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_Debug_IsDamage0) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_Debug_IsDamage0");
static_assert(sizeof(BattleActionTaskFactory_C_Debug_IsDamage0) == 0x000030, "Wrong size on BattleActionTaskFactory_C_Debug_IsDamage0");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, PartyIndex) == 0x000000, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, RetValue) == 0x000004, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_GetMainInterface_AsBPI_Main_Interface) == 0x000008, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_GetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_GetPartySystem_retValue) == 0x000018, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_BI_CheckBattleDebugFlag_ReturnValue) == 0x000020, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_BI_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_IsNKM_retValue) == 0x000021, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_IsNKM_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_IsHero_retValue) == 0x000022, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_IsHero_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_IsEnemy_retValue) == 0x000023, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_BI_CheckBattleDebugFlag_ReturnValue_1) == 0x000025, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_BI_CheckBattleDebugFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_BooleanAND_ReturnValue_1) == 0x000027, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_Debug_IsDamage0, CallFunc_BooleanOR_ReturnValue_1) == 0x000028, "Member 'BattleActionTaskFactory_C_Debug_IsDamage0::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCallSkillEventTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddCallSkillEventTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Step;                                              // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainSec;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0038(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0068(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0170(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01A0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCallSkillEventTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCallSkillEventTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCallSkillEventTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddCallSkillEventTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, Step) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::Step' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, RemainSec) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::RemainSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, Lo_Data2) == 0x000038, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, Lo_Data) == 0x000068, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000170, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000240, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCallSkillEventTask, CallFunc_GetPecID_retValue) == 0x000248, "Member 'BattleActionTaskFactory_C_AddCallSkillEventTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitMoveTask
// 0x0270 (0x0270 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitMoveTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveTargetPos;                                     // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookTargetPos;                                     // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookSpeed;                                         // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMoveFinish;                                    // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0050(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0080(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0150(0x0030)()
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0188(0x0030)()
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitMoveTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitMoveTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitMoveTask) == 0x000270, "Wrong size on BattleActionTaskFactory_C_AddUnitMoveTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, MoveTargetPos) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::MoveTargetPos' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, LookTargetPos) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::LookTargetPos' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, MoveTime) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::MoveTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, LookSpeed) == 0x000040, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::LookSpeed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, WaitMoveFinish) == 0x000044, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::WaitMoveFinish' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, RetPecID) == 0x000048, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, Lo_Data2) == 0x000050, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, Lo_Data) == 0x000080, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, Param_Lo_Desc) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, K2Node_MakeStruct_BtlTaskData) == 0x000150, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, CallFunc_SelectFloat_ReturnValue) == 0x000180, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000188, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000260, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitMoveTask, CallFunc_GetPecID_retValue) == 0x000268, "Member 'BattleActionTaskFactory_C_AddUnitMoveTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDisplayFadeTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddDisplayFadeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsFadeOut;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsWhite;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationSec;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddDisplayFadeTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDisplayFadeTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddDisplayFadeTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddDisplayFadeTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, IsFadeOut) == 0x000020, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, IsWhite) == 0x000021, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::IsWhite' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, DurationSec) == 0x000024, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::DurationSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDisplayFadeTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddDisplayFadeTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.SetOriginTransform
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_SetOriginTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_SetOriginTransform) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_SetOriginTransform");
static_assert(sizeof(BattleActionTaskFactory_C_SetOriginTransform) == 0x000030, "Wrong size on BattleActionTaskFactory_C_SetOriginTransform");
static_assert(offsetof(BattleActionTaskFactory_C_SetOriginTransform, Transform) == 0x000000, "Member 'BattleActionTaskFactory_C_SetOriginTransform::Transform' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetExistTaskNum
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_GetExistTaskNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_GetExistTaskNum) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_GetExistTaskNum");
static_assert(sizeof(BattleActionTaskFactory_C_GetExistTaskNum) == 0x000008, "Wrong size on BattleActionTaskFactory_C_GetExistTaskNum");
static_assert(offsetof(BattleActionTaskFactory_C_GetExistTaskNum, RetValue) == 0x000000, "Member 'BattleActionTaskFactory_C_GetExistTaskNum::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetExistTaskNum, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BattleActionTaskFactory_C_GetExistTaskNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.SpawnActionTaskActor_Old
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_SpawnActionTaskActor_Old final
{
public:
	struct FBtlTaskDesc                           InDesc;                                            // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<int32>                                 TaskWaitList;                                      // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Data;                                              // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    RetValue;                                          // 0x00C8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_SpawnActionTaskActor_Old");
static_assert(sizeof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old) == 0x000110, "Wrong size on BattleActionTaskFactory_C_SpawnActionTaskActor_Old");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, InDesc) == 0x000000, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::InDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, TaskWaitList) == 0x0000A0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::TaskWaitList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, ParentName) == 0x0000B0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, Data) == 0x0000C0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, RetValue) == 0x0000C8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, Temp_int_Variable) == 0x0000D0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_GetMainWork_retValue) == 0x0000D8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F0, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F8, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_SpawnActionTaskActor_Old, CallFunc_Array_Add_ReturnValue_1) == 0x000104, "Member 'BattleActionTaskFactory_C_SpawnActionTaskActor_Old::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.CheckTask_Old
// 0x0048 (0x0048 - 0x0000)
struct BattleActionTaskFactory_C_CheckTask_Old final
{
public:
	class ABattleActionTask_C*                    Lo_Task;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_CheckTask_Old) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_CheckTask_Old");
static_assert(sizeof(BattleActionTaskFactory_C_CheckTask_Old) == 0x000048, "Wrong size on BattleActionTaskFactory_C_CheckTask_Old");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, Lo_Task) == 0x000000, "Member 'BattleActionTaskFactory_C_CheckTask_Old::Lo_Task' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleActionTaskFactory_C_CheckTask_Old::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000014, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000030, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000044, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckTask_Old, CallFunc_IsFinished_retValue) == 0x000045, "Member 'BattleActionTaskFactory_C_CheckTask_Old::CallFunc_IsFinished_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetTaskForPecID_Old
// 0x0058 (0x0058 - 0x0000)
struct BattleActionTaskFactory_C_GetTaskForPecID_Old final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_GetTaskForPecID_Old) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetTaskForPecID_Old");
static_assert(sizeof(BattleActionTaskFactory_C_GetTaskForPecID_Old) == 0x000058, "Wrong size on BattleActionTaskFactory_C_GetTaskForPecID_Old");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, RetValue) == 0x000008, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000024, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Array_Get_Item) == 0x000030, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00003C, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000040, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskForPecID_Old, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000050, "Member 'BattleActionTaskFactory_C_GetTaskForPecID_Old::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.IsExistTaskForPecID
// 0x0018 (0x0018 - 0x0000)
struct BattleActionTaskFactory_C_IsExistTaskForPecID final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Length;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_IsExistTaskForPecID) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_IsExistTaskForPecID");
static_assert(sizeof(BattleActionTaskFactory_C_IsExistTaskForPecID) == 0x000018, "Wrong size on BattleActionTaskFactory_C_IsExistTaskForPecID");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, RetValue) == 0x000004, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, Lo_Length) == 0x000008, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::Lo_Length' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, CallFunc_Less_IntInt_ReturnValue) == 0x00000D, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, CallFunc_Greater_IntInt_ReturnValue) == 0x00000E, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, CallFunc_BooleanAND_ReturnValue_1) == 0x000010, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsExistTaskForPecID, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_IsExistTaskForPecID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.DestroyTaskForPecID_Old
// 0x0060 (0x0060 - 0x0000)
struct BattleActionTaskFactory_C_DestroyTaskForPecID_Old final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPecID_retValue_1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_DestroyTaskForPecID_Old");
static_assert(sizeof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old) == 0x000060, "Wrong size on BattleActionTaskFactory_C_DestroyTaskForPecID_Old");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, IsSuccess) == 0x000004, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::IsSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000010, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00001C, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Array_RemoveItem_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_GetPecID_retValue) == 0x000034, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000038, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003D, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000050, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_GetPecID_retValue_1) == 0x000054, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_GetPecID_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyTaskForPecID_Old, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BattleActionTaskFactory_C_DestroyTaskForPecID_Old::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDecalTask
// 0x0390 (0x0390 - 0x0000)
struct BattleActionTaskFactory_C_AddDecalTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x004C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideLifeSec;                                   // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         LocationType;                                      // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0068(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPutOnWorld;                                      // 0x0074(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0xB];                                       // 0x0075(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             WorldRelativeTransform;                            // 0x0080(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x00B4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsolutelyNoRotation;                              // 0x00B8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x00B9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> SkillActionBase;                                   // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x00D0(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x00D8(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0108(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0140(0x00A0)(Edit, BlueprintVisible)
	struct FBTL_ADD_DECAL_TASK_DATA               K2Node_MakeStruct_BTL_ADD_DECAL_TASK_DATA;         // 0x01E0(0x0040)(HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_BoolToByte_ReturnValue;              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0238(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0268(0x0030)()
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x02A0(0x00A0)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABTL_ADD_DECAL_TASK_OBJ_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddDecalTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDecalTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddDecalTask) == 0x000390, "Wrong size on BattleActionTaskFactory_C_AddDecalTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDecalTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDecalTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddDecalTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, DecalMaterial) == 0x000028, "Member 'BattleActionTaskFactory_C_AddDecalTask::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, MaterialAnimSetting) == 0x000030, "Member 'BattleActionTaskFactory_C_AddDecalTask::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, DecalSize) == 0x000040, "Member 'BattleActionTaskFactory_C_AddDecalTask::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, OffsetLocation) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddDecalTask::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, AttachPointName) == 0x000058, "Member 'BattleActionTaskFactory_C_AddDecalTask::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, OverrideLifeSec) == 0x000060, "Member 'BattleActionTaskFactory_C_AddDecalTask::OverrideLifeSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, LocationType) == 0x000064, "Member 'BattleActionTaskFactory_C_AddDecalTask::LocationType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, Rotation) == 0x000068, "Member 'BattleActionTaskFactory_C_AddDecalTask::Rotation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, IsPutOnWorld) == 0x000074, "Member 'BattleActionTaskFactory_C_AddDecalTask::IsPutOnWorld' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, WorldRelativeTransform) == 0x000080, "Member 'BattleActionTaskFactory_C_AddDecalTask::WorldRelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, RotationRandMin) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddDecalTask::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, RotationRandMax) == 0x0000B4, "Member 'BattleActionTaskFactory_C_AddDecalTask::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, AbsolutelyNoRotation) == 0x0000B8, "Member 'BattleActionTaskFactory_C_AddDecalTask::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CastOnlyStaticMesh) == 0x0000B9, "Member 'BattleActionTaskFactory_C_AddDecalTask::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, SkillActionBase) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddDecalTask::SkillActionBase' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, RetPecID) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddDecalTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, Lo_Data2) == 0x0000D8, "Member 'BattleActionTaskFactory_C_AddDecalTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, Lo_Data) == 0x000108, "Member 'BattleActionTaskFactory_C_AddDecalTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, Param_Lo_Desc) == 0x000140, "Member 'BattleActionTaskFactory_C_AddDecalTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, K2Node_MakeStruct_BTL_ADD_DECAL_TASK_DATA) == 0x0001E0, "Member 'BattleActionTaskFactory_C_AddDecalTask::K2Node_MakeStruct_BTL_ADD_DECAL_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CallFunc_Conv_BoolToByte_ReturnValue) == 0x000220, "Member 'BattleActionTaskFactory_C_AddDecalTask::CallFunc_Conv_BoolToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CallFunc_Conv_NameToString_ReturnValue) == 0x000228, "Member 'BattleActionTaskFactory_C_AddDecalTask::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, K2Node_MakeStruct_BtlTaskData) == 0x000238, "Member 'BattleActionTaskFactory_C_AddDecalTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000268, "Member 'BattleActionTaskFactory_C_AddDecalTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0002A0, "Member 'BattleActionTaskFactory_C_AddDecalTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CallFunc_MakeTransform_ReturnValue) == 0x000340, "Member 'BattleActionTaskFactory_C_AddDecalTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000370, "Member 'BattleActionTaskFactory_C_AddDecalTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x000378, "Member 'BattleActionTaskFactory_C_AddDecalTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000380, "Member 'BattleActionTaskFactory_C_AddDecalTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalTask, CallFunc_GetPecID_retValue) == 0x000388, "Member 'BattleActionTaskFactory_C_AddDecalTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddHitLightTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddHitLightTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                SkillInstance;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0220(0x0030)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddHitLightTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddHitLightTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddHitLightTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddHitLightTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddHitLightTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddHitLightTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, SkillInstance) == 0x000020, "Member 'BattleActionTaskFactory_C_AddHitLightTask::SkillInstance' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, TargetIndex) == 0x000028, "Member 'BattleActionTaskFactory_C_AddHitLightTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddHitLightTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddHitLightTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddHitLightTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddHitLightTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddHitLightTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_AddHitLightTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000200, "Member 'BattleActionTaskFactory_C_AddHitLightTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, CallFunc_Conv_NameToString_ReturnValue) == 0x000208, "Member 'BattleActionTaskFactory_C_AddHitLightTask::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, CallFunc_GetPecID_retValue) == 0x000218, "Member 'BattleActionTaskFactory_C_AddHitLightTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddHitLightTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000220, "Member 'BattleActionTaskFactory_C_AddHitLightTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlayCamShakeByName
// 0x0230 (0x0230 - 0x0000)
struct BattleActionTaskFactory_C_AddPlayCamShakeByName final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 RowName;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0038(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0068(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0180(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlayCamShakeByName) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlayCamShakeByName");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlayCamShakeByName) == 0x000230, "Wrong size on BattleActionTaskFactory_C_AddPlayCamShakeByName");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, RowName) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::RowName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, Scale) == 0x000030, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::Scale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, RetPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, Lo_Data2) == 0x000038, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, Lo_Data) == 0x000068, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, CallFunc_SpawnActionTaskActor_retValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, K2Node_MakeStruct_BtlTaskDesc) == 0x000180, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayCamShakeByName, CallFunc_GetPecID_retValue) == 0x000220, "Member 'BattleActionTaskFactory_C_AddPlayCamShakeByName::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSkillLightTask
// 0x02E0 (0x02E0 - 0x0000)
struct BattleActionTaskFactory_C_AddSkillLightTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         LightParam;                                        // 0x0020(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0090(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x00C0(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00F0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0190(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0260(0x0030)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABTL_ADD_SKILL_LIGHT_TASK_OBJ_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddSkillLightTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSkillLightTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddSkillLightTask) == 0x0002E0, "Wrong size on BattleActionTaskFactory_C_AddSkillLightTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, LightParam) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::LightParam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, RetPecID) == 0x000088, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, Lo_Data2) == 0x000090, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, Lo_Data) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, Param_Lo_Desc) == 0x0000F0, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, K2Node_MakeStruct_BtlTaskData) == 0x000190, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000260, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, CallFunc_MakeTransform_ReturnValue) == 0x000290, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002C0, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002C8, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, CallFunc_SpawnActionTaskActor_retValue) == 0x0002D0, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSkillLightTask, CallFunc_GetPecID_retValue) == 0x0002D8, "Member 'BattleActionTaskFactory_C_AddSkillLightTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddExtActMessTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddExtActMessTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            ExtraAction;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0038(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0068(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0170(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01A0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddExtActMessTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddExtActMessTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddExtActMessTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddExtActMessTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, ExtraAction) == 0x000020, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, Time) == 0x000024, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::Time' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, ActorIndex) == 0x000028, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, TargetIndex) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, Lo_Data2) == 0x000038, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, Lo_Data) == 0x000068, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000170, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000240, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddExtActMessTask, CallFunc_GetPecID_retValue) == 0x000248, "Member 'BattleActionTaskFactory_C_AddExtActMessTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDecalToEffectTask
// 0x0340 (0x0340 - 0x0000)
struct BattleActionTaskFactory_C_AddDecalToEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         LoopTimes;                                         // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CycleSec;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0054(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EffectID;                                          // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          AbsolutelyNoRotatioin;                             // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> SkillActionBase;                                   // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABTL_ADD_DECAL_TASK_OBJ_C*              Lo_DecalTask;                                      // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0098(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x00C8(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0100(0x00A0)(Edit, BlueprintVisible)
	struct FBTL_ADD_DECAL_TASK_DATA               K2Node_MakeStruct_BTL_ADD_DECAL_TASK_DATA;         // 0x01A0(0x0040)(HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x01E0(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0210(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0240(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABTL_ADD_DECAL_TASK_OBJ_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddDecalToEffectTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDecalToEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddDecalToEffectTask) == 0x000340, "Wrong size on BattleActionTaskFactory_C_AddDecalToEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, DecalMaterial) == 0x000020, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, MaterialAnimSetting) == 0x000028, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, LoopTimes) == 0x000038, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::LoopTimes' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, CycleSec) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::CycleSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, Rotation) == 0x000040, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::Rotation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, RotationRandMin) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, RotationRandMax) == 0x000050, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, Size) == 0x000054, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::Size' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, EffectID) == 0x000060, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::EffectID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, AbsolutelyNoRotatioin) == 0x000070, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::AbsolutelyNoRotatioin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, CastOnlyStaticMesh) == 0x000071, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, SkillActionBase) == 0x000078, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::SkillActionBase' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, RetPecID) == 0x000088, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, Lo_DecalTask) == 0x000090, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::Lo_DecalTask' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, Lo_Data2) == 0x000098, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, Lo_Data) == 0x0000C8, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, Param_Lo_Desc) == 0x000100, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, K2Node_MakeStruct_BTL_ADD_DECAL_TASK_DATA) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::K2Node_MakeStruct_BTL_ADD_DECAL_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, K2Node_MakeStruct_BtlTaskData) == 0x0001E0, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000210, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000240, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, CallFunc_SpawnActionTaskActor_retValue) == 0x0002E0, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, CallFunc_MakeTransform_ReturnValue) == 0x0002F0, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, CallFunc_GetPecID_retValue) == 0x000320, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000328, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDecalToEffectTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x000330, "Member 'BattleActionTaskFactory_C_AddDecalToEffectTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSetUnitShake
// 0x0260 (0x0260 - 0x0000)
struct BattleActionTaskFactory_C_AddSetUnitShake final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Magnitude;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitShakeFinish;                                   // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0038(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0068(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0178(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0xC];                                      // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddSetUnitShake) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSetUnitShake");
static_assert(sizeof(BattleActionTaskFactory_C_AddSetUnitShake) == 0x000260, "Wrong size on BattleActionTaskFactory_C_AddSetUnitShake");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, Magnitude) == 0x000024, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::Magnitude' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, Time) == 0x000028, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::Time' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, WaitShakeFinish) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::WaitShakeFinish' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, Lo_Data2) == 0x000038, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, Lo_Data) == 0x000068, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, CallFunc_SelectFloat_ReturnValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, K2Node_MakeStruct_BtlTaskData_1) == 0x000178, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, CallFunc_SpawnActionTaskActor_retValue) == 0x0001A8, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, CallFunc_GetPecID_retValue) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetUnitShake, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddSetUnitShake::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUtilIconTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddUtilIconTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Type;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipping;                                        // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0038(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0068(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0140(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0180(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01B0(0x00A0)()
};
static_assert(alignof(BattleActionTaskFactory_C_AddUtilIconTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUtilIconTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUtilIconTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddUtilIconTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, Type) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, PlayRate) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, IsSkipping) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::IsSkipping' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, Lo_Data2) == 0x000038, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, Lo_Data) == 0x000068, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, Param_Lo_Desc) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, K2Node_MakeStruct_BtlTaskData) == 0x000140, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, CallFunc_GetPecID_retValue) == 0x000178, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000180, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUtilIconTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001B0, "Member 'BattleActionTaskFactory_C_AddUtilIconTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlaySEUnitAttachTask
// 0x0270 (0x0270 - 0x0000)
struct BattleActionTaskFactory_C_AddPlaySEUnitAttachTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SEName;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Data;                                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IgnorePlayRate;                                    // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0058(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0088(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00C0(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0160(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0190(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlaySEUnitAttachTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask) == 0x000270, "Wrong size on BattleActionTaskFactory_C_AddPlaySEUnitAttachTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, SEName) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::SEName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, Data) == 0x000030, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, TargetIndex) == 0x000038, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, SocketName) == 0x000040, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, IgnorePlayRate) == 0x000050, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, RetPecID) == 0x000054, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, Lo_Data2) == 0x000058, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, Lo_Data) == 0x000088, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, Param_Lo_Desc) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, K2Node_MakeStruct_BtlTaskData) == 0x000160, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000190, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000260, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlaySEUnitAttachTask, CallFunc_GetPecID_retValue) == 0x000268, "Member 'BattleActionTaskFactory_C_AddPlaySEUnitAttachTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetMainInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_GetMainInterface final
{
public:
	TScriptInterface<class IBPI_MainInterface>    AsBPI_Main_Interface;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    K2Node_DynamicCast_AsBPI_Main_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_GetMainInterface) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetMainInterface");
static_assert(sizeof(BattleActionTaskFactory_C_GetMainInterface) == 0x000030, "Wrong size on BattleActionTaskFactory_C_GetMainInterface");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainInterface, AsBPI_Main_Interface) == 0x000000, "Member 'BattleActionTaskFactory_C_GetMainInterface::AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_GetMainInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainInterface, K2Node_DynamicCast_AsBPI_Main_Interface) == 0x000018, "Member 'BattleActionTaskFactory_C_GetMainInterface::K2Node_DynamicCast_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetMainInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleActionTaskFactory_C_GetMainInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddMagGaugeTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddMagGaugeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AddValue;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0028(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0058(0x0030)(Edit, BlueprintVisible)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddMagGaugeTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddMagGaugeTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddMagGaugeTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddMagGaugeTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, AddValue) == 0x000020, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::AddValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, Lo_Data2) == 0x000028, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, Lo_Data) == 0x000058, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddMagGaugeTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddMagGaugeTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeAddMagGauge
// 0x0138 (0x0138 - 0x0000)
struct BattleActionTaskFactory_C_MakeAddMagGauge final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AddMagGauge;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RetPecID;                                          // 0x0028(0x0010)(Parm, OutParm)
	class FString                                 Lo_ActorSocketName;                                // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         Lo_Gravity;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ExtensionDist;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BulletSpeed;                                    // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EFFECT_FORM                             Lo_EffectForm;                                     // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_TargetSocketName;                               // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         Lo_LifeSec;                                        // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TransPriority;                                  // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            Lo_Action;                                         // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_Time;                                           // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SkillId;                                        // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Lo_Bst;                                            // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_name;                                           // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_Index;                                          // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0098(0x0010)(Edit, BlueprintVisible)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddMagGaugeTask_retPecID;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00D0(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0100(0x0030)()
	int32                                         CallFunc_AddPlayEffectTask2_retPecID;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeAddMagGauge) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeAddMagGauge");
static_assert(sizeof(BattleActionTaskFactory_C_MakeAddMagGauge) == 0x000138, "Wrong size on BattleActionTaskFactory_C_MakeAddMagGauge");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, AddMagGauge) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::AddMagGauge' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, TargetIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_ActorSocketName) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_ActorSocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_Gravity) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_Gravity' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_ExtensionDist) == 0x00004C, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_ExtensionDist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_BulletSpeed) == 0x000050, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_BulletSpeed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_EffectForm) == 0x000054, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_EffectForm' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_TargetSocketName) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_TargetSocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_LifeSec) == 0x000068, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_LifeSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_TransPriority) == 0x00006C, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_TransPriority' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_Action) == 0x000070, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_Action' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_Time) == 0x000074, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_Time' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_SkillId) == 0x000078, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_Bst) == 0x00007C, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_Bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_name) == 0x000080, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_Index) == 0x000090, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, Lo_WaitTaskList) == 0x000098, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000A8, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_AddMagGaugeTask_retPecID) == 0x0000B8, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_AddMagGaugeTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_SelectFloat_ReturnValue) == 0x0000C0, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_MakeVector_ReturnValue) == 0x0000C4, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, K2Node_MakeStruct_BtlTaskData) == 0x0000D0, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, K2Node_MakeStruct_BtlTaskData_1) == 0x000100, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_AddPlayEffectTask2_retPecID) == 0x000130, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_AddPlayEffectTask2_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeAddMagGauge, CallFunc_Array_Add_ReturnValue_1) == 0x000134, "Member 'BattleActionTaskFactory_C_MakeAddMagGauge::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.CommandCameraStack
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_CommandCameraStack final
{
public:
	TArray<int32>                                 Lo_Task;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_AddSetUnitMotion_retPecID;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPecID_retValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_CommandCameraStack) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_CommandCameraStack");
static_assert(sizeof(BattleActionTaskFactory_C_CommandCameraStack) == 0x000038, "Wrong size on BattleActionTaskFactory_C_CommandCameraStack");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, Lo_Task) == 0x000000, "Member 'BattleActionTaskFactory_C_CommandCameraStack::Lo_Task' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_AddSetUnitMotion_retPecID) == 0x000010, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_AddSetUnitMotion_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_SpawnActionTaskActor_retValue) == 0x000020, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_GetPecID_retValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CommandCameraStack, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_CommandCameraStack::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCamRailCommandTask
// 0x0250 (0x0250 - 0x0000)
struct BattleActionTaskFactory_C_AddCamRailCommandTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CAM_TYPE                                Type;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InterpWait;                                        // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StopWait;                                          // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaWait;                                         // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01A0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCamRailCommandTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCamRailCommandTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCamRailCommandTask) == 0x000250, "Wrong size on BattleActionTaskFactory_C_AddCamRailCommandTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, Type) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, InterpWait) == 0x000025, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::InterpWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, StopWait) == 0x000026, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::StopWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, DeltaWait) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::DeltaWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, CallFunc_BooleanOR_ReturnValue) == 0x000190, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, CallFunc_SelectFloat_ReturnValue) == 0x000194, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001A0, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000240, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCamRailCommandTask, CallFunc_GetPecID_retValue) == 0x000248, "Member 'BattleActionTaskFactory_C_AddCamRailCommandTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddReichiPointTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_AddReichiPointTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AddValue;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0160(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0190(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddReichiPointTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddReichiPointTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddReichiPointTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_AddReichiPointTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, AddValue) == 0x000020, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::AddValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, PlayRate) == 0x000024, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000160, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000190, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddReichiPointTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_AddReichiPointTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPlayAbsorptionEffectTask
// 0x0270 (0x0270 - 0x0000)
struct BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AbsorptionPointSocket;                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AbsorptionPointOffset;                             // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           AbsorptionRadius;                                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReverse;                                         // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0050(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0080(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0160(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0190(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x01C0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask) == 0x000270, "Wrong size on BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, ActorIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, TargetIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, AbsorptionPointSocket) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::AbsorptionPointSocket' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, AbsorptionPointOffset) == 0x000030, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::AbsorptionPointOffset' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, AbsorptionRadius) == 0x000040, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::AbsorptionRadius' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, IsReverse) == 0x000048, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::IsReverse' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, RetPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, Lo_Data2) == 0x000050, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, Lo_Data) == 0x000080, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, Param_Lo_Desc) == 0x0000B0, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, CallFunc_Conv_NameToString_ReturnValue) == 0x000150, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, K2Node_MakeStruct_BtlTaskData) == 0x000160, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000190, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0001C0, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000260, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask, CallFunc_GetPecID_retValue) == 0x000268, "Member 'BattleActionTaskFactory_C_AddPlayAbsorptionEffectTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BeginHitStopTask
// 0x0240 (0x0240 - 0x0000)
struct BattleActionTaskFactory_C_BeginHitStopTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_Data2;                                          // 0x0030(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskData                           Lo_Data;                                           // 0x0060(0x0030)(Edit, BlueprintVisible)
	struct FBtlTaskDesc                           Param_Lo_Desc;                                     // 0x0090(0x00A0)(Edit, BlueprintVisible)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0130(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0160(0x00A0)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0200(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BeginHitStopTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BeginHitStopTask");
static_assert(sizeof(BattleActionTaskFactory_C_BeginHitStopTask) == 0x000240, "Wrong size on BattleActionTaskFactory_C_BeginHitStopTask");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, Lo_Data2) == 0x000030, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::Lo_Data2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, Lo_Data) == 0x000060, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, Param_Lo_Desc) == 0x000090, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::Param_Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, K2Node_MakeStruct_BtlTaskData) == 0x000130, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000160, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000200, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000230, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BeginHitStopTask, CallFunc_GetPecID_retValue) == 0x000238, "Member 'BattleActionTaskFactory_C_BeginHitStopTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCameraDOFTask
// 0x0180 (0x0180 - 0x0000)
struct BattleActionTaskFactory_C_AddCameraDOFTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         FocalDistance;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DurationSec;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0070(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x00A0(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x00D0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCameraDOFTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCameraDOFTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCameraDOFTask) == 0x000180, "Wrong size on BattleActionTaskFactory_C_AddCameraDOFTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, FocalDistance) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::FocalDistance' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, Scale) == 0x000024, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::Scale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, DurationSec) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::DurationSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, K2Node_MakeStruct_BtlTaskData) == 0x000070, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0000A0, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCameraDOFTask, CallFunc_GetPecID_retValue) == 0x000178, "Member 'BattleActionTaskFactory_C_AddCameraDOFTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.UpdateTask
// 0x01B0 (0x01B0 - 0x0000)
struct BattleActionTaskFactory_C_UpdateTask final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_DeltaSec;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugBattleTaskInfo                   K2Node_MakeStruct_DebugBattleTaskInfo;             // 0x0050(0x00E0)()
	float                                         CallFunc_GetBattlePlayRate_PlayRate;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable; // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateProcessTaskList_OverrunSec;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateProcessTaskList_ForceLoop;          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw_1;     // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw_2;     // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_TASK_COM                                CallFunc_GetSendData_Command;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSendData_PecID;                        // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           CallFunc_GetSendData_SendData;                     // 0x0170(0x0030)()
	bool                                          CallFunc_GetSendData_Valid;                        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue_1;                    // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_UpdateTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_UpdateTask");
static_assert(sizeof(BattleActionTaskFactory_C_UpdateTask) == 0x0001B0, "Wrong size on BattleActionTaskFactory_C_UpdateTask");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, DeltaSec) == 0x000000, "Member 'BattleActionTaskFactory_C_UpdateTask::DeltaSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, Lo_DeltaSec) == 0x000004, "Member 'BattleActionTaskFactory_C_UpdateTask::Lo_DeltaSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleActionTaskFactory_C_UpdateTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw) == 0x000020, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BattleActionTaskFactory_C_UpdateTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, K2Node_MakeStruct_DebugBattleTaskInfo) == 0x000050, "Member 'BattleActionTaskFactory_C_UpdateTask::K2Node_MakeStruct_DebugBattleTaskInfo' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_GetBattlePlayRate_PlayRate) == 0x000130, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_GetBattlePlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000134, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, Temp_int_Variable) == 0x000138, "Member 'BattleActionTaskFactory_C_UpdateTask::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable) == 0x00013C, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_UpdateProcessTaskList_OverrunSec) == 0x000140, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_UpdateProcessTaskList_OverrunSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_UpdateProcessTaskList_ForceLoop) == 0x000144, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_UpdateProcessTaskList_ForceLoop' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw_1) == 0x000145, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw_2) == 0x000146, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000147, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_BooleanOR_ReturnValue) == 0x00014C, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Array_Get_Item) == 0x000158, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_Array_AddUnique_ReturnValue) == 0x000164, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_GetSendData_Command) == 0x000168, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_GetSendData_Command' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_GetSendData_PecID) == 0x00016C, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_GetSendData_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_GetSendData_SendData) == 0x000170, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_GetSendData_SendData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_GetSendData_Valid) == 0x0001A0, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_GetSendData_Valid' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_IsFinished_retValue) == 0x0001A1, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_IsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateTask, CallFunc_IsFinished_retValue_1) == 0x0001A2, "Member 'BattleActionTaskFactory_C_UpdateTask::CallFunc_IsFinished_retValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetTaskTypeTaskCnt
// 0x0058 (0x0058 - 0x0000)
struct BattleActionTaskFactory_C_GetTaskTypeTaskCnt final
{
public:
	E_BTL_TASK_COM                                TaskType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetCnt;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Cnt;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetTaskTypeTaskCnt");
static_assert(sizeof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt) == 0x000058, "Wrong size on BattleActionTaskFactory_C_GetTaskTypeTaskCnt");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, TaskType) == 0x000000, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::TaskType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, RetCnt) == 0x000004, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::RetCnt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, Lo_Cnt) == 0x000008, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, Temp_int_Variable) == 0x000010, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, Temp_int_Variable_1) == 0x000028, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Array_Get_Item) == 0x000030, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003D, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00004D, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetTaskTypeTaskCnt, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'BattleActionTaskFactory_C_GetTaskTypeTaskCnt::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPressIconTask
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_AddPressIconTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PRESS_TYPE                              PressType;                                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoCalcAndApply;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0030(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPressIconTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddPressIconTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddPressIconTask) == 0x000110, "Wrong size on BattleActionTaskFactory_C_AddPressIconTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPressIconTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPressIconTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, PlayRate) == 0x000020, "Member 'BattleActionTaskFactory_C_AddPressIconTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, PressType) == 0x000024, "Member 'BattleActionTaskFactory_C_AddPressIconTask::PressType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, DoCalcAndApply) == 0x000025, "Member 'BattleActionTaskFactory_C_AddPressIconTask::DoCalcAndApply' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPressIconTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, K2Node_MakeStruct_BtlTaskData) == 0x000030, "Member 'BattleActionTaskFactory_C_AddPressIconTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_AddPressIconTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000100, "Member 'BattleActionTaskFactory_C_AddPressIconTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPressIconTask, CallFunc_GetPecID_retValue) == 0x000108, "Member 'BattleActionTaskFactory_C_AddPressIconTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUpliftingTask
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_AddUpliftingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0030(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUpliftingTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUpliftingTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUpliftingTask) == 0x000110, "Wrong size on BattleActionTaskFactory_C_AddUpliftingTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, Sw) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, K2Node_MakeStruct_BtlTaskData) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000100, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUpliftingTask, CallFunc_GetPecID_retValue) == 0x000108, "Member 'BattleActionTaskFactory_C_AddUpliftingTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.DestroyAllTask
// 0x0020 (0x0020 - 0x0000)
struct BattleActionTaskFactory_C_DestroyAllTask final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_DestroyAllTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_DestroyAllTask");
static_assert(sizeof(BattleActionTaskFactory_C_DestroyAllTask) == 0x000020, "Wrong size on BattleActionTaskFactory_C_DestroyAllTask");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyAllTask, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleActionTaskFactory_C_DestroyAllTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyAllTask, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleActionTaskFactory_C_DestroyAllTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyAllTask, CallFunc_Array_Get_Item) == 0x000008, "Member 'BattleActionTaskFactory_C_DestroyAllTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyAllTask, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_DestroyAllTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyAllTask, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_DestroyAllTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyAllTask, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_DestroyAllTask::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroyAllTask, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_DestroyAllTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddFirstSettingTask
// 0x0170 (0x0170 - 0x0000)
struct BattleActionTaskFactory_C_AddFirstSettingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0060(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0090(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x00C0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddFirstSettingTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddFirstSettingTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddFirstSettingTask) == 0x000170, "Wrong size on BattleActionTaskFactory_C_AddFirstSettingTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, K2Node_MakeStruct_BtlTaskData) == 0x000060, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000090, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddFirstSettingTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddFirstSettingTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddBeHomeSideAllTask
// 0x0070 (0x0070 - 0x0000)
struct BattleActionTaskFactory_C_AddBeHomeSideAllTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_List;                                           // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_WaitPecID;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeTask_RetPecID;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideActList_retValue;                  // 0x0060(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleActionTaskFactory_C_AddBeHomeSideAllTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_AddBeHomeSideAllTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddBeHomeSideAllTask) == 0x000070, "Wrong size on BattleActionTaskFactory_C_AddBeHomeSideAllTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, Side) == 0x000020, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::Side' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, Lo_List) == 0x000028, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, Lo_WaitPecID) == 0x000038, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::Lo_WaitPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, CallFunc_AddBeHomeTask_RetPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::CallFunc_AddBeHomeTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, CallFunc_GetPartySystem_retValue) == 0x000058, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeSideAllTask, CallFunc_GetSideActList_retValue) == 0x000060, "Member 'BattleActionTaskFactory_C_AddBeHomeSideAllTask::CallFunc_GetSideActList_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitVisibilitySideAllTask
// 0x0070 (0x0070 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_List;                                           // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_WaitPecID;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideActList_retValue;                  // 0x0060(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask) == 0x000070, "Wrong size on BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, Side) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::Side' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, Sw) == 0x000021, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, Lo_List) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, Lo_WaitPecID) == 0x000038, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::Lo_WaitPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, CallFunc_GetPartySystem_retValue) == 0x000058, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask, CallFunc_GetSideActList_retValue) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUnitVisibilitySideAllTask::CallFunc_GetSideActList_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetNumEffType
// 0x0010 (0x0010 - 0x0000)
struct BattleActionTaskFactory_C_GetNumEffType final
{
public:
	int32                                         Hp;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mp;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Type;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_GetNumEffType) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_GetNumEffType");
static_assert(sizeof(BattleActionTaskFactory_C_GetNumEffType) == 0x000010, "Wrong size on BattleActionTaskFactory_C_GetNumEffType");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, Hp) == 0x000000, "Member 'BattleActionTaskFactory_C_GetNumEffType::Hp' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, Mp) == 0x000004, "Member 'BattleActionTaskFactory_C_GetNumEffType::Mp' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, Type) == 0x000008, "Member 'BattleActionTaskFactory_C_GetNumEffType::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'BattleActionTaskFactory_C_GetNumEffType::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, CallFunc_Less_IntInt_ReturnValue) == 0x00000A, "Member 'BattleActionTaskFactory_C_GetNumEffType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00000B, "Member 'BattleActionTaskFactory_C_GetNumEffType::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, CallFunc_Less_IntInt_ReturnValue_1) == 0x00000C, "Member 'BattleActionTaskFactory_C_GetNumEffType::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BattleActionTaskFactory_C_GetNumEffType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetNumEffType, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'BattleActionTaskFactory_C_GetNumEffType::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddBeHomeTask
// 0x0170 (0x0170 - 0x0000)
struct BattleActionTaskFactory_C_AddBeHomeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_WaitPecID;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0030(0x0030)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0090(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x00C0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddBeHomeTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddBeHomeTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddBeHomeTask) == 0x000170, "Wrong size on BattleActionTaskFactory_C_AddBeHomeTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, Lo_WaitPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::Lo_WaitPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, K2Node_MakeStruct_BtlTaskData) == 0x000030, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000090, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0000C0, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000160, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddBeHomeTask, CallFunc_GetPecID_retValue) == 0x000168, "Member 'BattleActionTaskFactory_C_AddBeHomeTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitVisibilityTask
// 0x0180 (0x0180 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitVisibilityTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ParticleInterlock;                                 // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DeactivateParticle;                                // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_WaitPecID;                                      // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0068(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0098(0x0030)()
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x00D0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitVisibilityTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitVisibilityTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitVisibilityTask) == 0x000180, "Wrong size on BattleActionTaskFactory_C_AddUnitVisibilityTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, Sw) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, ParticleInterlock) == 0x000025, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::ParticleInterlock' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, DeactivateParticle) == 0x000026, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::DeactivateParticle' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, Lo_WaitPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::Lo_WaitPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, K2Node_MakeStruct_BtlTaskData) == 0x000068, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000098, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitVisibilityTask, CallFunc_GetPecID_retValue) == 0x000178, "Member 'BattleActionTaskFactory_C_AddUnitVisibilityTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSetActorTransformTask
// 0x0180 (0x0180 - 0x0000)
struct BattleActionTaskFactory_C_AddSetActorTransformTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_WaitPecID;                                      // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0068(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0098(0x0030)()
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x00D0(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddSetActorTransformTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSetActorTransformTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddSetActorTransformTask) == 0x000180, "Wrong size on BattleActionTaskFactory_C_AddSetActorTransformTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, Transform) == 0x000030, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::Transform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, RetPecID) == 0x000060, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, Lo_WaitPecID) == 0x000064, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::Lo_WaitPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, K2Node_MakeStruct_BtlTaskData) == 0x000068, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000098, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, K2Node_MakeStruct_BtlTaskDesc) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000170, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSetActorTransformTask, CallFunc_GetPecID_retValue) == 0x000178, "Member 'BattleActionTaskFactory_C_AddSetActorTransformTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddSummonTsukuyomiTask
// 0x00E0 (0x00E0 - 0x0000)
struct BattleActionTaskFactory_C_AddSummonTsukuyomiTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0030(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddSummonTsukuyomiTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask) == 0x0000E0, "Wrong size on BattleActionTaskFactory_C_AddSummonTsukuyomiTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddSummonTsukuyomiTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddSummonTsukuyomiTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddSummonTsukuyomiTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000030, "Member 'BattleActionTaskFactory_C_AddSummonTsukuyomiTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask, CallFunc_SpawnActionTaskActor_retValue) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddSummonTsukuyomiTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddSummonTsukuyomiTask, CallFunc_GetPecID_retValue) == 0x0000D8, "Member 'BattleActionTaskFactory_C_AddSummonTsukuyomiTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDrawPlayerUpliftingGaugeTask
// 0x0140 (0x0140 - 0x0000)
struct BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsUplifting;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpendGaugeOnly;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0028(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0058(0x0030)()
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0090(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask) == 0x000140, "Wrong size on BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, IsUplifting) == 0x000020, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::IsUplifting' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, SpendGaugeOnly) == 0x000021, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::SpendGaugeOnly' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, K2Node_MakeStruct_BtlTaskData) == 0x000028, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000058, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000090, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000130, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask, CallFunc_GetPecID_retValue) == 0x000138, "Member 'BattleActionTaskFactory_C_AddDrawPlayerUpliftingGaugeTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeUpliftingTask
// 0x00C0 (0x00C0 - 0x0000)
struct BattleActionTaskFactory_C_MakeUpliftingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetPecID;                                          // 0x0028(0x0010)(Parm, OutParm)
	TArray<int32>                                 L_TargetList;                                      // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 L_list;                                            // 0x0048(0x0010)(Edit, BlueprintVisible)
	class FString                                 L_name;                                            // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          L_sw;                                              // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    L_side;                                            // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUpliftingTask_RetPecID;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x00A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeUpliftingTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeUpliftingTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeUpliftingTask) == 0x0000C0, "Wrong size on BattleActionTaskFactory_C_MakeUpliftingTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, Side) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::Side' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, Sw) == 0x000021, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, L_TargetList) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::L_TargetList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, L_list) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::L_list' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, L_name) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::L_name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, L_sw) == 0x000068, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::L_sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, L_side) == 0x000069, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::L_side' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_Array_Get_Item) == 0x000074, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x00007C, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000080, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID) == 0x000084, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_AddUpliftingTask_RetPecID) == 0x00008C, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_AddUpliftingTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_GetPartySystem_retValue) == 0x000098, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x0000A8, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeUpliftingTask, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BattleActionTaskFactory_C_MakeUpliftingTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddInfoMessByLabelTask
// 0x0120 (0x0120 - 0x0000)
struct BattleActionTaskFactory_C_AddInfoMessByLabelTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Label;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectSkillScriptMessage;                          // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0040(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0070(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddInfoMessByLabelTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddInfoMessByLabelTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddInfoMessByLabelTask) == 0x000120, "Wrong size on BattleActionTaskFactory_C_AddInfoMessByLabelTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, Label) == 0x000020, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::Label' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, PartyIndex) == 0x000030, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, SelectSkillScriptMessage) == 0x000034, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::SelectSkillScriptMessage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, PlayRate) == 0x000038, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, RetPecID) == 0x00003C, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, K2Node_MakeStruct_BtlTaskData) == 0x000040, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000070, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000110, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddInfoMessByLabelTask, CallFunc_GetPecID_retValue) == 0x000118, "Member 'BattleActionTaskFactory_C_AddInfoMessByLabelTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeKuishibariInfoTask
// 0x00D0 (0x00D0 - 0x0000)
struct BattleActionTaskFactory_C_MakeKuishibariInfoTask final
{
public:
	TArray<int32>                                 WaitTask;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param1Index;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoCallCamera;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetPecIDs;                                         // 0x0038(0x0010)(Parm, OutParm)
	TArray<int32>                                 WaitIDs;                                           // 0x0048(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_WaitID;                                         // 0x0058(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_RetID;                                          // 0x0068(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_CAM_TYPE                                Temp_byte_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CAM_TYPE                                Temp_byte_Variable_1;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillInfoMess                         CallFunc_GetSkillInfoMessData_ReturnValue;         // 0x007C(0x001C)(ConstParm, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddInfoMessTask_retPecID;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_CAM_TYPE                                K2Node_Select_Default;                             // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID;    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1;  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeKuishibariInfoTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeKuishibariInfoTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeKuishibariInfoTask) == 0x0000D0, "Wrong size on BattleActionTaskFactory_C_MakeKuishibariInfoTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, WaitTask) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::WaitTask' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, Param1Index) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::Param1Index' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, SkillId) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, PlayRate) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, NoCallCamera) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::NoCallCamera' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, RetPecIDs) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::RetPecIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, WaitIDs) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::WaitIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, Lo_WaitID) == 0x000058, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::Lo_WaitID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, Lo_RetID) == 0x000068, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::Lo_RetID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, Temp_bool_Variable) == 0x000078, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, Temp_byte_Variable) == 0x000079, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, Temp_byte_Variable_1) == 0x00007A, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_GetSkillInfoMessData_ReturnValue) == 0x00007C, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_GetSkillInfoMessData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_GetValidValue_ReturnValue) == 0x000098, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_AddInfoMessTask_retPecID) == 0x00009C, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_AddInfoMessTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, K2Node_Select_Default) == 0x0000A5, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x0000A8, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_AddCamRailTask_retPecID) == 0x0000AC, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_Array_Add_ReturnValue_2) == 0x0000B4, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_Array_Add_ReturnValue_3) == 0x0000B8, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID) == 0x0000BC, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_Array_Add_ReturnValue_4) == 0x0000C0, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1) == 0x0000C4, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeKuishibariInfoTask, CallFunc_Array_Add_ReturnValue_5) == 0x0000C8, "Member 'BattleActionTaskFactory_C_MakeKuishibariInfoTask::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.CallCameraCurrentForce
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_CallCameraCurrentForce final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         InterpSec;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0028(0x0030)()
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_CallCameraCurrentForce) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_CallCameraCurrentForce");
static_assert(sizeof(BattleActionTaskFactory_C_CallCameraCurrentForce) == 0x000110, "Wrong size on BattleActionTaskFactory_C_CallCameraCurrentForce");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, InterpSec) == 0x000020, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::InterpSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, K2Node_MakeStruct_BtlTaskData) == 0x000028, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, CallFunc_SpawnActionTaskActor_retValue) == 0x000100, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CallCameraCurrentForce, CallFunc_GetPecID_retValue) == 0x000108, "Member 'BattleActionTaskFactory_C_CallCameraCurrentForce::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddStopAllSE Task
// 0x00E0 (0x00E0 - 0x0000)
struct BattleActionTaskFactory_C_AddStopAllSE_Task final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0030(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddStopAllSE_Task) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddStopAllSE_Task");
static_assert(sizeof(BattleActionTaskFactory_C_AddStopAllSE_Task) == 0x0000E0, "Wrong size on BattleActionTaskFactory_C_AddStopAllSE_Task");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllSE_Task, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddStopAllSE_Task::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllSE_Task, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddStopAllSE_Task::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllSE_Task, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddStopAllSE_Task::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllSE_Task, K2Node_MakeStruct_BtlTaskDesc) == 0x000030, "Member 'BattleActionTaskFactory_C_AddStopAllSE_Task::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllSE_Task, CallFunc_SpawnActionTaskActor_retValue) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddStopAllSE_Task::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllSE_Task, CallFunc_GetPecID_retValue) == 0x0000D8, "Member 'BattleActionTaskFactory_C_AddStopAllSE_Task::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.DestroySkipRelationTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_DestroySkipRelationTask final
{
public:
	E_BTL_TASK_COM                                Lo_TaskType;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_TASK_COM                                CallFunc_GetTaskType_retValue;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_DestroySkipRelationTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_DestroySkipRelationTask");
static_assert(sizeof(BattleActionTaskFactory_C_DestroySkipRelationTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_DestroySkipRelationTask");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, Lo_TaskType) == 0x000000, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::Lo_TaskType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable) == 0x000008, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000012, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_BooleanOR_ReturnValue_1) == 0x000019, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, Temp_bool_Variable) == 0x00001A, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, Temp_bool_Variable_1) == 0x00001B, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_Array_AddUnique_ReturnValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_GetTaskType_retValue) == 0x000031, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_GetTaskType_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, K2Node_Select_Default) == 0x000032, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DestroySkipRelationTask, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'BattleActionTaskFactory_C_DestroySkipRelationTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddIgnoreSkillSkipTask
// 0x00E0 (0x00E0 - 0x0000)
struct BattleActionTaskFactory_C_AddIgnoreSkillSkipTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0030(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddIgnoreSkillSkipTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask) == 0x0000E0, "Wrong size on BattleActionTaskFactory_C_AddIgnoreSkillSkipTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddIgnoreSkillSkipTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddIgnoreSkillSkipTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_AddIgnoreSkillSkipTask::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_AddIgnoreSkillSkipTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000030, "Member 'BattleActionTaskFactory_C_AddIgnoreSkillSkipTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask, CallFunc_SpawnActionTaskActor_retValue) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddIgnoreSkillSkipTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddIgnoreSkillSkipTask, CallFunc_GetPecID_retValue) == 0x0000D8, "Member 'BattleActionTaskFactory_C_AddIgnoreSkillSkipTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddStopAllParticle Task
// 0x00E0 (0x00E0 - 0x0000)
struct BattleActionTaskFactory_C_AddStopAllParticle_Task final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0030(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddStopAllParticle_Task) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddStopAllParticle_Task");
static_assert(sizeof(BattleActionTaskFactory_C_AddStopAllParticle_Task) == 0x0000E0, "Wrong size on BattleActionTaskFactory_C_AddStopAllParticle_Task");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllParticle_Task, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddStopAllParticle_Task::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllParticle_Task, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddStopAllParticle_Task::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllParticle_Task, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_AddStopAllParticle_Task::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllParticle_Task, K2Node_MakeStruct_BtlTaskDesc) == 0x000030, "Member 'BattleActionTaskFactory_C_AddStopAllParticle_Task::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllParticle_Task, CallFunc_SpawnActionTaskActor_retValue) == 0x0000D0, "Member 'BattleActionTaskFactory_C_AddStopAllParticle_Task::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddStopAllParticle_Task, CallFunc_GetPecID_retValue) == 0x0000D8, "Member 'BattleActionTaskFactory_C_AddStopAllParticle_Task::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.OpenTutorialWindowTask
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_OpenTutorialWindowTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_TUTORIAL_WINDOW_MESSAGE_TYPE                TutorialType;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartRemainSec;                                    // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0030(0x0030)()
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_OpenTutorialWindowTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_OpenTutorialWindowTask");
static_assert(sizeof(BattleActionTaskFactory_C_OpenTutorialWindowTask) == 0x000110, "Wrong size on BattleActionTaskFactory_C_OpenTutorialWindowTask");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, TutorialType) == 0x000020, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::TutorialType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, StartRemainSec) == 0x000024, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::StartRemainSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, K2Node_MakeStruct_BtlTaskData) == 0x000030, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000100, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OpenTutorialWindowTask, CallFunc_GetPecID_retValue) == 0x000108, "Member 'BattleActionTaskFactory_C_OpenTutorialWindowTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.GetBattlePlayRate
// 0x0028 (0x0028 - 0x0000)
struct BattleActionTaskFactory_C_GetBattlePlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetBattlePlayRate_self_CastInput;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BI_GetBattlePlayRate_PlayRate;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_GetBattlePlayRate) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_GetBattlePlayRate");
static_assert(sizeof(BattleActionTaskFactory_C_GetBattlePlayRate) == 0x000028, "Wrong size on BattleActionTaskFactory_C_GetBattlePlayRate");
static_assert(offsetof(BattleActionTaskFactory_C_GetBattlePlayRate, PlayRate) == 0x000000, "Member 'BattleActionTaskFactory_C_GetBattlePlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetBattlePlayRate, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleActionTaskFactory_C_GetBattlePlayRate::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetBattlePlayRate, CallFunc_BI_GetBattlePlayRate_self_CastInput) == 0x000010, "Member 'BattleActionTaskFactory_C_GetBattlePlayRate::CallFunc_BI_GetBattlePlayRate_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_GetBattlePlayRate, CallFunc_BI_GetBattlePlayRate_PlayRate) == 0x000020, "Member 'BattleActionTaskFactory_C_GetBattlePlayRate::CallFunc_BI_GetBattlePlayRate_PlayRate' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnitScaleResetTask
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_AddUnitScaleResetTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret_PecID;                                         // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0028(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnitScaleResetTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnitScaleResetTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnitScaleResetTask) == 0x000110, "Wrong size on BattleActionTaskFactory_C_AddUnitScaleResetTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, Ret_PecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, K2Node_MakeStruct_BtlTaskData) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000058, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnitScaleResetTask, CallFunc_GetPecID_retValue) == 0x000100, "Member 'BattleActionTaskFactory_C_AddUnitScaleResetTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCtrlPostProcessTask
// 0x0160 (0x0160 - 0x0000)
struct BattleActionTaskFactory_C_AddCtrlPostProcessTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              PostMaterials;                                     // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSettings;                              // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Ret_PecID;                                         // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_CTRL_POST_PROCESS_DATA            K2Node_MakeStruct_BTL_CTRL_POST_PROCESS_DATA;      // 0x0048(0x0020)(HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0070(0x00A0)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABTL_CTRL_POST_PROCESS_OBJ_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCtrlPostProcessTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCtrlPostProcessTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCtrlPostProcessTask) == 0x000160, "Wrong size on BattleActionTaskFactory_C_AddCtrlPostProcessTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, PostMaterials) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::PostMaterials' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, MaterialAnimSettings) == 0x000030, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::MaterialAnimSettings' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, Ret_PecID) == 0x000040, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, K2Node_MakeStruct_BTL_CTRL_POST_PROCESS_DATA) == 0x000048, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::K2Node_MakeStruct_BTL_CTRL_POST_PROCESS_DATA' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000070, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000140, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x000148, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000150, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlPostProcessTask, CallFunc_GetPecID_retValue) == 0x000158, "Member 'BattleActionTaskFactory_C_AddCtrlPostProcessTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.ExchangeTaskData
// 0x0090 (0x0090 - 0x0000)
struct BattleActionTaskFactory_C_ExchangeTaskData final
{
public:
	E_BTL_TASK_COM                                Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           SendData;                                          // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         OverrunSec;                                        // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           Lo_SendData2;                                      // 0x0040(0x0030)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_ExchangeTaskData) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_ExchangeTaskData");
static_assert(sizeof(BattleActionTaskFactory_C_ExchangeTaskData) == 0x000090, "Wrong size on BattleActionTaskFactory_C_ExchangeTaskData");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, Command) == 0x000000, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::Command' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, PecID) == 0x000004, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, SendData) == 0x000008, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::SendData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, OverrunSec) == 0x000038, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::OverrunSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, Lo_SendData2) == 0x000040, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::Lo_SendData2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, CallFunc_Array_Get_Item) == 0x000080, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ExchangeTaskData, CallFunc_Array_Contains_ReturnValue) == 0x000089, "Member 'BattleActionTaskFactory_C_ExchangeTaskData::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakePartyPanelShowTask
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_MakePartyPanelShowTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_PartyPanelGetVisibility_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelGetVisibility_IsVisible;     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_MakePartyPanelShowTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakePartyPanelShowTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakePartyPanelShowTask) == 0x000050, "Wrong size on BattleActionTaskFactory_C_MakePartyPanelShowTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, DeltaTime) == 0x000020, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000028, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, CallFunc_GetMainWork_retValue) == 0x000030, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, CallFunc_BI_PartyPanelGetVisibility_self_CastInput) == 0x000038, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::CallFunc_BI_PartyPanelGetVisibility_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakePartyPanelShowTask, CallFunc_BI_PartyPanelGetVisibility_IsVisible) == 0x000048, "Member 'BattleActionTaskFactory_C_MakePartyPanelShowTask::CallFunc_BI_PartyPanelGetVisibility_IsVisible' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.MakeCloseUpCameraTask
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_MakeCloseUpCameraTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CAM_TYPE                                CamType;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HaveToBeHome;                                      // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallCameraCurrentForce_RetPecID;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeSideAllTask_RetPecID;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeSideAllTask_RetPecID_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID;    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_MakeCloseUpCameraTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_MakeCloseUpCameraTask");
static_assert(sizeof(BattleActionTaskFactory_C_MakeCloseUpCameraTask) == 0x000050, "Wrong size on BattleActionTaskFactory_C_MakeCloseUpCameraTask");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CamType) == 0x000024, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CamType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, HaveToBeHome) == 0x000025, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::HaveToBeHome' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, PecID) == 0x000028, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_CallCameraCurrentForce_RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_CallCameraCurrentForce_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_AddBeHomeSideAllTask_RetPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_AddBeHomeSideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_AddBeHomeSideAllTask_RetPecID_1) == 0x000038, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_AddBeHomeSideAllTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_AddCamRailTask_retPecID) == 0x00003C, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x000040, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID) == 0x000044, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_MakeCloseUpCameraTask, CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1) == 0x000048, "Member 'BattleActionTaskFactory_C_MakeCloseUpCameraTask::CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.FindPoolTaskListKey
// 0x0058 (0x0058 - 0x0000)
struct BattleActionTaskFactory_C_FindPoolTaskListKey final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Key;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_RetKey;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABattleActorBase*>               K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	struct FBattleTaskArray                       K2Node_MakeStruct_BattleTaskArray;                 // 0x0028(0x0010)()
	int32                                         CallFunc_FindPoolTaskListKeyInner_outKeyLength;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindPoolTaskListKeyInner_ReturnValue;     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleIntegerArray                    K2Node_MakeStruct_BattleIntegerArray;              // 0x0048(0x0010)()
};
static_assert(alignof(BattleActionTaskFactory_C_FindPoolTaskListKey) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_FindPoolTaskListKey");
static_assert(sizeof(BattleActionTaskFactory_C_FindPoolTaskListKey) == 0x000058, "Wrong size on BattleActionTaskFactory_C_FindPoolTaskListKey");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, Key) == 0x000010, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, Lo_RetKey) == 0x000014, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::Lo_RetKey' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, K2Node_MakeArray_Array) == 0x000018, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, K2Node_MakeStruct_BattleTaskArray) == 0x000028, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::K2Node_MakeStruct_BattleTaskArray' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, CallFunc_FindPoolTaskListKeyInner_outKeyLength) == 0x000038, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::CallFunc_FindPoolTaskListKeyInner_outKeyLength' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, CallFunc_FindPoolTaskListKeyInner_ReturnValue) == 0x00003C, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::CallFunc_FindPoolTaskListKeyInner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindPoolTaskListKey, K2Node_MakeStruct_BattleIntegerArray) == 0x000048, "Member 'BattleActionTaskFactory_C_FindPoolTaskListKey::K2Node_MakeStruct_BattleIntegerArray' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddPoolTaskList
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_AddPoolTaskList final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABattleActionTask_C*                    Task;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABattleActorBase*>               Lo_Data;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Lo_Key;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindPoolTaskListKey_Key;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddPoolTaskList) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_AddPoolTaskList");
static_assert(sizeof(BattleActionTaskFactory_C_AddPoolTaskList) == 0x000030, "Wrong size on BattleActionTaskFactory_C_AddPoolTaskList");
static_assert(offsetof(BattleActionTaskFactory_C_AddPoolTaskList, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddPoolTaskList::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPoolTaskList, Task) == 0x000010, "Member 'BattleActionTaskFactory_C_AddPoolTaskList::Task' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPoolTaskList, Lo_Data) == 0x000018, "Member 'BattleActionTaskFactory_C_AddPoolTaskList::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPoolTaskList, Lo_Key) == 0x000028, "Member 'BattleActionTaskFactory_C_AddPoolTaskList::Lo_Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddPoolTaskList, CallFunc_FindPoolTaskListKey_Key) == 0x00002C, "Member 'BattleActionTaskFactory_C_AddPoolTaskList::CallFunc_FindPoolTaskListKey_Key' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.RetrievePoolTaskList
// 0x0040 (0x0040 - 0x0000)
struct BattleActionTaskFactory_C_RetrievePoolTaskList final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FBattleTaskArray                       Tasklist;                                          // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Lo_Key;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindPoolTaskListKey_Key;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleTaskArray                       CallFunc_Map_Find_Value;                           // 0x0028(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_RetrievePoolTaskList) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_RetrievePoolTaskList");
static_assert(sizeof(BattleActionTaskFactory_C_RetrievePoolTaskList) == 0x000040, "Wrong size on BattleActionTaskFactory_C_RetrievePoolTaskList");
static_assert(offsetof(BattleActionTaskFactory_C_RetrievePoolTaskList, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_RetrievePoolTaskList::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrievePoolTaskList, Tasklist) == 0x000010, "Member 'BattleActionTaskFactory_C_RetrievePoolTaskList::Tasklist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrievePoolTaskList, Lo_Key) == 0x000020, "Member 'BattleActionTaskFactory_C_RetrievePoolTaskList::Lo_Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrievePoolTaskList, CallFunc_FindPoolTaskListKey_Key) == 0x000024, "Member 'BattleActionTaskFactory_C_RetrievePoolTaskList::CallFunc_FindPoolTaskListKey_Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrievePoolTaskList, CallFunc_Map_Find_Value) == 0x000028, "Member 'BattleActionTaskFactory_C_RetrievePoolTaskList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrievePoolTaskList, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BattleActionTaskFactory_C_RetrievePoolTaskList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.UpdateProcessTaskList
// 0x01F0 (0x01F0 - 0x0000)
struct BattleActionTaskFactory_C_UpdateProcessTaskList final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABattleActionTask_C*>            Tasklist;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         OverrunSec;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceLoop;                                         // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_OverrunSec;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Loop;                                           // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_InsertKeys;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_InsertPos;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABattleActionTask_C*>            Lo_InsertPosTasks;                                 // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         Lo_DeltaSec;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABattleActionTask_C*>            Lo_FinishedTasks;                                  // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABattleActionTask_C*>            Lo_RecursiveTasks;                                 // 0x0068(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABattleActionTask_C*>            Lo_RemoveTasks;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABattleActorBase*>               Lo_tmpTaskList;                                    // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FBattleTaskArray>               Lo_InsertTasks;                                    // 0x0098(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RetrieveMostShortWaitSec_WaitSec;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF[0x1];                                       // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_2;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindReadyPoolTaskList_IsValid;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindReadyPoolTaskList_Key;                // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleTaskArray                       CallFunc_FindReadyPoolTaskList_TaskList;           // 0x0158(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item_3;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_TASK_COM                                CallFunc_GetSendData_Command;                      // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSendData_PecID;                        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           CallFunc_GetSendData_SendData;                     // 0x0190(0x0030)()
	bool                                          CallFunc_GetSendData_Valid;                        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue_1;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActorBase*                       CallFunc_Array_Get_Item_4;                         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    K2Node_DynamicCast_AsBattle_Action_Task;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_UpdateProcessTaskList) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_UpdateProcessTaskList");
static_assert(sizeof(BattleActionTaskFactory_C_UpdateProcessTaskList) == 0x0001F0, "Wrong size on BattleActionTaskFactory_C_UpdateProcessTaskList");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, DeltaSec) == 0x000000, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::DeltaSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Tasklist) == 0x000008, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Tasklist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, OverrunSec) == 0x000018, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::OverrunSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, ForceLoop) == 0x00001C, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::ForceLoop' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_OverrunSec) == 0x000020, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_OverrunSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_Loop) == 0x000024, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_Loop' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_InsertKeys) == 0x000028, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_InsertKeys' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_InsertPos) == 0x000038, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_InsertPos' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_InsertPosTasks) == 0x000040, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_InsertPosTasks' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_DeltaSec) == 0x000050, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_DeltaSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_FinishedTasks) == 0x000058, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_FinishedTasks' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_RecursiveTasks) == 0x000068, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_RecursiveTasks' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_RemoveTasks) == 0x000078, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_RemoveTasks' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_tmpTaskList) == 0x000088, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_tmpTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Lo_InsertTasks) == 0x000098, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Lo_InsertTasks' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Array_Index_Variable_1) == 0x0000C4, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Loop_Counter_Variable_2) == 0x0000C8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Loop_Counter_Variable_3) == 0x0000D0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Array_Index_Variable_2) == 0x0000D8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Loop_Counter_Variable_4) == 0x0000DC, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E4, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_SelectFloat_ReturnValue) == 0x0000EC, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_RetrieveMostShortWaitSec_WaitSec) == 0x0000F8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_RetrieveMostShortWaitSec_WaitSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000FD, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_BooleanAND_ReturnValue) == 0x0000FE, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Get_Item) == 0x000100, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_SelectFloat_ReturnValue_1) == 0x000108, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Add_ReturnValue) == 0x00010C, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_GetPecID_retValue) == 0x000110, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Length_ReturnValue_1) == 0x000114, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000118, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Add_ReturnValue_1) == 0x000128, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_RemoveItem_ReturnValue) == 0x00012C, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Length_ReturnValue_2) == 0x000130, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, Temp_int_Array_Index_Variable_3) == 0x000134, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Less_IntInt_ReturnValue_2) == 0x000138, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Get_Item_2) == 0x000140, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000148, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Find_ReturnValue) == 0x00014C, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_FindReadyPoolTaskList_IsValid) == 0x000150, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_FindReadyPoolTaskList_IsValid' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_FindReadyPoolTaskList_Key) == 0x000154, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_FindReadyPoolTaskList_Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_FindReadyPoolTaskList_TaskList) == 0x000158, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_FindReadyPoolTaskList_TaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Add_ReturnValue_2) == 0x000168, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Get_Item_3) == 0x000170, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Length_ReturnValue_3) == 0x000178, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_IsFinished_retValue) == 0x00017C, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_IsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Less_IntInt_ReturnValue_3) == 0x00017D, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Add_ReturnValue_3) == 0x000180, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_GetSendData_Command) == 0x000184, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_GetSendData_Command' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_GetSendData_PecID) == 0x000188, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_GetSendData_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_GetSendData_SendData) == 0x000190, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_GetSendData_SendData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_GetSendData_Valid) == 0x0001C0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_GetSendData_Valid' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_IsFinished_retValue_1) == 0x0001C1, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_IsFinished_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Add_ReturnValue_4) == 0x0001C4, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw) == 0x0001C8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Get_Item_4) == 0x0001D0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_Length_ReturnValue_4) == 0x0001D8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, K2Node_DynamicCast_AsBattle_Action_Task) == 0x0001E0, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::K2Node_DynamicCast_AsBattle_Action_Task' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateProcessTaskList, CallFunc_Array_AddUnique_ReturnValue) == 0x0001EC, "Member 'BattleActionTaskFactory_C_UpdateProcessTaskList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.FindReadyPoolTaskList
// 0x0058 (0x0058 - 0x0000)
struct BattleActionTaskFactory_C_FindReadyPoolTaskList final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Key;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleTaskArray                       Tasklist;                                          // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Lo_PecBreak;                                       // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PecIDs;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_FindReadyPoolTaskListInner_ReturnValue;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleTaskArray                       CallFunc_Map_Find_Value;                           // 0x0040(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_FindReadyPoolTaskList) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_FindReadyPoolTaskList");
static_assert(sizeof(BattleActionTaskFactory_C_FindReadyPoolTaskList) == 0x000058, "Wrong size on BattleActionTaskFactory_C_FindReadyPoolTaskList");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, IsValid) == 0x000000, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::IsValid' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, Key) == 0x000004, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, Tasklist) == 0x000008, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::Tasklist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, Lo_PecBreak) == 0x000018, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::Lo_PecBreak' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, Lo_PecIDs) == 0x000020, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::Lo_PecIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, CallFunc_FindReadyPoolTaskListInner_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::CallFunc_FindReadyPoolTaskListInner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000034, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, CallFunc_Map_Find_Value) == 0x000040, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_FindReadyPoolTaskList, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_FindReadyPoolTaskList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.ErasePoolTaskList
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_ErasePoolTaskList final
{
public:
	int32                                         Key;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABattleActorBase*>               K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleTaskArray                       K2Node_MakeStruct_BattleTaskArray;                 // 0x0020(0x0010)()
};
static_assert(alignof(BattleActionTaskFactory_C_ErasePoolTaskList) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_ErasePoolTaskList");
static_assert(sizeof(BattleActionTaskFactory_C_ErasePoolTaskList) == 0x000030, "Wrong size on BattleActionTaskFactory_C_ErasePoolTaskList");
static_assert(offsetof(BattleActionTaskFactory_C_ErasePoolTaskList, Key) == 0x000000, "Member 'BattleActionTaskFactory_C_ErasePoolTaskList::Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ErasePoolTaskList, K2Node_MakeArray_Array) == 0x000008, "Member 'BattleActionTaskFactory_C_ErasePoolTaskList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ErasePoolTaskList, CallFunc_Map_Remove_ReturnValue) == 0x000018, "Member 'BattleActionTaskFactory_C_ErasePoolTaskList::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_ErasePoolTaskList, K2Node_MakeStruct_BattleTaskArray) == 0x000020, "Member 'BattleActionTaskFactory_C_ErasePoolTaskList::K2Node_MakeStruct_BattleTaskArray' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.CalcOverrunSec
// 0x0068 (0x0068 - 0x0000)
struct BattleActionTaskFactory_C_CalcOverrunSec final
{
public:
	int32                                         Key;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrunSec;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_OverrunSec;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PecID;                                          // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_GetTaskForPecID_retValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOverrunSec_OeverrunSec;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleIntegerArray                    CallFunc_Map_Find_Value;                           // 0x0050(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_CalcOverrunSec) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_CalcOverrunSec");
static_assert(sizeof(BattleActionTaskFactory_C_CalcOverrunSec) == 0x000068, "Wrong size on BattleActionTaskFactory_C_CalcOverrunSec");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, Key) == 0x000000, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::Key' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, OverrunSec) == 0x000004, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::OverrunSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, Lo_OverrunSec) == 0x000008, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::Lo_OverrunSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, Lo_PecID) == 0x000010, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::Lo_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_GetTaskForPecID_retValue) == 0x000038, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_GetTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_GetOverrunSec_OeverrunSec) == 0x000044, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_GetOverrunSec_OeverrunSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_Map_Find_Value) == 0x000050, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CalcOverrunSec, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'BattleActionTaskFactory_C_CalcOverrunSec::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.DebugDrawRemainTasks
// 0x01E8 (0x01E8 - 0x0000)
struct BattleActionTaskFactory_C_DebugDrawRemainTasks final
{
public:
	class FString                                 Lo_Str;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class ABattleActorBase*>               Lo_RemainTask;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActorBase*                       CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    K2Node_DynamicCast_AsBattle_Action_Task;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0168(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBattleIntegerArray                    CallFunc_Map_Find_Value;                           // 0x01A8(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBattleTaskArray                       CallFunc_Map_Find_Value_1;                         // 0x01D0(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_DebugDrawRemainTasks) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_DebugDrawRemainTasks");
static_assert(sizeof(BattleActionTaskFactory_C_DebugDrawRemainTasks) == 0x0001E8, "Wrong size on BattleActionTaskFactory_C_DebugDrawRemainTasks");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Lo_Str) == 0x000000, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Lo_Str' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Lo_WaitTaskList) == 0x000010, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Lo_RemainTask) == 0x000020, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Lo_RemainTask' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Loop_Counter_Variable_2) == 0x000064, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Array_Index_Variable_2) == 0x000078, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, K2Node_DynamicCast_AsBattle_Action_Task) == 0x000088, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::K2Node_DynamicCast_AsBattle_Action_Task' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_GetPecID_retValue) == 0x000094, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_GetPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Loop_Counter_Variable_3) == 0x0000E8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000EC, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, Temp_int_Array_Index_Variable_3) == 0x0000F0, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000F8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000108, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000118, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Length_ReturnValue_2) == 0x00012C, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000130, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Less_IntInt_ReturnValue_2) == 0x000140, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000148, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000158, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Map_Keys_Keys) == 0x000168, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Length_ReturnValue_3) == 0x000178, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Get_Item_3) == 0x00017C, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Less_IntInt_ReturnValue_3) == 0x000180, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000188, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000198, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Map_Find_Value) == 0x0001A8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Map_Find_ReturnValue) == 0x0001B8, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001C0, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Map_Find_Value_1) == 0x0001D0, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Map_Find_ReturnValue_1) == 0x0001E0, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_DebugDrawRemainTasks, CallFunc_Array_Contains_ReturnValue) == 0x0001E1, "Member 'BattleActionTaskFactory_C_DebugDrawRemainTasks::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.IsTerminalTask
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_IsTerminalTask final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTerminal;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTerminalTaskInner_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_IsTerminalTask) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_IsTerminalTask");
static_assert(sizeof(BattleActionTaskFactory_C_IsTerminalTask) == 0x000008, "Wrong size on BattleActionTaskFactory_C_IsTerminalTask");
static_assert(offsetof(BattleActionTaskFactory_C_IsTerminalTask, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_IsTerminalTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsTerminalTask, IsTerminal) == 0x000004, "Member 'BattleActionTaskFactory_C_IsTerminalTask::IsTerminal' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_IsTerminalTask, CallFunc_IsTerminalTaskInner_ReturnValue) == 0x000005, "Member 'BattleActionTaskFactory_C_IsTerminalTask::CallFunc_IsTerminalTaskInner_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddDebugTaskInfo
// 0x0130 (0x0130 - 0x0000)
struct BattleActionTaskFactory_C_AddDebugTaskInfo final
{
public:
	class FString                                 Info;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FDebugBattleTaskInfo                   TaskInfo;                                          // 0x0010(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Lo_Info;                                           // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndsWith_ReturnValue;                     // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddDebugTaskInfo) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddDebugTaskInfo");
static_assert(sizeof(BattleActionTaskFactory_C_AddDebugTaskInfo) == 0x000130, "Wrong size on BattleActionTaskFactory_C_AddDebugTaskInfo");
static_assert(offsetof(BattleActionTaskFactory_C_AddDebugTaskInfo, Info) == 0x000000, "Member 'BattleActionTaskFactory_C_AddDebugTaskInfo::Info' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDebugTaskInfo, TaskInfo) == 0x000010, "Member 'BattleActionTaskFactory_C_AddDebugTaskInfo::TaskInfo' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDebugTaskInfo, Lo_Info) == 0x0000F0, "Member 'BattleActionTaskFactory_C_AddDebugTaskInfo::Lo_Info' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDebugTaskInfo, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'BattleActionTaskFactory_C_AddDebugTaskInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDebugTaskInfo, CallFunc_EndsWith_ReturnValue) == 0x000104, "Member 'BattleActionTaskFactory_C_AddDebugTaskInfo::CallFunc_EndsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDebugTaskInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000108, "Member 'BattleActionTaskFactory_C_AddDebugTaskInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddDebugTaskInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'BattleActionTaskFactory_C_AddDebugTaskInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.OutputDebugTaskInfo
// 0x0058 (0x0058 - 0x0000)
struct BattleActionTaskFactory_C_OutputDebugTaskInfo final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Filename;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectSavedDirectory_ReturnValue;     // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_OutputDebugInfo_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_OutputDebugTaskInfo) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_OutputDebugTaskInfo");
static_assert(sizeof(BattleActionTaskFactory_C_OutputDebugTaskInfo) == 0x000058, "Wrong size on BattleActionTaskFactory_C_OutputDebugTaskInfo");
static_assert(offsetof(BattleActionTaskFactory_C_OutputDebugTaskInfo, FilePath) == 0x000000, "Member 'BattleActionTaskFactory_C_OutputDebugTaskInfo::FilePath' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OutputDebugTaskInfo, Filename) == 0x000010, "Member 'BattleActionTaskFactory_C_OutputDebugTaskInfo::Filename' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OutputDebugTaskInfo, CallFunc_GetProjectSavedDirectory_ReturnValue) == 0x000020, "Member 'BattleActionTaskFactory_C_OutputDebugTaskInfo::CallFunc_GetProjectSavedDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OutputDebugTaskInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_OutputDebugTaskInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OutputDebugTaskInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BattleActionTaskFactory_C_OutputDebugTaskInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_OutputDebugTaskInfo, CallFunc_OutputDebugInfo_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_OutputDebugTaskInfo::CallFunc_OutputDebugInfo_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.RetrieveMostShortWaitSec
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_RetrieveMostShortWaitSec final
{
public:
	TArray<class ABattleActionTask_C*>            Tasklist;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         WaitSec;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_found;                                          // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_WaitSec;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcRemainWaitSec_RemainSec;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_RetrieveMostShortWaitSec");
static_assert(sizeof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec) == 0x000050, "Wrong size on BattleActionTaskFactory_C_RetrieveMostShortWaitSec");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, Tasklist) == 0x000000, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::Tasklist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, WaitSec) == 0x000010, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::WaitSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, Lo_found) == 0x000014, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::Lo_found' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, Lo_WaitSec) == 0x000018, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::Lo_WaitSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_CalcRemainWaitSec_RemainSec) == 0x000030, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_CalcRemainWaitSec_RemainSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_Less_FloatFloat_ReturnValue) == 0x000035, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_BooleanAND_ReturnValue) == 0x000044, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000045, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RetrieveMostShortWaitSec, CallFunc_BooleanAND_ReturnValue_1) == 0x00004C, "Member 'BattleActionTaskFactory_C_RetrieveMostShortWaitSec::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddResetCharaParticleTask
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_AddResetCharaParticleTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret_PecID;                                         // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0028(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddResetCharaParticleTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddResetCharaParticleTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddResetCharaParticleTask) == 0x000110, "Wrong size on BattleActionTaskFactory_C_AddResetCharaParticleTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, Ret_PecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, K2Node_MakeStruct_BtlTaskData) == 0x000028, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000058, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddResetCharaParticleTask, CallFunc_GetPecID_retValue) == 0x000100, "Member 'BattleActionTaskFactory_C_AddResetCharaParticleTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.RemoveTaskFromPool
// 0x0020 (0x0020 - 0x0000)
struct BattleActionTaskFactory_C_RemoveTaskFromPool final
{
public:
	class ABattleActionTask_C*                    Task;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABattleActionTask_C*>            Lo_Data;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Lo_Key;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_RemoveTaskFromPool) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_RemoveTaskFromPool");
static_assert(sizeof(BattleActionTaskFactory_C_RemoveTaskFromPool) == 0x000020, "Wrong size on BattleActionTaskFactory_C_RemoveTaskFromPool");
static_assert(offsetof(BattleActionTaskFactory_C_RemoveTaskFromPool, Task) == 0x000000, "Member 'BattleActionTaskFactory_C_RemoveTaskFromPool::Task' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RemoveTaskFromPool, Lo_Data) == 0x000008, "Member 'BattleActionTaskFactory_C_RemoveTaskFromPool::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_RemoveTaskFromPool, Lo_Key) == 0x000018, "Member 'BattleActionTaskFactory_C_RemoveTaskFromPool::Lo_Key' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddUnlockAchievementTask
// 0x0110 (0x0110 - 0x0000)
struct BattleActionTaskFactory_C_AddUnlockAchievementTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EAchievementFlag                              Achievement;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret_PecID;                                         // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0028(0x0030)()
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddUnlockAchievementTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddUnlockAchievementTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddUnlockAchievementTask) == 0x000110, "Wrong size on BattleActionTaskFactory_C_AddUnlockAchievementTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, Achievement) == 0x000020, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::Achievement' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, Ret_PecID) == 0x000024, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, K2Node_MakeStruct_BtlTaskData) == 0x000028, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000058, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddUnlockAchievementTask, CallFunc_GetPecID_retValue) == 0x000100, "Member 'BattleActionTaskFactory_C_AddUnlockAchievementTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.UnlockAchievementBadDamageDead
// 0x0070 (0x0070 - 0x0000)
struct BattleActionTaskFactory_C_UnlockAchievementBadDamageDead final
{
public:
	int32                                         SrcPartyIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 WaitTaskList;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<EAchievementFlag>                      Lo_achievements;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetMainInterface_AsBPI_Main_Interface;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAchievementFlag                              CallFunc_Array_Get_Item;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddUnlockAchievementTask_Ret_PecID;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_UnlockAchievementBadDamageDead");
static_assert(sizeof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead) == 0x000070, "Wrong size on BattleActionTaskFactory_C_UnlockAchievementBadDamageDead");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, SrcPartyIndex) == 0x000000, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, DstPartyIndex) == 0x000004, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, IsDead) == 0x000008, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::IsDead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, WaitTaskList) == 0x000010, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, ParentName) == 0x000020, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, Lo_achievements) == 0x000030, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::Lo_achievements' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, CallFunc_GetMainInterface_AsBPI_Main_Interface) == 0x000050, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::CallFunc_GetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, CallFunc_AddUnlockAchievementTask_Ret_PecID) == 0x000064, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::CallFunc_AddUnlockAchievementTask_Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UnlockAchievementBadDamageDead, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BattleActionTaskFactory_C_UnlockAchievementBadDamageDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_GetMainWork
// 0x0028 (0x0028 - 0x0000)
struct BattleActionTaskFactory_C_BI_GetMainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_GetMainWork) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_GetMainWork");
static_assert(sizeof(BattleActionTaskFactory_C_BI_GetMainWork) == 0x000028, "Wrong size on BattleActionTaskFactory_C_BI_GetMainWork");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetMainWork, RetValue) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_GetMainWork::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetMainWork, K2Node_DynamicCast_AsBattle_Main) == 0x000018, "Member 'BattleActionTaskFactory_C_BI_GetMainWork::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.AddCtrlCharaMaterialTask
// 0x0150 (0x0150 - 0x0000)
struct BattleActionTaskFactory_C_AddCtrlCharaMaterialTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSettings;                              // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Ret_PecID;                                         // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_CTRL_POST_PROCESS_DATA            K2Node_MakeStruct_BTL_CTRL_POST_PROCESS_DATA;      // 0x0040(0x0020)(HasGetValueTypeHash)
	struct FBtlTaskDesc                           K2Node_MakeStruct_BtlTaskDesc;                     // 0x0060(0x00A0)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABTL_CTRL_POST_PROCESS_OBJ_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_SpawnActionTaskActor_retValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPecID_retValue;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_AddCtrlCharaMaterialTask");
static_assert(sizeof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask) == 0x000150, "Wrong size on BattleActionTaskFactory_C_AddCtrlCharaMaterialTask");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, MaterialAnimSettings) == 0x000028, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::MaterialAnimSettings' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, Ret_PecID) == 0x000038, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, K2Node_MakeStruct_BTL_CTRL_POST_PROCESS_DATA) == 0x000040, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::K2Node_MakeStruct_BTL_CTRL_POST_PROCESS_DATA' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, K2Node_MakeStruct_BtlTaskDesc) == 0x000060, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::K2Node_MakeStruct_BtlTaskDesc' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, CallFunc_SpawnActionTaskActor_retValue) == 0x000140, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::CallFunc_SpawnActionTaskActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_AddCtrlCharaMaterialTask, CallFunc_GetPecID_retValue) == 0x000148, "Member 'BattleActionTaskFactory_C_AddCtrlCharaMaterialTask::CallFunc_GetPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.CheckStopAutoBattle
// 0x0080 (0x0080 - 0x0000)
struct BattleActionTaskFactory_C_CheckStopAutoBattle final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DoStop;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetMainInterface_AsBPI_Main_Interface;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetMaxHP_ReturnValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckBattleFlag_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxHP_ReturnValue_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowHP_ReturnValue_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_const_GetEnemyStart_self_CastInput;    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveGodParameterSkill_ReturnValue;    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_CheckStopAutoBattle) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_CheckStopAutoBattle");
static_assert(sizeof(BattleActionTaskFactory_C_CheckStopAutoBattle) == 0x000080, "Wrong size on BattleActionTaskFactory_C_CheckStopAutoBattle");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, TargetIndex) == 0x000000, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, Damage) == 0x000004, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::Damage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, IsDead) == 0x000008, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::IsDead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, DoStop) == 0x000009, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::DoStop' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_GetPartySystem_retValue) == 0x000010, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_GetMainInterface_AsBPI_Main_Interface) == 0x000018, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_GetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_GetMaxHP_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_GetMaxHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_BI_CheckBattleFlag_ReturnValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_BI_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_GetNowHP_ReturnValue) == 0x000034, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_GetMaxHP_ReturnValue_1) == 0x000038, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_GetMaxHP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000040, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_GetNowHP_ReturnValue_1) == 0x000048, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_GetNowHP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_BI_const_GetEnemyStart_self_CastInput) == 0x000058, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_BI_const_GetEnemyStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_BI_const_GetEnemyStart_retValue) == 0x000068, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00006C, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000078, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_CheckStopAutoBattle, CallFunc_IsActiveGodParameterSkill_ReturnValue) == 0x00007A, "Member 'BattleActionTaskFactory_C_CheckStopAutoBattle::CallFunc_IsActiveGodParameterSkill_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_GetParentNameTaskCnt
// 0x0018 (0x0018 - 0x0000)
struct BattleActionTaskFactory_C_BI_GetParentNameTaskCnt final
{
public:
	class FString                                 ParentName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetCnt;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_GetParentNameTaskCnt) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_GetParentNameTaskCnt");
static_assert(sizeof(BattleActionTaskFactory_C_BI_GetParentNameTaskCnt) == 0x000018, "Wrong size on BattleActionTaskFactory_C_BI_GetParentNameTaskCnt");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetParentNameTaskCnt, ParentName) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_GetParentNameTaskCnt::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetParentNameTaskCnt, RetCnt) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_GetParentNameTaskCnt::RetCnt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetParentNameTaskCnt, CallFunc_GetParentNameTaskCnt_retCnt) == 0x000014, "Member 'BattleActionTaskFactory_C_BI_GetParentNameTaskCnt::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddSetUnitMotion
// 0x0040 (0x0040 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddSetUnitMotion final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMotionFinish;                                  // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartPosition;                                     // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayOneScale;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSetUnitMotion_retPecID;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddSetUnitMotion) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddSetUnitMotion");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddSetUnitMotion) == 0x000040, "Wrong size on BattleActionTaskFactory_C_BI_AddSetUnitMotion");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, MotionID) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::MotionID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, PartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, WaitMotionFinish) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::WaitMotionFinish' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, StartPosition) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::StartPosition' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, IsPlayOneScale) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::IsPlayOneScale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, RetValue) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitMotion, CallFunc_AddSetUnitMotion_retPecID) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitMotion::CallFunc_AddSetUnitMotion_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddCamRailSkillTask
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddCamRailSkillTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Type;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Param_Name;                                        // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsHokan;                                           // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsConsiderActor;                                   // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOverrideHokanSpeed;                              // 0x0042(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHokanSpeedMax;                                   // 0x0043(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DoNotResetUnitAveLocation;                         // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailSkillTask_retPecID;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddCamRailSkillTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask) == 0x000050, "Wrong size on BattleActionTaskFactory_C_BI_AddCamRailSkillTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, ActorIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, TargetIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, Type) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, Param_Name) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, IsHokan) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::IsHokan' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, IsConsiderActor) == 0x000041, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::IsConsiderActor' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, IsOverrideHokanSpeed) == 0x000042, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::IsOverrideHokanSpeed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, IsHokanSpeedMax) == 0x000043, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::IsHokanSpeedMax' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, DoNotResetUnitAveLocation) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::DoNotResetUnitAveLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, RetValue) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailSkillTask, CallFunc_AddCamRailSkillTask_retPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddCamRailSkillTask::CallFunc_AddCamRailSkillTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddPlayEffectTask
// 0x0100 (0x0100 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddPlayEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleData;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           TaskData;                                          // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBtlTaskData                           TaskData2;                                         // 0x0060(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FTransform                             Transform;                                         // 0x0090(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class USkeletalMesh*                          ModSkeletalMesh;                                   // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ModAnim;                                           // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ModAttachSocketName;                               // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPairTargetOverride;                              // 0x00D8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PairTargetLocation;                                // 0x00DC(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIgnoreSideScale;                                 // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x00EC(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPlayEffectTask2_retPecID;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddPlayEffectTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_AddPlayEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddPlayEffectTask) == 0x000100, "Wrong size on BattleActionTaskFactory_C_BI_AddPlayEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, ParticleData) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::ParticleData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, ActorIndex) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, TargetIndex) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, TaskData) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::TaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, TaskData2) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::TaskData2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, Transform) == 0x000090, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::Transform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, ModSkeletalMesh) == 0x0000C0, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::ModSkeletalMesh' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, ModAnim) == 0x0000C8, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::ModAnim' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, ModAttachSocketName) == 0x0000D0, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::ModAttachSocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, IsPairTargetOverride) == 0x0000D8, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::IsPairTargetOverride' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, PairTargetLocation) == 0x0000DC, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::PairTargetLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, IsIgnoreSideScale) == 0x0000E8, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::IsIgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, RetValue) == 0x0000EC, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayEffectTask, CallFunc_AddPlayEffectTask2_retPecID) == 0x0000F0, "Member 'BattleActionTaskFactory_C_BI_AddPlayEffectTask::CallFunc_AddPlayEffectTask2_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddDeltaWaitTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddDeltaWaitTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDeltaWaitTask_retPecID;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddDeltaWaitTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddDeltaWaitTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddDeltaWaitTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddDeltaWaitTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDeltaWaitTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddDeltaWaitTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDeltaWaitTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddDeltaWaitTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDeltaWaitTask, DeltaTime) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddDeltaWaitTask::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDeltaWaitTask, RetValue) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddDeltaWaitTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDeltaWaitTask, CallFunc_AddDeltaWaitTask_retPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddDeltaWaitTask::CallFunc_AddDeltaWaitTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddPlayCamShake
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddPlayCamShake final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PlayID;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RowName;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 ShakeClass;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPlayCamShake_retPecID;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddPlayCamShake) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddPlayCamShake");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddPlayCamShake) == 0x000050, "Wrong size on BattleActionTaskFactory_C_BI_AddPlayCamShake");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, PlayID) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::PlayID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, RowName) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::RowName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, ShakeClass) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::ShakeClass' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, Scale) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::Scale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, RetValue) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayCamShake, CallFunc_AddPlayCamShake_retPecID) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_AddPlayCamShake::CallFunc_AddPlayCamShake_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddRadialBlurTask
// 0x0078 (0x0078 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddRadialBlurTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Damage;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAmount;                                       // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAmount;                                         // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartKeepSec;                                      // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpSec;                                           // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0054(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOrigin;                                         // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddRadialBlurTask_retPecID;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddRadialBlurTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddRadialBlurTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddRadialBlurTask) == 0x000078, "Wrong size on BattleActionTaskFactory_C_BI_AddRadialBlurTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, SocketName) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, Value) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, Sw) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, Damage) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::Damage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, StartAmount) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::StartAmount' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, EndAmount) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::EndAmount' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, StartKeepSec) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::StartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, LerpSec) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::LerpSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, Origin) == 0x000054, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::Origin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, Offset) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::Offset' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, UseOrigin) == 0x00006C, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::UseOrigin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, RetValue) == 0x000070, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRadialBlurTask, CallFunc_AddRadialBlurTask_retPecID) == 0x000074, "Member 'BattleActionTaskFactory_C_BI_AddRadialBlurTask::CallFunc_AddRadialBlurTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeDeadTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeDeadTask final
{
public:
	TArray<int32>                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DEAD_EFFECT                             DeadType;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEnemyKilled;                                 // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeDeadTask_retValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeDeadTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeDeadTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeDeadTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_MakeDeadTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, NewParam) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::NewParam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, DeltaTime) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, DeadType) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::DeadType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, Immediately) == 0x000029, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::Immediately' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, IgnoreEnemyKilled) == 0x00002A, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::IgnoreEnemyKilled' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, RetValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDeadTask, CallFunc_MakeDeadTask_retValue) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_MakeDeadTask::CallFunc_MakeDeadTask_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitAttackMoveTask
// 0x0060 (0x0060 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask final
{
public:
	TArray<int32>                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcIndex;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstIndex;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitEnd;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevDeg;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocationMove;                                    // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MoveLocation;                                      // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookLocation;                                      // 0x0044(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             AttackMotion;                                      // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitAttackMoveTask_retPecID;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask) == 0x000060, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, NewParam) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::NewParam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, SrcIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, DstIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, WaitEnd) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::WaitEnd' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, Speed) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::Speed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, RevDeg) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::RevDeg' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, IsLocationMove) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::IsLocationMove' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, MoveLocation) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::MoveLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, LookLocation) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::LookLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, AttackMotion) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::AttackMotion' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, RetValue) == 0x000054, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask, CallFunc_AddUnitAttackMoveTask_retPecID) == 0x000058, "Member 'BattleActionTaskFactory_C_BI_AddUnitAttackMoveTask::CallFunc_AddUnitAttackMoveTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddMessageTask
// 0x0060 (0x0060 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddMessageTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MessageID;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Program_no;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AddString;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Elementnumber;                                     // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShowPosition;                                      // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkillOrItemName;                                 // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillId;                                           // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillAptitude;                                     // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemId;                                            // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddMessageTask_retPecID;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddMessageTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddMessageTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddMessageTask) == 0x000060, "Wrong size on BattleActionTaskFactory_C_BI_AddMessageTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, MessageID) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::MessageID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, Program_no) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::Program_no' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, AddString) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::AddString' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, Sw) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, PlayRate) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, Elementnumber) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::Elementnumber' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, ShowPosition) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::ShowPosition' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, IsSkillOrItemName) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::IsSkillOrItemName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, SkillId) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, SkillAptitude) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::SkillAptitude' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, ItemId) == 0x000054, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::ItemId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, RetValue) == 0x000058, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddMessageTask, CallFunc_AddMessageTask_retPecID) == 0x00005C, "Member 'BattleActionTaskFactory_C_BI_AddMessageTask::CallFunc_AddMessageTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddNumEffectTask
// 0x0058 (0x0058 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddNumEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HPNum;                                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MPNum;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Type;                                              // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          HitType;                                           // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CriticalLevel;                                     // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandArea;                                          // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsResist;                                          // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PositionOffset;                                    // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_KUISHIBARI_LEVEL                            Kuishibari;                                        // 0x004D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipping;                                        // 0x004E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckTargetInCamera;                               // 0x004F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RetValue;                                          // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNumEffectTask_retPecID;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddNumEffectTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddNumEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddNumEffectTask) == 0x000058, "Wrong size on BattleActionTaskFactory_C_BI_AddNumEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, HPNum) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::HPNum' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, MPNum) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::MPNum' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, Type) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, HitType) == 0x00002D, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::HitType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, CriticalLevel) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::CriticalLevel' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, RandArea) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::RandArea' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, PlayRate) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, IsResist) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::IsResist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, PositionOffset) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::PositionOffset' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, IsDead) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::IsDead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, Kuishibari) == 0x00004D, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::Kuishibari' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, IsSkipping) == 0x00004E, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::IsSkipping' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, CheckTargetInCamera) == 0x00004F, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::CheckTargetInCamera' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, RetValue) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddNumEffectTask, CallFunc_AddNumEffectTask_retPecID) == 0x000054, "Member 'BattleActionTaskFactory_C_BI_AddNumEffectTask::CallFunc_AddNumEffectTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddPartyPanelCtrlTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PANEL_CTRL                              Ctrl;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, Value) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, Ctrl) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::Ctrl' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, Sw) == 0x000029, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, RetValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddPartyPanelCtrlTask::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitBackStepTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitBackStepTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitEnd;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AVOID_DIRECTION                             Direction;                                         // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitBackStepTask_retPecID;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitBackStepTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitBackStepTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitBackStepTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitBackStepTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitBackStepTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask, WaitEnd) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitBackStepTask::WaitEnd' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask, Direction) == 0x000025, "Member 'BattleActionTaskFactory_C_BI_AddUnitBackStepTask::Direction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask, RetValue) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnitBackStepTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitBackStepTask, CallFunc_AddUnitBackStepTask_retPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddUnitBackStepTask::CallFunc_AddUnitBackStepTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddApplyUnitStateTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddApplyUnitStateTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoCureEffect;                                      // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLecerationDam;                                   // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateLookAt;                                      // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddApplyUnitStateTask_retPecID;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddApplyUnitStateTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddApplyUnitStateTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, NoCureEffect) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::NoCureEffect' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, IsLecerationDam) == 0x000025, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::IsLecerationDam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, UpdateLookAt) == 0x000026, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::UpdateLookAt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, RetValue) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddApplyUnitStateTask, CallFunc_AddApplyUnitStateTask_retPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddApplyUnitStateTask::CallFunc_AddApplyUnitStateTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddRecomeTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddRecomeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddRecomeTask_retPecID;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddRecomeTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddRecomeTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddRecomeTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddRecomeTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRecomeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddRecomeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRecomeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddRecomeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRecomeTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddRecomeTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRecomeTask, RetValue) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddRecomeTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddRecomeTask, CallFunc_AddRecomeTask_retPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddRecomeTask::CallFunc_AddRecomeTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddInfoMessTask
// 0x0048 (0x0048 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddInfoMessTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcIndex;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstIndex;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_INFO_MESS_TIMING                      Timing;                                            // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  bst;                                               // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMaster;                                          // 0x002E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MsgID;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideDurationSec;                               // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInfoMessTask_retPecID;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddInfoMessTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddInfoMessTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddInfoMessTask) == 0x000048, "Wrong size on BattleActionTaskFactory_C_BI_AddInfoMessTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, SrcIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, DstIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, SkillId) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, Timing) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::Timing' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, bst) == 0x00002D, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, IsMaster) == 0x00002E, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::IsMaster' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, MsgID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::MsgID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, PlayRate) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, OverrideDurationSec) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::OverrideDurationSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, RetValue) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessTask, CallFunc_AddInfoMessTask_retPecID) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessTask::CallFunc_AddInfoMessTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitActionTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitActionTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_ACTION_TYPE                           Action;                                            // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Option;                                            // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FloatOption;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitActionTask_retPecID;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitActionTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitActionTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitActionTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitActionTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, Action) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::Action' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, Option) == 0x000025, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::Option' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, FloatOption) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::FloatOption' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, RetValue) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitActionTask, CallFunc_AddUnitActionTask_retPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddUnitActionTask::CallFunc_AddUnitActionTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_IsExistTaskForPecID
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_BI_IsExistTaskForPecID final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistTaskForPecID_retValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_IsExistTaskForPecID) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_BI_IsExistTaskForPecID");
static_assert(sizeof(BattleActionTaskFactory_C_BI_IsExistTaskForPecID) == 0x000008, "Wrong size on BattleActionTaskFactory_C_BI_IsExistTaskForPecID");
static_assert(offsetof(BattleActionTaskFactory_C_BI_IsExistTaskForPecID, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_IsExistTaskForPecID::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_IsExistTaskForPecID, RetValue) == 0x000004, "Member 'BattleActionTaskFactory_C_BI_IsExistTaskForPecID::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_IsExistTaskForPecID, CallFunc_IsExistTaskForPecID_retValue) == 0x000005, "Member 'BattleActionTaskFactory_C_BI_IsExistTaskForPecID::CallFunc_IsExistTaskForPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddBlankExistTask
// 0x0028 (0x0028 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddBlankExistTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBlankExistTask_retPecID;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddBlankExistTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddBlankExistTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddBlankExistTask) == 0x000028, "Wrong size on BattleActionTaskFactory_C_BI_AddBlankExistTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBlankExistTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddBlankExistTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBlankExistTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddBlankExistTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBlankExistTask, RetValue) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddBlankExistTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBlankExistTask, CallFunc_AddBlankExistTask_retPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddBlankExistTask::CallFunc_AddBlankExistTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_DestroyTaskForPecID
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_BI_DestroyTaskForPecID final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DestroyTaskForPecID_isSuccess;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_DestroyTaskForPecID) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_BI_DestroyTaskForPecID");
static_assert(sizeof(BattleActionTaskFactory_C_BI_DestroyTaskForPecID) == 0x000008, "Wrong size on BattleActionTaskFactory_C_BI_DestroyTaskForPecID");
static_assert(offsetof(BattleActionTaskFactory_C_BI_DestroyTaskForPecID, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_DestroyTaskForPecID::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_DestroyTaskForPecID, IsSuccess) == 0x000004, "Member 'BattleActionTaskFactory_C_BI_DestroyTaskForPecID::IsSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_DestroyTaskForPecID, CallFunc_DestroyTaskForPecID_isSuccess) == 0x000005, "Member 'BattleActionTaskFactory_C_BI_DestroyTaskForPecID::CallFunc_DestroyTaskForPecID_isSuccess' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddPlaySETask
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddPlaySETask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SEName;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Data;                                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlay2D;                                          // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnorePlayRate;                                    // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPlaySETask_retPecID;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddPlaySETask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddPlaySETask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddPlaySETask) == 0x000050, "Wrong size on BattleActionTaskFactory_C_BI_AddPlaySETask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, SEName) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::SEName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, Data) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, Location) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::Location' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, IsPlay2D) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::IsPlay2D' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, IgnorePlayRate) == 0x000045, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, RetValue) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySETask, CallFunc_AddPlaySETask_retPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddPlaySETask::CallFunc_AddPlaySETask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_PrintTaskType
// 0x0001 (0x0001 - 0x0000)
struct BattleActionTaskFactory_C_BI_PrintTaskType final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_PrintTaskType) == 0x000001, "Wrong alignment on BattleActionTaskFactory_C_BI_PrintTaskType");
static_assert(sizeof(BattleActionTaskFactory_C_BI_PrintTaskType) == 0x000001, "Wrong size on BattleActionTaskFactory_C_BI_PrintTaskType");
static_assert(offsetof(BattleActionTaskFactory_C_BI_PrintTaskType, RetValue) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_PrintTaskType::RetValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddAnimationCameraTask
// 0x00D0 (0x00D0 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddAnimationCameraTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECameraAnimationSpace                         Space;                                             // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  CameraAsset;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         BlendInTime;                                       // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShowActorIndex;                                    // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsParty;                                           // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShowTargetIndex;                                   // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusTarget;                                       // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusActor;                                        // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CameraAsset2nd;                                    // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpAlpha;                                         // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 VisiblePartyIndexes;                               // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 InvisiblePartyIndexes;                             // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CleanUp;                                           // 0x00C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUseTargetScale;                                  // 0x00C1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x00C4(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddAnimationCameraTask_retPecID;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_AddAnimationCameraTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask) == 0x0000D0, "Wrong size on BattleActionTaskFactory_C_BI_AddAnimationCameraTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, Rate) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::Rate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, Space) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::Space' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, CameraAsset) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::CameraAsset' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, SpawnTransform) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, BlendInTime) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, BlendOutTime) == 0x000064, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, ShowActorIndex) == 0x000068, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::ShowActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, IsParty) == 0x00006C, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::IsParty' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, ShowTargetIndex) == 0x000070, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::ShowTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, FocusTarget) == 0x000074, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::FocusTarget' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, FocusActor) == 0x000078, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::FocusActor' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, SocketName) == 0x000080, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, CameraAsset2nd) == 0x000090, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::CameraAsset2nd' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, LerpAlpha) == 0x000098, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, VisiblePartyIndexes) == 0x0000A0, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::VisiblePartyIndexes' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, InvisiblePartyIndexes) == 0x0000B0, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::InvisiblePartyIndexes' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, CleanUp) == 0x0000C0, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::CleanUp' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, IsUseTargetScale) == 0x0000C1, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::IsUseTargetScale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, RetPecID) == 0x0000C4, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddAnimationCameraTask, CallFunc_AddAnimationCameraTask_retPecID) == 0x0000C8, "Member 'BattleActionTaskFactory_C_BI_AddAnimationCameraTask::CallFunc_AddAnimationCameraTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddCallSummonTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddCallSummonTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCallSummonTask_retPecID;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddCallSummonTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddCallSummonTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddCallSummonTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddCallSummonTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSummonTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddCallSummonTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSummonTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddCallSummonTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSummonTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddCallSummonTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSummonTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddCallSummonTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSummonTask, CallFunc_AddCallSummonTask_retPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddCallSummonTask::CallFunc_AddCallSummonTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddCallSkillEventTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddCallSkillEventTask final
{
public:
	TArray<int32>                                 WaitCommandIndex;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Step;                                              // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainSec;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCallSkillEventTask_retPecID;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddCallSkillEventTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddCallSkillEventTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask, WaitCommandIndex) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddCallSkillEventTask::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddCallSkillEventTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddCallSkillEventTask::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask, Step) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddCallSkillEventTask::Step' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask, RemainSec) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddCallSkillEventTask::RemainSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddCallSkillEventTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCallSkillEventTask, CallFunc_AddCallSkillEventTask_retPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddCallSkillEventTask::CallFunc_AddCallSkillEventTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitMoveTask
// 0x0050 (0x0050 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitMoveTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveTargetPos;                                     // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookTargetPos;                                     // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookSpeed;                                         // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMoveFinish;                                    // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitMoveTask_retPecID;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitMoveTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitMoveTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitMoveTask) == 0x000050, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitMoveTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, MoveTargetPos) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::MoveTargetPos' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, LookTargetPos) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::LookTargetPos' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, MoveTime) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::MoveTime' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, LookSpeed) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::LookSpeed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, WaitMoveFinish) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::WaitMoveFinish' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, RetPecID) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitMoveTask, CallFunc_AddUnitMoveTask_retPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddUnitMoveTask::CallFunc_AddUnitMoveTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddDisplayFadeTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddDisplayFadeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsFadeOut;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsWhite;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationSec;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDisplayFadeTask_retPecID;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddDisplayFadeTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddDisplayFadeTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddDisplayFadeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddDisplayFadeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask, IsFadeOut) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddDisplayFadeTask::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask, IsWhite) == 0x000021, "Member 'BattleActionTaskFactory_C_BI_AddDisplayFadeTask::IsWhite' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask, DurationSec) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddDisplayFadeTask::DurationSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddDisplayFadeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDisplayFadeTask, CallFunc_AddDisplayFadeTask_retPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddDisplayFadeTask::CallFunc_AddDisplayFadeTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddHitLightTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddHitLightTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                SkillInstance;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddHitLightTask_retPecID;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddHitLightTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddHitLightTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddHitLightTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddHitLightTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddHitLightTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddHitLightTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddHitLightTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddHitLightTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddHitLightTask, SkillInstance) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddHitLightTask::SkillInstance' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddHitLightTask, TargetIndex) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddHitLightTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddHitLightTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddHitLightTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddHitLightTask, CallFunc_AddHitLightTask_retPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddHitLightTask::CallFunc_AddHitLightTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddDecalTask2
// 0x00D0 (0x00D0 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddDecalTask2 final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x004C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideLifeSec;                                   // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         LocationType;                                      // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0068(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPutOnPartyCenter;                                // 0x007C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PartyCenterRelativeTrans;                          // 0x0080(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          AbsolutelyNoRotation;                              // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCastOnlyStaticMesh;                              // 0x00B1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> SkillActionBase;                                   // 0x00B8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x00C8(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDecalTask_retPecID;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddDecalTask2) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_AddDecalTask2");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddDecalTask2) == 0x0000D0, "Wrong size on BattleActionTaskFactory_C_BI_AddDecalTask2");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, DecalMaterial) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, MaterialAnimSetting) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, DecalSize) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, OffsetLocation) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, AttachPointName) == 0x000058, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, OverrideLifeSec) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::OverrideLifeSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, LocationType) == 0x000064, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::LocationType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, Rotation) == 0x000068, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::Rotation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, RotationRandMin) == 0x000074, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, RotationRandMax) == 0x000078, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, IsPutOnPartyCenter) == 0x00007C, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::IsPutOnPartyCenter' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, PartyCenterRelativeTrans) == 0x000080, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::PartyCenterRelativeTrans' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, AbsolutelyNoRotation) == 0x0000B0, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, IsCastOnlyStaticMesh) == 0x0000B1, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::IsCastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, SkillActionBase) == 0x0000B8, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::SkillActionBase' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, RetPecID) == 0x0000C8, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalTask2, CallFunc_AddDecalTask_retPecID) == 0x0000CC, "Member 'BattleActionTaskFactory_C_BI_AddDecalTask2::CallFunc_AddDecalTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddSkillLightTask
// 0x0090 (0x0090 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddSkillLightTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         LightParam;                                        // 0x0020(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSkillLightTask_retPecID;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddSkillLightTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddSkillLightTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddSkillLightTask) == 0x000090, "Wrong size on BattleActionTaskFactory_C_BI_AddSkillLightTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSkillLightTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddSkillLightTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSkillLightTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddSkillLightTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSkillLightTask, LightParam) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddSkillLightTask::LightParam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSkillLightTask, RetPecID) == 0x000088, "Member 'BattleActionTaskFactory_C_BI_AddSkillLightTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSkillLightTask, CallFunc_AddSkillLightTask_retPecID) == 0x00008C, "Member 'BattleActionTaskFactory_C_BI_AddSkillLightTask::CallFunc_AddSkillLightTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitStayDirToTargetTask
// 0x0048 (0x0048 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcIndex;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstIndex;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseVector;                                         // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookPoint;                                         // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitStayDirToTargetTask_retPecID;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask) == 0x000048, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, SrcIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, DstIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, Speed) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::Speed' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, UseVector) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::UseVector' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, LookPoint) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::LookPoint' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, RetPecID) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask, CallFunc_AddUnitStayDirToTargetTask_retPecID) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddUnitStayDirToTargetTask::CallFunc_AddUnitStayDirToTargetTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddExtActMessTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddExtActMessTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            ExtraAction;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddExtActMessTask_retPecID;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddExtActMessTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddExtActMessTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddExtActMessTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddExtActMessTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, ExtraAction) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, Time) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::Time' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, ActorIndex) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, TargetIndex) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddExtActMessTask, CallFunc_AddExtActMessTask_retPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddExtActMessTask::CallFunc_AddExtActMessTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddDecalToEffectTask
// 0x0090 (0x0090 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddDecalToEffectTask final
{
public:
	TArray<int32>                                 WaitCommandIndex;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Material;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         AnimSetting;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         LoopTimes;                                         // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CycleSec;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotRandMin;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotRandMax;                                        // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0054(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EffectID;                                          // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          AbsolutelyNoRotation;                              // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCastOnlyStaticMesh;                              // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> SkillActionBase;                                   // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDecalToEffectTask_retPecID;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddDecalToEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask) == 0x000090, "Wrong size on BattleActionTaskFactory_C_BI_AddDecalToEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, WaitCommandIndex) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, Material) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::Material' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, AnimSetting) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::AnimSetting' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, LoopTimes) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::LoopTimes' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, CycleSec) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::CycleSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, Rotation) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::Rotation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, RotRandMin) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::RotRandMin' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, RotRandMax) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::RotRandMax' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, Size) == 0x000054, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::Size' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, EffectID) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::EffectID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, AbsolutelyNoRotation) == 0x000070, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, IsCastOnlyStaticMesh) == 0x000071, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::IsCastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, SkillActionBase) == 0x000078, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::SkillActionBase' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, RetPecID) == 0x000088, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDecalToEffectTask, CallFunc_AddDecalToEffectTask_retPecID) == 0x00008C, "Member 'BattleActionTaskFactory_C_BI_AddDecalToEffectTask::CallFunc_AddDecalToEffectTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_GetTaskForPecID
// 0x0018 (0x0018 - 0x0000)
struct BattleActionTaskFactory_C_BI_GetTaskForPecID final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActionTask;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleActionTask_C*                    CallFunc_GetTaskForPecID_retValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_GetTaskForPecID) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_GetTaskForPecID");
static_assert(sizeof(BattleActionTaskFactory_C_BI_GetTaskForPecID) == 0x000018, "Wrong size on BattleActionTaskFactory_C_BI_GetTaskForPecID");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetTaskForPecID, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_GetTaskForPecID::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetTaskForPecID, ActionTask) == 0x000008, "Member 'BattleActionTaskFactory_C_BI_GetTaskForPecID::ActionTask' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetTaskForPecID, CallFunc_GetTaskForPecID_retValue) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_GetTaskForPecID::CallFunc_GetTaskForPecID_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddSetUnitShake
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddSetUnitShake final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Magnitude;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitShakeFinish;                                   // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSetUnitShake_retPecID;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddSetUnitShake) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddSetUnitShake");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddSetUnitShake) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddSetUnitShake");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, Magnitude) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::Magnitude' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, Time) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::Time' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, WaitShakeFinish) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::WaitShakeFinish' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetUnitShake, CallFunc_AddSetUnitShake_retPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddSetUnitShake::CallFunc_AddSetUnitShake_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUtilIconTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUtilIconTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          IconType;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipping;                                        // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUtilIconTask_retPecID;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUtilIconTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUtilIconTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUtilIconTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddUtilIconTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, IconType) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::IconType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, PlayRate) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, IsSkipping) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::IsSkipping' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUtilIconTask, CallFunc_AddUtilIconTask_retPecID) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddUtilIconTask::CallFunc_AddUtilIconTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddPlaySEUnitAttachTask
// 0x0060 (0x0060 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SEName;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Data;                                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IgnorePlayRate;                                    // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPlaySEUnitAttachTask_retPecID;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask) == 0x000060, "Wrong size on BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, SEName) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::SEName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, Data) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::Data' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, TargetIndex) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, SocketName) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::SocketName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, IgnorePlayRate) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, RetPecID) == 0x000054, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask, CallFunc_AddPlaySEUnitAttachTask_retPecID) == 0x000058, "Member 'BattleActionTaskFactory_C_BI_AddPlaySEUnitAttachTask::CallFunc_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeAddMagGaugeTask
// 0x0048 (0x0048 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AddMagGauge;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RetPecID;                                          // 0x0028(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_MakeAddMagGauge_retPecID;                 // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask) == 0x000048, "Wrong size on BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask, AddMagGauge) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask::AddMagGauge' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask, TargetIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask, CallFunc_MakeAddMagGauge_retPecID) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_MakeAddMagGaugeTask::CallFunc_MakeAddMagGauge_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddReichiPointTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddReichiPointTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AddValue;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddReichiPointTask_retPecID;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddReichiPointTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddReichiPointTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddReichiPointTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddReichiPointTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddReichiPointTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddReichiPointTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddReichiPointTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddReichiPointTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddReichiPointTask, AddValue) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddReichiPointTask::AddValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddReichiPointTask, PlayRate) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddReichiPointTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddReichiPointTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddReichiPointTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddReichiPointTask, CallFunc_AddReichiPointTask_retPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddReichiPointTask::CallFunc_AddReichiPointTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddPlayAbsorptionEffectTask
// 0x0058 (0x0058 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AbsorptionPointSocket;                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AbsorptionPointOffset;                             // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           AbsorptionRadius;                                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReverse;                                         // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPlayAbsorptionEffectTask_retPecID;     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask) == 0x000058, "Wrong size on BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, ActorIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, TargetIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, AbsorptionPointSocket) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::AbsorptionPointSocket' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, AbsorptionPointOffset) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::AbsorptionPointOffset' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, AbsorptionRadius) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::AbsorptionRadius' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, IsReverse) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::IsReverse' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, RetPecID) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask, CallFunc_AddPlayAbsorptionEffectTask_retPecID) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_AddPlayAbsorptionEffectTask::CallFunc_AddPlayAbsorptionEffectTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_BeginHitStop
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_BeginHitStop final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BeginHitStopTask_retPecID;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_BeginHitStop) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_BeginHitStop");
static_assert(sizeof(BattleActionTaskFactory_C_BI_BeginHitStop) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_BeginHitStop");
static_assert(offsetof(BattleActionTaskFactory_C_BI_BeginHitStop, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_BeginHitStop::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_BeginHitStop, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_BeginHitStop::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_BeginHitStop, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_BeginHitStop::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_BeginHitStop, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_BeginHitStop::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_BeginHitStop, CallFunc_BeginHitStopTask_retPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_BeginHitStop::CallFunc_BeginHitStopTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddCameraDOFTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddCameraDOFTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         FocalDistance;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DurationSec;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCameraDOFTask_RetPecID;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddCameraDOFTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddCameraDOFTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddCameraDOFTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_AddCameraDOFTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCameraDOFTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddCameraDOFTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCameraDOFTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddCameraDOFTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCameraDOFTask, FocalDistance) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddCameraDOFTask::FocalDistance' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCameraDOFTask, Scale) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddCameraDOFTask::Scale' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCameraDOFTask, DurationSec) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddCameraDOFTask::DurationSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCameraDOFTask, RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddCameraDOFTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCameraDOFTask, CallFunc_AddCameraDOFTask_RetPecID) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddCameraDOFTask::CallFunc_AddCameraDOFTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_GetTaskTypeTaskCnt
// 0x000C (0x000C - 0x0000)
struct BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt final
{
public:
	E_BTL_TASK_COM                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cnt;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaskTypeTaskCnt_retCnt;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt");
static_assert(sizeof(BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt) == 0x00000C, "Wrong size on BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt, Type) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt, Cnt) == 0x000004, "Member 'BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt::Cnt' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt, CallFunc_GetTaskTypeTaskCnt_retCnt) == 0x000008, "Member 'BattleActionTaskFactory_C_BI_GetTaskTypeTaskCnt::CallFunc_GetTaskTypeTaskCnt_retCnt' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddPressIconTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddPressIconTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PRESS_TYPE                              PressType;                                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoCalcAndApply;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPressIconTask_RetPecID;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddPressIconTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddPressIconTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddPressIconTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddPressIconTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPressIconTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddPressIconTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPressIconTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddPressIconTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPressIconTask, PlayRate) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddPressIconTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPressIconTask, PressType) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddPressIconTask::PressType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPressIconTask, DoCalcAndApply) == 0x000025, "Member 'BattleActionTaskFactory_C_BI_AddPressIconTask::DoCalcAndApply' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPressIconTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddPressIconTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddPressIconTask, CallFunc_AddPressIconTask_RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddPressIconTask::CallFunc_AddPressIconTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUpliftingTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUpliftingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUpliftingTask_RetPecID;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUpliftingTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUpliftingTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUpliftingTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddUpliftingTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUpliftingTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUpliftingTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUpliftingTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUpliftingTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUpliftingTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUpliftingTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUpliftingTask, Sw) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUpliftingTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUpliftingTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUpliftingTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUpliftingTask, CallFunc_AddUpliftingTask_RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddUpliftingTask::CallFunc_AddUpliftingTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddFirstSettingTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddFirstSettingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PecID;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddFirstSettingTask_RetPecID;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddFirstSettingTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddFirstSettingTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddFirstSettingTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddFirstSettingTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddFirstSettingTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddFirstSettingTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddFirstSettingTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddFirstSettingTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddFirstSettingTask, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddFirstSettingTask::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddFirstSettingTask, PecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddFirstSettingTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddFirstSettingTask, CallFunc_AddFirstSettingTask_RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddFirstSettingTask::CallFunc_AddFirstSettingTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddBeHomeSideAllTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeSideAllTask_RetPecID;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask, Side) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask::Side' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask, PecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask, CallFunc_AddBeHomeSideAllTask_RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeSideAllTask::CallFunc_AddBeHomeSideAllTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitVisibilitySideAll
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll, Side) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll::Side' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll, Sw) == 0x000021, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll, PecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll, CallFunc_AddUnitVisibilitySideAllTask_RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilitySideAll::CallFunc_AddUnitVisibilitySideAllTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeDamageTask
// 0x0078 (0x0078 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeDamageTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         Type;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HpDamage;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpDamage;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bst;                                               // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeadType;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HP1;                                               // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Tasklist;                                          // 0x0050(0x0010)(Parm, OutParm)
	bool                                          CallFunc_MakeDamageTask_retValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeDamageTask_TaskList;                  // 0x0068(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeDamageTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeDamageTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeDamageTask) == 0x000078, "Wrong size on BattleActionTaskFactory_C_BI_MakeDamageTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, Type) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, HpDamage) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::HpDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, MpDamage) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::MpDamage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, bst) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::bst' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, Dead) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::Dead' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, DeadType) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::DeadType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, HP1) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::HP1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, PlayRate) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, Ret) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::Ret' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, Tasklist) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::Tasklist' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, CallFunc_MakeDamageTask_retValue) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::CallFunc_MakeDamageTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeDamageTask, CallFunc_MakeDamageTask_TaskList) == 0x000068, "Member 'BattleActionTaskFactory_C_BI_MakeDamageTask::CallFunc_MakeDamageTask_TaskList' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddBeHomeTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddBeHomeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PecID;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeTask_RetPecID;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddBeHomeTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddBeHomeTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddBeHomeTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddBeHomeTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeTask, PecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddBeHomeTask, CallFunc_AddBeHomeTask_RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddBeHomeTask::CallFunc_AddBeHomeTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitVisibilityTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitVisibilityTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ParticleInterlock;                                 // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitVisibilityTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitVisibilityTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilityTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilityTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilityTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask, Sw) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilityTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask, ParticleInterlock) == 0x000025, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilityTask::ParticleInterlock' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask, PecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilityTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitVisibilityTask, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddUnitVisibilityTask::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddSetActorTransformTask
// 0x0070 (0x0070 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddSetActorTransformTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSetActorTransformTask_RetPecID;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_AddSetActorTransformTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask) == 0x000070, "Wrong size on BattleActionTaskFactory_C_BI_AddSetActorTransformTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddSetActorTransformTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddSetActorTransformTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddSetActorTransformTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask, Transform) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddSetActorTransformTask::Transform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask, RetPecID) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddSetActorTransformTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSetActorTransformTask, CallFunc_AddSetActorTransformTask_RetPecID) == 0x000064, "Member 'BattleActionTaskFactory_C_BI_AddSetActorTransformTask::CallFunc_AddSetActorTransformTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddSummonTsukuyomiTask
// 0x0028 (0x0028 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSummonTsukuyomiTask_RetPecID;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask) == 0x000028, "Wrong size on BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask, CallFunc_AddSummonTsukuyomiTask_RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddSummonTsukuyomiTask::CallFunc_AddSummonTsukuyomiTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddDrawPlayerUpliftingGaugeTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          SpendGaugeOnly;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask, SpendGaugeOnly) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask::SpendGaugeOnly' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask, CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddDrawPlayerUpliftingGaugeTask::CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeUpliftingTask
// 0x0038 (0x0038 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeUpliftingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret;                                               // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_MakeUpliftingTask_retPecID;               // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeUpliftingTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeUpliftingTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeUpliftingTask) == 0x000038, "Wrong size on BattleActionTaskFactory_C_BI_MakeUpliftingTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeUpliftingTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeUpliftingTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeUpliftingTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeUpliftingTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeUpliftingTask, Side) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeUpliftingTask::Side' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeUpliftingTask, Sw) == 0x000021, "Member 'BattleActionTaskFactory_C_BI_MakeUpliftingTask::Sw' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeUpliftingTask, Ret) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeUpliftingTask::Ret' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeUpliftingTask, CallFunc_MakeUpliftingTask_retPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeUpliftingTask::CallFunc_MakeUpliftingTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_TaskSort
// 0x0070 (0x0070 - 0x0000)
struct BattleActionTaskFactory_C_BI_TaskSort final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsUseOld;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABattleActorBase*>               Lo_Tasks;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleTaskArray                       K2Node_MakeStruct_BattleTaskArray;                 // 0x0028(0x0010)()
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleTaskArray                       CallFunc_Map_Find_Value;                           // 0x0058(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_TaskSort) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_TaskSort");
static_assert(sizeof(BattleActionTaskFactory_C_BI_TaskSort) == 0x000070, "Wrong size on BattleActionTaskFactory_C_BI_TaskSort");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, NoUse) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_TaskSort::NoUse' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, Lo_IsUseOld) == 0x000001, "Member 'BattleActionTaskFactory_C_BI_TaskSort::Lo_IsUseOld' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, Lo_Tasks) == 0x000008, "Member 'BattleActionTaskFactory_C_BI_TaskSort::Lo_Tasks' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleActionTaskFactory_C_BI_TaskSort::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleActionTaskFactory_C_BI_TaskSort::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, K2Node_MakeStruct_BattleTaskArray) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_TaskSort::K2Node_MakeStruct_BattleTaskArray' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Map_Remove_ReturnValue) == 0x000051, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Map_Find_Value) == 0x000058, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_TaskSort, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BattleActionTaskFactory_C_BI_TaskSort::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddInfoMessByLabelTask
// 0x0048 (0x0048 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Label;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectSkillScriptMessage;                          // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInfoMessByLabelTask_RetPecID;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask) == 0x000048, "Wrong size on BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, Label) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::Label' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, PartyIndex) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, SelectSkillScriptMessage) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::SelectSkillScriptMessage' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, PlayRate) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, RetPecID) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask, CallFunc_AddInfoMessByLabelTask_RetPecID) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddInfoMessByLabelTask::CallFunc_AddInfoMessByLabelTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddCamRailTask
// 0x0048 (0x0048 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddCamRailTask final
{
public:
	TArray<int32>                                 WaiitTaskList;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CAM_TYPE                                Type;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InterpWait;                                        // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ManualName;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          StopWait;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaWait;                                         // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PecID;                                             // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddCamRailTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddCamRailTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddCamRailTask) == 0x000048, "Wrong size on BattleActionTaskFactory_C_BI_AddCamRailTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, WaiitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::WaiitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, Type) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, InterpWait) == 0x000025, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::InterpWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, ManualName) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::ManualName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, StopWait) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::StopWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, DeltaWait) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::DeltaWait' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, PecID) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCamRailTask, CallFunc_AddCamRailTask_retPecID) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddCamRailTask::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeKuishibariInfoTask
// 0x0070 (0x0070 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param1Index;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RetPecIDs;                                         // 0x0030(0x0010)(Parm, OutParm)
	TArray<int32>                                 WaitPecIDs;                                        // 0x0040(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_MakeKuishibariInfoTask_RetPecIDs;         // 0x0050(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_MakeKuishibariInfoTask_WaitIDs;           // 0x0060(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask) == 0x000070, "Wrong size on BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, Param1Index) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::Param1Index' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, SkillId) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::SkillId' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, PlayRate) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, RetPecIDs) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::RetPecIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, WaitPecIDs) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::WaitPecIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, CallFunc_MakeKuishibariInfoTask_RetPecIDs) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::CallFunc_MakeKuishibariInfoTask_RetPecIDs' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask, CallFunc_MakeKuishibariInfoTask_WaitIDs) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_MakeKuishibariInfoTask::CallFunc_MakeKuishibariInfoTask_WaitIDs' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddStopAllSE Task
// 0x0028 (0x0028 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddStopAllSE_Task final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PecID;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddStopAllSE_Task_RetPecID;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddStopAllSE_Task) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddStopAllSE_Task");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddStopAllSE_Task) == 0x000028, "Wrong size on BattleActionTaskFactory_C_BI_AddStopAllSE_Task");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllSE_Task, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddStopAllSE_Task::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllSE_Task, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddStopAllSE_Task::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllSE_Task, PecID) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddStopAllSE_Task::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllSE_Task, CallFunc_AddStopAllSE_Task_RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddStopAllSE_Task::CallFunc_AddStopAllSE_Task_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_ForceUpdate
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_ForceUpdate final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_ForceUpdate) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_ForceUpdate");
static_assert(sizeof(BattleActionTaskFactory_C_BI_ForceUpdate) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_ForceUpdate");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, NoUse) == 0x000004, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::NoUse' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ForceUpdate, CallFunc_IsFinished_retValue) == 0x00002A, "Member 'BattleActionTaskFactory_C_BI_ForceUpdate::CallFunc_IsFinished_retValue' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddIgnoreSkillSkipTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                SkillAction;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddIgnoreSkillSkipTask_RetPecID;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask, SkillAction) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask::SkillAction' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask, CallFunc_AddIgnoreSkillSkipTask_RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_AddIgnoreSkillSkipTask::CallFunc_AddIgnoreSkillSkipTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddStopAllParticleTask
// 0x0028 (0x0028 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddStopAllParticleTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddStopAllParticle_Task_RetPecID;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddStopAllParticleTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddStopAllParticleTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddStopAllParticleTask) == 0x000028, "Wrong size on BattleActionTaskFactory_C_BI_AddStopAllParticleTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllParticleTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddStopAllParticleTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllParticleTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddStopAllParticleTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllParticleTask, RetPecID) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddStopAllParticleTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddStopAllParticleTask, CallFunc_AddStopAllParticle_Task_RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddStopAllParticleTask::CallFunc_AddStopAllParticle_Task_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_OpenTutorialWindowTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_OpenTutorialWindowTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_TUTORIAL_WINDOW_MESSAGE_TYPE                TutorialType;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OpenRemainSec;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_OpenTutorialWindowTask_RetPecID;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_OpenTutorialWindowTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_OpenTutorialWindowTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_OpenTutorialWindowTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_OpenTutorialWindowTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask, TutorialType) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_OpenTutorialWindowTask::TutorialType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask, OpenRemainSec) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_OpenTutorialWindowTask::OpenRemainSec' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask, RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_OpenTutorialWindowTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OpenTutorialWindowTask, CallFunc_OpenTutorialWindowTask_RetPecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_OpenTutorialWindowTask::CallFunc_OpenTutorialWindowTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitModelLoadTask
// 0x0070 (0x0070 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitModelLoadTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Load_ID;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         PartyIndex;                                        // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RegisterAsAnEnemy;                                 // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret_PecID;                                         // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitModelLoadTask_retPecID;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitModelLoadTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask) == 0x000070, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitModelLoadTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, Load_ID) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::Load_ID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, SpawnTransform) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, PartyIndex) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, RegisterAsAnEnemy) == 0x000064, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::RegisterAsAnEnemy' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, Ret_PecID) == 0x000068, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitModelLoadTask, CallFunc_AddUnitModelLoadTask_retPecID) == 0x00006C, "Member 'BattleActionTaskFactory_C_BI_AddUnitModelLoadTask::CallFunc_AddUnitModelLoadTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnitScaleResetTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnitScaleResetTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret_PecID;                                         // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitScaleResetTask_Ret_PecID;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnitScaleResetTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnitScaleResetTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnitScaleResetTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddUnitScaleResetTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitScaleResetTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnitScaleResetTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitScaleResetTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnitScaleResetTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitScaleResetTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnitScaleResetTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitScaleResetTask, Ret_PecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnitScaleResetTask::Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnitScaleResetTask, CallFunc_AddUnitScaleResetTask_Ret_PecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnitScaleResetTask::CallFunc_AddUnitScaleResetTask_Ret_PecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddCtrlPostProcess
// 0x0048 (0x0048 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddCtrlPostProcess final
{
public:
	TArray<int32>                                 WaitTaskIndex;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              PostMaterials;                                     // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         PecID;                                             // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCtrlPostProcessTask_Ret_PecID;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddCtrlPostProcess");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess) == 0x000048, "Wrong size on BattleActionTaskFactory_C_BI_AddCtrlPostProcess");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess, WaitTaskIndex) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddCtrlPostProcess::WaitTaskIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddCtrlPostProcess::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess, PostMaterials) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddCtrlPostProcess::PostMaterials' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess, MaterialAnimSetting) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddCtrlPostProcess::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess, PecID) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_AddCtrlPostProcess::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlPostProcess, CallFunc_AddCtrlPostProcessTask_Ret_PecID) == 0x000044, "Member 'BattleActionTaskFactory_C_BI_AddCtrlPostProcess::CallFunc_AddCtrlPostProcessTask_Ret_PecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddSummonTask
// 0x0080 (0x0080 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddSummonTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcIndex;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstIndex;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseForceTransform;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ForceTransform;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                ReturnEffectLocation;                              // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGodSkillSummon;                                  // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddSummonTask_retPecID;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddSummonTask) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_AddSummonTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddSummonTask) == 0x000080, "Wrong size on BattleActionTaskFactory_C_BI_AddSummonTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, SrcIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, DstIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::DstIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, UseForceTransform) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::UseForceTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, ForceTransform) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::ForceTransform' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, ReturnEffectLocation) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::ReturnEffectLocation' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, IsGodSkillSummon) == 0x00006C, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::IsGodSkillSummon' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, RetPecID) == 0x000070, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddSummonTask, CallFunc_AddSummonTask_retPecID) == 0x000074, "Member 'BattleActionTaskFactory_C_BI_AddSummonTask::CallFunc_AddSummonTask_retPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeCureTask
// 0x0040 (0x0040 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeCureTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SrcPartyIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstPartyIndex;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CURE                                    Type;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HpCure;                                            // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpCure;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bstCure;                                           // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret;                                               // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeCureTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeCureTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeCureTask) == 0x000040, "Wrong size on BattleActionTaskFactory_C_BI_MakeCureTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, SrcPartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::SrcPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, DstPartyIndex) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::DstPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, Type) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::Type' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, HpCure) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::HpCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, MpCure) == 0x000030, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::MpCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, bstCure) == 0x000034, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::bstCure' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCureTask, Ret) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_MakeCureTask::Ret' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakePartyPanelShowTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakePartyPanelShowTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         WaitAfterShow;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakePartyPanelShowTask_RetPecID;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakePartyPanelShowTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakePartyPanelShowTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakePartyPanelShowTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_MakePartyPanelShowTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakePartyPanelShowTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakePartyPanelShowTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakePartyPanelShowTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakePartyPanelShowTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakePartyPanelShowTask, WaitAfterShow) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakePartyPanelShowTask::WaitAfterShow' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakePartyPanelShowTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakePartyPanelShowTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakePartyPanelShowTask, CallFunc_MakePartyPanelShowTask_RetPecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakePartyPanelShowTask::CallFunc_MakePartyPanelShowTask_RetPecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeCloseUpCameraTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CAM_TYPE                                CamType;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HaveToBeHome;                                      // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeCloseUpCameraTask_PecID;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask, PartyIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask, CamType) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask::CamType' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask, HaveToBeHome) == 0x000025, "Member 'BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask::HaveToBeHome' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask, PecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask, CallFunc_MakeCloseUpCameraTask_PecID) == 0x00002C, "Member 'BattleActionTaskFactory_C_BI_MakeCloseUpCameraTask::CallFunc_MakeCloseUpCameraTask_PecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_ClearValidArray
// 0x0001 (0x0001 - 0x0000)
struct BattleActionTaskFactory_C_BI_ClearValidArray final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_ClearValidArray) == 0x000001, "Wrong alignment on BattleActionTaskFactory_C_BI_ClearValidArray");
static_assert(sizeof(BattleActionTaskFactory_C_BI_ClearValidArray) == 0x000001, "Wrong size on BattleActionTaskFactory_C_BI_ClearValidArray");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ClearValidArray, NoUse) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_ClearValidArray::NoUse' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_GetUpdateTimes
// 0x0004 (0x0004 - 0x0000)
struct BattleActionTaskFactory_C_BI_GetUpdateTimes final
{
public:
	int32                                         TickTimes;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_GetUpdateTimes) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_BI_GetUpdateTimes");
static_assert(sizeof(BattleActionTaskFactory_C_BI_GetUpdateTimes) == 0x000004, "Wrong size on BattleActionTaskFactory_C_BI_GetUpdateTimes");
static_assert(offsetof(BattleActionTaskFactory_C_BI_GetUpdateTimes, TickTimes) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_GetUpdateTimes::TickTimes' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_IsTerminalTask
// 0x0008 (0x0008 - 0x0000)
struct BattleActionTaskFactory_C_BI_IsTerminalTask final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTerminal;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTerminalTask_IsTerminal;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_IsTerminalTask) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_BI_IsTerminalTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_IsTerminalTask) == 0x000008, "Wrong size on BattleActionTaskFactory_C_BI_IsTerminalTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_IsTerminalTask, PecID) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_IsTerminalTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_IsTerminalTask, IsTerminal) == 0x000004, "Member 'BattleActionTaskFactory_C_BI_IsTerminalTask::IsTerminal' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_IsTerminalTask, CallFunc_IsTerminalTask_IsTerminal) == 0x000005, "Member 'BattleActionTaskFactory_C_BI_IsTerminalTask::CallFunc_IsTerminalTask_IsTerminal' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_OutputDebugTaskInfo
// 0x0028 (0x0028 - 0x0000)
struct BattleActionTaskFactory_C_BI_OutputDebugTaskInfo final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Filename;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_OutputDebugTaskInfo) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_OutputDebugTaskInfo");
static_assert(sizeof(BattleActionTaskFactory_C_BI_OutputDebugTaskInfo) == 0x000028, "Wrong size on BattleActionTaskFactory_C_BI_OutputDebugTaskInfo");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OutputDebugTaskInfo, FilePath) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_OutputDebugTaskInfo::FilePath' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OutputDebugTaskInfo, Filename) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_OutputDebugTaskInfo::Filename' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_OutputDebugTaskInfo, NoUse) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_OutputDebugTaskInfo::NoUse' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddDebugTaskInfo
// 0x0100 (0x0100 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddDebugTaskInfo final
{
public:
	class FString                                 Info;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FDebugBattleTaskInfo                   TaskInfo;                                          // 0x0010(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NoUse;                                             // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddDebugTaskInfo) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_AddDebugTaskInfo");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddDebugTaskInfo) == 0x000100, "Wrong size on BattleActionTaskFactory_C_BI_AddDebugTaskInfo");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDebugTaskInfo, Info) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddDebugTaskInfo::Info' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDebugTaskInfo, TaskInfo) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddDebugTaskInfo::TaskInfo' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddDebugTaskInfo, NoUse) == 0x0000F0, "Member 'BattleActionTaskFactory_C_BI_AddDebugTaskInfo::NoUse' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_ResetDebugTaskInfo
// 0x0001 (0x0001 - 0x0000)
struct BattleActionTaskFactory_C_BI_ResetDebugTaskInfo final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_ResetDebugTaskInfo) == 0x000001, "Wrong alignment on BattleActionTaskFactory_C_BI_ResetDebugTaskInfo");
static_assert(sizeof(BattleActionTaskFactory_C_BI_ResetDebugTaskInfo) == 0x000001, "Wrong size on BattleActionTaskFactory_C_BI_ResetDebugTaskInfo");
static_assert(offsetof(BattleActionTaskFactory_C_BI_ResetDebugTaskInfo, NoUse) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_ResetDebugTaskInfo::NoUse' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddResetCharaParticleTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddResetCharaParticleTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddResetCharaParticleTask_Ret_PecID;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddResetCharaParticleTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddResetCharaParticleTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddResetCharaParticleTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddResetCharaParticleTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddResetCharaParticleTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddResetCharaParticleTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddResetCharaParticleTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddResetCharaParticleTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddResetCharaParticleTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddResetCharaParticleTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddResetCharaParticleTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddResetCharaParticleTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddResetCharaParticleTask, CallFunc_AddResetCharaParticleTask_Ret_PecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddResetCharaParticleTask::CallFunc_AddResetCharaParticleTask_Ret_PecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddUnlockAchievementTask
// 0x0030 (0x0030 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddUnlockAchievementTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EAchievementFlag                              Achievement;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetPecID;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnlockAchievementTask_Ret_PecID;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddUnlockAchievementTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddUnlockAchievementTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddUnlockAchievementTask) == 0x000030, "Wrong size on BattleActionTaskFactory_C_BI_AddUnlockAchievementTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnlockAchievementTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddUnlockAchievementTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnlockAchievementTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddUnlockAchievementTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnlockAchievementTask, Achievement) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddUnlockAchievementTask::Achievement' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnlockAchievementTask, RetPecID) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_AddUnlockAchievementTask::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddUnlockAchievementTask, CallFunc_AddUnlockAchievementTask_Ret_PecID) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddUnlockAchievementTask::CallFunc_AddUnlockAchievementTask_Ret_PecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_AddCtrlCharaMaterialTask
// 0x0040 (0x0040 - 0x0000)
struct BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         PecID;                                             // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCtrlCharaMaterialTask_Ret_PecID;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask) == 0x000008, "Wrong alignment on BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask");
static_assert(sizeof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask) == 0x000040, "Wrong size on BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask, MaterialAnimSetting) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask, PecID) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask, CallFunc_AddCtrlCharaMaterialTask_Ret_PecID) == 0x00003C, "Member 'BattleActionTaskFactory_C_BI_AddCtrlCharaMaterialTask::CallFunc_AddCtrlCharaMaterialTask_Ret_PecID' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.BI_MakeMusMahDirection
// 0x02D0 (0x02D0 - 0x0000)
struct BattleActionTaskFactory_C_BI_MakeMusMahDirection final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipping;                                        // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetWaitTaskList;                                   // 0x0028(0x0010)(Parm, OutParm)
	int32                                         Lo_DevilID;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_DyingParam;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	class USoundAtomCue*                          CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class UParticleSystem*                        CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CallFunc_Array_Get_Item_3;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialAnimSetting_T                 K2Node_MakeStruct_MaterialAnimSetting_T;           // 0x00E8(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_Array_Get_Item_4;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0138(0x0030)()
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0180(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_2;                   // 0x01B0(0x0030)()
	int32                                         CallFunc_BI_AddCtrlCharaMaterialTask_PecID;        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1;    // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetKuishibariCureHP_self_CastInput;    // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetKuishibariCureHP_CureHP;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue_1;          // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddNumEffectTask_retValue;             // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddNumEffectTask_retValue_1;           // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_3;                   // 0x0260(0x0030)()
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue_2;          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_BI_MakeMusMahDirection) == 0x000010, "Wrong alignment on BattleActionTaskFactory_C_BI_MakeMusMahDirection");
static_assert(sizeof(BattleActionTaskFactory_C_BI_MakeMusMahDirection) == 0x0002D0, "Wrong size on BattleActionTaskFactory_C_BI_MakeMusMahDirection");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, WaitTaskList) == 0x000000, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, ParentName) == 0x000010, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::ParentName' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, TargetIndex) == 0x000020, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, IsSkipping) == 0x000024, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::IsSkipping' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, RetWaitTaskList) == 0x000028, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::RetWaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, Lo_DevilID) == 0x000038, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::Lo_DevilID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, Lo_DyingParam) == 0x000040, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::Lo_DyingParam' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, Lo_RetTaskList) == 0x000050, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, Lo_WaitTaskList) == 0x000060, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Array_Get_Item) == 0x000070, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C4, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Array_Get_Item_3) == 0x0000D8, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_SelectFloat_ReturnValue_1) == 0x0000E0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, K2Node_MakeStruct_MaterialAnimSetting_T) == 0x0000E8, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::K2Node_MakeStruct_MaterialAnimSetting_T' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, K2Node_MakeArray_Array) == 0x000108, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, K2Node_SwitchInteger_CmpSuccess) == 0x000118, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeLiteralByte_ReturnValue) == 0x000119, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Array_Get_Item_4) == 0x000120, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000128, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeLiteralInt_ReturnValue) == 0x00012C, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000130, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, K2Node_MakeStruct_BtlTaskData) == 0x000138, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000168, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x00016C, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeVector_ReturnValue) == 0x000170, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, K2Node_MakeStruct_BtlTaskData_1) == 0x000180, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, K2Node_MakeStruct_BtlTaskData_2) == 0x0001B0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::K2Node_MakeStruct_BtlTaskData_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddCtrlCharaMaterialTask_PecID) == 0x0001E0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddCtrlCharaMaterialTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0001E4, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1) == 0x0001E8, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddPlayEffectTask_retValue) == 0x0001EC, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_GetPartySystem_retValue) == 0x0001F0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeTransform_ReturnValue_1) == 0x000200, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_GetKuishibariCureHP_self_CastInput) == 0x000230, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_GetKuishibariCureHP_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_GetKuishibariCureHP_CureHP) == 0x000240, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_GetKuishibariCureHP_CureHP' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddPlayEffectTask_retValue_1) == 0x000244, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddPlayEffectTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Array_Add_ReturnValue) == 0x000248, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x00024C, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddNumEffectTask_retValue) == 0x000250, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddNumEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddNumEffectTask_retValue_1) == 0x000254, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddNumEffectTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_Array_Add_ReturnValue_1) == 0x000258, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, K2Node_MakeStruct_BtlTaskData_3) == 0x000260, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::K2Node_MakeStruct_BtlTaskData_3' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_MakeTransform_ReturnValue_2) == 0x000290, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_BI_MakeMusMahDirection, CallFunc_BI_AddPlayEffectTask_retValue_2) == 0x0002C0, "Member 'BattleActionTaskFactory_C_BI_MakeMusMahDirection::CallFunc_BI_AddPlayEffectTask_retValue_2' has a wrong offset!");

// Function BattleActionTaskFactory.BattleActionTaskFactory_C.UpdateComponent
// 0x000C (0x000C - 0x0000)
struct BattleActionTaskFactory_C_UpdateComponent final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContinueUpdate;                                    // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_DoTimes;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleActionTaskFactory_C_UpdateComponent) == 0x000004, "Wrong alignment on BattleActionTaskFactory_C_UpdateComponent");
static_assert(sizeof(BattleActionTaskFactory_C_UpdateComponent) == 0x00000C, "Wrong size on BattleActionTaskFactory_C_UpdateComponent");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateComponent, Delta) == 0x000000, "Member 'BattleActionTaskFactory_C_UpdateComponent::Delta' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateComponent, ContinueUpdate) == 0x000004, "Member 'BattleActionTaskFactory_C_UpdateComponent::ContinueUpdate' has a wrong offset!");
static_assert(offsetof(BattleActionTaskFactory_C_UpdateComponent, Lo_DoTimes) == 0x000008, "Member 'BattleActionTaskFactory_C_UpdateComponent::Lo_DoTimes' has a wrong offset!");

}

