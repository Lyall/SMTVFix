#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SortWindow2

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_SORTWINDOW_POS_TYPE_structs.hpp"
#include "E_SORTWINDOW_ANIM_STATE_structs.hpp"


namespace SDK::Params
{

// Function WB_SortWindow2.WB_SortWindow2_C.MouseEvent_OnHovered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_MouseEvent_OnHovered__DelegateSignature final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_MouseEvent_OnHovered__DelegateSignature) == 0x000004, "Wrong alignment on WB_SortWindow2_C_MouseEvent_OnHovered__DelegateSignature");
static_assert(sizeof(WB_SortWindow2_C_MouseEvent_OnHovered__DelegateSignature) == 0x000004, "Wrong size on WB_SortWindow2_C_MouseEvent_OnHovered__DelegateSignature");
static_assert(offsetof(WB_SortWindow2_C_MouseEvent_OnHovered__DelegateSignature, SlotIdx) == 0x000000, "Member 'WB_SortWindow2_C_MouseEvent_OnHovered__DelegateSignature::SlotIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.MouseEvent_OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_MouseEvent_OnClicked__DelegateSignature final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_MouseEvent_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on WB_SortWindow2_C_MouseEvent_OnClicked__DelegateSignature");
static_assert(sizeof(WB_SortWindow2_C_MouseEvent_OnClicked__DelegateSignature) == 0x000004, "Wrong size on WB_SortWindow2_C_MouseEvent_OnClicked__DelegateSignature");
static_assert(offsetof(WB_SortWindow2_C_MouseEvent_OnClicked__DelegateSignature, SlotIdx) == 0x000000, "Member 'WB_SortWindow2_C_MouseEvent_OnClicked__DelegateSignature::SlotIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.MouseEvent_MovedScrollBar__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature) == 0x000004, "Wrong alignment on WB_SortWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature");
static_assert(sizeof(WB_SortWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature) == 0x000004, "Wrong size on WB_SortWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature");
static_assert(offsetof(WB_SortWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature, ScrollRate) == 0x000000, "Member 'WB_SortWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature::ScrollRate' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.ExecuteUbergraph_WB_SortWindow2
// 0x0044 (0x0044 - 0x0000)
struct WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2) == 0x000004, "Wrong alignment on WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2");
static_assert(sizeof(WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2) == 0x000044, "Wrong size on WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2");
static_assert(offsetof(WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2, EntryPoint) == 0x000000, "Member 'WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_SortWindow2_C_ExecuteUbergraph_WB_SortWindow2::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_SortWindow2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_SortWindow2_C_PreConstruct");
static_assert(sizeof(WB_SortWindow2_C_PreConstruct) == 0x000001, "Wrong size on WB_SortWindow2_C_PreConstruct");
static_assert(offsetof(WB_SortWindow2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_SortWindow2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_SortWindow2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_Tick) == 0x000004, "Wrong alignment on WB_SortWindow2_C_Tick");
static_assert(sizeof(WB_SortWindow2_C_Tick) == 0x00003C, "Wrong size on WB_SortWindow2_C_Tick");
static_assert(offsetof(WB_SortWindow2_C_Tick, MyGeometry) == 0x000000, "Member 'WB_SortWindow2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_SortWindow2_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetSlotListInfo
// 0x0010 (0x0010 - 0x0000)
struct WB_SortWindow2_C_SetSlotListInfo final
{
public:
	TArray<class FText>                           InListInfo;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_SortWindow2_C_SetSlotListInfo) == 0x000008, "Wrong alignment on WB_SortWindow2_C_SetSlotListInfo");
static_assert(sizeof(WB_SortWindow2_C_SetSlotListInfo) == 0x000010, "Wrong size on WB_SortWindow2_C_SetSlotListInfo");
static_assert(offsetof(WB_SortWindow2_C_SetSlotListInfo, InListInfo) == 0x000000, "Member 'WB_SortWindow2_C_SetSlotListInfo::InListInfo' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetPosType
// 0x00F8 (0x00F8 - 0x0000)
struct WB_SortWindow2_C_SetPosType final
{
public:
	E_SORTWINDOW_POS_TYPE                         InPosType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_1;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_2;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_2;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_3;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_3;   // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_6;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_4;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_7;           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_4;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_5;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_5;   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_SetPosType) == 0x000008, "Wrong alignment on WB_SortWindow2_C_SetPosType");
static_assert(sizeof(WB_SortWindow2_C_SetPosType) == 0x0000F8, "Wrong size on WB_SortWindow2_C_SetPosType");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, InPosType) == 0x000000, "Member 'WB_SortWindow2_C_SetPosType::InPosType' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000010, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000018, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetDesiredSize_ReturnValue) == 0x000020, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000028, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_X) == 0x000030, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_Y_1) == 0x00003C, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000040, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetSSPPositionDataByPartsName_OutVec_1) == 0x000048, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetSSPPositionDataByPartsName_OutVec_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000050, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x000058, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x000060, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetDesiredSize_ReturnValue_2) == 0x000068, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetDesiredSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetPosition_ReturnValue) == 0x000070, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_X_2) == 0x000078, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_Y_2) == 0x00007C, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_X_3) == 0x000080, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_Y_3) == 0x000084, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetSSPPositionDataByPartsName_OutVec_2) == 0x000088, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetSSPPositionDataByPartsName_OutVec_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_MakeVector2D_ReturnValue) == 0x000090, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetDesiredSize_ReturnValue_3) == 0x000098, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetDesiredSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_X_4) == 0x0000A0, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_Y_4) == 0x0000A4, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'WB_SortWindow2_C_SetPosType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetSSPPositionDataByPartsName_OutVec_3) == 0x0000AC, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetSSPPositionDataByPartsName_OutVec_3' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue_6) == 0x0000B8, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetDesiredSize_ReturnValue_4) == 0x0000C0, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetDesiredSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_SlotAsCanvasSlot_ReturnValue_7) == 0x0000C8, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_SlotAsCanvasSlot_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_X_5) == 0x0000D0, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_Y_5) == 0x0000D4, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetSSPPositionDataByPartsName_OutVec_4) == 0x0000D8, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetSSPPositionDataByPartsName_OutVec_4' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetDesiredSize_ReturnValue_5) == 0x0000E0, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetDesiredSize_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_X_6) == 0x0000E8, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_BreakVector2D_Y_6) == 0x0000EC, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetPosType, CallFunc_GetSSPPositionDataByPartsName_OutVec_5) == 0x0000F0, "Member 'WB_SortWindow2_C_SetPosType::CallFunc_GetSSPPositionDataByPartsName_OutVec_5' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetAnimState
// 0x002C (0x002C - 0x0000)
struct WB_SortWindow2_C_SetAnimState final
{
public:
	E_SORTWINDOW_ANIM_STATE                       InAinmState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_AnimName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_POS_TYPE                         Temp_byte_Variable;                                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_SetAnimState) == 0x000004, "Wrong alignment on WB_SortWindow2_C_SetAnimState");
static_assert(sizeof(WB_SortWindow2_C_SetAnimState) == 0x00002C, "Wrong size on WB_SortWindow2_C_SetAnimState");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, InAinmState) == 0x000000, "Member 'WB_SortWindow2_C_SetAnimState::InAinmState' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, L_AnimName) == 0x000004, "Member 'WB_SortWindow2_C_SetAnimState::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, Temp_name_Variable) == 0x00000C, "Member 'WB_SortWindow2_C_SetAnimState::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, Temp_name_Variable_1) == 0x000014, "Member 'WB_SortWindow2_C_SetAnimState::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, CallFunc_Play_ReturnValue) == 0x00001C, "Member 'WB_SortWindow2_C_SetAnimState::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_1) == 0x00001D, "Member 'WB_SortWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, K2Node_SwitchEnum_CmpSuccess) == 0x00001E, "Member 'WB_SortWindow2_C_SetAnimState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, Temp_byte_Variable) == 0x00001F, "Member 'WB_SortWindow2_C_SetAnimState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, K2Node_Select_Default) == 0x000020, "Member 'WB_SortWindow2_C_SetAnimState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, K2Node_SwitchEnum_CmpSuccess_1) == 0x000028, "Member 'WB_SortWindow2_C_SetAnimState::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_2) == 0x000029, "Member 'WB_SortWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_3) == 0x00002A, "Member 'WB_SortWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_3' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetAnimState_SlotOnly
// 0x0010 (0x0010 - 0x0000)
struct WB_SortWindow2_C_SetAnimState_SlotOnly final
{
public:
	E_SORTWINDOW_ANIM_STATE                       InAinmState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_AnimName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_SetAnimState_SlotOnly) == 0x000004, "Wrong alignment on WB_SortWindow2_C_SetAnimState_SlotOnly");
static_assert(sizeof(WB_SortWindow2_C_SetAnimState_SlotOnly) == 0x000010, "Wrong size on WB_SortWindow2_C_SetAnimState_SlotOnly");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState_SlotOnly, InAinmState) == 0x000000, "Member 'WB_SortWindow2_C_SetAnimState_SlotOnly::InAinmState' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState_SlotOnly, L_AnimName) == 0x000004, "Member 'WB_SortWindow2_C_SetAnimState_SlotOnly::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState_SlotOnly, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'WB_SortWindow2_C_SetAnimState_SlotOnly::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetAnimState_SlotOnly, CallFunc_Play_ReturnValue) == 0x00000D, "Member 'WB_SortWindow2_C_SetAnimState_SlotOnly::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.GetAnimState
// 0x000C (0x000C - 0x0000)
struct WB_SortWindow2_C_GetAnimState final
{
public:
	E_SORTWINDOW_ANIM_STATE                       AinmState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_AnimName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_GetAnimState) == 0x000004, "Wrong alignment on WB_SortWindow2_C_GetAnimState");
static_assert(sizeof(WB_SortWindow2_C_GetAnimState) == 0x00000C, "Wrong size on WB_SortWindow2_C_GetAnimState");
static_assert(offsetof(WB_SortWindow2_C_GetAnimState, AinmState) == 0x000000, "Member 'WB_SortWindow2_C_GetAnimState::AinmState' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetAnimState, L_AnimName) == 0x000004, "Member 'WB_SortWindow2_C_GetAnimState::L_AnimName' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.GetCursorIdx
// 0x0008 (0x0008 - 0x0000)
struct WB_SortWindow2_C_GetCursorIdx final
{
public:
	int32                                         CursorIdx;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_GetCursorIdx) == 0x000004, "Wrong alignment on WB_SortWindow2_C_GetCursorIdx");
static_assert(sizeof(WB_SortWindow2_C_GetCursorIdx) == 0x000008, "Wrong size on WB_SortWindow2_C_GetCursorIdx");
static_assert(offsetof(WB_SortWindow2_C_GetCursorIdx, CursorIdx) == 0x000000, "Member 'WB_SortWindow2_C_GetCursorIdx::CursorIdx' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetCursorIdx, CallFunc_GetCursorIdx_CursorIdx) == 0x000004, "Member 'WB_SortWindow2_C_GetCursorIdx::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetCursorIdx
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_SetCursorIdx final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_SetCursorIdx) == 0x000004, "Wrong alignment on WB_SortWindow2_C_SetCursorIdx");
static_assert(sizeof(WB_SortWindow2_C_SetCursorIdx) == 0x000004, "Wrong size on WB_SortWindow2_C_SetCursorIdx");
static_assert(offsetof(WB_SortWindow2_C_SetCursorIdx, InSlotIdx) == 0x000000, "Member 'WB_SortWindow2_C_SetCursorIdx::InSlotIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetScrollBarRate
// 0x0008 (0x0008 - 0x0000)
struct WB_SortWindow2_C_SetScrollBarRate final
{
public:
	float                                         InScrollRate;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_SetScrollBarRate) == 0x000004, "Wrong alignment on WB_SortWindow2_C_SetScrollBarRate");
static_assert(sizeof(WB_SortWindow2_C_SetScrollBarRate) == 0x000008, "Wrong size on WB_SortWindow2_C_SetScrollBarRate");
static_assert(offsetof(WB_SortWindow2_C_SetScrollBarRate, InScrollRate) == 0x000000, "Member 'WB_SortWindow2_C_SetScrollBarRate::InScrollRate' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetScrollBarRate, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'WB_SortWindow2_C_SetScrollBarRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetScrollbarVisibility
// 0x0001 (0x0001 - 0x0000)
struct WB_SortWindow2_C_SetScrollbarVisibility final
{
public:
	bool                                          IsVisibleScrollBar;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_SetScrollbarVisibility) == 0x000001, "Wrong alignment on WB_SortWindow2_C_SetScrollbarVisibility");
static_assert(sizeof(WB_SortWindow2_C_SetScrollbarVisibility) == 0x000001, "Wrong size on WB_SortWindow2_C_SetScrollbarVisibility");
static_assert(offsetof(WB_SortWindow2_C_SetScrollbarVisibility, IsVisibleScrollBar) == 0x000000, "Member 'WB_SortWindow2_C_SetScrollbarVisibility::IsVisibleScrollBar' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.Tick_Base
// 0x0001 (0x0001 - 0x0000)
struct WB_SortWindow2_C_Tick_Base final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_Tick_Base) == 0x000001, "Wrong alignment on WB_SortWindow2_C_Tick_Base");
static_assert(sizeof(WB_SortWindow2_C_Tick_Base) == 0x000001, "Wrong size on WB_SortWindow2_C_Tick_Base");
static_assert(offsetof(WB_SortWindow2_C_Tick_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WB_SortWindow2_C_Tick_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.Tick_In
// 0x0050 (0x0050 - 0x0000)
struct WB_SortWindow2_C_Tick_In final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_POS_TYPE                         Temp_byte_Variable;                                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_GetAnimState_AinmState;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_2; // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_2; // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_Tick_In) == 0x000008, "Wrong alignment on WB_SortWindow2_C_Tick_In");
static_assert(sizeof(WB_SortWindow2_C_Tick_In) == 0x000050, "Wrong size on WB_SortWindow2_C_Tick_In");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x000004, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x00000C, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000014, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_IsPlaying_ReturnValue_1) == 0x000015, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimPackName_1) == 0x000018, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimationName_1) == 0x000020, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_BooleanAND_ReturnValue_1) == 0x000028, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000029, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_BooleanAND_ReturnValue_2) == 0x00002A, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, Temp_byte_Variable) == 0x00002B, "Member 'WB_SortWindow2_C_Tick_In::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, K2Node_Select_Default) == 0x000030, "Member 'WB_SortWindow2_C_Tick_In::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_IsPlaying_ReturnValue_2) == 0x000038, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_GetAnimState_AinmState) == 0x000039, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_GetAnimState_AinmState' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimPackName_2) == 0x00003C, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimPackName_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimationName_2) == 0x000044, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimationName_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'WB_SortWindow2_C_Tick_In::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00004D, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_In, CallFunc_BooleanAND_ReturnValue_3) == 0x00004E, "Member 'WB_SortWindow2_C_Tick_In::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.Tick_Out
// 0x0050 (0x0050 - 0x0000)
struct WB_SortWindow2_C_Tick_Out final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_POS_TYPE                         Temp_byte_Variable;                                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_GetAnimState_AinmState;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_2; // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_2; // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_Tick_Out) == 0x000008, "Wrong alignment on WB_SortWindow2_C_Tick_Out");
static_assert(sizeof(WB_SortWindow2_C_Tick_Out) == 0x000050, "Wrong size on WB_SortWindow2_C_Tick_Out");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x000004, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x00000C, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000014, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_IsPlaying_ReturnValue_1) == 0x000015, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimPackName_1) == 0x000018, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimationName_1) == 0x000020, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_BooleanAND_ReturnValue_1) == 0x000028, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000029, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_BooleanAND_ReturnValue_2) == 0x00002A, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, Temp_byte_Variable) == 0x00002B, "Member 'WB_SortWindow2_C_Tick_Out::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, K2Node_Select_Default) == 0x000030, "Member 'WB_SortWindow2_C_Tick_Out::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_IsPlaying_ReturnValue_2) == 0x000038, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_GetAnimState_AinmState) == 0x000039, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_GetAnimState_AinmState' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimPackName_2) == 0x00003C, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimPackName_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimationName_2) == 0x000044, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimationName_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'WB_SortWindow2_C_Tick_Out::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00004D, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_Tick_Out, CallFunc_BooleanAND_ReturnValue_3) == 0x00004E, "Member 'WB_SortWindow2_C_Tick_Out::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetAppliedSlotIdx
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_SetAppliedSlotIdx final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_SetAppliedSlotIdx) == 0x000004, "Wrong alignment on WB_SortWindow2_C_SetAppliedSlotIdx");
static_assert(sizeof(WB_SortWindow2_C_SetAppliedSlotIdx) == 0x000004, "Wrong size on WB_SortWindow2_C_SetAppliedSlotIdx");
static_assert(offsetof(WB_SortWindow2_C_SetAppliedSlotIdx, InSlotIdx) == 0x000000, "Member 'WB_SortWindow2_C_SetAppliedSlotIdx::InSlotIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.GetAppliedSlotIdx
// 0x0008 (0x0008 - 0x0000)
struct WB_SortWindow2_C_GetAppliedSlotIdx final
{
public:
	int32                                         AppliedSlotIdx;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAppliedSlotIdx_AppliedSlotIdx;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_GetAppliedSlotIdx) == 0x000004, "Wrong alignment on WB_SortWindow2_C_GetAppliedSlotIdx");
static_assert(sizeof(WB_SortWindow2_C_GetAppliedSlotIdx) == 0x000008, "Wrong size on WB_SortWindow2_C_GetAppliedSlotIdx");
static_assert(offsetof(WB_SortWindow2_C_GetAppliedSlotIdx, AppliedSlotIdx) == 0x000000, "Member 'WB_SortWindow2_C_GetAppliedSlotIdx::AppliedSlotIdx' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetAppliedSlotIdx, CallFunc_GetAppliedSlotIdx_AppliedSlotIdx) == 0x000004, "Member 'WB_SortWindow2_C_GetAppliedSlotIdx::CallFunc_GetAppliedSlotIdx_AppliedSlotIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.GetSlotMaxNum
// 0x0010 (0x0010 - 0x0000)
struct WB_SortWindow2_C_GetSlotMaxNum final
{
public:
	int32                                         SlotMaxNum;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_AnimName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMaxNum_SlotMaxNum;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_GetSlotMaxNum) == 0x000004, "Wrong alignment on WB_SortWindow2_C_GetSlotMaxNum");
static_assert(sizeof(WB_SortWindow2_C_GetSlotMaxNum) == 0x000010, "Wrong size on WB_SortWindow2_C_GetSlotMaxNum");
static_assert(offsetof(WB_SortWindow2_C_GetSlotMaxNum, SlotMaxNum) == 0x000000, "Member 'WB_SortWindow2_C_GetSlotMaxNum::SlotMaxNum' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetSlotMaxNum, L_AnimName) == 0x000004, "Member 'WB_SortWindow2_C_GetSlotMaxNum::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetSlotMaxNum, CallFunc_GetSlotMaxNum_SlotMaxNum) == 0x00000C, "Member 'WB_SortWindow2_C_GetSlotMaxNum::CallFunc_GetSlotMaxNum_SlotMaxNum' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.GetElementCategoryPos
// 0x0028 (0x0028 - 0x0000)
struct WB_SortWindow2_C_GetElementCategoryPos final
{
public:
	struct FVector2D                              OutVec;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_AnimName;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_GetElementCategoryPos) == 0x000004, "Wrong alignment on WB_SortWindow2_C_GetElementCategoryPos");
static_assert(sizeof(WB_SortWindow2_C_GetElementCategoryPos) == 0x000028, "Wrong size on WB_SortWindow2_C_GetElementCategoryPos");
static_assert(offsetof(WB_SortWindow2_C_GetElementCategoryPos, OutVec) == 0x000000, "Member 'WB_SortWindow2_C_GetElementCategoryPos::OutVec' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetElementCategoryPos, L_AnimName) == 0x000008, "Member 'WB_SortWindow2_C_GetElementCategoryPos::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetElementCategoryPos, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WB_SortWindow2_C_GetElementCategoryPos::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetElementCategoryPos, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WB_SortWindow2_C_GetElementCategoryPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetElementCategoryPos, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'WB_SortWindow2_C_GetElementCategoryPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_GetElementCategoryPos, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000020, "Member 'WB_SortWindow2_C_GetElementCategoryPos::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.BindMouseInputEvent
// 0x0030 (0x0030 - 0x0000)
struct WB_SortWindow2_C_BindMouseInputEvent final
{
public:
	TDelegate<void(float Position)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SlotIdx)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SlotIdx)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_BindMouseInputEvent) == 0x000004, "Wrong alignment on WB_SortWindow2_C_BindMouseInputEvent");
static_assert(sizeof(WB_SortWindow2_C_BindMouseInputEvent) == 0x000030, "Wrong size on WB_SortWindow2_C_BindMouseInputEvent");
static_assert(offsetof(WB_SortWindow2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WB_SortWindow2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WB_SortWindow2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'WB_SortWindow2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.OnHoveredSlot_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_OnHoveredSlot_ByMouse final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_OnHoveredSlot_ByMouse) == 0x000004, "Wrong alignment on WB_SortWindow2_C_OnHoveredSlot_ByMouse");
static_assert(sizeof(WB_SortWindow2_C_OnHoveredSlot_ByMouse) == 0x000004, "Wrong size on WB_SortWindow2_C_OnHoveredSlot_ByMouse");
static_assert(offsetof(WB_SortWindow2_C_OnHoveredSlot_ByMouse, SlotIdx) == 0x000000, "Member 'WB_SortWindow2_C_OnHoveredSlot_ByMouse::SlotIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.OnClickedSlot_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_OnClickedSlot_ByMouse final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_OnClickedSlot_ByMouse) == 0x000004, "Wrong alignment on WB_SortWindow2_C_OnClickedSlot_ByMouse");
static_assert(sizeof(WB_SortWindow2_C_OnClickedSlot_ByMouse) == 0x000004, "Wrong size on WB_SortWindow2_C_OnClickedSlot_ByMouse");
static_assert(offsetof(WB_SortWindow2_C_OnClickedSlot_ByMouse, SlotIdx) == 0x000000, "Member 'WB_SortWindow2_C_OnClickedSlot_ByMouse::SlotIdx' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.OnMovedScrollBar_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_OnMovedScrollBar_ByMouse final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_OnMovedScrollBar_ByMouse) == 0x000004, "Wrong alignment on WB_SortWindow2_C_OnMovedScrollBar_ByMouse");
static_assert(sizeof(WB_SortWindow2_C_OnMovedScrollBar_ByMouse) == 0x000004, "Wrong size on WB_SortWindow2_C_OnMovedScrollBar_ByMouse");
static_assert(offsetof(WB_SortWindow2_C_OnMovedScrollBar_ByMouse, ScrollRate) == 0x000000, "Member 'WB_SortWindow2_C_OnMovedScrollBar_ByMouse::ScrollRate' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.IsEnableMouseWheel
// 0x0004 (0x0004 - 0x0000)
struct WB_SortWindow2_C_IsEnableMouseWheel final
{
public:
	bool                                          IsEnableScroll;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMouseOveredToScrollBar_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMouseOvered_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SortWindow2_C_IsEnableMouseWheel) == 0x000001, "Wrong alignment on WB_SortWindow2_C_IsEnableMouseWheel");
static_assert(sizeof(WB_SortWindow2_C_IsEnableMouseWheel) == 0x000004, "Wrong size on WB_SortWindow2_C_IsEnableMouseWheel");
static_assert(offsetof(WB_SortWindow2_C_IsEnableMouseWheel, IsEnableScroll) == 0x000000, "Member 'WB_SortWindow2_C_IsEnableMouseWheel::IsEnableScroll' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_IsEnableMouseWheel, CallFunc_IsMouseOveredToScrollBar_ReturnValue) == 0x000001, "Member 'WB_SortWindow2_C_IsEnableMouseWheel::CallFunc_IsMouseOveredToScrollBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_IsEnableMouseWheel, CallFunc_GetMouseOvered_ReturnValue) == 0x000002, "Member 'WB_SortWindow2_C_IsEnableMouseWheel::CallFunc_GetMouseOvered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_IsEnableMouseWheel, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WB_SortWindow2_C_IsEnableMouseWheel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_SortWindow2.WB_SortWindow2_C.SetMouseHitVisibility
// 0x000E (0x000E - 0x0000)
struct WB_SortWindow2_C_SetMouseHitVisibility final
{
public:
	bool                                          EnableMouseHit;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SortWindow2_C_SetMouseHitVisibility) == 0x000001, "Wrong alignment on WB_SortWindow2_C_SetMouseHitVisibility");
static_assert(sizeof(WB_SortWindow2_C_SetMouseHitVisibility) == 0x00000E, "Wrong size on WB_SortWindow2_C_SetMouseHitVisibility");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, EnableMouseHit) == 0x000000, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::EnableMouseHit' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_byte_Variable) == 0x000001, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_bool_Variable) == 0x000003, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_byte_Variable_2) == 0x000004, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_byte_Variable_3) == 0x000005, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_bool_Variable_1) == 0x000006, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_byte_Variable_4) == 0x000007, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_byte_Variable_5) == 0x000008, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, Temp_bool_Variable_2) == 0x000009, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, K2Node_Select_Default) == 0x00000B, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, K2Node_Select_Default_1) == 0x00000C, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_SortWindow2_C_SetMouseHitVisibility, K2Node_Select_Default_2) == 0x00000D, "Member 'WB_SortWindow2_C_SetMouseHitVisibility::K2Node_Select_Default_2' has a wrong offset!");

}

