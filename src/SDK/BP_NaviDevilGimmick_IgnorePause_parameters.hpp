#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NaviDevilGimmick_IgnorePause

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "NaviDevilParam_st_structs.hpp"


namespace SDK::Params
{

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause
// 0x0750 (0x0750 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Target, class UBPC_CharaFollower_C* This)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C02[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C03[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue_1;             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_1;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ScreenTransition_isFadeFinish_outValue;   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C04[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_2;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NAVI_DEVIL                                  CallFunc_GetCurrentNaviDevil_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C05[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_2;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C06[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C07[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_CharaFollower_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScreenTransition_isFadeFinish_outValue_1; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C08[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_3;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_3;             // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Active;                               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C09[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_View;                                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C0A[0x1];                                     // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C0B[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C0C[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0138(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C0D[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C0E[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_4;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_4;             // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C0F[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_1;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C10[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_CharaFollower_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorFloat_ReturnValue;              // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C11[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NAVI_DEVIL                                  CallFunc_GetCurrentNaviDevil_ReturnValue_1;        // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C12[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorFloat_ReturnValue_1;            // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C13[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NaviDevilGimmick_Option_C*          CallFunc_Array_Get_Item;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C14[0x2];                                     // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIgnoreBox_Lock;                      // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C15[0x1];                                     // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C16[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_5;                    // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C17[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_5;             // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C18[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_2;              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_6;                    // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_6;             // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C19[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_3;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C1A[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_CharaFollower_C*                   CallFunc_GetComponentByClass_ReturnValue_2;        // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C1B[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target_2;                       // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaFollower_C*                   K2Node_CustomEvent_This_2;                         // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C1C[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target_1;                       // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaFollower_C*                   K2Node_CustomEvent_This_1;                         // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_7;                    // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_7;             // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C1D[0x6];                                     // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_4;              // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C1E[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0338(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C1F[0x2];                                     // 0x034E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BPI_GetNaviGimmickSaveID_SaveID;          // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C20[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_8;                    // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_8;             // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C21[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_5;              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C22[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_CharaFollower_C*                   CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPopUpIconManager*                      CallFunc_GetPopUpIconManager_ReturnValue;          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_9;                    // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_9;             // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C23[0x6];                                     // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_6;              // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Register_ReturnValue;                     // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C24[0x1];                                     // 0x03D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x03D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C25[0x4];                                     // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x03F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C26[0x3];                                     // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C27[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNaviDevilParam_st                     CallFunc_GetNaviParam_Param;                       // 0x0410(0x0098)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_10;                   // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_10;            // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C28[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C29[0x7];                                     // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_7;              // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjRef_ReturnValue;            // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C2A[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_PlayCharacterVoice_ReturnValue;           // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C2B[0x4];                                     // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNaviDevilParam_st                     CallFunc_GetNaviParam_Param_1;                     // 0x0500(0x0098)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C2C[0x4];                                     // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_1;             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjRef_ReturnValue_1;          // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C2D[0x6];                                     // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_11;                   // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_11;            // 0x05C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C2E[0x6];                                     // 0x05D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn_8;              // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_PlayCharacterVoice_ReturnValue_1;         // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C2F[0x8];                                     // 0x05E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x05F0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventNaviDevil_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaFollower_C*                   K2Node_CustomEvent_This;                           // 0x0638(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C30[0x7];                                     // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_2; // 0x0648(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C31[0x3];                                     // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_12;                   // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_12;            // 0x0668(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_2;              // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x067A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C32[0x1];                                     // 0x067B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x067C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C33[0x4];                                     // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_3; // 0x0690(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NaviDevilGimmick_Option_C*          CallFunc_Array_Get_Item_1;                         // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C34[0x3];                                     // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x06B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C35[0x4];                                     // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_4; // 0x06C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x06DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C36[0x2];                                     // 0x06DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x06E0(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C37[0x4];                                     // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventNaviDevil_C*                   K2Node_DynamicCast_AsBP_Event_Navi_Devil;          // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x070A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C38[0x5];                                     // 0x070B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBgmScene                                     CallFunc_GetBGMScene_ReturnValue;                  // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C39[0x2];                                     // 0x071A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Target, class UBPC_CharaFollower_C* This)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x071C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x072C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x072D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x072E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x072F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C3A[0x2];                                     // 0x0732(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Target, class UBPC_CharaFollower_C* This)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0734(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause) == 0x000010, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause) == 0x000750, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, EntryPoint) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000028, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_CheckMapPause_IsPause) == 0x000039, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_CheckEventFlag_ReturnValue) == 0x00003B, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanOR_ReturnValue) == 0x00003D, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_CheckEventFlag_ReturnValue_1) == 0x00003E, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_CheckEventFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_2) == 0x00003F, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_1) == 0x000040, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x000058, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_CheckMapPause_IsPause_1) == 0x000069, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_CheckMapPause_IsPause_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanOR_ReturnValue_1) == 0x00006A, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_3) == 0x00006B, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate_2) == 0x00006C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_ScreenTransition_isFadeFinish_outValue) == 0x00007C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_ScreenTransition_isFadeFinish_outValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_object_Variable) == 0x000088, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_Loaded) == 0x000090, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_2) == 0x000098, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetCurrentNaviDevil_ReturnValue) == 0x0000A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetCurrentNaviDevil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_2) == 0x0000A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn) == 0x0000C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetComponentByClass_ReturnValue) == 0x0000D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_ScreenTransition_isFadeFinish_outValue_1) == 0x0000D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_ScreenTransition_isFadeFinish_outValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_3) == 0x0000E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_3) == 0x0000E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_3) == 0x0000F8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_Event_Active) == 0x0000F9, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_Event_Active' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_object_Variable_1) == 0x000100, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_Event_View) == 0x000108, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_Event_View' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_4) == 0x000109, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_1) == 0x00010A, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_5) == 0x00010B, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsVisible_ReturnValue) == 0x00010C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanAND_ReturnValue) == 0x00010D, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_2) == 0x00010E, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000118, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000120, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000128, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000130, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_bFromSweep) == 0x000134, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_SweepResult) == 0x000138, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OtherActor) == 0x0001D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OtherComp) == 0x0001D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_4) == 0x0001E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_4) == 0x0001F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_4) == 0x000200, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_1) == 0x000208, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_3) == 0x000210, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000218, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Add_VectorFloat_ReturnValue) == 0x000220, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Add_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_Loaded_1) == 0x000230, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetCurrentNaviDevil_ReturnValue_1) == 0x000238, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetCurrentNaviDevil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Add_VectorFloat_ReturnValue_1) == 0x00023C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Add_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000248, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Get_Item) == 0x000250, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_4) == 0x000258, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_5) == 0x000259, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue) == 0x00025C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Less_IntInt_ReturnValue) == 0x000260, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_CheckIgnoreBox_Lock) == 0x000261, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_CheckIgnoreBox_Lock' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_byte_Variable) == 0x000262, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_6) == 0x000263, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanAND_ReturnValue_1) == 0x000264, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_7) == 0x000265, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanAND_ReturnValue_2) == 0x000266, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue_1) == 0x000268, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Less_IntInt_ReturnValue_1) == 0x00026C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_5) == 0x000270, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_byte_Variable_1) == 0x000278, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_5) == 0x000280, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_5) == 0x000290, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_2) == 0x000298, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_6) == 0x0002A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_6) == 0x0002A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_6) == 0x0002B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_6) == 0x0002B9, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_3) == 0x0002C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_7) == 0x0002C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0002D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_bool_Variable) == 0x0002D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_Target_2) == 0x0002E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_Target_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_This_2) == 0x0002E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_This_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_Select_Default) == 0x0002F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_Target_1) == 0x0002F8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_This_1) == 0x000300, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_This_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_7) == 0x000308, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_7) == 0x000310, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_7) == 0x000320, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_8) == 0x000321, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_4) == 0x000328, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_9) == 0x000330, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetAttachedActors_OutActors) == 0x000338, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_int_Array_Index_Variable_1) == 0x000348, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00034C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00034D, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapID_ReturnValue) == 0x000350, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviGimmickSaveID_SaveID) == 0x000354, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviGimmickSaveID_SaveID' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000358, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_8) == 0x000360, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_8' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_8) == 0x000368, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_8' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_8) == 0x000378, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_5) == 0x000380, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_10) == 0x000388, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000390, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetPopUpIconManager_ReturnValue) == 0x000398, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetPopUpIconManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_9) == 0x0003A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_9' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_9) == 0x0003A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_9' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_9) == 0x0003B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_11) == 0x0003B9, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_6) == 0x0003C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsCustom_Pawn) == 0x0003C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_10) == 0x0003D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_bool_Variable_1) == 0x0003D1, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Register_ReturnValue) == 0x0003D2, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Register_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_Select_Default_1) == 0x0003D4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0003D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue_2) == 0x0003E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x0003F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Greater_IntInt_ReturnValue) == 0x000400, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue_3) == 0x000404, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000408, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetNaviParam_Param) == 0x000410, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetNaviParam_Param' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_10) == 0x0004A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_10' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0004B0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_10) == 0x0004B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_10' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_11) == 0x0004C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0004D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_12) == 0x0004D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_7) == 0x0004E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValidSoftObjRef_ReturnValue) == 0x0004E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValidSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_PlayCharacterVoice_ReturnValue) == 0x0004F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_PlayCharacterVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_int_Loop_Counter_Variable_2) == 0x0004F8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetNaviParam_Param_1) == 0x000500, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetNaviParam_Param_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Add_IntInt_ReturnValue_2) == 0x000598, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0005A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsSound_Atom_Cue_1) == 0x0005A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsSound_Atom_Cue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_13) == 0x0005B0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValidSoftObjRef_ReturnValue_1) == 0x0005B1, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValidSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_11) == 0x0005B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_11' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_11) == 0x0005C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_11' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_14) == 0x0005D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_12) == 0x0005D1, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_GetNaviDevilPawn_Pawn_8) == 0x0005D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_GetNaviDevilPawn_Pawn_8' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_PlayCharacterVoice_ReturnValue_1) == 0x0005E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_PlayCharacterVoice_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_MakeTransform_ReturnValue) == 0x0005F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000620, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_FinishSpawningActor_ReturnValue) == 0x000628, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_Target) == 0x000630, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CustomEvent_This) == 0x000638, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CustomEvent_This' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000640, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetOverlappingActors_OverlappingActors_2) == 0x000648, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetOverlappingActors_OverlappingActors_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue_4) == 0x000658, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00065C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetMapCommon_rerutn_12) == 0x000660, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetMapCommon_rerutn_12' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBPI_Map_Common_12) == 0x000668, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBPI_Map_Common_12' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_15) == 0x000678, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BPI_CheckMapPause_IsPause_2) == 0x000679, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BPI_CheckMapPause_IsPause_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Not_PreBool_ReturnValue_8) == 0x00067A, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate_3) == 0x00067C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetOverlappingActors_OverlappingActors_3) == 0x000690, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetOverlappingActors_OverlappingActors_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, Temp_int_Array_Index_Variable_2) == 0x0006A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue_5) == 0x0006A4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Get_Item_1) == 0x0006A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0006B0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate_4) == 0x0006B4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetOverlappingActors_OverlappingActors_4) == 0x0006C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetOverlappingActors_OverlappingActors_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue_6) == 0x0006D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0006DC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_13) == 0x0006DD, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate_5) == 0x0006E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Get_Item_2) == 0x0006F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Array_Length_ReturnValue_7) == 0x0006F8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_AsBP_Event_Navi_Devil) == 0x000700, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_AsBP_Event_Navi_Devil' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_DynamicCast_bSuccess_16) == 0x000708, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Less_IntInt_ReturnValue_2) == 0x000709, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_IsValid_ReturnValue_14) == 0x00070A, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_Get_ReturnValue) == 0x000710, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_GetBGMScene_ReturnValue) == 0x000718, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_GetBGMScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000719, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate_6) == 0x00071C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00072C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanOR_ReturnValue_2) == 0x00072D, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00072E, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00072F, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanOR_ReturnValue_3) == 0x000730, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, CallFunc_BooleanOR_ReturnValue_4) == 0x000731, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause, K2Node_CreateDelegate_OutputDelegate_7) == 0x000734, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.Evt_WarpBasePos
// 0x0010 (0x0010 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaFollower_C*                   This;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos) == 0x000010, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos, Target) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos::Target' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos, This) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos::This' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_LeaveTarget_
// 0x0010 (0x0010 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_ final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaFollower_C*                   This;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_) == 0x000010, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_, Target) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_::Target' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_, This) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_::This' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_GoalGimmick_
// 0x0010 (0x0010 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_ final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaFollower_C*                   This;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_) == 0x000010, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_, Target) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_::Target' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_, This) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_::This' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C3B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_SetNaviGimmickDebugView
// 0x0001 (0x0001 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView final
{
public:
	bool                                          View;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView) == 0x000001, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView) == 0x000001, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView, View) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView::View' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_SetNaviGimmickActive
// 0x0001 (0x0001 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive) == 0x000001, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive) == 0x000001, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive, Active) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive::Active' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.OnLoaded_3040A93845BE129A9498D9B94AC20E0D
// 0x0008 (0x0008 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D) == 0x000008, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D, Loaded) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D::Loaded' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.OnLoaded_A2400B66439F28435BD53BB0D9184B44
// 0x0008 (0x0008 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44) == 0x000008, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44, Loaded) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44::Loaded' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.UserConstructionScript
// 0x0550 (0x0550 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript final
{
public:
	struct FVector                                L_GroundNormal;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_TargetPos;                                       // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CapsuleHalfHeight;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C3C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             L_Pos;                                             // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        L_CheckPoint;                                      // 0x0050(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C3D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C3E[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTrace_OutHit;                         // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTrace_Hit;                            // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C3F[0x1];                                     // 0x015F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C40[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0250(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTrace_OutHit_1;                       // 0x0304(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTrace_Hit_1;                          // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x038D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x038E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x038F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C41[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0410(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Select_Default;                             // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_EDITOR_BUILD_ReturnValue;              // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C42[0x3];                                     // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeNormalFromTrianglePoints_ReturnValue; // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C43[0x4];                                     // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetAroundLocation_LocationList;           // 0x0488(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C44[0x2];                                     // 0x04B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x04C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript) == 0x000550, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, L_GroundNormal) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::L_GroundNormal' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, L_TargetPos) == 0x00000C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::L_TargetPos' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, L_CapsuleHalfHeight) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::L_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, L_Pos) == 0x000020, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, L_CheckPoint) == 0x000050, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::L_CheckPoint' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, Temp_bool_Variable) == 0x000060, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000064, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000070, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x00007C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x000088, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0000AC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0000BC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_LineTrace_OutHit) == 0x0000D4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_LineTrace_OutHit' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_LineTrace_Hit) == 0x00015C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_LineTrace_Hit' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_bBlockingHit) == 0x00015D, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015E, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Time) == 0x000160, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Distance) == 0x000164, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Location) == 0x000168, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactPoint) == 0x000174, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Normal) == 0x000180, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactNormal) == 0x00018C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_TraceStart) == 0x0001C4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x0001DC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x0001E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x0001F4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Location_1) == 0x000200, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_1) == 0x00020C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Scale_1) == 0x000218, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_GetUpVector_ReturnValue) == 0x000224, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000230, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x00023C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000240, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x00024C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue) == 0x000250, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Location_2) == 0x000280, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_2) == 0x00028C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Scale_2) == 0x000298, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x0002A4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x0002A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x0002AC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x0002B0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Location_3) == 0x0002BC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_3) == 0x0002C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakTransform_Scale_3) == 0x0002D4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_GetForwardVector_ReturnValue) == 0x0002E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0002EC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0002F8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_LineTrace_OutHit_1) == 0x000304, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_LineTrace_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_LineTrace_Hit_1) == 0x00038C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_LineTrace_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x00038D, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00038E, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00038F, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Time_1) == 0x000390, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Distance_1) == 0x000394, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Location_1) == 0x000398, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003A4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_Normal_1) == 0x0003B0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003BC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_PhysMat_1) == 0x0003C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitActor_1) == 0x0003D0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitComponent_1) == 0x0003D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitBoneName_1) == 0x0003E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_HitItem_1) == 0x0003E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003EC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_TraceStart_1) == 0x0003F4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_BreakHitResult_TraceEnd_1) == 0x000400, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue_1) == 0x000410, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, K2Node_Select_Default) == 0x000440, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x00044C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000450, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00045C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000468, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_IS_EDITOR_BUILD_ReturnValue) == 0x000474, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_IS_EDITOR_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_MakeNormalFromTrianglePoints_ReturnValue) == 0x000478, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_MakeNormalFromTrianglePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_GetAroundLocation_LocationList) == 0x000488, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_GetAroundLocation_LocationList' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000498, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0004A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0004A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x0004B4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x0004B5, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0004C4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CalcExistNum
// 0x0078 (0x0078 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum final
{
public:
	TArray<class ABP_NaviDevilGimmick_IgnorePause_C*> L_Actors;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C45[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NaviDevilGimmick_IgnorePause_C*     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C46[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NaviDevilGimmick_IgnorePause_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C47[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NaviDevilGimmick_IgnorePause_C*     CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum) == 0x000078, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, L_Actors) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::L_Actors' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, Temp_int_Variable) == 0x000030, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Max_ReturnValue) == 0x000040, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Max_ReturnValue_1) == 0x000044, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Clamp_ReturnValue) == 0x000048, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum, CallFunc_Less_IntInt_ReturnValue_1) == 0x000075, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcExistNum::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CalcSave
// 0x0040 (0x0040 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_CalcSave final
{
public:
	int32                                         L_Count;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_NaviDevilGimmick_IgnorePause_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C48[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NaviDevilGimmick_IgnorePause_C*     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_CalcSave");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave) == 0x000040, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_CalcSave");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, L_Count) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::L_Count' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, Temp_int_Variable) == 0x000004, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CalcSave, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CalcSave::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.DebugText
// 0x01E0 (0x01E0 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_DebugText final
{
public:
	int32                                         L_mapid;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C49[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FColor>                         L_Color;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<struct FColor>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C4A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C4B[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C4C[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C4D[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00E8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C4E[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01C8(0x0018)()
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_DebugText) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_DebugText");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_DebugText) == 0x0001E0, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_DebugText");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, L_mapid) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::L_mapid' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, L_Color) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::L_Color' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, Temp_string_Variable) == 0x000028, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, Temp_bool_Variable) == 0x000050, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000053, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, K2Node_Select_Default) == 0x000078, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_GetMapCommon_rerutn) == 0x000088, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_GetMapID_ReturnValue) == 0x0000A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000B0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Percent_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0000C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0000D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_IntToText_ReturnValue) == 0x0000E8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_TextToString_ReturnValue) == 0x000100, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_IsValid_ReturnValue_3) == 0x000110, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000138, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000148, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000158, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000168, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000178, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000188, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000198, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001B8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_DebugText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_DebugText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CheckIgnoreBox
// 0x0020 (0x0020 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox final
{
public:
	bool                                          Lock;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C4F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NaviDevilGimmick_Option_C*          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckOverlap_Overlap;                     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox) == 0x000020, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, Lock) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::Lock' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox, CallFunc_CheckOverlap_Overlap) == 0x00001E, "Member 'BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox::CallFunc_CheckOverlap_Overlap' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.ShowIcon
// 0x0088 (0x0088 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_ShowIcon final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C50[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C51[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMinimapPOIParam                       K2Node_MakeStruct_MinimapPOIParam;                 // 0x0048(0x0040)(NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_ShowIcon");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon) == 0x000088, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_ShowIcon");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, Temp_bool_Variable) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_GetMinimapManager_ReturnValue) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_GetAreaID_ReturnValue) == 0x000010, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, K2Node_Select_Default) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_GetMapID_ReturnValue) == 0x000020, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_ShowIcon, K2Node_MakeStruct_MinimapPOIParam) == 0x000048, "Member 'BP_NaviDevilGimmick_IgnorePause_C_ShowIcon::K2Node_MakeStruct_MinimapPOIParam' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.HideIcon
// 0x0028 (0x0028 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_HideIcon final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C52[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C53[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterDynamicPOIByOwner_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_HideIcon) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_HideIcon");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_HideIcon) == 0x000028, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_HideIcon");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_HideIcon, Temp_bool_Variable) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_HideIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_HideIcon, CallFunc_GetMinimapManager_ReturnValue) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_HideIcon::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_HideIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_NaviDevilGimmick_IgnorePause_C_HideIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_HideIcon, K2Node_Select_Default) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_HideIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_HideIcon, CallFunc_UnregisterDynamicPOIByOwner_ReturnValue) == 0x000020, "Member 'BP_NaviDevilGimmick_IgnorePause_C_HideIcon::CallFunc_UnregisterDynamicPOIByOwner_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.GetNaviParam
// 0x0210 (0x0210 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam final
{
public:
	struct FNaviDevilParam_st                     Param;                                             // 0x0000(0x0098)(Parm, OutParm, HasGetValueTypeHash)
	E_NAVI_DEVIL                                  L_CurrentNavi;                                     // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C54[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C55[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNaviDevilParam_st                     K2Node_MakeStruct_NaviDevilParam_st;               // 0x00A8(0x0098)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C56[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0148(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C57[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNaviDevilParam_st                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0168(0x0098)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C58[0x1];                                     // 0x0203(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_NAVI_DEVIL                                  CallFunc_GetCurrentNaviDevil_ReturnValue;          // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam) == 0x000210, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, Param) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::Param' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, L_CurrentNavi) == 0x000098, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::L_CurrentNavi' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, Temp_bool_True_if_break_was_hit_Variable) == 0x000099, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, K2Node_MakeStruct_NaviDevilParam_st) == 0x0000A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::K2Node_MakeStruct_NaviDevilParam_st' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, Temp_int_Loop_Counter_Variable) == 0x000140, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000148, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_GetDataTableRowFromName_OutRow) == 0x000168, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_Less_IntInt_ReturnValue) == 0x000201, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_BooleanAND_ReturnValue) == 0x000202, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_Add_IntInt_ReturnValue) == 0x000204, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000208, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam, CallFunc_GetCurrentNaviDevil_ReturnValue) == 0x000209, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam::CallFunc_GetCurrentNaviDevil_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.LineTrace
// 0x0328 (0x0328 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_LineTrace final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C59[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutHit;                                            // 0x001C(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Param_Hit;                                         // 0x00A4(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C5A[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             L_HitResult;                                       // 0x00A8(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          L_Hit;                                             // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C5B[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             L_HitResultReturn;                                 // 0x0134(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x01C8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C5C[0x2];                                     // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C5D[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C5E[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ConstParm, ReferenceParm)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C5F[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0278(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C60[0x2];                                     // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x028C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C61[0x3];                                     // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0326(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0327(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_LineTrace");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace) == 0x000328, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_LineTrace");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, Start) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::Start' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, End) == 0x00000C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::End' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, DrawDebugType) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, OutHit) == 0x00001C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::OutHit' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, Param_Hit) == 0x0000A4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::Param_Hit' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, L_HitResult) == 0x0000A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::L_HitResult' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, L_Hit) == 0x000130, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::L_Hit' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, L_HitResultReturn) == 0x000134, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::L_HitResultReturn' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, Temp_int_Array_Index_Variable) == 0x0001BC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, Temp_int_Loop_Counter_Variable) == 0x0001C0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_Add_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, Temp_object_Variable) == 0x0001C8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D9, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_Time) == 0x0001DC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_Distance) == 0x0001E0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_Location) == 0x0001E4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_Normal) == 0x0001FC, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000208, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_PhysMat) == 0x000218, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_HitActor) == 0x000220, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_HitComponent) == 0x000228, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000230, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_TraceStart) == 0x000244, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000250, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, K2Node_MakeArray_Array) == 0x000260, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000270, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000278, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000288, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000289, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_Array_Get_Item) == 0x00028C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_Array_Length_ReturnValue) == 0x000314, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_Less_IntInt_ReturnValue) == 0x000318, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_GetCollisionProfileName_ReturnValue) == 0x00031C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000324, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000325, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000326, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_LineTrace, CallFunc_BooleanOR_ReturnValue) == 0x000327, "Member 'BP_NaviDevilGimmick_IgnorePause_C_LineTrace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.GetAroundLocation
// 0x00B0 (0x00B0 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation final
{
public:
	struct FVector                                BaseLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseDir;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocationNum;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        LocationList;                                      // 0x0020(0x0010)(Parm, OutParm)
	float                                         L_Degree;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        L_LocationList;                                    // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FVector                                L_BaseDir;                                         // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C62[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation) == 0x0000B0, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, BaseLocation) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::BaseLocation' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, BaseDir) == 0x00000C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::BaseDir' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, Distance) == 0x000018, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::Distance' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, LocationNum) == 0x00001C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::LocationNum' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, LocationList) == 0x000020, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::LocationList' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, L_Degree) == 0x000030, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::L_Degree' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, L_index) == 0x000034, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::L_index' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, L_LocationList) == 0x000038, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::L_LocationList' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, L_BaseDir) == 0x000048, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::L_BaseDir' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000068, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_RotateAngleAxis_ReturnValue) == 0x00006C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000078, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_GetNaviGimmickExistNum
// 0x000C (0x000C - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C63[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum) == 0x000004, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum) == 0x00000C, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum, Num) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum::Num' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_GetNaviGimmickCategory
// 0x0008 (0x0008 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory final
{
public:
	int32                                         Category;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory) == 0x000004, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory) == 0x000008, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory, Category) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory::Category' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_GetNaviGimmickSaveID
// 0x0008 (0x0008 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID final
{
public:
	int32                                         Param_SaveId;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID) == 0x000004, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID) == 0x000008, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID, Param_SaveId) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID::Param_SaveId' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_CanExistNaviGimmick
// 0x00F0 (0x00F0 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick final
{
public:
	bool                                          CanExist;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C64[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_TableIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNaviDevilGimmickData                  L_Data;                                            // 0x0008(0x0050)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C65[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CoasterGimmick_C> K2Node_DynamicCast_AsBPI_Coaster_Gimmick;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckExist_Exist;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C66[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNaviDevilGimmickUniqueSaveID_ReturnValue; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNaviDevilGimmickUniqueSaveID_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentNaviDevilID_ReturnValue;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNaviDevilData                         CallFunc_GetNaviDevilData_FromDevilID_ReturnValue; // 0x0088(0x0010)()
	int32                                         CallFunc_GetNaviDevilGimmickData_FromID_tableIndex; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C67[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNaviDevilGimmickData                  CallFunc_GetNaviDevilGimmickData_FromID_ReturnValue; // 0x00A0(0x0050)()
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick) == 0x000008, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick) == 0x0000F0, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CanExist) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CanExist' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, L_TableIndex) == 0x000004, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::L_TableIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, L_Data) == 0x000008, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::L_Data' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, Temp_bool_Variable) == 0x000058, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, K2Node_DynamicCast_AsBPI_Coaster_Gimmick) == 0x000060, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::K2Node_DynamicCast_AsBPI_Coaster_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_BPI_CheckExist_Exist) == 0x000071, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_BPI_CheckExist_Exist' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_IsValid_ReturnValue) == 0x000072, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_GetNaviDevilGimmickUniqueSaveID_ReturnValue) == 0x000074, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_GetNaviDevilGimmickUniqueSaveID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_CheckNaviDevilGimmickUniqueSaveID_ReturnValue) == 0x000078, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_CheckNaviDevilGimmickUniqueSaveID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_Less_IntInt_ReturnValue) == 0x00007A, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00007B, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_GetMapID_ReturnValue) == 0x00007C, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_GetCurrentNaviDevilID_ReturnValue) == 0x000080, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_GetCurrentNaviDevilID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, K2Node_Select_Default) == 0x000084, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_GetNaviDevilData_FromDevilID_ReturnValue) == 0x000088, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_GetNaviDevilData_FromDevilID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_GetNaviDevilGimmickData_FromID_tableIndex) == 0x000098, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_GetNaviDevilGimmickData_FromID_tableIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick, CallFunc_GetNaviDevilGimmickData_FromID_ReturnValue) == 0x0000A0, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick::CallFunc_GetNaviDevilGimmickData_FromID_ReturnValue' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_IsCheckObstacle_WhenGotoGimmick
// 0x0001 (0x0001 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick final
{
public:
	bool                                          Param_CheckObstacle_WhenGotoGimmick;               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick) == 0x000001, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick) == 0x000001, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick, Param_CheckObstacle_WhenGotoGimmick) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick::Param_CheckObstacle_WhenGotoGimmick' has a wrong offset!");

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_IsCheckGotoGimmickMoving
// 0x0001 (0x0001 - 0x0000)
struct BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving final
{
public:
	bool                                          Param_CheckGotoGimmickMoving;                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving) == 0x000001, "Wrong alignment on BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving");
static_assert(sizeof(BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving) == 0x000001, "Wrong size on BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving");
static_assert(offsetof(BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving, Param_CheckGotoGimmickMoving) == 0x000000, "Member 'BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving::Param_CheckGotoGimmickMoving' has a wrong offset!");

}

