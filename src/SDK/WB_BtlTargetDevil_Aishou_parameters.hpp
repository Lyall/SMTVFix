#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlTargetDevil_Aishou

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.ExecuteUbergraph_WB_BtlTargetDevil_Aishou
// 0x0048 (0x0048 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BED[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BEE[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately_1;                        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BEF[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately;                          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou) == 0x000048, "Wrong size on WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, EntryPoint) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_Event_Delta) == 0x000010, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_ComponentBoundEvent_AnimPackName) == 0x00001C, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_ComponentBoundEvent_AnimationName) == 0x000024, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x00002C, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000030, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_SwitchInteger_CmpSuccess) == 0x000035, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_Event_Rate_1) == 0x000038, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_Event_Rate_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_Event_Immediately_1) == 0x00003C, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_Event_Immediately_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_Event_Rate) == 0x000040, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou, K2Node_Event_Immediately) == 0x000044, "Member 'WB_BtlTargetDevil_Aishou_C_ExecuteUbergraph_WB_BtlTargetDevil_Aishou::K2Node_Event_Immediately' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.Disappear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_Disappear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_Disappear) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_Disappear");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_Disappear) == 0x000008, "Wrong size on WB_BtlTargetDevil_Aishou_C_Disappear");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_Disappear, Rate) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_Disappear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_Disappear, Immediately) == 0x000004, "Member 'WB_BtlTargetDevil_Aishou_C_Disappear::Immediately' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.Appear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_Appear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_Appear) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_Appear");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_Appear) == 0x000008, "Wrong size on WB_BtlTargetDevil_Aishou_C_Appear");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_Appear, Rate) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_Appear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_Appear, Immediately) == 0x000004, "Member 'WB_BtlTargetDevil_Aishou_C_Appear::Immediately' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlTargetDevil_Aishou_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_PreConstruct) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_PreConstruct");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_PreConstruct) == 0x000001, "Wrong size on WB_BtlTargetDevil_Aishou_C_PreConstruct");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.CallTick
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_CallTick final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_CallTick) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_CallTick");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_CallTick) == 0x000004, "Wrong size on WB_BtlTargetDevil_Aishou_C_CallTick");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CallTick, Delta) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_CallTick::Delta' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.SetCharaParam
// 0x0098 (0x0098 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_SetCharaParam final
{
public:
	TArray<E_ATTRIBUTE_TYPE>                      Attr;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Param_AishouData;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Param_BaseAishouData;                              // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  IsOpen;                                            // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  Lo_IsOpen;                                         // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<E_ATTRIBUTE_TYPE>                      Lo_Attr;                                           // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<E_ATTRIBUTE_TYPE>                      Lo_AttrArray;                                      // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_AishouArray;                                    // 0x0070(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_WeakCnt;                                        // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ResistCnt;                                      // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_SetCharaParam) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_SetCharaParam");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_SetCharaParam) == 0x000098, "Wrong size on WB_BtlTargetDevil_Aishou_C_SetCharaParam");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Attr) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Attr' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Param_AishouData) == 0x000010, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Param_AishouData' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Param_BaseAishouData) == 0x000020, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Param_BaseAishouData' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, IsOpen) == 0x000030, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::IsOpen' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Lo_IsOpen) == 0x000040, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Lo_IsOpen' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Lo_Attr) == 0x000050, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Lo_Attr' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Lo_AttrArray) == 0x000060, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Lo_AttrArray' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Lo_AishouArray) == 0x000070, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Lo_AishouArray' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Lo_WeakCnt) == 0x000080, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Lo_WeakCnt' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, Lo_ResistCnt) == 0x000084, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::Lo_ResistCnt' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetCharaParam, K2Node_MakeArray_Array) == 0x000088, "Member 'WB_BtlTargetDevil_Aishou_C_SetCharaParam::K2Node_MakeArray_Array' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.ResistanceToPackName
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_ResistanceToPackName final
{
public:
	E_DEFENCE_RESISTANCE                          Resistance;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsOpened;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BF0[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PackIndex;                                         // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_ResistanceToPackName) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_ResistanceToPackName");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_ResistanceToPackName) == 0x000010, "Wrong size on WB_BtlTargetDevil_Aishou_C_ResistanceToPackName");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ResistanceToPackName, Resistance) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_ResistanceToPackName::Resistance' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ResistanceToPackName, Param_IsOpened) == 0x000001, "Member 'WB_BtlTargetDevil_Aishou_C_ResistanceToPackName::Param_IsOpened' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ResistanceToPackName, PackIndex) == 0x000004, "Member 'WB_BtlTargetDevil_Aishou_C_ResistanceToPackName::PackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_ResistanceToPackName, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'WB_BtlTargetDevil_Aishou_C_ResistanceToPackName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.GetSSPlayer_Resist
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BF1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        Resist;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist) == 0x000018, "Wrong size on WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist, Param_Index) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist, Resist) == 0x000008, "Member 'WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist::Resist' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_BtlTargetDevil_Aishou_C_GetSSPlayer_Resist::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.SetResistance
// 0x00D0 (0x00D0 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_SetResistance final
{
public:
	int32                                         AttrIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BF2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FName>                      AnimNames;                                         // 0x0008(0x0050)(Edit, BlueprintVisible)
	class USsPlayerWidget*                        CallFunc_GetSSPlayer_Resist_Resist;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class FName>                      K2Node_MakeVariable_MakeVariableOutput;            // 0x0060(0x0050)()
	E_DEFENCE_RESISTANCE                          CallFunc_CampPartyPanel_CheckResistanceType_ReturnValue; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DEFENCE_RESISTANCE                          CallFunc_CampPartyPanel_CheckResistanceType_ReturnValue_1; // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BF3[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ResistanceToPackName_PackIndex;           // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareResistance_AnimIndex;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_SetResistance) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_SetResistance");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_SetResistance) == 0x0000D0, "Wrong size on WB_BtlTargetDevil_Aishou_C_SetResistance");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, AttrIndex) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::AttrIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, AnimNames) == 0x000008, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::AnimNames' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_GetSSPlayer_Resist_Resist) == 0x000058, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_GetSSPlayer_Resist_Resist' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, K2Node_MakeVariable_MakeVariableOutput) == 0x000060, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_CampPartyPanel_CheckResistanceType_ReturnValue) == 0x0000B0, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_CampPartyPanel_CheckResistanceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_CampPartyPanel_CheckResistanceType_ReturnValue_1) == 0x0000B1, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_CampPartyPanel_CheckResistanceType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_ResistanceToPackName_PackIndex) == 0x0000B4, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_ResistanceToPackName_PackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_CompareResistance_AnimIndex) == 0x0000BC, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_CompareResistance_AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_SelectInt_ReturnValue) == 0x0000C0, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_Map_Find_Value) == 0x0000C4, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_Map_Find_ReturnValue) == 0x0000CC, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetResistance, CallFunc_Play_ReturnValue) == 0x0000CD, "Member 'WB_BtlTargetDevil_Aishou_C_SetResistance::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.PlayBG Anim
// 0x0014 (0x0014 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_PlayBG_Anim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEndOfAnim;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BF4[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_PlayBG_Anim");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim) == 0x000014, "Wrong size on WB_BtlTargetDevil_Aishou_C_PlayBG_Anim");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim, AnimIndex) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_PlayBG_Anim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim, IsLoop) == 0x000004, "Member 'WB_BtlTargetDevil_Aishou_C_PlayBG_Anim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim, IsEndOfAnim) == 0x000005, "Member 'WB_BtlTargetDevil_Aishou_C_PlayBG_Anim::IsEndOfAnim' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WB_BtlTargetDevil_Aishou_C_PlayBG_Anim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim, CallFunc_SelectInt_ReturnValue_1) == 0x00000C, "Member 'WB_BtlTargetDevil_Aishou_C_PlayBG_Anim::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_PlayBG_Anim, CallFunc_PlayByIndex_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_Aishou_C_PlayBG_Anim::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.CompareResistance
// 0x001C (0x001C - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_CompareResistance final
{
public:
	E_DEFENCE_RESISTANCE                          A;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DEFENCE_RESISTANCE                          B;                                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BF5[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimIndex;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_CompareResistance) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_CompareResistance");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_CompareResistance) == 0x00001C, "Wrong size on WB_BtlTargetDevil_Aishou_C_CompareResistance");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, A) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::A' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, B) == 0x000001, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::B' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, AnimIndex) == 0x000004, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_CompareResistance, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WB_BtlTargetDevil_Aishou_C_CompareResistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.SetAllWidgetTick
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_SetAllWidgetTick final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_SetAllWidgetTick) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_SetAllWidgetTick");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_SetAllWidgetTick) == 0x000001, "Wrong size on WB_BtlTargetDevil_Aishou_C_SetAllWidgetTick");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_SetAllWidgetTick, Enable) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_SetAllWidgetTick::Enable' has a wrong offset!");

// Function WB_BtlTargetDevil_Aishou.WB_BtlTargetDevil_Aishou_C.IsDisappeared
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_Aishou_C_IsDisappeared final
{
public:
	bool                                          Param_IsDisappeared;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Aishou_C_IsDisappeared) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_Aishou_C_IsDisappeared");
static_assert(sizeof(WB_BtlTargetDevil_Aishou_C_IsDisappeared) == 0x000001, "Wrong size on WB_BtlTargetDevil_Aishou_C_IsDisappeared");
static_assert(offsetof(WB_BtlTargetDevil_Aishou_C_IsDisappeared, Param_IsDisappeared) == 0x000000, "Member 'WB_BtlTargetDevil_Aishou_C_IsDisappeared::Param_IsDisappeared' has a wrong offset!");

}

