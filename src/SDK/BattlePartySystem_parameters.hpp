#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePartySystem

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "BTL_DESC_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattlePartySystem.BattlePartySystem_C.ExecuteUbergraph_BattlePartySystem
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem) == 0x000004, "Wrong alignment on BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem");
static_assert(sizeof(BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem) == 0x000008, "Wrong size on BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem");
static_assert(offsetof(BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem, EntryPoint) == 0x000000, "Member 'BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattlePartySystem_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattlePartySystem_C_ReceiveEndPlay");
static_assert(sizeof(BattlePartySystem_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattlePartySystem_C_ReceiveEndPlay");
static_assert(offsetof(BattlePartySystem_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattlePartySystem_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetMainWork
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_GetMainWork final
{
public:
	class ABattleMain_C*                          RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetMainWork) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetMainWork");
static_assert(sizeof(BattlePartySystem_C_GetMainWork) == 0x000020, "Wrong size on BattlePartySystem_C_GetMainWork");
static_assert(offsetof(BattlePartySystem_C_GetMainWork, RetValue) == 0x000000, "Member 'BattlePartySystem_C_GetMainWork::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetMainWork, K2Node_DynamicCast_AsBattle_Main) == 0x000010, "Member 'BattlePartySystem_C_GetMainWork::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattlePartySystem_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetPartyStart
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_Const_GetPartyStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetPartyStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetPartyStart");
static_assert(sizeof(BattlePartySystem_C_Const_GetPartyStart) == 0x000004, "Wrong size on BattlePartySystem_C_Const_GetPartyStart");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartyStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetPartyStart::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetPartyLoopMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_Const_GetPartyLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetPartyLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetPartyLoopMax");
static_assert(sizeof(BattlePartySystem_C_Const_GetPartyLoopMax) == 0x000008, "Wrong size on BattlePartySystem_C_Const_GetPartyLoopMax");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartyLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetPartyLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartyLoopMax, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_Const_GetPartyLoopMax::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetEnemyStart
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_Const_GetEnemyStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetEnemyStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetEnemyStart");
static_assert(sizeof(BattlePartySystem_C_Const_GetEnemyStart) == 0x000004, "Wrong size on BattlePartySystem_C_Const_GetEnemyStart");
static_assert(offsetof(BattlePartySystem_C_Const_GetEnemyStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetEnemyStart::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetEnemyNum
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_Const_GetEnemyNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetEnemyNum) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetEnemyNum");
static_assert(sizeof(BattlePartySystem_C_Const_GetEnemyNum) == 0x000004, "Wrong size on BattlePartySystem_C_Const_GetEnemyNum");
static_assert(offsetof(BattlePartySystem_C_Const_GetEnemyNum, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetEnemyNum::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetPlayerLoopMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_Const_GetPlayerLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetPlayerLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetPlayerLoopMax");
static_assert(sizeof(BattlePartySystem_C_Const_GetPlayerLoopMax) == 0x000008, "Wrong size on BattlePartySystem_C_Const_GetPlayerLoopMax");
static_assert(offsetof(BattlePartySystem_C_Const_GetPlayerLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetPlayerLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetPlayerLoopMax, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_Const_GetPlayerLoopMax::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetEnemyLoopMax
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_Const_GetEnemyLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetEnemyLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetEnemyLoopMax");
static_assert(sizeof(BattlePartySystem_C_Const_GetEnemyLoopMax) == 0x00000C, "Wrong size on BattlePartySystem_C_Const_GetEnemyLoopMax");
static_assert(offsetof(BattlePartySystem_C_Const_GetEnemyLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetEnemyLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetEnemyLoopMax, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_Const_GetEnemyLoopMax::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetEnemyLoopMax, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_Const_GetEnemyLoopMax::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetPartyUnit
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_GetPartyUnit final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77EA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetUnit_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetPartyUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetPartyUnit");
static_assert(sizeof(BattlePartySystem_C_GetPartyUnit) == 0x000028, "Wrong size on BattlePartySystem_C_GetPartyUnit");
static_assert(offsetof(BattlePartySystem_C_GetPartyUnit, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetPartyUnit::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetPartyUnit, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetPartyUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetPartyUnit, CallFunc_GetUnit_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_GetPartyUnit::CallFunc_GetUnit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetPartyUnit, K2Node_DynamicCast_AsChara_Base) == 0x000018, "Member 'BattlePartySystem_C_GetPartyUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetPartyUnit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattlePartySystem_C_GetPartyUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsExistNoLost
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_IsExistNoLost final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsExistNoLost) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsExistNoLost");
static_assert(sizeof(BattlePartySystem_C_IsExistNoLost) == 0x00000C, "Wrong size on BattlePartySystem_C_IsExistNoLost");
static_assert(offsetof(BattlePartySystem_C_IsExistNoLost, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsExistNoLost::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsExistNoLost, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsExistNoLost::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsExistNoLost, CallFunc_CheckFlag_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_IsExistNoLost::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsExistNoLost, CallFunc_IsExist_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_IsExistNoLost::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsExistNoLost, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BattlePartySystem_C_IsExistNoLost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsExistNoLost, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_IsExistNoLost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.ClearNowCommandAll
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_ClearNowCommandAll final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77EB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77EC[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_ClearNowCommandAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_ClearNowCommandAll");
static_assert(sizeof(BattlePartySystem_C_ClearNowCommandAll) == 0x000020, "Wrong size on BattlePartySystem_C_ClearNowCommandAll");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, IsPlayer) == 0x000000, "Member 'BattlePartySystem_C_ClearNowCommandAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, Temp_int_Variable) == 0x000004, "Member 'BattlePartySystem_C_ClearNowCommandAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_ClearNowCommandAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, CallFunc_const_GetEnemyLoopMax_retValue) == 0x00000C, "Member 'BattlePartySystem_C_ClearNowCommandAll::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, Temp_int_Variable_1) == 0x000010, "Member 'BattlePartySystem_C_ClearNowCommandAll::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000014, "Member 'BattlePartySystem_C_ClearNowCommandAll::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_ClearNowCommandAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000019, "Member 'BattlePartySystem_C_ClearNowCommandAll::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ClearNowCommandAll, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BattlePartySystem_C_ClearNowCommandAll::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.isEnemy
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_IsEnemy final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsEnemy) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsEnemy");
static_assert(sizeof(BattlePartySystem_C_IsEnemy) == 0x000008, "Wrong size on BattlePartySystem_C_IsEnemy");
static_assert(offsetof(BattlePartySystem_C_IsEnemy, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsEnemy::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsEnemy, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsEnemy::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsEnemy, CallFunc_CheckFlag_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_IsEnemy::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsHero
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_IsHero final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsHero) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsHero");
static_assert(sizeof(BattlePartySystem_C_IsHero) == 0x000008, "Wrong size on BattlePartySystem_C_IsHero");
static_assert(offsetof(BattlePartySystem_C_IsHero, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsHero::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsHero, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsHero::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsHero, CallFunc_CheckFlag_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_IsHero::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsNkm
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_IsNkm final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsNkm) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsNkm");
static_assert(sizeof(BattlePartySystem_C_IsNkm) == 0x000008, "Wrong size on BattlePartySystem_C_IsNkm");
static_assert(offsetof(BattlePartySystem_C_IsNkm, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsNkm::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNkm, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsNkm::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNkm, CallFunc_CheckFlag_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_IsNkm::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetCharID
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_GetCharID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNKM_retValue;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHero_retValue;                          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetCharID) == 0x000004, "Wrong alignment on BattlePartySystem_C_GetCharID");
static_assert(sizeof(BattlePartySystem_C_GetCharID) == 0x000010, "Wrong size on BattlePartySystem_C_GetCharID");
static_assert(offsetof(BattlePartySystem_C_GetCharID, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetCharID::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetCharID::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID, CallFunc_GetCharaID_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetCharID::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID, CallFunc_IsEnemy_retValue) == 0x00000C, "Member 'BattlePartySystem_C_GetCharID::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID, CallFunc_IsNKM_retValue) == 0x00000D, "Member 'BattlePartySystem_C_GetCharID::CallFunc_IsNKM_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID, CallFunc_IsHero_retValue) == 0x00000E, "Member 'BattlePartySystem_C_GetCharID::CallFunc_IsHero_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'BattlePartySystem_C_GetCharID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.CanAct
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_CanAct final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_CanAct) == 0x000004, "Wrong alignment on BattlePartySystem_C_CanAct");
static_assert(sizeof(BattlePartySystem_C_CanAct) == 0x00000C, "Wrong size on BattlePartySystem_C_CanAct");
static_assert(offsetof(BattlePartySystem_C_CanAct, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_CanAct::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanAct, RetValue) == 0x000004, "Member 'BattlePartySystem_C_CanAct::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanAct, CallFunc_CheckFlag2_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_CanAct::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanAct, CallFunc_CheckFlag_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_CanAct::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanAct, CallFunc_CheckFlag_ReturnValue_1) == 0x000007, "Member 'BattlePartySystem_C_CanAct::CallFunc_CheckFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanAct, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_CanAct::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanAct, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BattlePartySystem_C_CanAct::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanAct, CallFunc_BooleanOR_ReturnValue_1) == 0x00000A, "Member 'BattlePartySystem_C_CanAct::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.CanTurnAct
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_CanTurnAct final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77ED[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetCanActList_ReturnValue;                // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_CanTurnAct) == 0x000008, "Wrong alignment on BattlePartySystem_C_CanTurnAct");
static_assert(sizeof(BattlePartySystem_C_CanTurnAct) == 0x000020, "Wrong size on BattlePartySystem_C_CanTurnAct");
static_assert(offsetof(BattlePartySystem_C_CanTurnAct, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_CanTurnAct::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanTurnAct, RetValue) == 0x000004, "Member 'BattlePartySystem_C_CanTurnAct::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanTurnAct, CallFunc_GetCanActList_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_CanTurnAct::CallFunc_GetCanActList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanTurnAct, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_CanTurnAct::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CanTurnAct, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BattlePartySystem_C_CanTurnAct::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.AddFlagPartyAll
// 0x0048 (0x0048 - 0x0000)
struct BattlePartySystem_C_AddFlagPartyAll final
{
public:
	E_BTL_PARTY_STAT                              InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77EE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77EF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_AddFlagPartyAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_AddFlagPartyAll");
static_assert(sizeof(BattlePartySystem_C_AddFlagPartyAll) == 0x000048, "Wrong size on BattlePartySystem_C_AddFlagPartyAll");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_AddFlagPartyAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, Lo_ActList) == 0x000008, "Member 'BattlePartySystem_C_AddFlagPartyAll::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattlePartySystem_C_AddFlagPartyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattlePartySystem_C_AddFlagPartyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_AddFlagPartyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, CallFunc_GetActListAll_retValue) == 0x000028, "Member 'BattlePartySystem_C_AddFlagPartyAll::CallFunc_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattlePartySystem_C_AddFlagPartyAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_AddFlagPartyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartyAll, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_AddFlagPartyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.AddFlag2PartyAll
// 0x0048 (0x0048 - 0x0000)
struct BattlePartySystem_C_AddFlag2PartyAll final
{
public:
	E_BTL_PARTY_STAT2                             InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_AddFlag2PartyAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_AddFlag2PartyAll");
static_assert(sizeof(BattlePartySystem_C_AddFlag2PartyAll) == 0x000048, "Wrong size on BattlePartySystem_C_AddFlag2PartyAll");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_AddFlag2PartyAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, Lo_ActList) == 0x000008, "Member 'BattlePartySystem_C_AddFlag2PartyAll::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattlePartySystem_C_AddFlag2PartyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattlePartySystem_C_AddFlag2PartyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_AddFlag2PartyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, CallFunc_GetActListAll_retValue) == 0x000028, "Member 'BattlePartySystem_C_AddFlag2PartyAll::CallFunc_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattlePartySystem_C_AddFlag2PartyAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_AddFlag2PartyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartyAll, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_AddFlag2PartyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DelFlagPartyAll
// 0x0048 (0x0048 - 0x0000)
struct BattlePartySystem_C_DelFlagPartyAll final
{
public:
	E_BTL_PARTY_STAT                              InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F3[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_DelFlagPartyAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_DelFlagPartyAll");
static_assert(sizeof(BattlePartySystem_C_DelFlagPartyAll) == 0x000048, "Wrong size on BattlePartySystem_C_DelFlagPartyAll");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_DelFlagPartyAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, Lo_ActList) == 0x000008, "Member 'BattlePartySystem_C_DelFlagPartyAll::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattlePartySystem_C_DelFlagPartyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattlePartySystem_C_DelFlagPartyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_DelFlagPartyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, CallFunc_GetActListAll_retValue) == 0x000028, "Member 'BattlePartySystem_C_DelFlagPartyAll::CallFunc_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattlePartySystem_C_DelFlagPartyAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_DelFlagPartyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartyAll, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_DelFlagPartyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DelFlag2PartyAll
// 0x0048 (0x0048 - 0x0000)
struct BattlePartySystem_C_DelFlag2PartyAll final
{
public:
	E_BTL_PARTY_STAT2                             InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_DelFlag2PartyAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_DelFlag2PartyAll");
static_assert(sizeof(BattlePartySystem_C_DelFlag2PartyAll) == 0x000048, "Wrong size on BattlePartySystem_C_DelFlag2PartyAll");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_DelFlag2PartyAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, Lo_ActList) == 0x000008, "Member 'BattlePartySystem_C_DelFlag2PartyAll::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattlePartySystem_C_DelFlag2PartyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattlePartySystem_C_DelFlag2PartyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_DelFlag2PartyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, CallFunc_GetActListAll_retValue) == 0x000028, "Member 'BattlePartySystem_C_DelFlag2PartyAll::CallFunc_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattlePartySystem_C_DelFlag2PartyAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_DelFlag2PartyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartyAll, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_DelFlag2PartyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetSideFirstActIndex
// 0x0058 (0x0058 - 0x0000)
struct BattlePartySystem_C_GetSideFirstActIndex final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCounter;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_ActList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F7[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0028(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue_1;       // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetSideFirstActIndex) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetSideFirstActIndex");
static_assert(sizeof(BattlePartySystem_C_GetSideFirstActIndex) == 0x000058, "Wrong size on BattlePartySystem_C_GetSideFirstActIndex");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, IsPlayer) == 0x000000, "Member 'BattlePartySystem_C_GetSideFirstActIndex::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, IsCounter) == 0x000001, "Member 'BattlePartySystem_C_GetSideFirstActIndex::IsCounter' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetSideFirstActIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, Lo_ActList) == 0x000008, "Member 'BattlePartySystem_C_GetSideFirstActIndex::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BattlePartySystem_C_GetSideFirstActIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BattlePartySystem_C_GetSideFirstActIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_GetSideIsInFieldList_ReturnValue_1) == 0x000038, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_GetSideIsInFieldList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideFirstActIndex, CallFunc_CheckFlag2_ReturnValue) == 0x000051, "Member 'BattlePartySystem_C_GetSideFirstActIndex::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetSideActList
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_GetSideActList final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_GetSideActList) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetSideActList");
static_assert(sizeof(BattlePartySystem_C_GetSideActList) == 0x000028, "Wrong size on BattlePartySystem_C_GetSideActList");
static_assert(offsetof(BattlePartySystem_C_GetSideActList, Side) == 0x000000, "Member 'BattlePartySystem_C_GetSideActList::Side' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideActList, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetSideActList::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideActList, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_GetSideActList::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsAllDeadSide
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_IsAllDeadSide final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnemyLoseBattleEnd_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F9[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsAllDeadSide) == 0x000008, "Wrong alignment on BattlePartySystem_C_IsAllDeadSide");
static_assert(sizeof(BattlePartySystem_C_IsAllDeadSide) == 0x000020, "Wrong size on BattlePartySystem_C_IsAllDeadSide");
static_assert(offsetof(BattlePartySystem_C_IsAllDeadSide, IsPlayer) == 0x000000, "Member 'BattlePartySystem_C_IsAllDeadSide::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDeadSide, RetValue) == 0x000001, "Member 'BattlePartySystem_C_IsAllDeadSide::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDeadSide, CallFunc_CheckEnemyLoseBattleEnd_ReturnValue) == 0x000002, "Member 'BattlePartySystem_C_IsAllDeadSide::CallFunc_CheckEnemyLoseBattleEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDeadSide, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_IsAllDeadSide::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDeadSide, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_IsAllDeadSide::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDeadSide, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BattlePartySystem_C_IsAllDeadSide::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DbgPrint_Combo
// 0x0080 (0x0080 - 0x0000)
struct BattlePartySystem_C_DbgPrint_Combo final
{
public:
	TArray<int32>                                 Lo_List;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77FA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FB[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_DbgPrint_Combo) == 0x000008, "Wrong alignment on BattlePartySystem_C_DbgPrint_Combo");
static_assert(sizeof(BattlePartySystem_C_DbgPrint_Combo) == 0x000080, "Wrong size on BattlePartySystem_C_DbgPrint_Combo");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, Lo_List) == 0x000000, "Member 'BattlePartySystem_C_DbgPrint_Combo::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattlePartySystem_C_DbgPrint_Combo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattlePartySystem_C_DbgPrint_Combo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_GetActListAll_retValue) == 0x000020, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Array_Get_Item) == 0x000030, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_GetAidCounter_ReturnValue) == 0x000038, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_GetAidCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000050, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Combo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BattlePartySystem_C_DbgPrint_Combo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DbgPrint_Critical
// 0x0070 (0x0070 - 0x0000)
struct BattlePartySystem_C_DbgPrint_Critical final
{
public:
	TArray<int32>                                 Lo_List;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77FC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FD[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_DbgPrint_Critical) == 0x000008, "Wrong alignment on BattlePartySystem_C_DbgPrint_Critical");
static_assert(sizeof(BattlePartySystem_C_DbgPrint_Critical) == 0x000070, "Wrong size on BattlePartySystem_C_DbgPrint_Critical");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, Lo_List) == 0x000000, "Member 'BattlePartySystem_C_DbgPrint_Critical::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattlePartySystem_C_DbgPrint_Critical::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattlePartySystem_C_DbgPrint_Critical::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_GetActListAll_retValue) == 0x000030, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_GetAidCounter_ReturnValue) == 0x000048, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_GetAidCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DbgPrint_Critical, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BattlePartySystem_C_DbgPrint_Critical::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BeHome
// 0x0130 (0x0130 - 0x0000)
struct BattlePartySystem_C_BeHome final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FF[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetHomeTransform_ReturnValue;             // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7800[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFlag2_ReturnValue_1;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7801[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7802[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7803[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7804[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BeHome) == 0x000010, "Wrong alignment on BattlePartySystem_C_BeHome");
static_assert(sizeof(BattlePartySystem_C_BeHome) == 0x000130, "Wrong size on BattlePartySystem_C_BeHome");
static_assert(offsetof(BattlePartySystem_C_BeHome, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BeHome::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, Lo_Unit) == 0x000008, "Member 'BattlePartySystem_C_BeHome::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_CheckFlag2_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_BeHome::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_GetHomeTransform_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_BeHome::CallFunc_GetHomeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BattlePartySystem_C_BeHome::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_BreakTransform_Location) == 0x000054, "Member 'BattlePartySystem_C_BeHome::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'BattlePartySystem_C_BeHome::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_BreakTransform_Scale) == 0x00006C, "Member 'BattlePartySystem_C_BeHome::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_CheckFlag2_ReturnValue_1) == 0x000078, "Member 'BattlePartySystem_C_BeHome::CallFunc_CheckFlag2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_GetPartyUnit_retValue) == 0x000080, "Member 'BattlePartySystem_C_BeHome::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_Not_PreBool_ReturnValue_1) == 0x000088, "Member 'BattlePartySystem_C_BeHome::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BattlePartySystem_C_BeHome::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, K2Node_DynamicCast_AsPlayer_Base) == 0x000090, "Member 'BattlePartySystem_C_BeHome::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BattlePartySystem_C_BeHome::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_GetHeroIndex_ReturnValue) == 0x00009C, "Member 'BattlePartySystem_C_BeHome::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BattlePartySystem_C_BeHome::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000A4, "Member 'BattlePartySystem_C_BeHome::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00012C, "Member 'BattlePartySystem_C_BeHome::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHome, CallFunc_IsValid_ReturnValue) == 0x00012D, "Member 'BattlePartySystem_C_BeHome::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BeHomeSideAll
// 0x0050 (0x0050 - 0x0000)
struct BattlePartySystem_C_BeHomeSideAll final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7805[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7806[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7807[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BeHomeSideAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_BeHomeSideAll");
static_assert(sizeof(BattlePartySystem_C_BeHomeSideAll) == 0x000050, "Wrong size on BattlePartySystem_C_BeHomeSideAll");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, IsPlayer) == 0x000000, "Member 'BattlePartySystem_C_BeHomeSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, Lo_List) == 0x000008, "Member 'BattlePartySystem_C_BeHomeSideAll::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, Temp_bool_Variable) == 0x000018, "Member 'BattlePartySystem_C_BeHomeSideAll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, Temp_byte_Variable) == 0x000019, "Member 'BattlePartySystem_C_BeHomeSideAll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, Temp_byte_Variable_1) == 0x00001A, "Member 'BattlePartySystem_C_BeHomeSideAll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BattlePartySystem_C_BeHomeSideAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, K2Node_Select_Default) == 0x000020, "Member 'BattlePartySystem_C_BeHomeSideAll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_BeHomeSideAll::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattlePartySystem_C_BeHomeSideAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_BeHomeSideAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_BeHomeSideAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, CallFunc_Array_Get_Item) == 0x000044, "Member 'BattlePartySystem_C_BeHomeSideAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeHomeSideAll, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BattlePartySystem_C_BeHomeSideAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetVisibility
// 0x0138 (0x0138 - 0x0000)
struct BattlePartySystem_C_UnitSetVisibility final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ParticleInterlock;                                 // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DeactivateParticle;                                // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7808[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Lo_AttachedActors;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Lo_Sw;                                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7809[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Index;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaAnimation_C> CallFunc_SetIsUpdateIK_self_CastInput;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIsUpdateIK_ret;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780B[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetHeroUnit_retValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_780D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimateDev455Head_C> K2Node_DynamicCast_AsBPI_Animate_Dev_455Head;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780E[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_CHAR_TYPE                               CallFunc_GetCharaTypeDetail_ReturnValue;           // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_780F[0x5];                                     // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7810[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBadStatus_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRapidReturnActionNow_retValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7811[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7812[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFlag2_ReturnValue_1;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7813[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7814[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base_1;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7815[0x2];                                     // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7816[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_UnitSetVisibility) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetVisibility");
static_assert(sizeof(BattlePartySystem_C_UnitSetVisibility) == 0x000138, "Wrong size on BattlePartySystem_C_UnitSetVisibility");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_UnitSetVisibility::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Sw) == 0x000004, "Member 'BattlePartySystem_C_UnitSetVisibility::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, ParticleInterlock) == 0x000005, "Member 'BattlePartySystem_C_UnitSetVisibility::ParticleInterlock' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, DeactivateParticle) == 0x000006, "Member 'BattlePartySystem_C_UnitSetVisibility::DeactivateParticle' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Lo_AttachedActors) == 0x000008, "Member 'BattlePartySystem_C_UnitSetVisibility::Lo_AttachedActors' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Lo_Sw) == 0x000018, "Member 'BattlePartySystem_C_UnitSetVisibility::Lo_Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Lo_Index) == 0x00001C, "Member 'BattlePartySystem_C_UnitSetVisibility::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Lo_Unit) == 0x000020, "Member 'BattlePartySystem_C_UnitSetVisibility::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_SetIsUpdateIK_self_CastInput) == 0x000028, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_SetIsUpdateIK_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_SetIsUpdateIK_ret) == 0x000038, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_SetIsUpdateIK_ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetAttachedActors_OutActors) == 0x000040, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetHeroUnit_retValue) == 0x000058, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetHeroUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BattlePartySystem_C_UnitSetVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, K2Node_DynamicCast_AsBPI_Animate_Dev_455Head) == 0x000070, "Member 'BattlePartySystem_C_UnitSetVisibility::K2Node_DynamicCast_AsBPI_Animate_Dev_455Head' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BattlePartySystem_C_UnitSetVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000081, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000091, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetCharaTypeDetail_ReturnValue) == 0x000092, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetCharaTypeDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BattlePartySystem_C_UnitSetVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetPartyUnit_retValue) == 0x0000C0, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetBadStatus_ReturnValue) == 0x0000C8, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetHeroIndex_ReturnValue) == 0x0000CC, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetHeroIndex_ReturnValue_1) == 0x0000D0, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetHeroIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_IsRapidReturnActionNow_retValue) == 0x0000D4, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_IsRapidReturnActionNow_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D5, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x0000D8, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Array_Contains_ReturnValue) == 0x0000E8, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E9, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_CheckFlag2_ReturnValue) == 0x0000EA, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000EB, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000EC, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'BattlePartySystem_C_UnitSetVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_CheckFlag2_ReturnValue_1) == 0x0000F4, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_CheckFlag2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000F5, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetPlayer_AsPlayer_Base) == 0x0000F8, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetPlayer_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000100, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_GetPlayer_AsPlayer_Base_1) == 0x000108, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_GetPlayer_AsPlayer_Base_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_IsValid_ReturnValue_2) == 0x000110, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000111, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Array_Get_Item) == 0x000118, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BattlePartySystem_C_UnitSetVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000128, "Member 'BattlePartySystem_C_UnitSetVisibility::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BattlePartySystem_C_UnitSetVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetVisibilityAll
// 0x0048 (0x0048 - 0x0000)
struct BattlePartySystem_C_UnitSetVisibilityAll final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7817[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7818[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue;          // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_UnitSetVisibilityAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetVisibilityAll");
static_assert(sizeof(BattlePartySystem_C_UnitSetVisibilityAll) == 0x000048, "Wrong size on BattlePartySystem_C_UnitSetVisibilityAll");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, Sw) == 0x000000, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, Lo_List) == 0x000008, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, CallFunc_GetAllIsInFieldList_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::CallFunc_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilityAll, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_UnitSetVisibilityAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BeDefaultMotion
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_BeDefaultMotion final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7819[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BeDefaultMotion) == 0x000008, "Wrong alignment on BattlePartySystem_C_BeDefaultMotion");
static_assert(sizeof(BattlePartySystem_C_BeDefaultMotion) == 0x000018, "Wrong size on BattlePartySystem_C_BeDefaultMotion");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotion, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BeDefaultMotion::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotion, CallFunc_GetPartyUnit_retValue) == 0x000008, "Member 'BattlePartySystem_C_BeDefaultMotion::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotion, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_BeDefaultMotion::CallFunc_IsExist_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BeDefaultMotionSideAll
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_BeDefaultMotionSideAll final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartnerLoopMax_retValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781B[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BeDefaultMotionSideAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_BeDefaultMotionSideAll");
static_assert(sizeof(BattlePartySystem_C_BeDefaultMotionSideAll) == 0x000030, "Wrong size on BattlePartySystem_C_BeDefaultMotionSideAll");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, IsPlayer) == 0x000000, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, Temp_int_Variable) == 0x000004, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, Temp_int_Variable_1) == 0x00000C, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_const_GetPartnerLoopMax_retValue) == 0x000014, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_const_GetPartnerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000018, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, Temp_int_Variable_2) == 0x00001C, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000021, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000028, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeDefaultMotionSideAll, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00002C, "Member 'BattlePartySystem_C_BeDefaultMotionSideAll::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetEnemyLeaderPartyData
// 0x0650 (0x0650 - 0x0000)
struct BattlePartySystem_C_GetEnemyLeaderPartyData final
{
public:
	struct FBtlParty                              RetValue;                                          // 0x0000(0x0320)(Parm, OutParm)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781C[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0330(0x0320)()
};
static_assert(alignof(BattlePartySystem_C_GetEnemyLeaderPartyData) == 0x000010, "Wrong alignment on BattlePartySystem_C_GetEnemyLeaderPartyData");
static_assert(sizeof(BattlePartySystem_C_GetEnemyLeaderPartyData) == 0x000650, "Wrong size on BattlePartySystem_C_GetEnemyLeaderPartyData");
static_assert(offsetof(BattlePartySystem_C_GetEnemyLeaderPartyData, RetValue) == 0x000000, "Member 'BattlePartySystem_C_GetEnemyLeaderPartyData::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyLeaderPartyData, Lo_Unit) == 0x000320, "Member 'BattlePartySystem_C_GetEnemyLeaderPartyData::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyLeaderPartyData, CallFunc_const_GetEnemyStart_retValue) == 0x000328, "Member 'BattlePartySystem_C_GetEnemyLeaderPartyData::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyLeaderPartyData, CallFunc_GetBtlPartyData_ReturnValue) == 0x000330, "Member 'BattlePartySystem_C_GetEnemyLeaderPartyData::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.isStock
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_IsStock final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsStock) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsStock");
static_assert(sizeof(BattlePartySystem_C_IsStock) == 0x000008, "Wrong size on BattlePartySystem_C_IsStock");
static_assert(offsetof(BattlePartySystem_C_IsStock, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsStock::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsStock, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsStock::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsStock, CallFunc_CheckFlag_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_IsStock::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetStockStart
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_Const_GetStockStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetStockStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetStockStart");
static_assert(sizeof(BattlePartySystem_C_Const_GetStockStart) == 0x000004, "Wrong size on BattlePartySystem_C_Const_GetStockStart");
static_assert(offsetof(BattlePartySystem_C_Const_GetStockStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetStockStart::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetStockLoopMax
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_Const_GetStockLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetStockLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetStockLoopMax");
static_assert(sizeof(BattlePartySystem_C_Const_GetStockLoopMax) == 0x00000C, "Wrong size on BattlePartySystem_C_Const_GetStockLoopMax");
static_assert(offsetof(BattlePartySystem_C_Const_GetStockLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetStockLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetStockLoopMax, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_Const_GetStockLoopMax::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetStockLoopMax, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_Const_GetStockLoopMax::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetPartyUnit
// 0x0350 (0x0350 - 0x0000)
struct BattlePartySystem_C_SetPartyUnit final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           InUnit;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DevilID;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               Type;                                              // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReader;                                          // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781E[0xA];                                     // 0x0016(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              Lo_Clear;                                          // 0x0020(0x0320)(Edit, BlueprintVisible)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidIndex_ReturnValue;                 // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_SetPartyUnit) == 0x000010, "Wrong alignment on BattlePartySystem_C_SetPartyUnit");
static_assert(sizeof(BattlePartySystem_C_SetPartyUnit) == 0x000350, "Wrong size on BattlePartySystem_C_SetPartyUnit");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_SetPartyUnit::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, InUnit) == 0x000008, "Member 'BattlePartySystem_C_SetPartyUnit::InUnit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, DevilID) == 0x000010, "Member 'BattlePartySystem_C_SetPartyUnit::DevilID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, Type) == 0x000014, "Member 'BattlePartySystem_C_SetPartyUnit::Type' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, IsReader) == 0x000015, "Member 'BattlePartySystem_C_SetPartyUnit::IsReader' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, Lo_Clear) == 0x000020, "Member 'BattlePartySystem_C_SetPartyUnit::Lo_Clear' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, CallFunc_GetMainWork_retValue) == 0x000340, "Member 'BattlePartySystem_C_SetPartyUnit::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyUnit, CallFunc_IsValidIndex_ReturnValue) == 0x000348, "Member 'BattlePartySystem_C_SetPartyUnit::CallFunc_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetAuraState
// 0x0054 (0x0054 - 0x0000)
struct BattlePartySystem_C_GetAuraState final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_AURA_TYPE                             RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue_1;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7820[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_2;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue_3;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7821[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_4;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue_5;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7822[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_6;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue_7;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7823[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_8;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue_9;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_9;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7824[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_10;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_10;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetAuraState) == 0x000004, "Wrong alignment on BattlePartySystem_C_GetAuraState");
static_assert(sizeof(BattlePartySystem_C_GetAuraState) == 0x000054, "Wrong size on BattlePartySystem_C_GetAuraState");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetAuraState::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetAuraState::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_1) == 0x00000C, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000011, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_2) == 0x000014, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_3) == 0x000018, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00001C, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00001D, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_4) == 0x000020, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_5) == 0x000024, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000028, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_5) == 0x000029, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_6) == 0x00002C, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_7) == 0x000030, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000034, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000035, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_8) == 0x000038, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_9) == 0x00003C, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_8) == 0x000040, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_9) == 0x000041, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_GetAidCounter_ReturnValue_10) == 0x000044, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_GetAidCounter_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_Greater_IntInt_ReturnValue_10) == 0x000048, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_Greater_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue) == 0x000049, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_1) == 0x00004A, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_2) == 0x00004B, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_3) == 0x00004C, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_4) == 0x00004D, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_5) == 0x00004E, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_6) == 0x00004F, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_7) == 0x000050, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetAuraState, CallFunc_BooleanOR_ReturnValue_8) == 0x000051, "Member 'BattlePartySystem_C_GetAuraState::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetOnBattleNumMax
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_Const_GetOnBattleNumMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetOnBattleNumMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetOnBattleNumMax");
static_assert(sizeof(BattlePartySystem_C_Const_GetOnBattleNumMax) == 0x000004, "Wrong size on BattlePartySystem_C_Const_GetOnBattleNumMax");
static_assert(offsetof(BattlePartySystem_C_Const_GetOnBattleNumMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetOnBattleNumMax::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetUnitStateMotion
// 0x0050 (0x0050 - 0x0000)
struct BattlePartySystem_C_GetUnitStateMotion final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Lo_MotionID;                                       // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7825[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBossFlag_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDown_ReturnValue;                       // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7826[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxHP_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7827[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowHP_ReturnValue_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7828[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7829[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_782A[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandom_retValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetUnitStateMotion) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetUnitStateMotion");
static_assert(sizeof(BattlePartySystem_C_GetUnitStateMotion) == 0x000050, "Wrong size on BattlePartySystem_C_GetUnitStateMotion");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetUnitStateMotion::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetUnitStateMotion::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, Lo_MotionID) == 0x000005, "Member 'BattlePartySystem_C_GetUnitStateMotion::Lo_MotionID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_GetHeroIndex_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_GetNowHP_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_CheckBossFlag_ReturnValue) == 0x000012, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_CheckBossFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_IsDown_ReturnValue) == 0x000013, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_IsDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_CheckFlag_ReturnValue) == 0x000014, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_GetMaxHP_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_GetMaxHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_GetNowHP_ReturnValue_1) == 0x000024, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_GetNowHP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_CheckBadStatus_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00002C, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_GetHeroIndex_ReturnValue_1) == 0x000038, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_GetHeroIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00003C, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_BooleanAND_ReturnValue_1) == 0x00003D, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_GetMainWork_retValue) == 0x000040, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_GetRandom_retValue) == 0x000048, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_GetRandom_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUnitStateMotion, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00004D, "Member 'BattlePartySystem_C_GetUnitStateMotion::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsDeadDamage
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_IsDeadDamage final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             Lo_MotionID;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782B[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsDeadDamage) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsDeadDamage");
static_assert(sizeof(BattlePartySystem_C_IsDeadDamage) == 0x000018, "Wrong size on BattlePartySystem_C_IsDeadDamage");
static_assert(offsetof(BattlePartySystem_C_IsDeadDamage, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsDeadDamage::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsDeadDamage, Damage) == 0x000004, "Member 'BattlePartySystem_C_IsDeadDamage::Damage' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsDeadDamage, RetValue) == 0x000008, "Member 'BattlePartySystem_C_IsDeadDamage::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsDeadDamage, Lo_MotionID) == 0x000009, "Member 'BattlePartySystem_C_IsDeadDamage::Lo_MotionID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsDeadDamage, CallFunc_GetNowHP_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_IsDeadDamage::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsDeadDamage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_IsDeadDamage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsDeadDamage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BattlePartySystem_C_IsDeadDamage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetName
// 0x0170 (0x0170 - 0x0000)
struct BattlePartySystem_C_GetName final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RetValue;                                          // 0x0008(0x0018)(Parm, OutParm)
	E_CHARA_MOTION_ID                             Lo_MotionID;                                       // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x0028(0x0148)()
};
static_assert(alignof(BattlePartySystem_C_GetName) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetName");
static_assert(sizeof(BattlePartySystem_C_GetName) == 0x000170, "Wrong size on BattlePartySystem_C_GetName");
static_assert(offsetof(BattlePartySystem_C_GetName, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetName::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetName, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetName::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetName, Lo_MotionID) == 0x000020, "Member 'BattlePartySystem_C_GetName::Lo_MotionID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetName, CallFunc_GetBtlCharaData_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_GetName::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsUseableItem
// 0x0078 (0x0078 - 0x0000)
struct BattlePartySystem_C_IsUseableItem final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_782E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Index;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Lo_UseNKM;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           Lo_ItemData;                                       // 0x0014(0x005C)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsUseBattle_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsUseableItem) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsUseableItem");
static_assert(sizeof(BattlePartySystem_C_IsUseableItem) == 0x000078, "Wrong size on BattlePartySystem_C_IsUseableItem");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_IsUseableItem::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, ItemId) == 0x000004, "Member 'BattlePartySystem_C_IsUseableItem::ItemId' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, RetValue) == 0x000008, "Member 'BattlePartySystem_C_IsUseableItem::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, Lo_Index) == 0x00000C, "Member 'BattlePartySystem_C_IsUseableItem::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, Lo_UseNKM) == 0x000010, "Member 'BattlePartySystem_C_IsUseableItem::Lo_UseNKM' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, Lo_ItemData) == 0x000014, "Member 'BattlePartySystem_C_IsUseableItem::Lo_ItemData' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, CallFunc_GetHeroIndex_ReturnValue) == 0x000070, "Member 'BattlePartySystem_C_IsUseableItem::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, CallFunc_ItemIsUseBattle_ReturnValue) == 0x000074, "Member 'BattlePartySystem_C_IsUseableItem::CallFunc_ItemIsUseBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000075, "Member 'BattlePartySystem_C_IsUseableItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsUseableItem, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'BattlePartySystem_C_IsUseableItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetPartnerStart
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_Const_GetPartnerStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetPartnerStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetPartnerStart");
static_assert(sizeof(BattlePartySystem_C_Const_GetPartnerStart) == 0x000004, "Wrong size on BattlePartySystem_C_Const_GetPartnerStart");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartnerStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetPartnerStart::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetPartnerNum
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_Const_GetPartnerNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetPartnerNum) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetPartnerNum");
static_assert(sizeof(BattlePartySystem_C_Const_GetPartnerNum) == 0x000004, "Wrong size on BattlePartySystem_C_Const_GetPartnerNum");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartnerNum, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetPartnerNum::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.const_GetPartnerLoopMax
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_Const_GetPartnerLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_Const_GetPartnerLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_Const_GetPartnerLoopMax");
static_assert(sizeof(BattlePartySystem_C_Const_GetPartnerLoopMax) == 0x00000C, "Wrong size on BattlePartySystem_C_Const_GetPartnerLoopMax");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartnerLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_Const_GetPartnerLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartnerLoopMax, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_Const_GetPartnerLoopMax::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_Const_GetPartnerLoopMax, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_Const_GetPartnerLoopMax::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsPartner
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_IsPartner final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsPartner) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsPartner");
static_assert(sizeof(BattlePartySystem_C_IsPartner) == 0x000008, "Wrong size on BattlePartySystem_C_IsPartner");
static_assert(offsetof(BattlePartySystem_C_IsPartner, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsPartner::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsPartner, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsPartner::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetPartnerID
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_GetPartnerID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PARTNER_ID                                  ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_GetPartnerID) == 0x000004, "Wrong alignment on BattlePartySystem_C_GetPartnerID");
static_assert(sizeof(BattlePartySystem_C_GetPartnerID) == 0x000008, "Wrong size on BattlePartySystem_C_GetPartnerID");
static_assert(offsetof(BattlePartySystem_C_GetPartnerID, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetPartnerID::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetPartnerID, ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_GetPartnerID::ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.AddFlagPartnerAll
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_AddFlagPartnerAll final
{
public:
	E_BTL_PARTY_STAT                              InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7830[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetPartnerLoopMax_retValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_AddFlagPartnerAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_AddFlagPartnerAll");
static_assert(sizeof(BattlePartySystem_C_AddFlagPartnerAll) == 0x000014, "Wrong size on BattlePartySystem_C_AddFlagPartnerAll");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartnerAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_AddFlagPartnerAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartnerAll, CallFunc_const_GetPartnerLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_AddFlagPartnerAll::CallFunc_const_GetPartnerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartnerAll, Temp_int_Variable) == 0x000008, "Member 'BattlePartySystem_C_AddFlagPartnerAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartnerAll, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_AddFlagPartnerAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartnerAll, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_AddFlagPartnerAll::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlagPartnerAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BattlePartySystem_C_AddFlagPartnerAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.AddFlag2PartnerAll
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_AddFlag2PartnerAll final
{
public:
	E_BTL_PARTY_STAT2                             InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7831[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetPartnerLoopMax_retValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_AddFlag2PartnerAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_AddFlag2PartnerAll");
static_assert(sizeof(BattlePartySystem_C_AddFlag2PartnerAll) == 0x000014, "Wrong size on BattlePartySystem_C_AddFlag2PartnerAll");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartnerAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_AddFlag2PartnerAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartnerAll, CallFunc_const_GetPartnerLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_AddFlag2PartnerAll::CallFunc_const_GetPartnerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartnerAll, Temp_int_Variable) == 0x000008, "Member 'BattlePartySystem_C_AddFlag2PartnerAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartnerAll, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_AddFlag2PartnerAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartnerAll, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_AddFlag2PartnerAll::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AddFlag2PartnerAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BattlePartySystem_C_AddFlag2PartnerAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DelFlagPartnerAll
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_DelFlagPartnerAll final
{
public:
	E_BTL_PARTY_STAT                              InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7832[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetPartnerLoopMax_retValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_DelFlagPartnerAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_DelFlagPartnerAll");
static_assert(sizeof(BattlePartySystem_C_DelFlagPartnerAll) == 0x000014, "Wrong size on BattlePartySystem_C_DelFlagPartnerAll");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartnerAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_DelFlagPartnerAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartnerAll, CallFunc_const_GetPartnerLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_DelFlagPartnerAll::CallFunc_const_GetPartnerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartnerAll, Temp_int_Variable) == 0x000008, "Member 'BattlePartySystem_C_DelFlagPartnerAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartnerAll, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_DelFlagPartnerAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartnerAll, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_DelFlagPartnerAll::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlagPartnerAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BattlePartySystem_C_DelFlagPartnerAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DelFlag2PartnerAll
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_DelFlag2PartnerAll final
{
public:
	E_BTL_PARTY_STAT2                             InFlag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7833[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetPartnerLoopMax_retValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_DelFlag2PartnerAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_DelFlag2PartnerAll");
static_assert(sizeof(BattlePartySystem_C_DelFlag2PartnerAll) == 0x000014, "Wrong size on BattlePartySystem_C_DelFlag2PartnerAll");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartnerAll, InFlag) == 0x000000, "Member 'BattlePartySystem_C_DelFlag2PartnerAll::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartnerAll, CallFunc_const_GetPartnerLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_DelFlag2PartnerAll::CallFunc_const_GetPartnerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartnerAll, Temp_int_Variable) == 0x000008, "Member 'BattlePartySystem_C_DelFlag2PartnerAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartnerAll, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_DelFlag2PartnerAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartnerAll, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_DelFlag2PartnerAll::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DelFlag2PartnerAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BattlePartySystem_C_DelFlag2PartnerAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetUseableSkillList
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_GetUseableSkillList final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7834[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<bool>                                  NewLocalVar_3;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_RetValue;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetUseableSkillList) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetUseableSkillList");
static_assert(sizeof(BattlePartySystem_C_GetUseableSkillList) == 0x000030, "Wrong size on BattlePartySystem_C_GetUseableSkillList");
static_assert(offsetof(BattlePartySystem_C_GetUseableSkillList, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_GetUseableSkillList::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUseableSkillList, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetUseableSkillList::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUseableSkillList, NewLocalVar_3) == 0x000018, "Member 'BattlePartySystem_C_GetUseableSkillList::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUseableSkillList, Lo_RetValue) == 0x000028, "Member 'BattlePartySystem_C_GetUseableSkillList::Lo_RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsNearDeath
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_IsNearDeath final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7835[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxHP_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsNearDeath) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsNearDeath");
static_assert(sizeof(BattlePartySystem_C_IsNearDeath) == 0x000020, "Wrong size on BattlePartySystem_C_IsNearDeath");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsNearDeath::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsNearDeath::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, CallFunc_GetNowHP_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_IsNearDeath::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, CallFunc_GetMaxHP_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_IsNearDeath::CallFunc_GetMaxHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_IsNearDeath::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'BattlePartySystem_C_IsNearDeath::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_IsNearDeath::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsNearDeath, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001C, "Member 'BattlePartySystem_C_IsNearDeath::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UpdateUnitState
// 0x0088 (0x0088 - 0x0000)
struct BattlePartySystem_C_UpdateUnitState final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCureBySkill;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLacerationDamage;                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateLookAt;                                      // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForcePlayMotion;                                   // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsFaded;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             Lo_PrevIdleMotion;                                 // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_DefaultMotionChanged;                           // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             Lo_StateMotion;                                    // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7836[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsElectrification_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUplifting_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetUnitStateMotion_retValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_AURA_TYPE                             CallFunc_GetAuraState_retValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7837[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7838[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_PartyPanelCtrl_self_CastInput;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelCtrl_retValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7839[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBadStatus_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_783A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_PartyPanelCtrl_self_CastInput_1;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelCtrl_retValue_1;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_783B[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetElectrification_self_CastInput;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetElectrification_NoUse;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle_1;              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_UpdateUnitState) == 0x000008, "Wrong alignment on BattlePartySystem_C_UpdateUnitState");
static_assert(sizeof(BattlePartySystem_C_UpdateUnitState) == 0x000088, "Wrong size on BattlePartySystem_C_UpdateUnitState");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_UpdateUnitState::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, IsCureBySkill) == 0x000004, "Member 'BattlePartySystem_C_UpdateUnitState::IsCureBySkill' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, IsLacerationDamage) == 0x000005, "Member 'BattlePartySystem_C_UpdateUnitState::IsLacerationDamage' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, UpdateLookAt) == 0x000006, "Member 'BattlePartySystem_C_UpdateUnitState::UpdateLookAt' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, ForcePlayMotion) == 0x000007, "Member 'BattlePartySystem_C_UpdateUnitState::ForcePlayMotion' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Lo_IsFaded) == 0x000008, "Member 'BattlePartySystem_C_UpdateUnitState::Lo_IsFaded' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Lo_PrevIdleMotion) == 0x000009, "Member 'BattlePartySystem_C_UpdateUnitState::Lo_PrevIdleMotion' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Lo_DefaultMotionChanged) == 0x00000A, "Member 'BattlePartySystem_C_UpdateUnitState::Lo_DefaultMotionChanged' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Lo_StateMotion) == 0x00000B, "Member 'BattlePartySystem_C_UpdateUnitState::Lo_StateMotion' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Lo_Unit) == 0x000010, "Member 'BattlePartySystem_C_UpdateUnitState::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_IsElectrification_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_IsElectrification_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_IsUplifting_ReturnValue) == 0x000019, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_IsUplifting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetUnitStateMotion_retValue) == 0x00001A, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetUnitStateMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetAuraState_retValue) == 0x00001B, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetAuraState_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetPartyUnit_retValue) == 0x000020, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetFadeState_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_IsValid_ReturnValue) == 0x00002B, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Temp_bool_Variable) == 0x00002C, "Member 'BattlePartySystem_C_UpdateUnitState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetMainWork_retValue) == 0x000030, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BI_PartyPanelCtrl_self_CastInput) == 0x000038, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BI_PartyPanelCtrl_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BI_PartyPanelCtrl_retValue) == 0x000048, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BI_PartyPanelCtrl_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, Temp_bool_Variable_1) == 0x000049, "Member 'BattlePartySystem_C_UpdateUnitState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, K2Node_Select_Default) == 0x00004A, "Member 'BattlePartySystem_C_UpdateUnitState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_CheckBadStatus_ReturnValue) == 0x00004B, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004C, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetBadStatus_ReturnValue) == 0x000050, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BI_PartyPanelCtrl_self_CastInput_1) == 0x000058, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BI_PartyPanelCtrl_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BI_PartyPanelCtrl_retValue_1) == 0x000068, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BI_PartyPanelCtrl_retValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00006A, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BooleanAND_ReturnValue) == 0x00006B, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetDefaultIdleMotion_Idle) == 0x00006C, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetDefaultIdleMotion_Idle' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00006D, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BI_SetElectrification_self_CastInput) == 0x000070, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BI_SetElectrification_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_BI_SetElectrification_NoUse) == 0x000080, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_BI_SetElectrification_NoUse' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateUnitState, CallFunc_GetDefaultIdleMotion_Idle_1) == 0x000081, "Member 'BattlePartySystem_C_UpdateUnitState::CallFunc_GetDefaultIdleMotion_Idle_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsFullCure
// 0x001C (0x001C - 0x0000)
struct BattlePartySystem_C_IsFullCure final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cure;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             Lo_MotionID;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_783C[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxHP_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsFullCure) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsFullCure");
static_assert(sizeof(BattlePartySystem_C_IsFullCure) == 0x00001C, "Wrong size on BattlePartySystem_C_IsFullCure");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsFullCure::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, Cure) == 0x000004, "Member 'BattlePartySystem_C_IsFullCure::Cure' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, RetValue) == 0x000008, "Member 'BattlePartySystem_C_IsFullCure::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, Lo_MotionID) == 0x000009, "Member 'BattlePartySystem_C_IsFullCure::Lo_MotionID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, CallFunc_GetNowHP_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_IsFullCure::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, CallFunc_GetMaxHP_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_IsFullCure::CallFunc_GetMaxHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattlePartySystem_C_IsFullCure::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsFullCure, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_IsFullCure::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.isHitTarget
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_IsHitTarget final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsHitTarget) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsHitTarget");
static_assert(sizeof(BattlePartySystem_C_IsHitTarget) == 0x000008, "Wrong size on BattlePartySystem_C_IsHitTarget");
static_assert(offsetof(BattlePartySystem_C_IsHitTarget, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsHitTarget::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsHitTarget, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsHitTarget::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsHitTarget, CallFunc_CheckFlag_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_IsHitTarget::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetAishou
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_SetAishou final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ATTRIBUTE_TYPE                              Attr;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_783D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InValue;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_SetAishou) == 0x000004, "Wrong alignment on BattlePartySystem_C_SetAishou");
static_assert(sizeof(BattlePartySystem_C_SetAishou) == 0x00000C, "Wrong size on BattlePartySystem_C_SetAishou");
static_assert(offsetof(BattlePartySystem_C_SetAishou, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_SetAishou::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetAishou, Attr) == 0x000004, "Member 'BattlePartySystem_C_SetAishou::Attr' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetAishou, InValue) == 0x000008, "Member 'BattlePartySystem_C_SetAishou::InValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetTekisei
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_SetTekisei final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TEKISEI_CATEGORY                      Tekisei;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_783E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InValue;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_SetTekisei) == 0x000004, "Wrong alignment on BattlePartySystem_C_SetTekisei");
static_assert(sizeof(BattlePartySystem_C_SetTekisei) == 0x00000C, "Wrong size on BattlePartySystem_C_SetTekisei");
static_assert(offsetof(BattlePartySystem_C_SetTekisei, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_SetTekisei::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetTekisei, Tekisei) == 0x000004, "Member 'BattlePartySystem_C_SetTekisei::Tekisei' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetTekisei, InValue) == 0x000008, "Member 'BattlePartySystem_C_SetTekisei::InValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetSkill
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_SetSkill final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Slot;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_SetSkill) == 0x000004, "Wrong alignment on BattlePartySystem_C_SetSkill");
static_assert(sizeof(BattlePartySystem_C_SetSkill) == 0x00000C, "Wrong size on BattlePartySystem_C_SetSkill");
static_assert(offsetof(BattlePartySystem_C_SetSkill, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_SetSkill::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetSkill, Slot) == 0x000004, "Member 'BattlePartySystem_C_SetSkill::Slot' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetSkill, SkillId) == 0x000008, "Member 'BattlePartySystem_C_SetSkill::SkillId' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetAutoSkill
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_SetAutoSkill final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Slot;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_SetAutoSkill) == 0x000004, "Wrong alignment on BattlePartySystem_C_SetAutoSkill");
static_assert(sizeof(BattlePartySystem_C_SetAutoSkill) == 0x00000C, "Wrong size on BattlePartySystem_C_SetAutoSkill");
static_assert(offsetof(BattlePartySystem_C_SetAutoSkill, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_SetAutoSkill::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetAutoSkill, Slot) == 0x000004, "Member 'BattlePartySystem_C_SetAutoSkill::Slot' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetAutoSkill, SkillId) == 0x000008, "Member 'BattlePartySystem_C_SetAutoSkill::SkillId' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetHeroCharaType
// 0x0001 (0x0001 - 0x0000)
struct BattlePartySystem_C_GetHeroCharaType final
{
public:
	E_BTL_CHAR_TYPE                               RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_GetHeroCharaType) == 0x000001, "Wrong alignment on BattlePartySystem_C_GetHeroCharaType");
static_assert(sizeof(BattlePartySystem_C_GetHeroCharaType) == 0x000001, "Wrong size on BattlePartySystem_C_GetHeroCharaType");
static_assert(offsetof(BattlePartySystem_C_GetHeroCharaType, RetValue) == 0x000000, "Member 'BattlePartySystem_C_GetHeroCharaType::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.ConditionMapIsExist
// 0x0340 (0x0340 - 0x0000)
struct BattlePartySystem_C_ConditionMapIsExist final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_783F[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0010(0x0320)()
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_ConditionMapIsExist) == 0x000010, "Wrong alignment on BattlePartySystem_C_ConditionMapIsExist");
static_assert(sizeof(BattlePartySystem_C_ConditionMapIsExist) == 0x000340, "Wrong size on BattlePartySystem_C_ConditionMapIsExist");
static_assert(offsetof(BattlePartySystem_C_ConditionMapIsExist, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_ConditionMapIsExist::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapIsExist, RetValue) == 0x000004, "Member 'BattlePartySystem_C_ConditionMapIsExist::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapIsExist, CallFunc_GetBtlPartyData_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_ConditionMapIsExist::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapIsExist, CallFunc_Map_Length_ReturnValue) == 0x000330, "Member 'BattlePartySystem_C_ConditionMapIsExist::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapIsExist, CallFunc_Greater_IntInt_ReturnValue) == 0x000334, "Member 'BattlePartySystem_C_ConditionMapIsExist::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.ConditionMapGetSkillID
// 0x0340 (0x0340 - 0x0000)
struct BattlePartySystem_C_ConditionMapGetSkillID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CNT                                     Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7840[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7841[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0010(0x0320)()
	bool                                          CallFunc_ConditionMapIsExist_retValue;             // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7842[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_ConditionMapGetSkillID) == 0x000010, "Wrong alignment on BattlePartySystem_C_ConditionMapGetSkillID");
static_assert(sizeof(BattlePartySystem_C_ConditionMapGetSkillID) == 0x000340, "Wrong size on BattlePartySystem_C_ConditionMapGetSkillID");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, Type) == 0x000004, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::Type' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, RetValue) == 0x000008, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, CallFunc_GetBtlPartyData_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, CallFunc_ConditionMapIsExist_retValue) == 0x000330, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::CallFunc_ConditionMapIsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, CallFunc_Map_Find_Value) == 0x000334, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, CallFunc_Map_Find_ReturnValue) == 0x000338, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_ConditionMapGetSkillID, CallFunc_Map_Contains_ReturnValue) == 0x000339, "Member 'BattlePartySystem_C_ConditionMapGetSkillID::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetBstCounter
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_GetBstCounter final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  bst;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7843[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CNT                                     Lo_Aid;                                            // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7844[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_GetBstCounter) == 0x000004, "Wrong alignment on BattlePartySystem_C_GetBstCounter");
static_assert(sizeof(BattlePartySystem_C_GetBstCounter) == 0x000014, "Wrong size on BattlePartySystem_C_GetBstCounter");
static_assert(offsetof(BattlePartySystem_C_GetBstCounter, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetBstCounter::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetBstCounter, bst) == 0x000004, "Member 'BattlePartySystem_C_GetBstCounter::bst' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetBstCounter, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetBstCounter::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetBstCounter, Lo_Aid) == 0x00000C, "Member 'BattlePartySystem_C_GetBstCounter::Lo_Aid' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetBstCounter, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'BattlePartySystem_C_GetBstCounter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetBstCounter, CallFunc_GetAidCounter_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_GetBstCounter::CallFunc_GetAidCounter_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawUpdateCombo
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawUpdateCombo final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7845[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7846[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawUpdateCombo");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo) == 0x000028, "Wrong size on BattlePartySystem_C_EnemyInfoDrawUpdateCombo");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawUpdateCombo::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawUpdateCombo::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoDrawUpdateCombo::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo, CallFunc_Map_Find_Value) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawUpdateCombo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoDrawUpdateCombo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawUpdateCombo, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BattlePartySystem_C_EnemyInfoDrawUpdateCombo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoPlayHPAnimOne
// 0x0170 (0x0170 - 0x0000)
struct BattlePartySystem_C_EnemyInfoPlayHPAnimOne final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageHP;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7847[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x0018(0x0148)()
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoPlayHPAnimOne");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne) == 0x000170, "Wrong size on BattlePartySystem_C_EnemyInfoPlayHPAnimOne");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, DamageHP) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::DamageHP' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, AnimTime) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::AnimTime' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, NewLocalVar_0) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, CallFunc_GetBtlCharaData_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, CallFunc_Map_Find_Value) == 0x000160, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, CallFunc_Map_Find_ReturnValue) == 0x000168, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoPlayHPAnimOne, CallFunc_Greater_IntInt_ReturnValue) == 0x000169, "Member 'BattlePartySystem_C_EnemyInfoPlayHPAnimOne::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UpdateEnemyInfo
// 0x0100 (0x0100 - 0x0000)
struct BattlePartySystem_C_UpdateEnemyInfo final
{
public:
	bool                                          UpdateHPGauge;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7848[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_EnemyList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_LopEnd;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LopStart;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetAllIsTargetList_ReturnValue;           // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7849[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784A[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784B[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784C[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value_1;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784D[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784E[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784F[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_UpdateEnemyInfo) == 0x000010, "Wrong alignment on BattlePartySystem_C_UpdateEnemyInfo");
static_assert(sizeof(BattlePartySystem_C_UpdateEnemyInfo) == 0x000100, "Wrong size on BattlePartySystem_C_UpdateEnemyInfo");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, UpdateHPGauge) == 0x000000, "Member 'BattlePartySystem_C_UpdateEnemyInfo::UpdateHPGauge' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, Lo_EnemyList) == 0x000008, "Member 'BattlePartySystem_C_UpdateEnemyInfo::Lo_EnemyList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, Lo_LopEnd) == 0x000018, "Member 'BattlePartySystem_C_UpdateEnemyInfo::Lo_LopEnd' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, Lo_LopStart) == 0x00001C, "Member 'BattlePartySystem_C_UpdateEnemyInfo::Lo_LopStart' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, NewLocalVar_0) == 0x000020, "Member 'BattlePartySystem_C_UpdateEnemyInfo::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattlePartySystem_C_UpdateEnemyInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BattlePartySystem_C_UpdateEnemyInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BattlePartySystem_C_UpdateEnemyInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_GetAllIsTargetList_ReturnValue) == 0x000038, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_GetAllIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Array_Get_Item_1) == 0x000064, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Array_Find_ReturnValue) == 0x00006C, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Array_Length_ReturnValue_3) == 0x000078, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Map_Remove_ReturnValue) == 0x00007D, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Map_Find_Value) == 0x000080, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Map_Find_Value_1) == 0x000090, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Map_Find_ReturnValue_1) == 0x000098, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'BattlePartySystem_C_UpdateEnemyInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_GetMainWork_retValue) == 0x0000E0, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E8, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyInfo, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F0, "Member 'BattlePartySystem_C_UpdateEnemyInfo::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchHPBarOne
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForDamage;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use2Line;                                          // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUseSkipTarget;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7850[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne) == 0x000028, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, Sw) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, ForDamage) == 0x000005, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::ForDamage' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, Use2Line) == 0x000006, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::Use2Line' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, Immediately) == 0x000007, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::Immediately' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, IsUseSkipTarget) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::IsUseSkipTarget' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, NewLocalVar_0) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, CallFunc_Map_Find_Value) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchPartyAll
// 0x0050 (0x0050 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7851[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_EnemyList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7852[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetAllIsTargetList_ReturnValue;           // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7853[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll) == 0x000050, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, Sw) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, Lo_EnemyList) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::Lo_EnemyList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, NewLocalVar_0) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, CallFunc_Array_Get_Item) == 0x000024, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, CallFunc_GetAllIsTargetList_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::CallFunc_GetAllIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchNameOne
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchNameOne final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7854[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchNameOne");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchNameOne");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchNameOne::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne, Sw) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchNameOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne, Immediately) == 0x000005, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchNameOne::Immediately' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchNameOne::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchNameOne::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchNameOne, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchNameOne::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchOneAll
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchOneAll final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7855[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchOneAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchOneAll");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchOneAll) == 0x000010, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchOneAll");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchOneAll, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchOneAll::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchOneAll, Sw) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchOneAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchOneAll, Immediately) == 0x000005, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchOneAll::Immediately' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchOneAll, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchOneAll::NewLocalVar_0' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoClearAll
// 0x0048 (0x0048 - 0x0000)
struct BattlePartySystem_C_EnemyInfoClearAll final
{
public:
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7856[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7857[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7858[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoClearAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoClearAll");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoClearAll) == 0x000048, "Wrong size on BattlePartySystem_C_EnemyInfoClearAll");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, NewLocalVar_0) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoClearAll::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoClearAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattlePartySystem_C_EnemyInfoClearAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Map_Find_Value) == 0x000030, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoClearAll, CallFunc_Max_ReturnValue) == 0x000044, "Member 'BattlePartySystem_C_EnemyInfoClearAll::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetComboHitCount
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_GetComboHitCount final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetComboHitCount) == 0x000004, "Wrong alignment on BattlePartySystem_C_GetComboHitCount");
static_assert(sizeof(BattlePartySystem_C_GetComboHitCount) == 0x000010, "Wrong size on BattlePartySystem_C_GetComboHitCount");
static_assert(offsetof(BattlePartySystem_C_GetComboHitCount, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetComboHitCount::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetComboHitCount, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetComboHitCount::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetComboHitCount, CallFunc_GetAidCounter_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetComboHitCount::CallFunc_GetAidCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetComboHitCount, CallFunc_IsExist_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_GetComboHitCount::CallFunc_IsExist_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchCombo_LOne
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7859[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_785A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne) == 0x000028, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne, Sw) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne, CallFunc_Map_Find_Value) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawAddCombo
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawAddCombo final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_785C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawAddCombo) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawAddCombo");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawAddCombo) == 0x000028, "Wrong size on BattlePartySystem_C_EnemyInfoDrawAddCombo");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawAddCombo, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawAddCombo::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawAddCombo, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawAddCombo::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawAddCombo, CallFunc_IsExist_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoDrawAddCombo::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawAddCombo, CallFunc_Map_Find_Value) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawAddCombo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawAddCombo, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoDrawAddCombo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawAddCombo, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BattlePartySystem_C_EnemyInfoDrawAddCombo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchCombo_SOne
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_785D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne, Sw) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetActOrder4Panel
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_GetActOrder4Panel final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_GetActOrder4Panel) == 0x000004, "Wrong alignment on BattlePartySystem_C_GetActOrder4Panel");
static_assert(sizeof(BattlePartySystem_C_GetActOrder4Panel) == 0x000008, "Wrong size on BattlePartySystem_C_GetActOrder4Panel");
static_assert(offsetof(BattlePartySystem_C_GetActOrder4Panel, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetActOrder4Panel::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActOrder4Panel, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetActOrder4Panel::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SortOrder4Panel
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_SortOrder4Panel final
{
public:
	TArray<int32>                                 InArray;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 RetValue;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<int32>                                 NewLocalVar_2;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattlePartySystem_C_SortOrder4Panel) == 0x000008, "Wrong alignment on BattlePartySystem_C_SortOrder4Panel");
static_assert(sizeof(BattlePartySystem_C_SortOrder4Panel) == 0x000030, "Wrong size on BattlePartySystem_C_SortOrder4Panel");
static_assert(offsetof(BattlePartySystem_C_SortOrder4Panel, InArray) == 0x000000, "Member 'BattlePartySystem_C_SortOrder4Panel::InArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SortOrder4Panel, RetValue) == 0x000010, "Member 'BattlePartySystem_C_SortOrder4Panel::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SortOrder4Panel, NewLocalVar_2) == 0x000020, "Member 'BattlePartySystem_C_SortOrder4Panel::NewLocalVar_2' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetUseableSubSkillList
// 0x0040 (0x0040 - 0x0000)
struct BattlePartySystem_C_GetUseableSubSkillList final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<bool>                                  NewLocalVar_1;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_RetValue;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_785F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_GetUseableSubSkillList) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetUseableSubSkillList");
static_assert(sizeof(BattlePartySystem_C_GetUseableSubSkillList) == 0x000040, "Wrong size on BattlePartySystem_C_GetUseableSubSkillList");
static_assert(offsetof(BattlePartySystem_C_GetUseableSubSkillList, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_GetUseableSubSkillList::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUseableSubSkillList, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetUseableSubSkillList::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUseableSubSkillList, NewLocalVar_1) == 0x000018, "Member 'BattlePartySystem_C_GetUseableSubSkillList::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUseableSubSkillList, Lo_RetValue) == 0x000028, "Member 'BattlePartySystem_C_GetUseableSubSkillList::Lo_RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetUseableSubSkillList, K2Node_MakeArray_Array) == 0x000030, "Member 'BattlePartySystem_C_GetUseableSubSkillList::K2Node_MakeArray_Array' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoAutoHideOneAll
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoAutoHideOneAll final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoAutoHideOneAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoAutoHideOneAll");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoAutoHideOneAll) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoAutoHideOneAll");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoHideOneAll, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoAutoHideOneAll::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoHideOneAll, DeltaTime) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoAutoHideOneAll::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoHideOneAll, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoAutoHideOneAll::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoHideOneAll, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoAutoHideOneAll::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoHideOneAll, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoAutoHideOneAll::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoAutoAttachToCamera
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoAutoAttachToCamera final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7860[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoAutoAttachToCamera) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoAutoAttachToCamera");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoAutoAttachToCamera) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoAutoAttachToCamera");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoAttachToCamera, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoAutoAttachToCamera::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoAttachToCamera, Sw) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoAutoAttachToCamera::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoAttachToCamera, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoAutoAttachToCamera::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoAttachToCamera, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoAutoAttachToCamera::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoAutoAttachToCamera, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoAutoAttachToCamera::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetHeroUnit
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_GetHeroUnit final
{
public:
	class ACharaBase_C*                           RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7861[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_GetHeroUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetHeroUnit");
static_assert(sizeof(BattlePartySystem_C_GetHeroUnit) == 0x000018, "Wrong size on BattlePartySystem_C_GetHeroUnit");
static_assert(offsetof(BattlePartySystem_C_GetHeroUnit, RetValue) == 0x000000, "Member 'BattlePartySystem_C_GetHeroUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetHeroUnit, CallFunc_GetHeroIndex_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetHeroUnit::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetHeroUnit, CallFunc_GetPartyUnit_retValue) == 0x000010, "Member 'BattlePartySystem_C_GetHeroUnit::CallFunc_GetPartyUnit_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetEnemyTargetPriorityIndex
// 0x0078 (0x0078 - 0x0000)
struct BattlePartySystem_C_GetEnemyTargetPriorityIndex final
{
public:
	int32                                         SaveIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SrcIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_EnemyActList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_CriNew;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SaveIndex;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBtlParty>                      Lo_CriList;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_SkillId;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SrcIndex;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CriMax;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7862[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlParty>                      Lo_EnemyList;                                      // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_MinOfIntArray_IndexOfMinValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfIntArray_MinValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetEnemyTargetPriorityIndex) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetEnemyTargetPriorityIndex");
static_assert(sizeof(BattlePartySystem_C_GetEnemyTargetPriorityIndex) == 0x000078, "Wrong size on BattlePartySystem_C_GetEnemyTargetPriorityIndex");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, SaveIndex) == 0x000000, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::SaveIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, SrcIndex) == 0x000004, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, SkillId) == 0x000008, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::SkillId' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, RetValue) == 0x00000C, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_EnemyActList) == 0x000010, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_EnemyActList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_CriNew) == 0x000020, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_CriNew' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_SaveIndex) == 0x000024, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_SaveIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_CriList) == 0x000028, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_CriList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_SkillId) == 0x000038, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_SrcIndex) == 0x00003C, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_SrcIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_CriMax) == 0x000040, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_CriMax' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, Lo_EnemyList) == 0x000048, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::Lo_EnemyList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, CallFunc_MinOfIntArray_IndexOfMinValue) == 0x000058, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::CallFunc_MinOfIntArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, CallFunc_MinOfIntArray_MinValue) == 0x00005C, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::CallFunc_MinOfIntArray_MinValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000060, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, CallFunc_Array_Find_ReturnValue) == 0x000070, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyTargetPriorityIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000074, "Member 'BattlePartySystem_C_GetEnemyTargetPriorityIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetNextPlusCombo
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_GetNextPlusCombo final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7863[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_GetNextPlusCombo) == 0x000004, "Wrong alignment on BattlePartySystem_C_GetNextPlusCombo");
static_assert(sizeof(BattlePartySystem_C_GetNextPlusCombo) == 0x000010, "Wrong size on BattlePartySystem_C_GetNextPlusCombo");
static_assert(offsetof(BattlePartySystem_C_GetNextPlusCombo, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetNextPlusCombo::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetNextPlusCombo, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetNextPlusCombo::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetNextPlusCombo, CallFunc_IsExist_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetNextPlusCombo::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetNextPlusCombo, CallFunc_GetAidCounter_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_GetNextPlusCombo::CallFunc_GetAidCounter_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetPartyIndexByActOrder
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_GetPartyIndexByActOrder final
{
public:
	int32                                         ActOrder;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_PartyPanelArray;                                // 0x0008(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattlePartySystem_C_GetPartyIndexByActOrder) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetPartyIndexByActOrder");
static_assert(sizeof(BattlePartySystem_C_GetPartyIndexByActOrder) == 0x000018, "Wrong size on BattlePartySystem_C_GetPartyIndexByActOrder");
static_assert(offsetof(BattlePartySystem_C_GetPartyIndexByActOrder, ActOrder) == 0x000000, "Member 'BattlePartySystem_C_GetPartyIndexByActOrder::ActOrder' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetPartyIndexByActOrder, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetPartyIndexByActOrder::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetPartyIndexByActOrder, Lo_PartyPanelArray) == 0x000008, "Member 'BattlePartySystem_C_GetPartyIndexByActOrder::Lo_PartyPanelArray' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetPartyBlank
// 0x0340 (0x0340 - 0x0000)
struct BattlePartySystem_C_SetPartyBlank final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7864[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              Lo_Blank;                                          // 0x0010(0x0320)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValidIndex_ReturnValue;                 // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_SetPartyBlank) == 0x000010, "Wrong alignment on BattlePartySystem_C_SetPartyBlank");
static_assert(sizeof(BattlePartySystem_C_SetPartyBlank) == 0x000340, "Wrong size on BattlePartySystem_C_SetPartyBlank");
static_assert(offsetof(BattlePartySystem_C_SetPartyBlank, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_SetPartyBlank::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyBlank, Lo_Blank) == 0x000010, "Member 'BattlePartySystem_C_SetPartyBlank::Lo_Blank' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPartyBlank, CallFunc_IsValidIndex_ReturnValue) == 0x000330, "Member 'BattlePartySystem_C_SetPartyBlank::CallFunc_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetEnemyLeaderIndex
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_GetEnemyLeaderIndex final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7865[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetEnemyLeaderIndex) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetEnemyLeaderIndex");
static_assert(sizeof(BattlePartySystem_C_GetEnemyLeaderIndex) == 0x000018, "Wrong size on BattlePartySystem_C_GetEnemyLeaderIndex");
static_assert(offsetof(BattlePartySystem_C_GetEnemyLeaderIndex, RetValue) == 0x000000, "Member 'BattlePartySystem_C_GetEnemyLeaderIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyLeaderIndex, Lo_Unit) == 0x000008, "Member 'BattlePartySystem_C_GetEnemyLeaderIndex::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetEnemyLeaderIndex, CallFunc_IsInField_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_GetEnemyLeaderIndex::CallFunc_IsInField_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemySideBlankAll
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_EnemySideBlankAll final
{
public:
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemySideBlankAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_EnemySideBlankAll");
static_assert(sizeof(BattlePartySystem_C_EnemySideBlankAll) == 0x000014, "Wrong size on BattlePartySystem_C_EnemySideBlankAll");
static_assert(offsetof(BattlePartySystem_C_EnemySideBlankAll, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000000, "Member 'BattlePartySystem_C_EnemySideBlankAll::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemySideBlankAll, CallFunc_const_GetEnemyStart_retValue) == 0x000004, "Member 'BattlePartySystem_C_EnemySideBlankAll::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemySideBlankAll, Temp_int_Variable) == 0x000008, "Member 'BattlePartySystem_C_EnemySideBlankAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemySideBlankAll, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_EnemySideBlankAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemySideBlankAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_EnemySideBlankAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsEnemyIndex
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_IsEnemyIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsEnemyIndex) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsEnemyIndex");
static_assert(sizeof(BattlePartySystem_C_IsEnemyIndex) == 0x000008, "Wrong size on BattlePartySystem_C_IsEnemyIndex");
static_assert(offsetof(BattlePartySystem_C_IsEnemyIndex, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsEnemyIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsEnemyIndex, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsEnemyIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsEnemyIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_IsEnemyIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsEnemyIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_IsEnemyIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsEnemyIndex, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BattlePartySystem_C_IsEnemyIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetActListForTargetGlobal
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_GetActListForTargetGlobal final
{
public:
	E_SKILL_TARGET                                Target;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7866[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_ActList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattlePartySystem_C_GetActListForTargetGlobal) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetActListForTargetGlobal");
static_assert(sizeof(BattlePartySystem_C_GetActListForTargetGlobal) == 0x000028, "Wrong size on BattlePartySystem_C_GetActListForTargetGlobal");
static_assert(offsetof(BattlePartySystem_C_GetActListForTargetGlobal, Target) == 0x000000, "Member 'BattlePartySystem_C_GetActListForTargetGlobal::Target' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActListForTargetGlobal, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetActListForTargetGlobal::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActListForTargetGlobal, Lo_ActList) == 0x000018, "Member 'BattlePartySystem_C_GetActListForTargetGlobal::Lo_ActList' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetActListForRelativeScale
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_GetActListForRelativeScale final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7867[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	E_BTL_SIDE                                    CallFunc_GetSide_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7868[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideActList_ToDie_ReturnValue;         // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_GetActListForRelativeScale) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetActListForRelativeScale");
static_assert(sizeof(BattlePartySystem_C_GetActListForRelativeScale) == 0x000030, "Wrong size on BattlePartySystem_C_GetActListForRelativeScale");
static_assert(offsetof(BattlePartySystem_C_GetActListForRelativeScale, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetActListForRelativeScale::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActListForRelativeScale, RetValue) == 0x000008, "Member 'BattlePartySystem_C_GetActListForRelativeScale::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActListForRelativeScale, CallFunc_GetSide_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_GetActListForRelativeScale::CallFunc_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActListForRelativeScale, CallFunc_GetSideActList_ToDie_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_GetActListForRelativeScale::CallFunc_GetSideActList_ToDie_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetActListAll
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_GetActListAll final
{
public:
	TArray<int32>                                 RetValue;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_Ret;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue;          // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_GetActListAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetActListAll");
static_assert(sizeof(BattlePartySystem_C_GetActListAll) == 0x000030, "Wrong size on BattlePartySystem_C_GetActListAll");
static_assert(offsetof(BattlePartySystem_C_GetActListAll, RetValue) == 0x000000, "Member 'BattlePartySystem_C_GetActListAll::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActListAll, Lo_Ret) == 0x000010, "Member 'BattlePartySystem_C_GetActListAll::Lo_Ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetActListAll, CallFunc_GetAllIsInFieldList_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_GetActListAll::CallFunc_GetAllIsInFieldList_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DestroyUnitToMap_New
// 0x0120 (0x0120 - 0x0000)
struct BattlePartySystem_C_DestroyUnitToMap_New final
{
public:
	TMap<E_BTL_CHAR_TYPE, class ACharaBase_C*>    RetValue;                                          // 0x0000(0x0050)(Parm, OutParm)
	int32                                         Lo_PartyIndex;                                     // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7869[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Lo_List;                                           // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	E_BTL_CHAR_TYPE                               Lo_RetCharType;                                    // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_BTL_CHAR_TYPE, class ACharaBase_C*>    Lo_Out;                                            // 0x0070(0x0050)(Edit, BlueprintVisible)
	E_BTL_PARTY_STAT                              Lo_Stat;                                           // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786B[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_CHAR_TYPE                               CallFunc_GetCharaTypeDetail_ReturnValue;           // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_786C[0x1];                                     // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllOfBattleUnitList_ReturnValue;       // 0x00E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_786D[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_786E[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_DestroyUnitToMap_New) == 0x000008, "Wrong alignment on BattlePartySystem_C_DestroyUnitToMap_New");
static_assert(sizeof(BattlePartySystem_C_DestroyUnitToMap_New) == 0x000120, "Wrong size on BattlePartySystem_C_DestroyUnitToMap_New");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, RetValue) == 0x000000, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Lo_PartyIndex) == 0x000050, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Lo_List) == 0x000058, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Lo_RetCharType) == 0x000068, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Lo_RetCharType' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Lo_Out) == 0x000070, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Lo_Out' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Lo_Stat) == 0x0000C0, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Lo_Stat' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Lo_Unit) == 0x0000C8, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_GetHeroIndex_ReturnValue) == 0x0000D4, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_CheckFlag_ReturnValue) == 0x0000D9, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_Not_PreBool_ReturnValue) == 0x0000DA, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_GetCharaTypeDetail_ReturnValue) == 0x0000DB, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_GetCharaTypeDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000DC, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000DD, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000DE, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_GetAllOfBattleUnitList_ReturnValue) == 0x0000E0, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_GetAllOfBattleUnitList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_BooleanOR_ReturnValue) == 0x0000F0, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_BooleanOR_ReturnValue_1) == 0x0000F1, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_Array_Get_Item) == 0x000100, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, CallFunc_IsValid_ReturnValue) == 0x000109, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, K2Node_DynamicCast_AsChara_Base) == 0x000110, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyUnitToMap_New, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BattlePartySystem_C_DestroyUnitToMap_New::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.PlayerCharaHP1Return
// 0x0390 (0x0390 - 0x0000)
struct BattlePartySystem_C_PlayerCharaHP1Return final
{
public:
	TArray<int32>                                 Lo_PartyArray;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0030(0x0320)()
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_self_CastInput; // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_retValue; // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_786F[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_PartyPanelCtrl_self_CastInput;         // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelCtrl_retValue;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHero_retValue;                          // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7870[0x2];                                     // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_PlayerCharaHP1Return) == 0x000010, "Wrong alignment on BattlePartySystem_C_PlayerCharaHP1Return");
static_assert(sizeof(BattlePartySystem_C_PlayerCharaHP1Return) == 0x000390, "Wrong size on BattlePartySystem_C_PlayerCharaHP1Return");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, Lo_PartyArray) == 0x000000, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::Lo_PartyArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_GetHeroIndex_ReturnValue) == 0x00001C, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_GetMainWork_retValue) == 0x000020, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_GetBtlPartyData_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_self_CastInput) == 0x000350, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_retValue) == 0x000360, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_CheckFlag_ReturnValue) == 0x000361, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_CheckBadStatus_ReturnValue) == 0x000362, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_Not_PreBool_ReturnValue) == 0x000363, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_BI_PartyPanelCtrl_self_CastInput) == 0x000368, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_BI_PartyPanelCtrl_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_BI_PartyPanelCtrl_retValue) == 0x000378, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_BI_PartyPanelCtrl_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_IsHero_retValue) == 0x000379, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_IsHero_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_Array_Length_ReturnValue) == 0x00037C, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_BooleanAND_ReturnValue) == 0x000380, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_Less_IntInt_ReturnValue) == 0x000381, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_PlayerCharaHP1Return, CallFunc_BooleanAND_ReturnValue_1) == 0x000382, "Member 'BattlePartySystem_C_PlayerCharaHP1Return::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetFieldMapCondition
// 0x0038 (0x0038 - 0x0000)
struct BattlePartySystem_C_UnitSetFieldMapCondition final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7871[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaAction_C>    CallFunc_ResetAllMaterialParam_self_CastInput;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7872[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GuestBattleFinalize_self_CastInput;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_UnitSetFieldMapCondition) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetFieldMapCondition");
static_assert(sizeof(BattlePartySystem_C_UnitSetFieldMapCondition) == 0x000038, "Wrong size on BattlePartySystem_C_UnitSetFieldMapCondition");
static_assert(offsetof(BattlePartySystem_C_UnitSetFieldMapCondition, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_UnitSetFieldMapCondition::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetFieldMapCondition, CallFunc_GetPartyUnit_retValue) == 0x000008, "Member 'BattlePartySystem_C_UnitSetFieldMapCondition::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetFieldMapCondition, CallFunc_ResetAllMaterialParam_self_CastInput) == 0x000010, "Member 'BattlePartySystem_C_UnitSetFieldMapCondition::CallFunc_ResetAllMaterialParam_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetFieldMapCondition, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_UnitSetFieldMapCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetFieldMapCondition, CallFunc_BI_GuestBattleFinalize_self_CastInput) == 0x000028, "Member 'BattlePartySystem_C_UnitSetFieldMapCondition::CallFunc_BI_GuestBattleFinalize_self_CastInput' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoUpdatePositionHPBar
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_EnemyInfoUpdatePositionHPBar final
{
public:
	int32                                         Lo_LopEnd;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LopStart;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7873[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7874[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoUpdatePositionHPBar");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar) == 0x000030, "Wrong size on BattlePartySystem_C_EnemyInfoUpdatePositionHPBar");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, Lo_LopEnd) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::Lo_LopEnd' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, Lo_LopStart) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::Lo_LopStart' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, CallFunc_const_GetEnemyStart_retValue) == 0x000014, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, Temp_int_Variable) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, CallFunc_Map_Find_Value) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoUpdatePositionHPBar, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BattlePartySystem_C_EnemyInfoUpdatePositionHPBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsAllDead
// 0x0040 (0x0040 - 0x0000)
struct BattlePartySystem_C_IsAllDead final
{
public:
	TArray<int32>                                 IndexList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          RetValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7875[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidIndex_ReturnValue;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsAllDead) == 0x000008, "Wrong alignment on BattlePartySystem_C_IsAllDead");
static_assert(sizeof(BattlePartySystem_C_IsAllDead) == 0x000040, "Wrong size on BattlePartySystem_C_IsAllDead");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, IndexList) == 0x000000, "Member 'BattlePartySystem_C_IsAllDead::IndexList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, RetValue) == 0x000010, "Member 'BattlePartySystem_C_IsAllDead::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, Lo_List) == 0x000018, "Member 'BattlePartySystem_C_IsAllDead::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattlePartySystem_C_IsAllDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BattlePartySystem_C_IsAllDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_IsAllDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattlePartySystem_C_IsAllDead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BattlePartySystem_C_IsAllDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, CallFunc_IsInField_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_IsAllDead::CallFunc_IsInField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BattlePartySystem_C_IsAllDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAllDead, CallFunc_IsValidIndex_ReturnValue) == 0x00003E, "Member 'BattlePartySystem_C_IsAllDead::CallFunc_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchAishou
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchAishou final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7876[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchAishou");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchAishou");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishou::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou, Sw) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishou::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou, Immediately) == 0x000005, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishou::Immediately' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishou::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishou::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishou, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishou::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetCharID_Detail
// 0x01A0 (0x01A0 - 0x0000)
struct BattlePartySystem_C_GetCharID_Detail final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x0008(0x0148)()
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7877[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNKM_retValue;                           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7878[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHero_retValue;                          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_GetCharID_Detail) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetCharID_Detail");
static_assert(sizeof(BattlePartySystem_C_GetCharID_Detail) == 0x0001A0, "Wrong size on BattlePartySystem_C_GetCharID_Detail");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_GetCharID_Detail::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, RetValue) == 0x000004, "Member 'BattlePartySystem_C_GetCharID_Detail::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_GetBtlCharaData_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_GetPartyUnit_retValue) == 0x000150, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_GetObjectName_ReturnValue) == 0x000158, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_RightChop_ReturnValue) == 0x000168, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_IsEnemy_retValue) == 0x000178, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_Left_ReturnValue) == 0x000180, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_IsNKM_retValue) == 0x000190, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_IsNKM_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_Conv_StringToInt_ReturnValue) == 0x000194, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_BooleanOR_ReturnValue) == 0x000198, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetCharID_Detail, CallFunc_IsHero_retValue) == 0x000199, "Member 'BattlePartySystem_C_GetCharID_Detail::CallFunc_IsHero_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetVisibilitySideAll
// 0x0050 (0x0050 - 0x0000)
struct BattlePartySystem_C_UnitSetVisibilitySideAll final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7879[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_787A[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_787B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_787C[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_UnitSetVisibilitySideAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetVisibilitySideAll");
static_assert(sizeof(BattlePartySystem_C_UnitSetVisibilitySideAll) == 0x000050, "Wrong size on BattlePartySystem_C_UnitSetVisibilitySideAll");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, Sw) == 0x000000, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, IsPlayer) == 0x000001, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, Lo_List) == 0x000008, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, Temp_bool_Variable) == 0x000018, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, Temp_byte_Variable) == 0x000019, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, Temp_byte_Variable_1) == 0x00001A, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, K2Node_Select_Default) == 0x000020, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetVisibilitySideAll, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BattlePartySystem_C_UnitSetVisibilitySideAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetSideAveLocation
// 0x00A0 (0x00A0 - 0x0000)
struct BattlePartySystem_C_GetSideAveLocation final
{
public:
	TMap<class FString, struct FVector>           Playerside;                                        // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FString, struct FVector>           EnemySide;                                         // 0x0050(0x0050)(Parm, OutParm)
};
static_assert(alignof(BattlePartySystem_C_GetSideAveLocation) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetSideAveLocation");
static_assert(sizeof(BattlePartySystem_C_GetSideAveLocation) == 0x0000A0, "Wrong size on BattlePartySystem_C_GetSideAveLocation");
static_assert(offsetof(BattlePartySystem_C_GetSideAveLocation, Playerside) == 0x000000, "Member 'BattlePartySystem_C_GetSideAveLocation::Playerside' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetSideAveLocation, EnemySide) == 0x000050, "Member 'BattlePartySystem_C_GetSideAveLocation::EnemySide' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.GetShounenUnit
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_GetShounenUnit final
{
public:
	class ACharaBase_C*                           RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_GetShounenUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_GetShounenUnit");
static_assert(sizeof(BattlePartySystem_C_GetShounenUnit) == 0x000010, "Wrong size on BattlePartySystem_C_GetShounenUnit");
static_assert(offsetof(BattlePartySystem_C_GetShounenUnit, RetValue) == 0x000000, "Member 'BattlePartySystem_C_GetShounenUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_GetShounenUnit, CallFunc_GetPartyUnit_retValue) == 0x000008, "Member 'BattlePartySystem_C_GetShounenUnit::CallFunc_GetPartyUnit_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.FootStampEnable
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_FootStampEnable final
{
public:
	class ACharaBase_C*                           Unit;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_787D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_FootStampEnable) == 0x000008, "Wrong alignment on BattlePartySystem_C_FootStampEnable");
static_assert(sizeof(BattlePartySystem_C_FootStampEnable) == 0x000020, "Wrong size on BattlePartySystem_C_FootStampEnable");
static_assert(offsetof(BattlePartySystem_C_FootStampEnable, Unit) == 0x000000, "Member 'BattlePartySystem_C_FootStampEnable::Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_FootStampEnable, Sw) == 0x000008, "Member 'BattlePartySystem_C_FootStampEnable::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_FootStampEnable, K2Node_DynamicCast_AsPlayer_Base) == 0x000010, "Member 'BattlePartySystem_C_FootStampEnable::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_FootStampEnable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattlePartySystem_C_FootStampEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitGetVisibility
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_UnitGetVisibility final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_787E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_UnitGetVisibility) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitGetVisibility");
static_assert(sizeof(BattlePartySystem_C_UnitGetVisibility) == 0x000020, "Wrong size on BattlePartySystem_C_UnitGetVisibility");
static_assert(offsetof(BattlePartySystem_C_UnitGetVisibility, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_UnitGetVisibility::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitGetVisibility, IsVisible) == 0x000004, "Member 'BattlePartySystem_C_UnitGetVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitGetVisibility, Lo_Unit) == 0x000008, "Member 'BattlePartySystem_C_UnitGetVisibility::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitGetVisibility, CallFunc_GetPartyUnit_retValue) == 0x000010, "Member 'BattlePartySystem_C_UnitGetVisibility::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitGetVisibility, CallFunc_IsVisible_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_UnitGetVisibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitGetVisibility, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BattlePartySystem_C_UnitGetVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetPlayerSideData
// 0x0490 (0x0490 - 0x0000)
struct BattlePartySystem_C_SetPlayerSideData final
{
public:
	struct FBtlDescData                           InDesc;                                            // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class AActor*>                         Lo_NotBattleList;                                  // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         Lo_UnitList;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Lo_Cnt;                                            // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_787F[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Infield;                                        // 0x00B8(0x0010)(Edit, BlueprintVisible)
	uint8                                         Pad_7880[0x8];                                     // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlDescData                           Lo_Desc;                                           // 0x00D0(0x0090)(Edit, BlueprintVisible)
	bool                                          Lo_Leader;                                         // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_CHAR_TYPE                               Lo_CharaType;                                      // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7881[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_PartyIndex;                                     // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7882[0x8];                                     // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_DESC                              Lo_Desc2;                                          // 0x0170(0x00D0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<uint8>                                 Lo_StockArray;                                     // 0x0240(0x0010)(Edit, BlueprintVisible)
	TArray<E_PARTNER_ID>                          Lo_PartnerArray;                                   // 0x0250(0x0010)(Edit, BlueprintVisible)
	TArray<uint8>                                 Lo_NkmArray;                                       // 0x0260(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Id;                                             // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7883[0x2];                                     // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7884[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetUnit_ReturnValue;                      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7885[0x2];                                     // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7886[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_FieldGetComandBoxTransform_self_CastInput; // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7887[0x8];                                     // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_FieldGetComandBoxTransform_retValue;   // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0320(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7888[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7889[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GuestBattleInitialize_self_CastInput;  // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x037D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_788A[0x2];                                     // 0x037E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_788B[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetPartnerList_ReturnValue;               // 0x0388(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_788C[0x5];                                     // 0x03AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base_1;                 // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_788D[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base_2;                 // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_788E[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_788F[0x2];                                     // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCharaID_ReturnValue_1;                 // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7890[0x3];                                     // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7891[0x3];                                     // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7892[0x3];                                     // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetUnit_ReturnValue_1;                    // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_CHAR_TYPE                               CallFunc_GetCharaTypeDetail_ReturnValue;           // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7893[0x2];                                     // 0x0412(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7894[0x2];                                     // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7895[0x3];                                     // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7896[0x4];                                     // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GuestBattleInitialize_self_CastInput_1; // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0440(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0470(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_SetPlayerSideData) == 0x000010, "Wrong alignment on BattlePartySystem_C_SetPlayerSideData");
static_assert(sizeof(BattlePartySystem_C_SetPlayerSideData) == 0x000490, "Wrong size on BattlePartySystem_C_SetPlayerSideData");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, InDesc) == 0x000000, "Member 'BattlePartySystem_C_SetPlayerSideData::InDesc' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_NotBattleList) == 0x000090, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_NotBattleList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_UnitList) == 0x0000A0, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_UnitList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Cnt) == 0x0000B0, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Infield) == 0x0000B8, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Infield' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Desc) == 0x0000D0, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Leader) == 0x000160, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Leader' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_CharaType) == 0x000161, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_CharaType' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_PartyIndex) == 0x000164, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Desc2) == 0x000170, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Desc2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_StockArray) == 0x000240, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_StockArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_PartnerArray) == 0x000250, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_PartnerArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_NkmArray) == 0x000260, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_NkmArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Index) == 0x000270, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Id) == 0x000274, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Id' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Lo_Unit) == 0x000278, "Member 'BattlePartySystem_C_SetPlayerSideData::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_bool_True_if_break_was_hit_Variable) == 0x000280, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Not_PreBool_ReturnValue) == 0x000281, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Array_Index_Variable) == 0x000284, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Array_Index_Variable_1) == 0x000288, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Loop_Counter_Variable) == 0x00028C, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Add_IntInt_ReturnValue) == 0x000290, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Array_Index_Variable_2) == 0x000294, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Get_Item) == 0x000298, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetUnit_ReturnValue) == 0x0002A0, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetUnit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A8, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_IsValid_ReturnValue) == 0x0002A9, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Length_ReturnValue) == 0x0002AC, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Loop_Counter_Variable_1) == 0x0002B0, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Loop_Counter_Variable_2) == 0x0002B4, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B8, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Less_IntInt_ReturnValue) == 0x0002BC, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002C0, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Array_Index_Variable_3) == 0x0002C4, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Loop_Counter_Variable_3) == 0x0002C8, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002CC, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetMainWork_retValue) == 0x0002D0, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BI_FieldGetComandBoxTransform_self_CastInput) == 0x0002D8, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BI_FieldGetComandBoxTransform_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BI_FieldGetComandBoxTransform_retValue) == 0x0002F0, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BI_FieldGetComandBoxTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetTransform_ReturnValue) == 0x000320, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Length_ReturnValue_1) == 0x000350, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000354, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Add_IntInt_ReturnValue_4) == 0x000358, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BI_GuestBattleInitialize_self_CastInput) == 0x000360, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BI_GuestBattleInitialize_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Length_ReturnValue_2) == 0x000370, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Variable) == 0x000374, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetCharaID_ReturnValue) == 0x000378, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00037C, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BooleanAND_ReturnValue) == 0x00037D, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Array_Index_Variable_4) == 0x000380, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetPartnerList_ReturnValue) == 0x000388, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetPartnerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Get_Item_1) == 0x000398, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, K2Node_DynamicCast_AsChara_Base) == 0x0003A0, "Member 'BattlePartySystem_C_SetPlayerSideData::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, K2Node_DynamicCast_bSuccess) == 0x0003A8, "Member 'BattlePartySystem_C_SetPlayerSideData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0003A9, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003AA, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Get_Item_2) == 0x0003B0, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Get_Item_3) == 0x0003B8, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, K2Node_DynamicCast_AsChara_Base_1) == 0x0003C0, "Member 'BattlePartySystem_C_SetPlayerSideData::K2Node_DynamicCast_AsChara_Base_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, K2Node_DynamicCast_bSuccess_1) == 0x0003C8, "Member 'BattlePartySystem_C_SetPlayerSideData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, K2Node_DynamicCast_AsChara_Base_2) == 0x0003D0, "Member 'BattlePartySystem_C_SetPlayerSideData::K2Node_DynamicCast_AsChara_Base_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, K2Node_DynamicCast_bSuccess_2) == 0x0003D8, "Member 'BattlePartySystem_C_SetPlayerSideData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Length_ReturnValue_3) == 0x0003DC, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Length_ReturnValue_4) == 0x0003E0, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003E4, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003E5, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BooleanAND_ReturnValue_1) == 0x0003E6, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003E7, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0003E8, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BooleanOR_ReturnValue) == 0x0003E9, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetCharaID_ReturnValue_1) == 0x0003EC, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetCharaID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Loop_Counter_Variable_4) == 0x0003F0, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003F4, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Add_IntInt_ReturnValue_5) == 0x0003F8, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BooleanAND_ReturnValue_2) == 0x0003FC, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Get_Item_4) == 0x000400, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000404, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetUnit_ReturnValue_1) == 0x000408, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetUnit_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_IsValid_ReturnValue_1) == 0x000410, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetCharaTypeDetail_ReturnValue) == 0x000411, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetCharaTypeDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Length_ReturnValue_5) == 0x000414, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000418, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Less_IntInt_ReturnValue_4) == 0x000419, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, Temp_int_Variable_1) == 0x00041C, "Member 'BattlePartySystem_C_SetPlayerSideData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Array_Length_ReturnValue_6) == 0x000420, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000424, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_Add_IntInt_ReturnValue_6) == 0x000428, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_BI_GuestBattleInitialize_self_CastInput_1) == 0x000430, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_BI_GuestBattleInitialize_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetTransform_ReturnValue_1) == 0x000440, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000470, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000480, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayerSideData, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000481, "Member 'BattlePartySystem_C_SetPlayerSideData::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetEnemySideData
// 0x03C0 (0x03C0 - 0x0000)
struct BattlePartySystem_C_SetEnemySideData final
{
public:
	struct FBtlDescData                           InDesc;                                            // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBtlEncData                            InEnc;                                             // 0x0090(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class AActor*>                         Lo_UnitList;                                       // 0x00E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Lo_Cnt;                                            // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               Lo_CharaType;                                      // 0x00FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7897[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Infield;                                        // 0x0100(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_HPHalf;                                         // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_NoDestroyModel;                                 // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_NoDead;                                         // 0x0112(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7898[0xD];                                     // 0x0113(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_DESC                              Lo_Desc2;                                          // 0x0120(0x00D0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<int32>                                 Lo_IDArray;                                        // 0x01F0(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Id;                                             // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_DESC                              Lo_Desc;                                           // 0x0210(0x00D0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7899[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789A[0x3];                                     // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789B[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789C[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetUnit_ReturnValue;                      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               CallFunc_GetCharaTypeDetail_ReturnValue;           // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789D[0x5];                                     // 0x031B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789E[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789F[0x1];                                     // 0x033B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A0[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GuestBattleInitialize_self_CastInput;  // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78A1[0xC];                                     // 0x0364(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0370(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x03A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_SetEnemySideData) == 0x000010, "Wrong alignment on BattlePartySystem_C_SetEnemySideData");
static_assert(sizeof(BattlePartySystem_C_SetEnemySideData) == 0x0003C0, "Wrong size on BattlePartySystem_C_SetEnemySideData");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, InDesc) == 0x000000, "Member 'BattlePartySystem_C_SetEnemySideData::InDesc' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, InEnc) == 0x000090, "Member 'BattlePartySystem_C_SetEnemySideData::InEnc' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_UnitList) == 0x0000E8, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_UnitList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_Cnt) == 0x0000F8, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_CharaType) == 0x0000FC, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_CharaType' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_Infield) == 0x000100, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_Infield' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_HPHalf) == 0x000110, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_HPHalf' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_NoDestroyModel) == 0x000111, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_NoDestroyModel' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_NoDead) == 0x000112, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_NoDead' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_Desc2) == 0x000120, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_Desc2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_IDArray) == 0x0001F0, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_IDArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_Index) == 0x000200, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_Id) == 0x000204, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_Id' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_Unit) == 0x000208, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Lo_Desc) == 0x000210, "Member 'BattlePartySystem_C_SetEnemySideData::Lo_Desc' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Temp_int_Array_Index_Variable) == 0x0002E0, "Member 'BattlePartySystem_C_SetEnemySideData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Array_Length_ReturnValue) == 0x0002E4, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Temp_bool_True_if_break_was_hit_Variable) == 0x0002E8, "Member 'BattlePartySystem_C_SetEnemySideData::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Temp_int_Loop_Counter_Variable) == 0x0002EC, "Member 'BattlePartySystem_C_SetEnemySideData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Add_IntInt_ReturnValue) == 0x0002F0, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Not_PreBool_ReturnValue) == 0x0002F4, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Temp_int_Loop_Counter_Variable_1) == 0x0002F8, "Member 'BattlePartySystem_C_SetEnemySideData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Less_IntInt_ReturnValue) == 0x0002FC, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000300, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Temp_int_Array_Index_Variable_1) == 0x000304, "Member 'BattlePartySystem_C_SetEnemySideData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Array_Get_Item) == 0x000308, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_GetUnit_ReturnValue) == 0x000310, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_GetUnit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_GetCharaTypeDetail_ReturnValue) == 0x000318, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_GetCharaTypeDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_IsValid_ReturnValue) == 0x000319, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Array_RemoveItem_ReturnValue) == 0x00031A, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Array_Get_Item_1) == 0x000320, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Array_Length_ReturnValue_1) == 0x000328, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, K2Node_DynamicCast_AsChara_Base) == 0x000330, "Member 'BattlePartySystem_C_SetEnemySideData::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, K2Node_DynamicCast_bSuccess) == 0x000338, "Member 'BattlePartySystem_C_SetEnemySideData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000339, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_BooleanAND_ReturnValue) == 0x00033A, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, Temp_int_Variable) == 0x00033C, "Member 'BattlePartySystem_C_SetEnemySideData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Array_Length_ReturnValue_2) == 0x000340, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_GetCharaID_ReturnValue) == 0x000344, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000348, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_BI_GuestBattleInitialize_self_CastInput) == 0x000350, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_BI_GuestBattleInitialize_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000360, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_GetTransform_ReturnValue) == 0x000370, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x0003A0, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003B0, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003B1, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetEnemySideData, CallFunc_BooleanAND_ReturnValue_1) == 0x0003B2, "Member 'BattlePartySystem_C_SetEnemySideData::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BeCommandBox
// 0x02B0 (0x02B0 - 0x0000)
struct BattlePartySystem_C_BeCommandBox final
{
public:
	struct FTransform                             Lo_AddTransform;                                   // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               Lo_RotSub;                                         // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCommand;                                      // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A2[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_AllList;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A3[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetHomeTransform_ReturnValue;             // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0148(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A4[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSideFromIndex_ReturnValue;             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSideFromIndex_ReturnValue_1;           // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A5[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A6[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x01F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A7[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_1;                  // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78A8[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue;          // 0x0290(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BeCommandBox) == 0x000010, "Wrong alignment on BattlePartySystem_C_BeCommandBox");
static_assert(sizeof(BattlePartySystem_C_BeCommandBox) == 0x0002B0, "Wrong size on BattlePartySystem_C_BeCommandBox");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, Lo_AddTransform) == 0x000000, "Member 'BattlePartySystem_C_BeCommandBox::Lo_AddTransform' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, Lo_RotSub) == 0x000030, "Member 'BattlePartySystem_C_BeCommandBox::Lo_RotSub' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, Lo_IsCommand) == 0x00003C, "Member 'BattlePartySystem_C_BeCommandBox::Lo_IsCommand' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, Lo_AllList) == 0x000040, "Member 'BattlePartySystem_C_BeCommandBox::Lo_AllList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, Lo_Unit) == 0x000050, "Member 'BattlePartySystem_C_BeCommandBox::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BattlePartySystem_C_BeCommandBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_GetHomeTransform_ReturnValue) == 0x000060, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_GetHomeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakTransform_Location_1) == 0x0000B4, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakTransform_Rotation_1) == 0x0000C0, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakTransform_Scale_1) == 0x0000CC, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakRotator_Roll_1) == 0x0000E4, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakRotator_Pitch_1) == 0x0000E8, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BreakRotator_Yaw_1) == 0x0000EC, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F0, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000130, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000134, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_MakeRotator_ReturnValue) == 0x000138, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'BattlePartySystem_C_BeCommandBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000148, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001D0, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Add_IntInt_ReturnValue) == 0x0001D4, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_GetSideFromIndex_ReturnValue) == 0x0001DC, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_GetSideFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_GetSideFromIndex_ReturnValue_1) == 0x0001DD, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_GetSideFromIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001DE, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001DF, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BooleanAND_ReturnValue) == 0x0001E0, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_GetPartyUnit_retValue) == 0x0001E8, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F0, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x0001F4, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_BooleanAND_ReturnValue_1) == 0x00027C, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_GetPartyUnit_retValue_1) == 0x000280, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_GetPartyUnit_retValue_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Array_Length_ReturnValue) == 0x000288, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_GetAllIsInFieldList_ReturnValue) == 0x000290, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BeCommandBox, CallFunc_Less_IntInt_ReturnValue) == 0x0002A0, "Member 'BattlePartySystem_C_BeCommandBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetDitherValue
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_UnitSetDitherValue final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadeOut;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A9[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Index;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_UnitSetDitherValue) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetDitherValue");
static_assert(sizeof(BattlePartySystem_C_UnitSetDitherValue) == 0x000018, "Wrong size on BattlePartySystem_C_UnitSetDitherValue");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValue, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_UnitSetDitherValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValue, Time) == 0x000004, "Member 'BattlePartySystem_C_UnitSetDitherValue::Time' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValue, IsFadeOut) == 0x000008, "Member 'BattlePartySystem_C_UnitSetDitherValue::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValue, Lo_Index) == 0x00000C, "Member 'BattlePartySystem_C_UnitSetDitherValue::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValue, Lo_Unit) == 0x000010, "Member 'BattlePartySystem_C_UnitSetDitherValue::Lo_Unit' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetDitherValueSideAll
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_UnitSetDitherValueSideAll final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadeOut;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AA[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78AB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_UnitSetDitherValueSideAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetDitherValueSideAll");
static_assert(sizeof(BattlePartySystem_C_UnitSetDitherValueSideAll) == 0x000028, "Wrong size on BattlePartySystem_C_UnitSetDitherValueSideAll");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValueSideAll, Time) == 0x000000, "Member 'BattlePartySystem_C_UnitSetDitherValueSideAll::Time' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValueSideAll, IsFadeOut) == 0x000004, "Member 'BattlePartySystem_C_UnitSetDitherValueSideAll::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValueSideAll, IsPlayer) == 0x000005, "Member 'BattlePartySystem_C_UnitSetDitherValueSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValueSideAll, Lo_List) == 0x000008, "Member 'BattlePartySystem_C_UnitSetDitherValueSideAll::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValueSideAll, Lo_Index) == 0x000018, "Member 'BattlePartySystem_C_UnitSetDitherValueSideAll::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetDitherValueSideAll, Lo_Unit) == 0x000020, "Member 'BattlePartySystem_C_UnitSetDitherValueSideAll::Lo_Unit' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.AveLocationInit
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_AveLocationInit final
{
public:
	TArray<class FName>                           Lo_SocketNameArray;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_AveLocationInit) == 0x000008, "Wrong alignment on BattlePartySystem_C_AveLocationInit");
static_assert(sizeof(BattlePartySystem_C_AveLocationInit) == 0x000020, "Wrong size on BattlePartySystem_C_AveLocationInit");
static_assert(offsetof(BattlePartySystem_C_AveLocationInit, Lo_SocketNameArray) == 0x000000, "Member 'BattlePartySystem_C_AveLocationInit::Lo_SocketNameArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_AveLocationInit, K2Node_MakeArray_Array) == 0x000010, "Member 'BattlePartySystem_C_AveLocationInit::K2Node_MakeArray_Array' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetPlayRate
// 0x0040 (0x0040 - 0x0000)
struct BattlePartySystem_C_SetPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78AC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Last;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_First;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78AD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AE[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetPartyLoopMax_retValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_SetPlayRate) == 0x000008, "Wrong alignment on BattlePartySystem_C_SetPlayRate");
static_assert(sizeof(BattlePartySystem_C_SetPlayRate) == 0x000040, "Wrong size on BattlePartySystem_C_SetPlayRate");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, PlayRate) == 0x000000, "Member 'BattlePartySystem_C_SetPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, Lo_Unit) == 0x000008, "Member 'BattlePartySystem_C_SetPlayRate::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, Lo_Last) == 0x000010, "Member 'BattlePartySystem_C_SetPlayRate::Lo_Last' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, Lo_First) == 0x000014, "Member 'BattlePartySystem_C_SetPlayRate::Lo_First' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, Temp_int_Variable) == 0x000018, "Member 'BattlePartySystem_C_SetPlayRate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, CallFunc_GetPartyUnit_retValue) == 0x000020, "Member 'BattlePartySystem_C_SetPlayRate::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_SetPlayRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BattlePartySystem_C_SetPlayRate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, CallFunc_const_GetPartyLoopMax_retValue) == 0x000030, "Member 'BattlePartySystem_C_SetPlayRate::CallFunc_const_GetPartyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, CallFunc_const_GetPartyStart_retValue) == 0x000034, "Member 'BattlePartySystem_C_SetPlayRate::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BattlePartySystem_C_SetPlayRate::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRate, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_SetPlayRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetLOD
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_UnitSetLOD final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LOD;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78AF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_UnitSetLOD) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetLOD");
static_assert(sizeof(BattlePartySystem_C_UnitSetLOD) == 0x000028, "Wrong size on BattlePartySystem_C_UnitSetLOD");
static_assert(offsetof(BattlePartySystem_C_UnitSetLOD, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_UnitSetLOD::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLOD, LOD) == 0x000004, "Member 'BattlePartySystem_C_UnitSetLOD::LOD' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLOD, Lo_Unit) == 0x000008, "Member 'BattlePartySystem_C_UnitSetLOD::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLOD, CallFunc_Max_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_UnitSetLOD::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLOD, CallFunc_GetPartyUnit_retValue) == 0x000018, "Member 'BattlePartySystem_C_UnitSetLOD::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLOD, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_UnitSetLOD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UnitSetLODSideAll
// 0x0060 (0x0060 - 0x0000)
struct BattlePartySystem_C_UnitSetLODSideAll final
{
public:
	int32                                         LOD;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayer;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B2[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B3[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B4[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_UnitSetLODSideAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_UnitSetLODSideAll");
static_assert(sizeof(BattlePartySystem_C_UnitSetLODSideAll) == 0x000060, "Wrong size on BattlePartySystem_C_UnitSetLODSideAll");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, LOD) == 0x000000, "Member 'BattlePartySystem_C_UnitSetLODSideAll::LOD' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, IsPlayer) == 0x000004, "Member 'BattlePartySystem_C_UnitSetLODSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Lo_List) == 0x000008, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Lo_List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Lo_Index) == 0x000018, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Lo_Unit) == 0x000020, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Temp_bool_Variable) == 0x000028, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'BattlePartySystem_C_UnitSetLODSideAll::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Temp_byte_Variable) == 0x000030, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Temp_byte_Variable_1) == 0x000031, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, K2Node_Select_Default) == 0x000032, "Member 'BattlePartySystem_C_UnitSetLODSideAll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BattlePartySystem_C_UnitSetLODSideAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000038, "Member 'BattlePartySystem_C_UnitSetLODSideAll::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BattlePartySystem_C_UnitSetLODSideAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattlePartySystem_C_UnitSetLODSideAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BattlePartySystem_C_UnitSetLODSideAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UnitSetLODSideAll, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattlePartySystem_C_UnitSetLODSideAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoSetAllWidgetVisibility
// 0x0038 (0x0038 - 0x0000)
struct BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABattleTargetDevilInfoActor_C*>  CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility) == 0x000038, "Wrong size on BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, IsVisible) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, CallFunc_Map_Values_Values) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchAishouNotice
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_ATTRIBUTE_TYPE>                      DefenceAishou;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsShowAll;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sw;                                                // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSelected;                                        // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPenetration;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              CallFunc_CalcAishouSuitableTargetSelect_ReturnValue; // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckUniqueSkillKantuu_ReturnValue;       // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B7[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice) == 0x000030, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, ActorIndex) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, TargetIndex) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, DefenceAishou) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::DefenceAishou' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, IsShowAll) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::IsShowAll' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, Sw) == 0x000019, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, IsSelected) == 0x00001A, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::IsSelected' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, Immediately) == 0x00001B, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::Immediately' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, IsPenetration) == 0x00001C, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::IsPenetration' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, CallFunc_CalcAishouSuitableTargetSelect_ReturnValue) == 0x00001D, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::CallFunc_CalcAishouSuitableTargetSelect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, CallFunc_CheckUniqueSkillKantuu_ReturnValue) == 0x00001E, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::CallFunc_CheckUniqueSkillKantuu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, CallFunc_Map_Find_Value) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchAishouNoticeAll
// 0x0080 (0x0080 - 0x0000)
struct BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      DefanceAishou;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsShowAll;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sw;                                                // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSelected;                                        // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForEnemy;                                          // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForFriend;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPenetration;                                     // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B9[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Target;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BA[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BB[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetAllIsTargetList_ReturnValue;           // 0x0060(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue_1;        // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll) == 0x000080, "Wrong size on BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, ActorIndex) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, DefanceAishou) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::DefanceAishou' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, IsShowAll) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::IsShowAll' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, Sw) == 0x000019, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, IsSelected) == 0x00001A, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::IsSelected' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, ForEnemy) == 0x00001B, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::ForEnemy' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, ForFriend) == 0x00001C, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::ForFriend' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, Immediately) == 0x00001D, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::Immediately' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, IsPenetration) == 0x00001E, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::IsPenetration' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, Lo_Target) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_BooleanXOR_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_GetAllIsTargetList_ReturnValue) == 0x000060, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_GetAllIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll, CallFunc_GetSideIsTargetList_ReturnValue_1) == 0x000070, "Member 'BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll::CallFunc_GetSideIsTargetList_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetParameter
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_SetParameter final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ABILITY_TYPE                                Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78BC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_SetParameter) == 0x000004, "Wrong alignment on BattlePartySystem_C_SetParameter");
static_assert(sizeof(BattlePartySystem_C_SetParameter) == 0x00000C, "Wrong size on BattlePartySystem_C_SetParameter");
static_assert(offsetof(BattlePartySystem_C_SetParameter, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_SetParameter::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetParameter, Type) == 0x000004, "Member 'BattlePartySystem_C_SetParameter::Type' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetParameter, Value) == 0x000008, "Member 'BattlePartySystem_C_SetParameter::Value' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetLevel
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_SetLevel final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_SetLevel) == 0x000004, "Wrong alignment on BattlePartySystem_C_SetLevel");
static_assert(sizeof(BattlePartySystem_C_SetLevel) == 0x000008, "Wrong size on BattlePartySystem_C_SetLevel");
static_assert(offsetof(BattlePartySystem_C_SetLevel, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_SetLevel::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetLevel, Level) == 0x000004, "Member 'BattlePartySystem_C_SetLevel::Level' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoShowCureExpection
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoShowCureExpection final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpectedHP;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoShowCureExpection) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoShowCureExpection");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoShowCureExpection) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoShowCureExpection");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoShowCureExpection, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoShowCureExpection::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoShowCureExpection, ExpectedHP) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoShowCureExpection::ExpectedHP' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoShowCureExpection, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoShowCureExpection::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoShowCureExpection, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoShowCureExpection::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoShowCureExpection, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoShowCureExpection::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoReregister
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoReregister final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78BD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoReregister) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoReregister");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoReregister) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoReregister");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoReregister, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoReregister::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoReregister, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoReregister::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoReregister, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoReregister::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoReregister, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoReregister::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.IsAlreadyDead
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_IsAlreadyDead final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             Lo_MotionID;                                       // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78BE[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_IsAlreadyDead) == 0x000004, "Wrong alignment on BattlePartySystem_C_IsAlreadyDead");
static_assert(sizeof(BattlePartySystem_C_IsAlreadyDead) == 0x000010, "Wrong size on BattlePartySystem_C_IsAlreadyDead");
static_assert(offsetof(BattlePartySystem_C_IsAlreadyDead, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_IsAlreadyDead::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAlreadyDead, RetValue) == 0x000004, "Member 'BattlePartySystem_C_IsAlreadyDead::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAlreadyDead, Lo_MotionID) == 0x000005, "Member 'BattlePartySystem_C_IsAlreadyDead::Lo_MotionID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAlreadyDead, CallFunc_GetNowHP_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_IsAlreadyDead::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_IsAlreadyDead, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_IsAlreadyDead::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoGetCurrentHP
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_EnemyInfoGetCurrentHP final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentHP;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_Info_C*              NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInfoHP_HP;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoGetCurrentHP) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoGetCurrentHP");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoGetCurrentHP) == 0x000020, "Wrong size on BattlePartySystem_C_EnemyInfoGetCurrentHP");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoGetCurrentHP, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoGetCurrentHP::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoGetCurrentHP, CurrentHP) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoGetCurrentHP::CurrentHP' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoGetCurrentHP, NewLocalVar_0) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoGetCurrentHP::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoGetCurrentHP, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoGetCurrentHP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoGetCurrentHP, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoGetCurrentHP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoGetCurrentHP, CallFunc_GetInfoHP_HP) == 0x00001C, "Member 'BattlePartySystem_C_EnemyInfoGetCurrentHP::CallFunc_GetInfoHP_HP' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoSetButtonVisibility
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_EnemyInfoSetButtonVisibility final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoSetButtonVisibility) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoSetButtonVisibility");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoSetButtonVisibility) == 0x000018, "Wrong size on BattlePartySystem_C_EnemyInfoSetButtonVisibility");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, Visible) == 0x000004, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::Visible' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, Temp_bool_Variable) == 0x000005, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, Temp_byte_Variable) == 0x000006, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, Temp_byte_Variable_1) == 0x000007, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, CallFunc_Map_Find_Value) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibility, K2Node_Select_Default) == 0x000011, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoSetButtonVisibilityAll
// 0x0068 (0x0068 - 0x0000)
struct BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForEnemy;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForFriend;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C0[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Target;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C1[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C2[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetAllIsTargetList_ReturnValue;           // 0x0048(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue_1;        // 0x0058(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll");
static_assert(sizeof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll) == 0x000068, "Wrong size on BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, Visible) == 0x000000, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::Visible' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, ForEnemy) == 0x000001, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::ForEnemy' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, ForFriend) == 0x000002, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::ForFriend' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, Lo_Target) == 0x000008, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_BooleanXOR_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000028, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_GetAllIsTargetList_ReturnValue) == 0x000048, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_GetAllIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll, CallFunc_GetSideIsTargetList_ReturnValue_1) == 0x000058, "Member 'BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll::CallFunc_GetSideIsTargetList_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.SetPlayRateInner
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_SetPlayRateInner final
{
public:
	class ACharaBase_C*                           Unit;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharaPlayRate;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78C3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaAction_C>    CallFunc_SetCharaPlayRate_self_CastInput;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_SetPlayRateInner) == 0x000008, "Wrong alignment on BattlePartySystem_C_SetPlayRateInner");
static_assert(sizeof(BattlePartySystem_C_SetPlayRateInner) == 0x000020, "Wrong size on BattlePartySystem_C_SetPlayRateInner");
static_assert(offsetof(BattlePartySystem_C_SetPlayRateInner, Unit) == 0x000000, "Member 'BattlePartySystem_C_SetPlayRateInner::Unit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRateInner, CharaPlayRate) == 0x000008, "Member 'BattlePartySystem_C_SetPlayRateInner::CharaPlayRate' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_SetPlayRateInner, CallFunc_SetCharaPlayRate_self_CastInput) == 0x000010, "Member 'BattlePartySystem_C_SetPlayRateInner::CallFunc_SetCharaPlayRate_self_CastInput' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.CreateHeroWeapons
// 0x0070 (0x0070 - 0x0000)
struct BattlePartySystem_C_CreateHeroWeapons final
{
public:
	class ACharaBase_C*                           HeroPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_CreateSkeletalMeshActor_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASkeletalMeshActor*                     CallFunc_BI_CreateSkeletalMeshActor_SkelMeshActor; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C4[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_CreateSkeletalMeshActor_self_CastInput_1; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASkeletalMeshActor*                     CallFunc_BI_CreateSkeletalMeshActor_SkelMeshActor_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78C5[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_CreateHeroWeapons) == 0x000008, "Wrong alignment on BattlePartySystem_C_CreateHeroWeapons");
static_assert(sizeof(BattlePartySystem_C_CreateHeroWeapons) == 0x000070, "Wrong size on BattlePartySystem_C_CreateHeroWeapons");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, HeroPawn) == 0x000000, "Member 'BattlePartySystem_C_CreateHeroWeapons::HeroPawn' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_BI_CreateSkeletalMeshActor_self_CastInput) == 0x000008, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_BI_CreateSkeletalMeshActor_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_BI_CreateSkeletalMeshActor_SkelMeshActor) == 0x000018, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_BI_CreateSkeletalMeshActor_SkelMeshActor' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_BI_CreateSkeletalMeshActor_self_CastInput_1) == 0x000028, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_BI_CreateSkeletalMeshActor_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_BI_CreateSkeletalMeshActor_SkelMeshActor_1) == 0x000038, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_BI_CreateSkeletalMeshActor_SkelMeshActor_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, K2Node_MakeArray_Array) == 0x000040, "Member 'BattlePartySystem_C_CreateHeroWeapons::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, K2Node_MakeArray_Array_1) == 0x000058, "Member 'BattlePartySystem_C_CreateHeroWeapons::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_CreateHeroWeapons, CallFunc_Array_Add_ReturnValue_1) == 0x000068, "Member 'BattlePartySystem_C_CreateHeroWeapons::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.DestroyHeroWeapons
// 0x0040 (0x0040 - 0x0000)
struct BattlePartySystem_C_DestroyHeroWeapons final
{
public:
	class ACharaBase_C*                           HeroPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78C6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C7[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_DestroySkeletalMeshActor_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroySkeletalMeshActor_NoUse;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_DestroyHeroWeapons) == 0x000008, "Wrong alignment on BattlePartySystem_C_DestroyHeroWeapons");
static_assert(sizeof(BattlePartySystem_C_DestroyHeroWeapons) == 0x000040, "Wrong size on BattlePartySystem_C_DestroyHeroWeapons");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, HeroPawn) == 0x000000, "Member 'BattlePartySystem_C_DestroyHeroWeapons::HeroPawn' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattlePartySystem_C_DestroyHeroWeapons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattlePartySystem_C_DestroyHeroWeapons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_DestroyHeroWeapons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattlePartySystem_C_DestroyHeroWeapons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_DestroyHeroWeapons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BattlePartySystem_C_DestroyHeroWeapons::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BattlePartySystem_C_DestroyHeroWeapons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, CallFunc_BI_DestroySkeletalMeshActor_self_CastInput) == 0x000028, "Member 'BattlePartySystem_C_DestroyHeroWeapons::CallFunc_BI_DestroySkeletalMeshActor_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_DestroyHeroWeapons, CallFunc_BI_DestroySkeletalMeshActor_NoUse) == 0x000038, "Member 'BattlePartySystem_C_DestroyHeroWeapons::CallFunc_BI_DestroySkeletalMeshActor_NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.UpdateEnemyHomeTransform
// 0x0080 (0x0080 - 0x0000)
struct BattlePartySystem_C_UpdateEnemyHomeTransform final
{
public:
	TArray<int32>                                 Lo_EnemyList;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78C8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C9[0xE];                                     // 0x0032(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_UpdateEnemyHomeTransform) == 0x000010, "Wrong alignment on BattlePartySystem_C_UpdateEnemyHomeTransform");
static_assert(sizeof(BattlePartySystem_C_UpdateEnemyHomeTransform) == 0x000080, "Wrong size on BattlePartySystem_C_UpdateEnemyHomeTransform");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, Lo_EnemyList) == 0x000000, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::Lo_EnemyList' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_GetPartyUnit_retValue) == 0x000028, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_UpdateEnemyHomeTransform, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000070, "Member 'BattlePartySystem_C_UpdateEnemyHomeTransform::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartnerLoopMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetPartnerLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartnerLoopMax_retValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetPartnerLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetPartnerLoopMax");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetPartnerLoopMax) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetPartnerLoopMax");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartnerLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetPartnerLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartnerLoopMax, CallFunc_const_GetPartnerLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetPartnerLoopMax::CallFunc_const_GetPartnerLoopMax_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartnerNum
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetPartnerNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartnerNum_retValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetPartnerNum) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetPartnerNum");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetPartnerNum) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetPartnerNum");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartnerNum, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetPartnerNum::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartnerNum, CallFunc_const_GetPartnerNum_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetPartnerNum::CallFunc_const_GetPartnerNum_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartnerStart
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetPartnerStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartnerStart_retValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetPartnerStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetPartnerStart");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetPartnerStart) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetPartnerStart");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartnerStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetPartnerStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartnerStart, CallFunc_const_GetPartnerStart_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetPartnerStart::CallFunc_const_GetPartnerStart_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetOnBattleNumMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetOnBattleNumMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetOnBattleNumMax_retValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetOnBattleNumMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetOnBattleNumMax");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetOnBattleNumMax) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetOnBattleNumMax");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetOnBattleNumMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetOnBattleNumMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetOnBattleNumMax, CallFunc_const_GetOnBattleNumMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetOnBattleNumMax::CallFunc_const_GetOnBattleNumMax_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetStockLoopMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetStockLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetStockLoopMax_retValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetStockLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetStockLoopMax");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetStockLoopMax) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetStockLoopMax");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetStockLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetStockLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetStockLoopMax, CallFunc_const_GetStockLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetStockLoopMax::CallFunc_const_GetStockLoopMax_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetStockStart
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetStockStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetStockStart_retValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetStockStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetStockStart");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetStockStart) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetStockStart");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetStockStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetStockStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetStockStart, CallFunc_const_GetStockStart_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetStockStart::CallFunc_const_GetStockStart_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPlayerLoopMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetPlayerLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetPlayerLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetPlayerLoopMax");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetPlayerLoopMax) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetPlayerLoopMax");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPlayerLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetPlayerLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPlayerLoopMax, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetPlayerLoopMax::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetNPCNum
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_BI_const_GetNPCNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetNPCNum) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetNPCNum");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetNPCNum) == 0x000004, "Wrong size on BattlePartySystem_C_BI_const_GetNPCNum");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetNPCNum, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetNPCNum::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetNPCStart
// 0x0004 (0x0004 - 0x0000)
struct BattlePartySystem_C_BI_const_GetNPCStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetNPCStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetNPCStart");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetNPCStart) == 0x000004, "Wrong size on BattlePartySystem_C_BI_const_GetNPCStart");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetNPCStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetNPCStart::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetEnemyNum
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetEnemyNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyNum_retValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetEnemyNum) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetEnemyNum");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetEnemyNum) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetEnemyNum");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetEnemyNum, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetEnemyNum::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetEnemyNum, CallFunc_const_GetEnemyNum_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetEnemyNum::CallFunc_const_GetEnemyNum_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetEnemyStart
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetEnemyStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetEnemyStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetEnemyStart");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetEnemyStart) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetEnemyStart");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetEnemyStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetEnemyStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetEnemyStart, CallFunc_const_GetEnemyStart_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetEnemyStart::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartyLoopMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetPartyLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyLoopMax_retValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetPartyLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetPartyLoopMax");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetPartyLoopMax) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetPartyLoopMax");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartyLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetPartyLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartyLoopMax, CallFunc_const_GetPartyLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetPartyLoopMax::CallFunc_const_GetPartyLoopMax_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartyStart
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetPartyStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetPartyStart) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetPartyStart");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetPartyStart) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetPartyStart");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartyStart, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetPartyStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetPartyStart, CallFunc_const_GetPartyStart_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetPartyStart::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_DestroyUnitToMap
// 0x0001 (0x0001 - 0x0000)
struct BattlePartySystem_C_BI_DestroyUnitToMap final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_DestroyUnitToMap) == 0x000001, "Wrong alignment on BattlePartySystem_C_BI_DestroyUnitToMap");
static_assert(sizeof(BattlePartySystem_C_BI_DestroyUnitToMap) == 0x000001, "Wrong size on BattlePartySystem_C_BI_DestroyUnitToMap");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnitToMap, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_DestroyUnitToMap::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetEnemyLeaderPartyData
// 0x0320 (0x0320 - 0x0000)
struct BattlePartySystem_C_BI_GetEnemyLeaderPartyData final
{
public:
	struct FBtlParty                              RetValue;                                          // 0x0000(0x0320)(Parm, OutParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetEnemyLeaderPartyData) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_GetEnemyLeaderPartyData");
static_assert(sizeof(BattlePartySystem_C_BI_GetEnemyLeaderPartyData) == 0x000320, "Wrong size on BattlePartySystem_C_BI_GetEnemyLeaderPartyData");
static_assert(offsetof(BattlePartySystem_C_BI_GetEnemyLeaderPartyData, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_GetEnemyLeaderPartyData::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetBadStatusOne
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_SetBadStatusOne final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  InBst;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_SetBadStatusOne) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_SetBadStatusOne");
static_assert(sizeof(BattlePartySystem_C_BI_SetBadStatusOne) == 0x000008, "Wrong size on BattlePartySystem_C_BI_SetBadStatusOne");
static_assert(offsetof(BattlePartySystem_C_BI_SetBadStatusOne, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_SetBadStatusOne::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetBadStatusOne, InBst) == 0x000004, "Member 'BattlePartySystem_C_BI_SetBadStatusOne::InBst' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetBadStatusOne, Sw) == 0x000005, "Member 'BattlePartySystem_C_BI_SetBadStatusOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetBadStatusOne, RetValue) == 0x000006, "Member 'BattlePartySystem_C_BI_SetBadStatusOne::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyUnit
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_BI_GetPartyUnit final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78CA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> RetValue;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetPartyUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetPartyUnit");
static_assert(sizeof(BattlePartySystem_C_BI_GetPartyUnit) == 0x000020, "Wrong size on BattlePartySystem_C_BI_GetPartyUnit");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyUnit, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetPartyUnit::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyUnit, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetPartyUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyUnit, CallFunc_GetPartyUnit_retValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetPartyUnit::CallFunc_GetPartyUnit_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetCharaID
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetCharaID final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetCharaID) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetCharaID");
static_assert(sizeof(BattlePartySystem_C_BI_GetCharaID) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetCharaID");
static_assert(offsetof(BattlePartySystem_C_BI_GetCharaID, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetCharaID::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetCharaID, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetCharaID::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetCharaID, CallFunc_GetCharaID_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetCharaID::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetCharaData
// 0x0298 (0x0298 - 0x0000)
struct BattlePartySystem_C_BI_GetCharaData final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78CB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharData                           RetValue;                                          // 0x0008(0x0148)(Parm, OutParm)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x0150(0x0148)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetCharaData) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetCharaData");
static_assert(sizeof(BattlePartySystem_C_BI_GetCharaData) == 0x000298, "Wrong size on BattlePartySystem_C_BI_GetCharaData");
static_assert(offsetof(BattlePartySystem_C_BI_GetCharaData, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetCharaData::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetCharaData, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetCharaData::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetCharaData, CallFunc_GetBtlCharaData_ReturnValue) == 0x000150, "Member 'BattlePartySystem_C_BI_GetCharaData::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_CheckBadStatus
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_CheckBadStatus final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  bst;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_CheckBadStatus) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_CheckBadStatus");
static_assert(sizeof(BattlePartySystem_C_BI_CheckBadStatus) == 0x000008, "Wrong size on BattlePartySystem_C_BI_CheckBadStatus");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBadStatus, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_CheckBadStatus::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBadStatus, bst) == 0x000004, "Member 'BattlePartySystem_C_BI_CheckBadStatus::bst' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBadStatus, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_CheckBadStatus::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBadStatus, CallFunc_CheckBadStatus_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_BI_CheckBadStatus::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyData
// 0x0650 (0x0650 - 0x0000)
struct BattlePartySystem_C_BI_GetPartyData final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78CC[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              RetValue;                                          // 0x0010(0x0320)(Parm, OutParm)
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0330(0x0320)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetPartyData) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_GetPartyData");
static_assert(sizeof(BattlePartySystem_C_BI_GetPartyData) == 0x000650, "Wrong size on BattlePartySystem_C_BI_GetPartyData");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyData, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetPartyData::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyData, RetValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetPartyData::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyData, CallFunc_GetBtlPartyData_ReturnValue) == 0x000330, "Member 'BattlePartySystem_C_BI_GetPartyData::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsInField
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsInField final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInField_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsInField) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsInField");
static_assert(sizeof(BattlePartySystem_C_BI_IsInField) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsInField");
static_assert(offsetof(BattlePartySystem_C_BI_IsInField, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsInField::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsInField, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_IsInField::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsInField, CallFunc_IsInField_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsInField::CallFunc_IsInField_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsUseableItem
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_IsUseableItem final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseableItem_retValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsUseableItem) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsUseableItem");
static_assert(sizeof(BattlePartySystem_C_BI_IsUseableItem) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_IsUseableItem");
static_assert(offsetof(BattlePartySystem_C_BI_IsUseableItem, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsUseableItem::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsUseableItem, ItemId) == 0x000004, "Member 'BattlePartySystem_C_BI_IsUseableItem::ItemId' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsUseableItem, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_IsUseableItem::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsUseableItem, CallFunc_IsUseableItem_retValue) == 0x000009, "Member 'BattlePartySystem_C_BI_IsUseableItem::CallFunc_IsUseableItem_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetEnemyLoopMax
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_const_GetEnemyLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_const_GetEnemyLoopMax) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_const_GetEnemyLoopMax");
static_assert(sizeof(BattlePartySystem_C_BI_const_GetEnemyLoopMax) == 0x000008, "Wrong size on BattlePartySystem_C_BI_const_GetEnemyLoopMax");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetEnemyLoopMax, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_const_GetEnemyLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_const_GetEnemyLoopMax, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_const_GetEnemyLoopMax::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_DelBadStatusTurnCounter
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_DelBadStatusTurnCounter final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_DelBadStatusTurnCounter) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_DelBadStatusTurnCounter");
static_assert(sizeof(BattlePartySystem_C_BI_DelBadStatusTurnCounter) == 0x000008, "Wrong size on BattlePartySystem_C_BI_DelBadStatusTurnCounter");
static_assert(offsetof(BattlePartySystem_C_BI_DelBadStatusTurnCounter, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_DelBadStatusTurnCounter::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DelBadStatusTurnCounter, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_DelBadStatusTurnCounter::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_AddHPMP
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_AddHPMP final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValue;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHP;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_AddHPMP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_AddHPMP");
static_assert(sizeof(BattlePartySystem_C_BI_AddHPMP) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_AddHPMP");
static_assert(offsetof(BattlePartySystem_C_BI_AddHPMP, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_AddHPMP::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddHPMP, InValue) == 0x000004, "Member 'BattlePartySystem_C_BI_AddHPMP::InValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddHPMP, IsHP) == 0x000008, "Member 'BattlePartySystem_C_BI_AddHPMP::IsHP' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddHPMP, RetValue) == 0x000009, "Member 'BattlePartySystem_C_BI_AddHPMP::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetDeadParam
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_SetDeadParam final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_SetDeadParam) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_SetDeadParam");
static_assert(sizeof(BattlePartySystem_C_BI_SetDeadParam) == 0x000008, "Wrong size on BattlePartySystem_C_BI_SetDeadParam");
static_assert(offsetof(BattlePartySystem_C_BI_SetDeadParam, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_SetDeadParam::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetDeadParam, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_SetDeadParam::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetNkmStockIn
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_SetNkmStockIn final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_NkmStockIn_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_SetNkmStockIn) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_SetNkmStockIn");
static_assert(sizeof(BattlePartySystem_C_BI_SetNkmStockIn) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_SetNkmStockIn");
static_assert(offsetof(BattlePartySystem_C_BI_SetNkmStockIn, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_SetNkmStockIn::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNkmStockIn, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_SetNkmStockIn::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNkmStockIn, CallFunc_NkmStockIn_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_SetNkmStockIn::CallFunc_NkmStockIn_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsNKM
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsNKM final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNKM_retValue;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsNKM) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsNKM");
static_assert(sizeof(BattlePartySystem_C_BI_IsNKM) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsNKM");
static_assert(offsetof(BattlePartySystem_C_BI_IsNKM, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_IsNKM::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsNKM, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_IsNKM::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsNKM, CallFunc_IsNKM_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsNKM::CallFunc_IsNKM_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetAuraState
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_GetAuraState final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_AURA_TYPE                             RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_AURA_TYPE                             CallFunc_GetAuraState_retValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetAuraState) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetAuraState");
static_assert(sizeof(BattlePartySystem_C_BI_GetAuraState) == 0x000008, "Wrong size on BattlePartySystem_C_BI_GetAuraState");
static_assert(offsetof(BattlePartySystem_C_BI_GetAuraState, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetAuraState::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetAuraState, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetAuraState::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetAuraState, CallFunc_GetAuraState_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_GetAuraState::CallFunc_GetAuraState_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetBadStatus
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetBadStatus final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBadStatus_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetBadStatus) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetBadStatus");
static_assert(sizeof(BattlePartySystem_C_BI_GetBadStatus) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetBadStatus");
static_assert(offsetof(BattlePartySystem_C_BI_GetBadStatus, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetBadStatus::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBadStatus, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetBadStatus::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBadStatus, CallFunc_GetBadStatus_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetBadStatus::CallFunc_GetBadStatus_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetUnitStateMotion
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_GetUnitStateMotion final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_GetUnitStateMotion_retValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetUnitStateMotion) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetUnitStateMotion");
static_assert(sizeof(BattlePartySystem_C_BI_GetUnitStateMotion) == 0x000008, "Wrong size on BattlePartySystem_C_BI_GetUnitStateMotion");
static_assert(offsetof(BattlePartySystem_C_BI_GetUnitStateMotion, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetUnitStateMotion::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetUnitStateMotion, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetUnitStateMotion::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetUnitStateMotion, CallFunc_GetUnitStateMotion_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_GetUnitStateMotion::CallFunc_GetUnitStateMotion_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetName
// 0x0168 (0x0168 - 0x0000)
struct BattlePartySystem_C_BI_GetName final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78CD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RetValue;                                          // 0x0008(0x0018)(Parm, OutParm)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x0020(0x0148)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetName) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetName");
static_assert(sizeof(BattlePartySystem_C_BI_GetName) == 0x000168, "Wrong size on BattlePartySystem_C_BI_GetName");
static_assert(offsetof(BattlePartySystem_C_BI_GetName, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetName::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetName, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetName::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetName, CallFunc_GetBtlCharaData_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_BI_GetName::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetHPMP
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_SetHPMP final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValue;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHP;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_SetHPMP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_SetHPMP");
static_assert(sizeof(BattlePartySystem_C_BI_SetHPMP) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_SetHPMP");
static_assert(offsetof(BattlePartySystem_C_BI_SetHPMP, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_SetHPMP::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetHPMP, InValue) == 0x000004, "Member 'BattlePartySystem_C_BI_SetHPMP::InValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetHPMP, IsHP) == 0x000008, "Member 'BattlePartySystem_C_BI_SetHPMP::IsHP' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetHPMP, RetValue) == 0x000009, "Member 'BattlePartySystem_C_BI_SetHPMP::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlag
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_AddFlag final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PARTY_STAT                              InFlag;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_AddFlag) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_AddFlag");
static_assert(sizeof(BattlePartySystem_C_BI_AddFlag) == 0x000008, "Wrong size on BattlePartySystem_C_BI_AddFlag");
static_assert(offsetof(BattlePartySystem_C_BI_AddFlag, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_AddFlag::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddFlag, InFlag) == 0x000004, "Member 'BattlePartySystem_C_BI_AddFlag::InFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddFlag, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_AddFlag::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_DestroyUnit
// 0x0078 (0x0078 - 0x0000)
struct BattlePartySystem_C_BI_DestroyUnit final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDestroyActor;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78CE[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Lo_UnitAttachedActors;                             // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78CF[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78D0[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D1[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D2[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78D3[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_DestroyUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_DestroyUnit");
static_assert(sizeof(BattlePartySystem_C_BI_DestroyUnit) == 0x000078, "Wrong size on BattlePartySystem_C_BI_DestroyUnit");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_DestroyUnit::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, IsDestroyActor) == 0x000004, "Member 'BattlePartySystem_C_BI_DestroyUnit::IsDestroyActor' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_DestroyUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, Lo_UnitAttachedActors) == 0x000008, "Member 'BattlePartySystem_C_BI_DestroyUnit::Lo_UnitAttachedActors' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_GetPartyUnit_retValue) == 0x000020, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BattlePartySystem_C_BI_DestroyUnit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_GetAttachedActors_OutActors) == 0x000038, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BattlePartySystem_C_BI_DestroyUnit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000058, "Member 'BattlePartySystem_C_BI_DestroyUnit::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BattlePartySystem_C_BI_DestroyUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_Map_Remove_ReturnValue) == 0x000061, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_Map_Find_Value) == 0x000068, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DestroyUnit, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'BattlePartySystem_C_BI_DestroyUnit::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetNewPartyIn
// 0x001C (0x001C - 0x0000)
struct BattlePartySystem_C_BI_SetNewPartyIn final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DevilID;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewEntryIndex;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetNewPartyIn_retValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetNewPartyIn_devilID;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetNewPartyIn_newEntryIndex;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_SetNewPartyIn) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_SetNewPartyIn");
static_assert(sizeof(BattlePartySystem_C_BI_SetNewPartyIn) == 0x00001C, "Wrong size on BattlePartySystem_C_BI_SetNewPartyIn");
static_assert(offsetof(BattlePartySystem_C_BI_SetNewPartyIn, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_SetNewPartyIn::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNewPartyIn, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_SetNewPartyIn::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNewPartyIn, DevilID) == 0x000008, "Member 'BattlePartySystem_C_BI_SetNewPartyIn::DevilID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNewPartyIn, NewEntryIndex) == 0x00000C, "Member 'BattlePartySystem_C_BI_SetNewPartyIn::NewEntryIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNewPartyIn, CallFunc_SetNewPartyIn_retValue) == 0x000010, "Member 'BattlePartySystem_C_BI_SetNewPartyIn::CallFunc_SetNewPartyIn_retValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNewPartyIn, CallFunc_SetNewPartyIn_devilID) == 0x000014, "Member 'BattlePartySystem_C_BI_SetNewPartyIn::CallFunc_SetNewPartyIn_devilID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetNewPartyIn, CallFunc_SetNewPartyIn_newEntryIndex) == 0x000018, "Member 'BattlePartySystem_C_BI_SetNewPartyIn::CallFunc_SetNewPartyIn_newEntryIndex' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetPartyUnit
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_BI_SetPartyUnit final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         DevilID;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               Type;                                              // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReader;                                          // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x001E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78D5[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_SetPartyUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_SetPartyUnit");
static_assert(sizeof(BattlePartySystem_C_BI_SetPartyUnit) == 0x000030, "Wrong size on BattlePartySystem_C_BI_SetPartyUnit");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_SetPartyUnit::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, InUnit) == 0x000008, "Member 'BattlePartySystem_C_BI_SetPartyUnit::InUnit' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, DevilID) == 0x000018, "Member 'BattlePartySystem_C_BI_SetPartyUnit::DevilID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, Type) == 0x00001C, "Member 'BattlePartySystem_C_BI_SetPartyUnit::Type' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, IsReader) == 0x00001D, "Member 'BattlePartySystem_C_BI_SetPartyUnit::IsReader' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, RetValue) == 0x00001E, "Member 'BattlePartySystem_C_BI_SetPartyUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, K2Node_DynamicCast_AsChara_Base) == 0x000020, "Member 'BattlePartySystem_C_BI_SetPartyUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyUnit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattlePartySystem_C_BI_SetPartyUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetPartyHomeTransform
// 0x0050 (0x0050 - 0x0000)
struct BattlePartySystem_C_BI_SetPartyHomeTransform final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D6[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Data;                                              // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_SetPartyHomeTransform) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_SetPartyHomeTransform");
static_assert(sizeof(BattlePartySystem_C_BI_SetPartyHomeTransform) == 0x000050, "Wrong size on BattlePartySystem_C_BI_SetPartyHomeTransform");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyHomeTransform, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_SetPartyHomeTransform::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyHomeTransform, Data) == 0x000010, "Member 'BattlePartySystem_C_BI_SetPartyHomeTransform::Data' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyHomeTransform, RetValue) == 0x000040, "Member 'BattlePartySystem_C_BI_SetPartyHomeTransform::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetVisibilityAll
// 0x0002 (0x0002 - 0x0000)
struct BattlePartySystem_C_BI_UnitSetVisibilityAll final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitSetVisibilityAll) == 0x000001, "Wrong alignment on BattlePartySystem_C_BI_UnitSetVisibilityAll");
static_assert(sizeof(BattlePartySystem_C_BI_UnitSetVisibilityAll) == 0x000002, "Wrong size on BattlePartySystem_C_BI_UnitSetVisibilityAll");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibilityAll, Sw) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitSetVisibilityAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibilityAll, RetValue) == 0x000001, "Member 'BattlePartySystem_C_BI_UnitSetVisibilityAll::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetVisibility
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_UnitSetVisibility final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ParticleInterlock;                                 // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DeactivateParticle;                                // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitSetVisibility) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UnitSetVisibility");
static_assert(sizeof(BattlePartySystem_C_BI_UnitSetVisibility) == 0x000008, "Wrong size on BattlePartySystem_C_BI_UnitSetVisibility");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibility, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitSetVisibility::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibility, Sw) == 0x000004, "Member 'BattlePartySystem_C_BI_UnitSetVisibility::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibility, ParticleInterlock) == 0x000005, "Member 'BattlePartySystem_C_BI_UnitSetVisibility::ParticleInterlock' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibility, DeactivateParticle) == 0x000006, "Member 'BattlePartySystem_C_BI_UnitSetVisibility::DeactivateParticle' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibility, RetValue) == 0x000007, "Member 'BattlePartySystem_C_BI_UnitSetVisibility::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_CanTurnAct
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_CanTurnAct final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanTurnAct_retValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_CanTurnAct) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_CanTurnAct");
static_assert(sizeof(BattlePartySystem_C_BI_CanTurnAct) == 0x000008, "Wrong size on BattlePartySystem_C_BI_CanTurnAct");
static_assert(offsetof(BattlePartySystem_C_BI_CanTurnAct, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_CanTurnAct::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CanTurnAct, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_CanTurnAct::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CanTurnAct, CallFunc_CanTurnAct_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_CanTurnAct::CallFunc_CanTurnAct_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsExist
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsExist final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsExist) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsExist");
static_assert(sizeof(BattlePartySystem_C_BI_IsExist) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsExist");
static_assert(offsetof(BattlePartySystem_C_BI_IsExist, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_IsExist::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsExist, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_IsExist::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsExist, CallFunc_IsExist_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsExist::CallFunc_IsExist_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsHero
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsHero final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHero_retValue;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsHero) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsHero");
static_assert(sizeof(BattlePartySystem_C_BI_IsHero) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsHero");
static_assert(offsetof(BattlePartySystem_C_BI_IsHero, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_IsHero::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsHero, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_IsHero::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsHero, CallFunc_IsHero_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsHero::CallFunc_IsHero_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsDead
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsDead final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsDead) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsDead");
static_assert(sizeof(BattlePartySystem_C_BI_IsDead) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsDead");
static_assert(offsetof(BattlePartySystem_C_BI_IsDead, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_IsDead::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsDead, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_IsDead::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsDead, CallFunc_IsDead_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsDead::CallFunc_IsDead_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetUseableSkillList
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetUseableSkillList final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<bool>                                  CallFunc_GetUseableSkillList_retValue;             // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetUseableSkillList) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetUseableSkillList");
static_assert(sizeof(BattlePartySystem_C_BI_GetUseableSkillList) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetUseableSkillList");
static_assert(offsetof(BattlePartySystem_C_BI_GetUseableSkillList, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetUseableSkillList::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetUseableSkillList, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetUseableSkillList::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetUseableSkillList, CallFunc_GetUseableSkillList_retValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetUseableSkillList::CallFunc_GetUseableSkillList_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_Replace
// 0x0670 (0x0670 - 0x0000)
struct BattlePartySystem_C_BI_Replace final
{
public:
	int32                                         Index_A;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_B;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SUMMON_TYPE                                 Type;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78D8[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_UnitB;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_UnitA;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_IndexB;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_IndexA;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D9[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              Lo_DataB;                                          // 0x0030(0x0320)(Edit, BlueprintVisible)
	struct FBtlParty                              Lo_DataA;                                          // 0x0350(0x0320)(Edit, BlueprintVisible)
};
static_assert(alignof(BattlePartySystem_C_BI_Replace) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_Replace");
static_assert(sizeof(BattlePartySystem_C_BI_Replace) == 0x000670, "Wrong size on BattlePartySystem_C_BI_Replace");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Index_A) == 0x000000, "Member 'BattlePartySystem_C_BI_Replace::Index_A' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Index_B) == 0x000004, "Member 'BattlePartySystem_C_BI_Replace::Index_B' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Type) == 0x000008, "Member 'BattlePartySystem_C_BI_Replace::Type' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, RetValue) == 0x000009, "Member 'BattlePartySystem_C_BI_Replace::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Lo_UnitB) == 0x000010, "Member 'BattlePartySystem_C_BI_Replace::Lo_UnitB' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Lo_UnitA) == 0x000018, "Member 'BattlePartySystem_C_BI_Replace::Lo_UnitA' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Lo_IndexB) == 0x000020, "Member 'BattlePartySystem_C_BI_Replace::Lo_IndexB' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Lo_IndexA) == 0x000024, "Member 'BattlePartySystem_C_BI_Replace::Lo_IndexA' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Lo_DataB) == 0x000030, "Member 'BattlePartySystem_C_BI_Replace::Lo_DataB' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_Replace, Lo_DataA) == 0x000350, "Member 'BattlePartySystem_C_BI_Replace::Lo_DataA' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsStock
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsStock final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStock_retValue;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsStock) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsStock");
static_assert(sizeof(BattlePartySystem_C_BI_IsStock) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsStock");
static_assert(offsetof(BattlePartySystem_C_BI_IsStock, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_IsStock::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsStock, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_IsStock::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsStock, CallFunc_IsStock_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsStock::CallFunc_IsStock_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetSide
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_GetSide final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSide_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetSide) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetSide");
static_assert(sizeof(BattlePartySystem_C_BI_GetSide) == 0x000008, "Wrong size on BattlePartySystem_C_BI_GetSide");
static_assert(offsetof(BattlePartySystem_C_BI_GetSide, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetSide::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSide, Side) == 0x000004, "Member 'BattlePartySystem_C_BI_GetSide::Side' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSide, CallFunc_GetSide_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_GetSide::CallFunc_GetSide_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetSkillCost
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetSkillCost final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetSkillCost) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetSkillCost");
static_assert(sizeof(BattlePartySystem_C_BI_GetSkillCost) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetSkillCost");
static_assert(offsetof(BattlePartySystem_C_BI_GetSkillCost, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetSkillCost::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSkillCost, SkillId) == 0x000004, "Member 'BattlePartySystem_C_BI_GetSkillCost::SkillId' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSkillCost, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetSkillCost::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsNearDeath
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsNearDeath final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNearDeath_retValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsNearDeath) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsNearDeath");
static_assert(sizeof(BattlePartySystem_C_BI_IsNearDeath) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsNearDeath");
static_assert(offsetof(BattlePartySystem_C_BI_IsNearDeath, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_IsNearDeath::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsNearDeath, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_IsNearDeath::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsNearDeath, CallFunc_IsNearDeath_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsNearDeath::CallFunc_IsNearDeath_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyTransform
// 0x0070 (0x0070 - 0x0000)
struct BattlePartySystem_C_BI_GetPartyTransform final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78DA[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RetValue;                                          // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetHomeTransform_ReturnValue;             // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_GetPartyTransform) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_GetPartyTransform");
static_assert(sizeof(BattlePartySystem_C_BI_GetPartyTransform) == 0x000070, "Wrong size on BattlePartySystem_C_BI_GetPartyTransform");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyTransform, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetPartyTransform::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyTransform, RetValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetPartyTransform::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyTransform, CallFunc_GetHomeTransform_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_BI_GetPartyTransform::CallFunc_GetHomeTransform_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_ExpendAction
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_ExpendAction final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForceFinish;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_ExpendAction) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_ExpendAction");
static_assert(sizeof(BattlePartySystem_C_BI_ExpendAction) == 0x000008, "Wrong size on BattlePartySystem_C_BI_ExpendAction");
static_assert(offsetof(BattlePartySystem_C_BI_ExpendAction, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_ExpendAction::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ExpendAction, IsForceFinish) == 0x000004, "Member 'BattlePartySystem_C_BI_ExpendAction::IsForceFinish' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ExpendAction, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_ExpendAction::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UpdateUnitState
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_UpdateUnitState final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoCureEffect;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLecerationDam;                                   // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateLookAt;                                      // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UpdateUnitState) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UpdateUnitState");
static_assert(sizeof(BattlePartySystem_C_BI_UpdateUnitState) == 0x000008, "Wrong size on BattlePartySystem_C_BI_UpdateUnitState");
static_assert(offsetof(BattlePartySystem_C_BI_UpdateUnitState, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_UpdateUnitState::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UpdateUnitState, NoCureEffect) == 0x000004, "Member 'BattlePartySystem_C_BI_UpdateUnitState::NoCureEffect' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UpdateUnitState, IsLecerationDam) == 0x000005, "Member 'BattlePartySystem_C_BI_UpdateUnitState::IsLecerationDam' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UpdateUnitState, UpdateLookAt) == 0x000006, "Member 'BattlePartySystem_C_BI_UpdateUnitState::UpdateLookAt' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UpdateUnitState, RetValue) == 0x000007, "Member 'BattlePartySystem_C_BI_UpdateUnitState::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetHPRatio
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetHPRatio final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHPRatio_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetHPRatio) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetHPRatio");
static_assert(sizeof(BattlePartySystem_C_BI_GetHPRatio) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetHPRatio");
static_assert(offsetof(BattlePartySystem_C_BI_GetHPRatio, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetHPRatio::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetHPRatio, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetHPRatio::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetHPRatio, CallFunc_GetHPRatio_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetHPRatio::CallFunc_GetHPRatio_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetNowHP
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetNowHP final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetNowHP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetNowHP");
static_assert(sizeof(BattlePartySystem_C_BI_GetNowHP) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetNowHP");
static_assert(offsetof(BattlePartySystem_C_BI_GetNowHP, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetNowHP::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNowHP, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetNowHP::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNowHP, CallFunc_GetNowHP_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetNowHP::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetMaxHP
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetMaxHP final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxHP_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetMaxHP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetMaxHP");
static_assert(sizeof(BattlePartySystem_C_BI_GetMaxHP) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetMaxHP");
static_assert(offsetof(BattlePartySystem_C_BI_GetMaxHP, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetMaxHP::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMaxHP, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetMaxHP::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMaxHP, CallFunc_GetMaxHP_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetMaxHP::CallFunc_GetMaxHP_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetNowMP
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetNowMP final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowMP_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetNowMP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetNowMP");
static_assert(sizeof(BattlePartySystem_C_BI_GetNowMP) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetNowMP");
static_assert(offsetof(BattlePartySystem_C_BI_GetNowMP, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetNowMP::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNowMP, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetNowMP::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNowMP, CallFunc_GetNowMP_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetNowMP::CallFunc_GetNowMP_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetMaxMP
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetMaxMP final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxMP_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetMaxMP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetMaxMP");
static_assert(sizeof(BattlePartySystem_C_BI_GetMaxMP) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetMaxMP");
static_assert(offsetof(BattlePartySystem_C_BI_GetMaxMP, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetMaxMP::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMaxMP, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetMaxMP::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMaxMP, CallFunc_GetMaxMP_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetMaxMP::CallFunc_GetMaxMP_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetHeroCharaType
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetHeroCharaType final
{
public:
	E_BTL_CHAR_TYPE                               NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78DB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               CallFunc_GetCharaTypeDetail_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetHeroCharaType) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetHeroCharaType");
static_assert(sizeof(BattlePartySystem_C_BI_GetHeroCharaType) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetHeroCharaType");
static_assert(offsetof(BattlePartySystem_C_BI_GetHeroCharaType, NewParam) == 0x000000, "Member 'BattlePartySystem_C_BI_GetHeroCharaType::NewParam' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetHeroCharaType, CallFunc_GetHeroIndex_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetHeroCharaType::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetHeroCharaType, CallFunc_GetCharaTypeDetail_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetHeroCharaType::CallFunc_GetCharaTypeDetail_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_ConditionMapGetSkillID
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_BI_ConditionMapGetSkillID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CNT                                     Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78DC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConditionMapGetSkillID_retValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_ConditionMapGetSkillID) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_ConditionMapGetSkillID");
static_assert(sizeof(BattlePartySystem_C_BI_ConditionMapGetSkillID) == 0x000010, "Wrong size on BattlePartySystem_C_BI_ConditionMapGetSkillID");
static_assert(offsetof(BattlePartySystem_C_BI_ConditionMapGetSkillID, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_ConditionMapGetSkillID::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ConditionMapGetSkillID, Type) == 0x000004, "Member 'BattlePartySystem_C_BI_ConditionMapGetSkillID::Type' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ConditionMapGetSkillID, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_ConditionMapGetSkillID::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ConditionMapGetSkillID, CallFunc_ConditionMapGetSkillID_retValue) == 0x00000C, "Member 'BattlePartySystem_C_BI_ConditionMapGetSkillID::CallFunc_ConditionMapGetSkillID_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_ConditionMapIsExist
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_ConditionMapIsExist final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ConditionMapIsExist_retValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_ConditionMapIsExist) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_ConditionMapIsExist");
static_assert(sizeof(BattlePartySystem_C_BI_ConditionMapIsExist) == 0x000008, "Wrong size on BattlePartySystem_C_BI_ConditionMapIsExist");
static_assert(offsetof(BattlePartySystem_C_BI_ConditionMapIsExist, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_ConditionMapIsExist::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ConditionMapIsExist, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_ConditionMapIsExist::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ConditionMapIsExist, CallFunc_ConditionMapIsExist_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_ConditionMapIsExist::CallFunc_ConditionMapIsExist_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UpdateEnemyInfo
// 0x0001 (0x0001 - 0x0000)
struct BattlePartySystem_C_BI_UpdateEnemyInfo final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UpdateEnemyInfo) == 0x000001, "Wrong alignment on BattlePartySystem_C_BI_UpdateEnemyInfo");
static_assert(sizeof(BattlePartySystem_C_BI_UpdateEnemyInfo) == 0x000001, "Wrong size on BattlePartySystem_C_BI_UpdateEnemyInfo");
static_assert(offsetof(BattlePartySystem_C_BI_UpdateEnemyInfo, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_UpdateEnemyInfo::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDamageHP
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDamageHP final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageHP;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AinmTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam3;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDamageHP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDamageHP");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDamageHP) == 0x000010, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDamageHP");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDamageHP, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDamageHP::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDamageHP, DamageHP) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDamageHP::DamageHP' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDamageHP, AinmTime) == 0x000008, "Member 'BattlePartySystem_C_BI_EnemyInfoDamageHP::AinmTime' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDamageHP, NewParam3) == 0x00000C, "Member 'BattlePartySystem_C_BI_EnemyInfoDamageHP::NewParam3' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchHPBarOne
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForDamage;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use2Line;                                          // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUseSkipTarget;                                   // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne, Sw) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne, ForDamage) == 0x000005, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne::ForDamage' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne, Use2Line) == 0x000006, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne::Use2Line' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne, IsUseSkipTarget) == 0x000007, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne::IsUseSkipTarget' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_CheckFlag
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_CheckFlag final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PARTY_STAT                              Flag;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_CheckFlag) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_CheckFlag");
static_assert(sizeof(BattlePartySystem_C_BI_CheckFlag) == 0x000008, "Wrong size on BattlePartySystem_C_BI_CheckFlag");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_CheckFlag::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag, Flag) == 0x000004, "Member 'BattlePartySystem_C_BI_CheckFlag::Flag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_CheckFlag::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag, CallFunc_CheckFlag_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_BI_CheckFlag::CallFunc_CheckFlag_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetComboHitCount
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetComboHitCount final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComboHitCount_retValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetComboHitCount) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetComboHitCount");
static_assert(sizeof(BattlePartySystem_C_BI_GetComboHitCount) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetComboHitCount");
static_assert(offsetof(BattlePartySystem_C_BI_GetComboHitCount, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetComboHitCount::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetComboHitCount, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetComboHitCount::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetComboHitCount, CallFunc_GetComboHitCount_retValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetComboHitCount::CallFunc_GetComboHitCount_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawAddCombo_LOne
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne) == 0x000008, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchCombo_LOne
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne) == 0x000008, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne, Sw) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawUpdateCombo
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo) == 0x000008, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchCombo_SOne
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne) == 0x000008, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne, Sw) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetActOrder
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetActOrder final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActOrder4Panel_retValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetActOrder) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetActOrder");
static_assert(sizeof(BattlePartySystem_C_BI_GetActOrder) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetActOrder");
static_assert(offsetof(BattlePartySystem_C_BI_GetActOrder, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetActOrder::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetActOrder, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetActOrder::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetActOrder, CallFunc_GetActOrder4Panel_retValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetActOrder::CallFunc_GetActOrder4Panel_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetUseableSubSkillList
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetUseableSubSkillList final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78DD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<bool>                                  CallFunc_GetUseableSubSkillList_retValue;          // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetUseableSubSkillList) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetUseableSubSkillList");
static_assert(sizeof(BattlePartySystem_C_BI_GetUseableSubSkillList) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetUseableSubSkillList");
static_assert(offsetof(BattlePartySystem_C_BI_GetUseableSubSkillList, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetUseableSubSkillList::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetUseableSubSkillList, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetUseableSubSkillList::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetUseableSubSkillList, CallFunc_GetUseableSubSkillList_retValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetUseableSubSkillList::CallFunc_GetUseableSubSkillList_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_CheckFlag2
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_CheckFlag2 final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PARTY_STAT2                             Flag;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_CheckFlag2) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_CheckFlag2");
static_assert(sizeof(BattlePartySystem_C_BI_CheckFlag2) == 0x000008, "Wrong size on BattlePartySystem_C_BI_CheckFlag2");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag2, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_CheckFlag2::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag2, Flag) == 0x000004, "Member 'BattlePartySystem_C_BI_CheckFlag2::Flag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag2, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_CheckFlag2::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckFlag2, CallFunc_CheckFlag2_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_BI_CheckFlag2::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawAutoHideOneAll
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll, DeltaTime) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawAttachToCamera
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attach;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera) == 0x000008, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera, Attach) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera::Attach' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera, RetValue) == 0x000005, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetHeroUnit
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_BI_GetHeroUnit final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetHeroUnit_retValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetHeroUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetHeroUnit");
static_assert(sizeof(BattlePartySystem_C_BI_GetHeroUnit) == 0x000018, "Wrong size on BattlePartySystem_C_BI_GetHeroUnit");
static_assert(offsetof(BattlePartySystem_C_BI_GetHeroUnit, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_GetHeroUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetHeroUnit, CallFunc_GetHeroUnit_retValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetHeroUnit::CallFunc_GetHeroUnit_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetNextPlusCombo
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetNextPlusCombo final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPlusCombo_retValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetNextPlusCombo) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetNextPlusCombo");
static_assert(sizeof(BattlePartySystem_C_BI_GetNextPlusCombo) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetNextPlusCombo");
static_assert(offsetof(BattlePartySystem_C_BI_GetNextPlusCombo, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetNextPlusCombo::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNextPlusCombo, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetNextPlusCombo::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNextPlusCombo, CallFunc_GetNextPlusCombo_retValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetNextPlusCombo::CallFunc_GetNextPlusCombo_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_SetPartyBlank
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_SetPartyBlank final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_SetPartyBlank) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_SetPartyBlank");
static_assert(sizeof(BattlePartySystem_C_BI_SetPartyBlank) == 0x000008, "Wrong size on BattlePartySystem_C_BI_SetPartyBlank");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyBlank, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_SetPartyBlank::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_SetPartyBlank, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_SetPartyBlank::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetActListForRelativeScale
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetActListForRelativeScale final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78DE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetActListForRelativeScale_retValue;      // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetActListForRelativeScale) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetActListForRelativeScale");
static_assert(sizeof(BattlePartySystem_C_BI_GetActListForRelativeScale) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetActListForRelativeScale");
static_assert(offsetof(BattlePartySystem_C_BI_GetActListForRelativeScale, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetActListForRelativeScale::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetActListForRelativeScale, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetActListForRelativeScale::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetActListForRelativeScale, CallFunc_GetActListForRelativeScale_retValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetActListForRelativeScale::CallFunc_GetActListForRelativeScale_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoUpdatePositionHPBar
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar) == 0x000008, "Wrong size on BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitLookAt
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_BI_UnitLookAt final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam1;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitLookAt) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UnitLookAt");
static_assert(sizeof(BattlePartySystem_C_BI_UnitLookAt) == 0x000014, "Wrong size on BattlePartySystem_C_BI_UnitLookAt");
static_assert(offsetof(BattlePartySystem_C_BI_UnitLookAt, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitLookAt::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitLookAt, Location) == 0x000004, "Member 'BattlePartySystem_C_BI_UnitLookAt::Location' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitLookAt, NewParam1) == 0x000010, "Member 'BattlePartySystem_C_BI_UnitLookAt::NewParam1' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_LookAtAve
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_LookAtAve final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_LookAtAve) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_LookAtAve");
static_assert(sizeof(BattlePartySystem_C_BI_LookAtAve) == 0x000008, "Wrong size on BattlePartySystem_C_BI_LookAtAve");
static_assert(offsetof(BattlePartySystem_C_BI_LookAtAve, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_LookAtAve::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_LookAtAve, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_LookAtAve::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_BreakLookAt
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_BreakLookAt final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_BreakLookAt) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_BreakLookAt");
static_assert(sizeof(BattlePartySystem_C_BI_BreakLookAt) == 0x000008, "Wrong size on BattlePartySystem_C_BI_BreakLookAt");
static_assert(offsetof(BattlePartySystem_C_BI_BreakLookAt, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_BreakLookAt::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_BreakLookAt, RetValue) == 0x000004, "Member 'BattlePartySystem_C_BI_BreakLookAt::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetSideAveLocation
// 0x0140 (0x0140 - 0x0000)
struct BattlePartySystem_C_BI_GetSideAveLocation final
{
public:
	TMap<class FString, struct FVector>           Playerside;                                        // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FString, struct FVector>           EnemySide;                                         // 0x0050(0x0050)(Parm, OutParm)
	TMap<class FString, struct FVector>           CallFunc_GetSideAveLocation_PlayerSide;            // 0x00A0(0x0050)()
	TMap<class FString, struct FVector>           CallFunc_GetSideAveLocation_EnemySide;             // 0x00F0(0x0050)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetSideAveLocation) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetSideAveLocation");
static_assert(sizeof(BattlePartySystem_C_BI_GetSideAveLocation) == 0x000140, "Wrong size on BattlePartySystem_C_BI_GetSideAveLocation");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideAveLocation, Playerside) == 0x000000, "Member 'BattlePartySystem_C_BI_GetSideAveLocation::Playerside' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideAveLocation, EnemySide) == 0x000050, "Member 'BattlePartySystem_C_BI_GetSideAveLocation::EnemySide' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideAveLocation, CallFunc_GetSideAveLocation_PlayerSide) == 0x0000A0, "Member 'BattlePartySystem_C_BI_GetSideAveLocation::CallFunc_GetSideAveLocation_PlayerSide' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideAveLocation, CallFunc_GetSideAveLocation_EnemySide) == 0x0000F0, "Member 'BattlePartySystem_C_BI_GetSideAveLocation::CallFunc_GetSideAveLocation_EnemySide' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetShounenUnit
// 0x0018 (0x0018 - 0x0000)
struct BattlePartySystem_C_BI_GetShounenUnit final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetShounenUnit_retValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetShounenUnit) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetShounenUnit");
static_assert(sizeof(BattlePartySystem_C_BI_GetShounenUnit) == 0x000018, "Wrong size on BattlePartySystem_C_BI_GetShounenUnit");
static_assert(offsetof(BattlePartySystem_C_BI_GetShounenUnit, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_GetShounenUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetShounenUnit, CallFunc_GetShounenUnit_retValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetShounenUnit::CallFunc_GetShounenUnit_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetVisibilitySideAll
// 0x0003 (0x0003 - 0x0000)
struct BattlePartySystem_C_BI_UnitSetVisibilitySideAll final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitSetVisibilitySideAll) == 0x000001, "Wrong alignment on BattlePartySystem_C_BI_UnitSetVisibilitySideAll");
static_assert(sizeof(BattlePartySystem_C_BI_UnitSetVisibilitySideAll) == 0x000003, "Wrong size on BattlePartySystem_C_BI_UnitSetVisibilitySideAll");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibilitySideAll, Sw) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitSetVisibilitySideAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibilitySideAll, IsPlayer) == 0x000001, "Member 'BattlePartySystem_C_BI_UnitSetVisibilitySideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetVisibilitySideAll, RetValue) == 0x000002, "Member 'BattlePartySystem_C_BI_UnitSetVisibilitySideAll::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_AddIsInfieldList
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_AddIsInfieldList final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78DF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_AddIsInfieldList) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_AddIsInfieldList");
static_assert(sizeof(BattlePartySystem_C_BI_AddIsInfieldList) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_AddIsInfieldList");
static_assert(offsetof(BattlePartySystem_C_BI_AddIsInfieldList, Side) == 0x000000, "Member 'BattlePartySystem_C_BI_AddIsInfieldList::Side' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddIsInfieldList, PartyIndex) == 0x000004, "Member 'BattlePartySystem_C_BI_AddIsInfieldList::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddIsInfieldList, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_AddIsInfieldList::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetSideActList
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetSideActList final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetSideActList_retValue;                  // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetSideActList) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetSideActList");
static_assert(sizeof(BattlePartySystem_C_BI_GetSideActList) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetSideActList");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideActList, Side) == 0x000000, "Member 'BattlePartySystem_C_BI_GetSideActList::Side' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideActList, RetValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetSideActList::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideActList, CallFunc_GetSideActList_retValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetSideActList::CallFunc_GetSideActList_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetActListAll
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_BI_GetActListAll final
{
public:
	TArray<int32>                                 RetValue;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetActListAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetActListAll");
static_assert(sizeof(BattlePartySystem_C_BI_GetActListAll) == 0x000020, "Wrong size on BattlePartySystem_C_BI_GetActListAll");
static_assert(offsetof(BattlePartySystem_C_BI_GetActListAll, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_GetActListAll::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetActListAll, CallFunc_GetActListAll_retValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetActListAll::CallFunc_GetActListAll_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitGetVisibility
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_UnitGetVisibility final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnitGetVisibility_IsVisible;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitGetVisibility) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UnitGetVisibility");
static_assert(sizeof(BattlePartySystem_C_BI_UnitGetVisibility) == 0x000008, "Wrong size on BattlePartySystem_C_BI_UnitGetVisibility");
static_assert(offsetof(BattlePartySystem_C_BI_UnitGetVisibility, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitGetVisibility::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitGetVisibility, IsVisible) == 0x000004, "Member 'BattlePartySystem_C_BI_UnitGetVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitGetVisibility, CallFunc_UnitGetVisibility_IsVisible) == 0x000005, "Member 'BattlePartySystem_C_BI_UnitGetVisibility::CallFunc_UnitGetVisibility_IsVisible' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetCommandTargetLocation
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetCommandTargetLocation final
{
public:
	struct FVector                                RetValue;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetCommandTargetLocation) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetCommandTargetLocation");
static_assert(sizeof(BattlePartySystem_C_BI_GetCommandTargetLocation) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetCommandTargetLocation");
static_assert(offsetof(BattlePartySystem_C_BI_GetCommandTargetLocation, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_GetCommandTargetLocation::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_BeHome
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_BeHome final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_BeHome) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_BeHome");
static_assert(sizeof(BattlePartySystem_C_BI_BeHome) == 0x000008, "Wrong size on BattlePartySystem_C_BI_BeHome");
static_assert(offsetof(BattlePartySystem_C_BI_BeHome, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_BeHome::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_BeHome, NoUse) == 0x000004, "Member 'BattlePartySystem_C_BI_BeHome::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_BeHomeSideAll
// 0x0002 (0x0002 - 0x0000)
struct BattlePartySystem_C_BI_BeHomeSideAll final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_BeHomeSideAll) == 0x000001, "Wrong alignment on BattlePartySystem_C_BI_BeHomeSideAll");
static_assert(sizeof(BattlePartySystem_C_BI_BeHomeSideAll) == 0x000002, "Wrong size on BattlePartySystem_C_BI_BeHomeSideAll");
static_assert(offsetof(BattlePartySystem_C_BI_BeHomeSideAll, IsPlayer) == 0x000000, "Member 'BattlePartySystem_C_BI_BeHomeSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_BeHomeSideAll, NoUse) == 0x000001, "Member 'BattlePartySystem_C_BI_BeHomeSideAll::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetDitherValueSideAll
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_UnitSetDitherValueSideAll final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadeOut;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitSetDitherValueSideAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UnitSetDitherValueSideAll");
static_assert(sizeof(BattlePartySystem_C_BI_UnitSetDitherValueSideAll) == 0x000008, "Wrong size on BattlePartySystem_C_BI_UnitSetDitherValueSideAll");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetDitherValueSideAll, Time) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitSetDitherValueSideAll::Time' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetDitherValueSideAll, IsFadeOut) == 0x000004, "Member 'BattlePartySystem_C_BI_UnitSetDitherValueSideAll::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetDitherValueSideAll, IsPlayer) == 0x000005, "Member 'BattlePartySystem_C_BI_UnitSetDitherValueSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetDitherValueSideAll, NoUse) == 0x000006, "Member 'BattlePartySystem_C_BI_UnitSetDitherValueSideAll::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetCommandBoxTransform
// 0x0030 (0x0030 - 0x0000)
struct BattlePartySystem_C_BI_GetCommandBoxTransform final
{
public:
	struct FTransform                             RetValue;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_GetCommandBoxTransform) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_GetCommandBoxTransform");
static_assert(sizeof(BattlePartySystem_C_BI_GetCommandBoxTransform) == 0x000030, "Wrong size on BattlePartySystem_C_BI_GetCommandBoxTransform");
static_assert(offsetof(BattlePartySystem_C_BI_GetCommandBoxTransform, RetValue) == 0x000000, "Member 'BattlePartySystem_C_BI_GetCommandBoxTransform::RetValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsUplifting
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsUplifting final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUplifting_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsUplifting) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsUplifting");
static_assert(sizeof(BattlePartySystem_C_BI_IsUplifting) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsUplifting");
static_assert(offsetof(BattlePartySystem_C_BI_IsUplifting, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsUplifting::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsUplifting, Ret) == 0x000004, "Member 'BattlePartySystem_C_BI_IsUplifting::Ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsUplifting, CallFunc_IsUplifting_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsUplifting::CallFunc_IsUplifting_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetHeroIndex
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_GetHeroIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetHeroIndex) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetHeroIndex");
static_assert(sizeof(BattlePartySystem_C_BI_GetHeroIndex) == 0x000008, "Wrong size on BattlePartySystem_C_BI_GetHeroIndex");
static_assert(offsetof(BattlePartySystem_C_BI_GetHeroIndex, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_GetHeroIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetHeroIndex, CallFunc_GetHeroIndex_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetHeroIndex::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetLOD
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_UnitSetLOD final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LOD;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitSetLOD) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UnitSetLOD");
static_assert(sizeof(BattlePartySystem_C_BI_UnitSetLOD) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_UnitSetLOD");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetLOD, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitSetLOD::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetLOD, LOD) == 0x000004, "Member 'BattlePartySystem_C_BI_UnitSetLOD::LOD' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetLOD, NoUse) == 0x000008, "Member 'BattlePartySystem_C_BI_UnitSetLOD::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetLODSideAll
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_UnitSetLODSideAll final
{
public:
	int32                                         LOD;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayer;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UnitSetLODSideAll) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UnitSetLODSideAll");
static_assert(sizeof(BattlePartySystem_C_BI_UnitSetLODSideAll) == 0x000008, "Wrong size on BattlePartySystem_C_BI_UnitSetLODSideAll");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetLODSideAll, LOD) == 0x000000, "Member 'BattlePartySystem_C_BI_UnitSetLODSideAll::LOD' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetLODSideAll, IsPlayer) == 0x000004, "Member 'BattlePartySystem_C_BI_UnitSetLODSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UnitSetLODSideAll, NoUse) == 0x000005, "Member 'BattlePartySystem_C_BI_UnitSetLODSideAll::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlag2
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_AddFlag2 final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PARTY_STAT2                             Flag;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_AddFlag2) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_AddFlag2");
static_assert(sizeof(BattlePartySystem_C_BI_AddFlag2) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_AddFlag2");
static_assert(offsetof(BattlePartySystem_C_BI_AddFlag2, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_AddFlag2::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddFlag2, Flag) == 0x000004, "Member 'BattlePartySystem_C_BI_AddFlag2::Flag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_AddFlag2, Ret) == 0x000008, "Member 'BattlePartySystem_C_BI_AddFlag2::Ret' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlag2
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_DelFlag2 final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PARTY_STAT2                             Flag;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_DelFlag2) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_DelFlag2");
static_assert(sizeof(BattlePartySystem_C_BI_DelFlag2) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_DelFlag2");
static_assert(offsetof(BattlePartySystem_C_BI_DelFlag2, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_DelFlag2::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DelFlag2, Flag) == 0x000004, "Member 'BattlePartySystem_C_BI_DelFlag2::Flag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DelFlag2, Ret) == 0x000008, "Member 'BattlePartySystem_C_BI_DelFlag2::Ret' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetSideIsTargetList
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetSideIsTargetList final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 List;                                              // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetSideIsTargetList) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetSideIsTargetList");
static_assert(sizeof(BattlePartySystem_C_BI_GetSideIsTargetList) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetSideIsTargetList");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideIsTargetList, Side) == 0x000000, "Member 'BattlePartySystem_C_BI_GetSideIsTargetList::Side' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideIsTargetList, List) == 0x000008, "Member 'BattlePartySystem_C_BI_GetSideIsTargetList::List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetSideIsTargetList, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetSideIsTargetList::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsDown
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsDown final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsDown;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDown_ReturnValue;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsDown) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsDown");
static_assert(sizeof(BattlePartySystem_C_BI_IsDown) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsDown");
static_assert(offsetof(BattlePartySystem_C_BI_IsDown, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsDown::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsDown, Param_IsDown) == 0x000004, "Member 'BattlePartySystem_C_BI_IsDown::Param_IsDown' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsDown, CallFunc_IsDown_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsDown::CallFunc_IsDown_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_DelIsInFieldList
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_DelIsInFieldList final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_DelIsInFieldList) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_DelIsInFieldList");
static_assert(sizeof(BattlePartySystem_C_BI_DelIsInFieldList) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_DelIsInFieldList");
static_assert(offsetof(BattlePartySystem_C_BI_DelIsInFieldList, Side) == 0x000000, "Member 'BattlePartySystem_C_BI_DelIsInFieldList::Side' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DelIsInFieldList, PartyIndex) == 0x000004, "Member 'BattlePartySystem_C_BI_DelIsInFieldList::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DelIsInFieldList, NoUse) == 0x000008, "Member 'BattlePartySystem_C_BI_DelIsInFieldList::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_ModeChange
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_ModeChange final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterDevilID;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ModeChange_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_ModeChange) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_ModeChange");
static_assert(sizeof(BattlePartySystem_C_BI_ModeChange) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_ModeChange");
static_assert(offsetof(BattlePartySystem_C_BI_ModeChange, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_ModeChange::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ModeChange, AfterDevilID) == 0x000004, "Member 'BattlePartySystem_C_BI_ModeChange::AfterDevilID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ModeChange, Ret) == 0x000008, "Member 'BattlePartySystem_C_BI_ModeChange::Ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_ModeChange, CallFunc_ModeChange_ReturnValue) == 0x000009, "Member 'BattlePartySystem_C_BI_ModeChange::CallFunc_ModeChange_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetEnemyLeaderIndex
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_GetEnemyLeaderIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyLeaderIndex_retValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetEnemyLeaderIndex) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetEnemyLeaderIndex");
static_assert(sizeof(BattlePartySystem_C_BI_GetEnemyLeaderIndex) == 0x000008, "Wrong size on BattlePartySystem_C_BI_GetEnemyLeaderIndex");
static_assert(offsetof(BattlePartySystem_C_BI_GetEnemyLeaderIndex, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetEnemyLeaderIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetEnemyLeaderIndex, CallFunc_GetEnemyLeaderIndex_retValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetEnemyLeaderIndex::CallFunc_GetEnemyLeaderIndex_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlag
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_DelFlag final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PARTY_STAT                              Flag;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E5[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NoUse;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_DelFlag) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_DelFlag");
static_assert(sizeof(BattlePartySystem_C_BI_DelFlag) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_DelFlag");
static_assert(offsetof(BattlePartySystem_C_BI_DelFlag, Param_Index) == 0x000000, "Member 'BattlePartySystem_C_BI_DelFlag::Param_Index' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DelFlag, Flag) == 0x000004, "Member 'BattlePartySystem_C_BI_DelFlag::Flag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_DelFlag, NoUse) == 0x000008, "Member 'BattlePartySystem_C_BI_DelFlag::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchAishouNoticeAll
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      DefenceAishou;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsShowAll;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sw;                                                // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForEnemy;                                          // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForFriend;                                         // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPenetration;                                     // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x001E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll) == 0x000020, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, ActorIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, DefenceAishou) == 0x000008, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::DefenceAishou' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, IsShowAll) == 0x000018, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::IsShowAll' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, Sw) == 0x000019, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, ForEnemy) == 0x00001A, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::ForEnemy' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, ForFriend) == 0x00001B, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::ForFriend' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, Immediately) == 0x00001C, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::Immediately' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, IsPenetration) == 0x00001D, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::IsPenetration' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll, NoUse) == 0x00001E, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetEnableFirstPartyIndex
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_GetEnableFirstPartyIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnableFirstPartyIndex_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetEnableFirstPartyIndex) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetEnableFirstPartyIndex");
static_assert(sizeof(BattlePartySystem_C_BI_GetEnableFirstPartyIndex) == 0x000008, "Wrong size on BattlePartySystem_C_BI_GetEnableFirstPartyIndex");
static_assert(offsetof(BattlePartySystem_C_BI_GetEnableFirstPartyIndex, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetEnableFirstPartyIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetEnableFirstPartyIndex, CallFunc_GetEnableFirstPartyIndex_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetEnableFirstPartyIndex::CallFunc_GetEnableFirstPartyIndex_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetBattlePartyIndexByNkmIndex
// 0x0014 (0x0014 - 0x0000)
struct BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex final
{
public:
	int32                                         InNkmIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPlayerIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InType;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutPartyIndex;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattlePartyIndexByNkmIndex_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex");
static_assert(sizeof(BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex) == 0x000014, "Wrong size on BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex, InNkmIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex::InNkmIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex, InPlayerIndex) == 0x000004, "Member 'BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex::InPlayerIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex, InType) == 0x000008, "Member 'BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex::InType' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex, OutPartyIndex) == 0x00000C, "Member 'BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex::OutPartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex, CallFunc_GetBattlePartyIndexByNkmIndex_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex::CallFunc_GetBattlePartyIndexByNkmIndex_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsExistInParty
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsExistInParty final
{
public:
	int32                                         CharaID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsExist;                                     // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistInParty_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsExistInParty) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsExistInParty");
static_assert(sizeof(BattlePartySystem_C_BI_IsExistInParty) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsExistInParty");
static_assert(offsetof(BattlePartySystem_C_BI_IsExistInParty, CharaID) == 0x000000, "Member 'BattlePartySystem_C_BI_IsExistInParty::CharaID' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsExistInParty, Param_IsExist) == 0x000004, "Member 'BattlePartySystem_C_BI_IsExistInParty::Param_IsExist' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsExistInParty, CallFunc_IsExistInParty_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsExistInParty::CallFunc_IsExistInParty_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetBattleEnemyNumber
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_GetBattleEnemyNumber final
{
public:
	int32                                         OutNumber;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleEnemyNumber_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetBattleEnemyNumber) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetBattleEnemyNumber");
static_assert(sizeof(BattlePartySystem_C_BI_GetBattleEnemyNumber) == 0x000008, "Wrong size on BattlePartySystem_C_BI_GetBattleEnemyNumber");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattleEnemyNumber, OutNumber) == 0x000000, "Member 'BattlePartySystem_C_BI_GetBattleEnemyNumber::OutNumber' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattleEnemyNumber, CallFunc_GetBattleEnemyNumber_ReturnValue) == 0x000004, "Member 'BattlePartySystem_C_BI_GetBattleEnemyNumber::CallFunc_GetBattleEnemyNumber_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetBattleEnemyPartyIndexByIndex
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutPartyIndex;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleEnemyPartyIndexByIndex_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex");
static_assert(sizeof(BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex, InIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex, OutPartyIndex) == 0x000004, "Member 'BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex::OutPartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex, CallFunc_GetBattleEnemyPartyIndexByIndex_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex::CallFunc_GetBattleEnemyPartyIndexByIndex_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoSetEnableUpdatePosition
// 0x0038 (0x0038 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78E7[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABattleTargetDevilInfoActor_C*>  CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleTargetDevilInfoActor_C*          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition) == 0x000038, "Wrong size on BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, Enable) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::Enable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, NoUse) == 0x000001, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::NoUse' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, CallFunc_Map_Values_Values) == 0x000010, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetNameAddID
// 0x01B8 (0x01B8 - 0x0000)
struct BattlePartySystem_C_BI_GetNameAddID final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78E9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Param_Name;                                        // 0x0008(0x0018)(Parm, OutParm)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x0020(0x0148)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78EA[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01A0(0x0018)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetNameAddID) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetNameAddID");
static_assert(sizeof(BattlePartySystem_C_BI_GetNameAddID) == 0x0001B8, "Wrong size on BattlePartySystem_C_BI_GetNameAddID");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetNameAddID::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, Param_Name) == 0x000008, "Member 'BattlePartySystem_C_BI_GetNameAddID::Param_Name' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, CallFunc_GetBtlCharaData_ReturnValue) == 0x000020, "Member 'BattlePartySystem_C_BI_GetNameAddID::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, CallFunc_Conv_TextToString_ReturnValue) == 0x000168, "Member 'BattlePartySystem_C_BI_GetNameAddID::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BattlePartySystem_C_BI_GetNameAddID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, CallFunc_Conv_IntToString_ReturnValue) == 0x000180, "Member 'BattlePartySystem_C_BI_GetNameAddID::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, CallFunc_Concat_StrStr_ReturnValue) == 0x000190, "Member 'BattlePartySystem_C_BI_GetNameAddID::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetNameAddID, CallFunc_Conv_StringToText_ReturnValue) == 0x0001A0, "Member 'BattlePartySystem_C_BI_GetNameAddID::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetAllIsInFieldPartyData
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetAllIsInFieldPartyData final
{
public:
	bool                                          IsTargetOnly;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78EB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlParty>                      PartyData;                                         // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FBtlParty>                      CallFunc_GetAllIsInFieldPartyData_ReturnValue;     // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetAllIsInFieldPartyData) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetAllIsInFieldPartyData");
static_assert(sizeof(BattlePartySystem_C_BI_GetAllIsInFieldPartyData) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetAllIsInFieldPartyData");
static_assert(offsetof(BattlePartySystem_C_BI_GetAllIsInFieldPartyData, IsTargetOnly) == 0x000000, "Member 'BattlePartySystem_C_BI_GetAllIsInFieldPartyData::IsTargetOnly' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetAllIsInFieldPartyData, PartyData) == 0x000008, "Member 'BattlePartySystem_C_BI_GetAllIsInFieldPartyData::PartyData' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetAllIsInFieldPartyData, CallFunc_GetAllIsInFieldPartyData_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetAllIsInFieldPartyData::CallFunc_GetAllIsInFieldPartyData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetAllIsTargetList
// 0x0020 (0x0020 - 0x0000)
struct BattlePartySystem_C_BI_GetAllIsTargetList final
{
public:
	TArray<int32>                                 List;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetAllIsTargetList_ReturnValue;           // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetAllIsTargetList) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetAllIsTargetList");
static_assert(sizeof(BattlePartySystem_C_BI_GetAllIsTargetList) == 0x000020, "Wrong size on BattlePartySystem_C_BI_GetAllIsTargetList");
static_assert(offsetof(BattlePartySystem_C_BI_GetAllIsTargetList, List) == 0x000000, "Member 'BattlePartySystem_C_BI_GetAllIsTargetList::List' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetAllIsTargetList, CallFunc_GetAllIsTargetList_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetAllIsTargetList::CallFunc_GetAllIsTargetList_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchPartyAll
// 0x0002 (0x0002 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll) == 0x000001, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll) == 0x000002, "Wrong size on BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll, Sw) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll::Sw' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll, NoUse) == 0x000001, "Member 'BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoClearAll
// 0x0001 (0x0001 - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoClearAll final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoClearAll) == 0x000001, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoClearAll");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoClearAll) == 0x000001, "Wrong size on BattlePartySystem_C_BI_EnemyInfoClearAll");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoClearAll, NoUse) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoClearAll::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsDeadDamage
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_IsDeadDamage final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fatality;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeadDamage_retValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsDeadDamage) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsDeadDamage");
static_assert(sizeof(BattlePartySystem_C_BI_IsDeadDamage) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_IsDeadDamage");
static_assert(offsetof(BattlePartySystem_C_BI_IsDeadDamage, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsDeadDamage::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsDeadDamage, Damage) == 0x000004, "Member 'BattlePartySystem_C_BI_IsDeadDamage::Damage' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsDeadDamage, Fatality) == 0x000008, "Member 'BattlePartySystem_C_BI_IsDeadDamage::Fatality' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsDeadDamage, CallFunc_IsDeadDamage_retValue) == 0x000009, "Member 'BattlePartySystem_C_BI_IsDeadDamage::CallFunc_IsDeadDamage_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_CheckBossFlag
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_CheckBossFlag final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_BOSS_FLAG                               BossFlag;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTrue;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBossFlag_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_CheckBossFlag) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_CheckBossFlag");
static_assert(sizeof(BattlePartySystem_C_BI_CheckBossFlag) == 0x000008, "Wrong size on BattlePartySystem_C_BI_CheckBossFlag");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBossFlag, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_CheckBossFlag::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBossFlag, BossFlag) == 0x000004, "Member 'BattlePartySystem_C_BI_CheckBossFlag::BossFlag' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBossFlag, IsTrue) == 0x000005, "Member 'BattlePartySystem_C_BI_CheckBossFlag::IsTrue' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckBossFlag, CallFunc_CheckBossFlag_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_BI_CheckBossFlag::CallFunc_CheckBossFlag_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyHomeTransform
// 0x0070 (0x0070 - 0x0000)
struct BattlePartySystem_C_BI_GetPartyHomeTransform final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78EC[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Home;                                              // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetHomeTransform_ReturnValue;             // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_GetPartyHomeTransform) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_GetPartyHomeTransform");
static_assert(sizeof(BattlePartySystem_C_BI_GetPartyHomeTransform) == 0x000070, "Wrong size on BattlePartySystem_C_BI_GetPartyHomeTransform");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyHomeTransform, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetPartyHomeTransform::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyHomeTransform, Home) == 0x000010, "Member 'BattlePartySystem_C_BI_GetPartyHomeTransform::Home' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPartyHomeTransform, CallFunc_GetHomeTransform_ReturnValue) == 0x000040, "Member 'BattlePartySystem_C_BI_GetPartyHomeTransform::CallFunc_GetHomeTransform_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsAlreadyDead
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsAlreadyDead final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsDead;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlreadyDead_retValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsAlreadyDead) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsAlreadyDead");
static_assert(sizeof(BattlePartySystem_C_BI_IsAlreadyDead) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsAlreadyDead");
static_assert(offsetof(BattlePartySystem_C_BI_IsAlreadyDead, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsAlreadyDead::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsAlreadyDead, Param_IsDead) == 0x000004, "Member 'BattlePartySystem_C_BI_IsAlreadyDead::Param_IsDead' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsAlreadyDead, CallFunc_IsAlreadyDead_retValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsAlreadyDead::CallFunc_IsAlreadyDead_retValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_CheckMitama
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_CheckMitama final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMitama_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_CheckMitama) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_CheckMitama");
static_assert(sizeof(BattlePartySystem_C_BI_CheckMitama) == 0x000008, "Wrong size on BattlePartySystem_C_BI_CheckMitama");
static_assert(offsetof(BattlePartySystem_C_BI_CheckMitama, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_CheckMitama::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckMitama, Ret) == 0x000004, "Member 'BattlePartySystem_C_BI_CheckMitama::Ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckMitama, CallFunc_CheckMitama_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_CheckMitama::CallFunc_CheckMitama_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetMitamaAnalyzeData
// 0x00A8 (0x00A8 - 0x0000)
struct BattlePartySystem_C_BI_GetMitamaAnalyzeData final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78ED[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnalyzeData                           AnalyzeData;                                       // 0x0008(0x0050)(Parm, OutParm)
	struct FAnalyzeData                           CallFunc_GetMitamaAnalyzeData_ReturnValue;         // 0x0058(0x0050)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetMitamaAnalyzeData) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetMitamaAnalyzeData");
static_assert(sizeof(BattlePartySystem_C_BI_GetMitamaAnalyzeData) == 0x0000A8, "Wrong size on BattlePartySystem_C_BI_GetMitamaAnalyzeData");
static_assert(offsetof(BattlePartySystem_C_BI_GetMitamaAnalyzeData, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetMitamaAnalyzeData::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMitamaAnalyzeData, AnalyzeData) == 0x000008, "Member 'BattlePartySystem_C_BI_GetMitamaAnalyzeData::AnalyzeData' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMitamaAnalyzeData, CallFunc_GetMitamaAnalyzeData_ReturnValue) == 0x000058, "Member 'BattlePartySystem_C_BI_GetMitamaAnalyzeData::CallFunc_GetMitamaAnalyzeData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetKuishibariCureHP
// 0x0010 (0x0010 - 0x0000)
struct BattlePartySystem_C_BI_GetKuishibariCureHP final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KUISHIBARI_LEVEL                            Level;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78EE[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CureHp;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKuishibariCureHP_ReturnValue;          // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetKuishibariCureHP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetKuishibariCureHP");
static_assert(sizeof(BattlePartySystem_C_BI_GetKuishibariCureHP) == 0x000010, "Wrong size on BattlePartySystem_C_BI_GetKuishibariCureHP");
static_assert(offsetof(BattlePartySystem_C_BI_GetKuishibariCureHP, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetKuishibariCureHP::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetKuishibariCureHP, Level) == 0x000004, "Member 'BattlePartySystem_C_BI_GetKuishibariCureHP::Level' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetKuishibariCureHP, CureHp) == 0x000008, "Member 'BattlePartySystem_C_BI_GetKuishibariCureHP::CureHp' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetKuishibariCureHP, CallFunc_GetKuishibariCureHP_ReturnValue) == 0x00000C, "Member 'BattlePartySystem_C_BI_GetKuishibariCureHP::CallFunc_GetKuishibariCureHP_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoGetCurrentHP
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_EnemyInfoGetCurrentHP final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentHP;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_EnemyInfoGetCurrentHP_CurrentHP;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_EnemyInfoGetCurrentHP) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_EnemyInfoGetCurrentHP");
static_assert(sizeof(BattlePartySystem_C_BI_EnemyInfoGetCurrentHP) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_EnemyInfoGetCurrentHP");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoGetCurrentHP, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_EnemyInfoGetCurrentHP::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoGetCurrentHP, CurrentHP) == 0x000004, "Member 'BattlePartySystem_C_BI_EnemyInfoGetCurrentHP::CurrentHP' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_EnemyInfoGetCurrentHP, CallFunc_EnemyInfoGetCurrentHP_CurrentHP) == 0x000008, "Member 'BattlePartySystem_C_BI_EnemyInfoGetCurrentHP::CallFunc_EnemyInfoGetCurrentHP_CurrentHP' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsGuest
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsGuest final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGuest_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsGuest) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsGuest");
static_assert(sizeof(BattlePartySystem_C_BI_IsGuest) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsGuest");
static_assert(offsetof(BattlePartySystem_C_BI_IsGuest, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsGuest::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsGuest, Valid) == 0x000004, "Member 'BattlePartySystem_C_BI_IsGuest::Valid' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsGuest, CallFunc_IsGuest_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsGuest::CallFunc_IsGuest_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_CheckMagatsuhiDevil
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_CheckMagatsuhiDevil final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiDevil_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_CheckMagatsuhiDevil) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_CheckMagatsuhiDevil");
static_assert(sizeof(BattlePartySystem_C_BI_CheckMagatsuhiDevil) == 0x000008, "Wrong size on BattlePartySystem_C_BI_CheckMagatsuhiDevil");
static_assert(offsetof(BattlePartySystem_C_BI_CheckMagatsuhiDevil, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_CheckMagatsuhiDevil::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckMagatsuhiDevil, Ret) == 0x000004, "Member 'BattlePartySystem_C_BI_CheckMagatsuhiDevil::Ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_CheckMagatsuhiDevil, CallFunc_CheckMagatsuhiDevil_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_CheckMagatsuhiDevil::CallFunc_CheckMagatsuhiDevil_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetMagatsuhiDevilAnalyzeData
// 0x00A8 (0x00A8 - 0x0000)
struct BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78EF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnalyzeData                           AnalyzeData;                                       // 0x0008(0x0050)(Parm, OutParm)
	struct FAnalyzeData                           CallFunc_GetMagatsuhiDevilAnalyzeData_ReturnValue; // 0x0058(0x0050)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData");
static_assert(sizeof(BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData) == 0x0000A8, "Wrong size on BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData, AnalyzeData) == 0x000008, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData::AnalyzeData' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData, CallFunc_GetMagatsuhiDevilAnalyzeData_ReturnValue) == 0x000058, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData::CallFunc_GetMagatsuhiDevilAnalyzeData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetMagatsuhiDevilDropItemID
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78F0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ItemIDArray;                                       // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetMagatsuhiDevilDropItemID_ReturnValue;  // 0x0018(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID");
static_assert(sizeof(BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID, ItemIDArray) == 0x000008, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID::ItemIDArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID, CallFunc_GetMagatsuhiDevilDropItemID_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID::CallFunc_GetMagatsuhiDevilDropItemID_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetMagatsuhiDevilMagatsuhiSkill
// 0x0028 (0x0028 - 0x0000)
struct BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78F1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SkillIDArray;                                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_GetMagatsuhiDevilMagatsuhiSkill_ReturnValue; // 0x0018(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill");
static_assert(sizeof(BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill) == 0x000028, "Wrong size on BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill, SkillIDArray) == 0x000008, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill::SkillIDArray' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill, CallFunc_GetMagatsuhiDevilMagatsuhiSkill_ReturnValue) == 0x000018, "Member 'BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill::CallFunc_GetMagatsuhiDevilMagatsuhiSkill_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_UniqueSkill_ChangeTest
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_UniqueSkill_ChangeTest final
{
public:
	int32                                         SrcIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DstIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_UniqueSkill_ChangeTest) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_UniqueSkill_ChangeTest");
static_assert(sizeof(BattlePartySystem_C_BI_UniqueSkill_ChangeTest) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_UniqueSkill_ChangeTest");
static_assert(offsetof(BattlePartySystem_C_BI_UniqueSkill_ChangeTest, SrcIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_UniqueSkill_ChangeTest::SrcIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UniqueSkill_ChangeTest, DstIndex) == 0x000004, "Member 'BattlePartySystem_C_BI_UniqueSkill_ChangeTest::DstIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_UniqueSkill_ChangeTest, NoUse) == 0x000008, "Member 'BattlePartySystem_C_BI_UniqueSkill_ChangeTest::NoUse' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetStealMagatsuhiSkill
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetStealMagatsuhiSkill final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillId;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStealMagatsuhiSkill_ReturnValue;       // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetStealMagatsuhiSkill) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetStealMagatsuhiSkill");
static_assert(sizeof(BattlePartySystem_C_BI_GetStealMagatsuhiSkill) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetStealMagatsuhiSkill");
static_assert(offsetof(BattlePartySystem_C_BI_GetStealMagatsuhiSkill, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetStealMagatsuhiSkill::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetStealMagatsuhiSkill, SkillId) == 0x000004, "Member 'BattlePartySystem_C_BI_GetStealMagatsuhiSkill::SkillId' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetStealMagatsuhiSkill, CallFunc_GetStealMagatsuhiSkill_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetStealMagatsuhiSkill::CallFunc_GetStealMagatsuhiSkill_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetActCounter
// 0x0330 (0x0330 - 0x0000)
struct BattlePartySystem_C_BI_GetActCounter final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Counter;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78F2[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0010(0x0320)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetActCounter) == 0x000010, "Wrong alignment on BattlePartySystem_C_BI_GetActCounter");
static_assert(sizeof(BattlePartySystem_C_BI_GetActCounter) == 0x000330, "Wrong size on BattlePartySystem_C_BI_GetActCounter");
static_assert(offsetof(BattlePartySystem_C_BI_GetActCounter, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetActCounter::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetActCounter, Counter) == 0x000004, "Member 'BattlePartySystem_C_BI_GetActCounter::Counter' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetActCounter, CallFunc_GetBtlPartyData_ReturnValue) == 0x000010, "Member 'BattlePartySystem_C_BI_GetActCounter::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsBossRushChallengeModeEnemy
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossRushChallengeModeEnemy_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy");
static_assert(sizeof(BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy");
static_assert(offsetof(BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy, Ret) == 0x000004, "Member 'BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy::Ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy, CallFunc_IsBossRushChallengeModeEnemy_ReturnValue) == 0x000005, "Member 'BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy::CallFunc_IsBossRushChallengeModeEnemy_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetBossRushChallengeModeAnalyzeData
// 0x00A8 (0x00A8 - 0x0000)
struct BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78F3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnalyzeData                           AnalyzeData;                                       // 0x0008(0x0050)(Parm, OutParm)
	struct FAnalyzeData                           CallFunc_GetBossRushChallengeModeAnalyzeData_ReturnValue; // 0x0058(0x0050)()
};
static_assert(alignof(BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData) == 0x000008, "Wrong alignment on BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData");
static_assert(sizeof(BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData) == 0x0000A8, "Wrong size on BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData");
static_assert(offsetof(BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData, AnalyzeData) == 0x000008, "Member 'BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData::AnalyzeData' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData, CallFunc_GetBossRushChallengeModeAnalyzeData_ReturnValue) == 0x000058, "Member 'BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData::CallFunc_GetBossRushChallengeModeAnalyzeData_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_GetPrevHPRatio
// 0x000C (0x000C - 0x0000)
struct BattlePartySystem_C_BI_GetPrevHPRatio final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPrevHPRatio_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePartySystem_C_BI_GetPrevHPRatio) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_GetPrevHPRatio");
static_assert(sizeof(BattlePartySystem_C_BI_GetPrevHPRatio) == 0x00000C, "Wrong size on BattlePartySystem_C_BI_GetPrevHPRatio");
static_assert(offsetof(BattlePartySystem_C_BI_GetPrevHPRatio, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_GetPrevHPRatio::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPrevHPRatio, Ratio) == 0x000004, "Member 'BattlePartySystem_C_BI_GetPrevHPRatio::Ratio' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_GetPrevHPRatio, CallFunc_GetPrevHPRatio_ReturnValue) == 0x000008, "Member 'BattlePartySystem_C_BI_GetPrevHPRatio::CallFunc_GetPrevHPRatio_ReturnValue' has a wrong offset!");

// Function BattlePartySystem.BattlePartySystem_C.BI_IsPhisicsTaisei
// 0x0008 (0x0008 - 0x0000)
struct BattlePartySystem_C_BI_IsPhisicsTaisei final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ATTRIBUTE_TYPE                              Attr;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPhisicsTaisei_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePartySystem_C_BI_IsPhisicsTaisei) == 0x000004, "Wrong alignment on BattlePartySystem_C_BI_IsPhisicsTaisei");
static_assert(sizeof(BattlePartySystem_C_BI_IsPhisicsTaisei) == 0x000008, "Wrong size on BattlePartySystem_C_BI_IsPhisicsTaisei");
static_assert(offsetof(BattlePartySystem_C_BI_IsPhisicsTaisei, PartyIndex) == 0x000000, "Member 'BattlePartySystem_C_BI_IsPhisicsTaisei::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsPhisicsTaisei, Attr) == 0x000004, "Member 'BattlePartySystem_C_BI_IsPhisicsTaisei::Attr' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsPhisicsTaisei, Ret) == 0x000005, "Member 'BattlePartySystem_C_BI_IsPhisicsTaisei::Ret' has a wrong offset!");
static_assert(offsetof(BattlePartySystem_C_BI_IsPhisicsTaisei, CallFunc_IsPhisicsTaisei_ReturnValue) == 0x000006, "Member 'BattlePartySystem_C_BI_IsPhisicsTaisei::CallFunc_IsPhisicsTaisei_ReturnValue' has a wrong offset!");

}

