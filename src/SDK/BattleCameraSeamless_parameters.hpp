#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleCameraSeamless

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleCameraSeamless.BattleCameraSeamless_C.ExecuteUbergraph_BattleCameraSeamless
// 0x001C (0x001C - 0x0000)
struct BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BlendTime_1;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentBlendSpeed;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F15[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_BlendTime;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless");
static_assert(sizeof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless) == 0x00001C, "Wrong size on BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, EntryPoint) == 0x000000, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, K2Node_Event_BlendTime_1) == 0x000008, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::K2Node_Event_BlendTime_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, K2Node_Event_CurrentBlendSpeed) == 0x00000C, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::K2Node_Event_CurrentBlendSpeed' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000011, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, K2Node_Event_BlendTime) == 0x000014, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::K2Node_Event_BlendTime' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'BattleCameraSeamless_C_ExecuteUbergraph_BattleCameraSeamless::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleCameraSeamless_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_ReceiveTick");
static_assert(sizeof(BattleCameraSeamless_C_ReceiveTick) == 0x000004, "Wrong size on BattleCameraSeamless_C_ReceiveTick");
static_assert(offsetof(BattleCameraSeamless_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleCameraSeamless_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.SetMainCamera
// 0x0004 (0x0004 - 0x0000)
struct BattleCameraSeamless_C_SetMainCamera final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_SetMainCamera) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_SetMainCamera");
static_assert(sizeof(BattleCameraSeamless_C_SetMainCamera) == 0x000004, "Wrong size on BattleCameraSeamless_C_SetMainCamera");
static_assert(offsetof(BattleCameraSeamless_C_SetMainCamera, BlendTime) == 0x000000, "Member 'BattleCameraSeamless_C_SetMainCamera::BlendTime' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.OnInterpFinished
// 0x0004 (0x0004 - 0x0000)
struct BattleCameraSeamless_C_OnInterpFinished final
{
public:
	float                                         CurrentBlendSpeed;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_OnInterpFinished) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_OnInterpFinished");
static_assert(sizeof(BattleCameraSeamless_C_OnInterpFinished) == 0x000004, "Wrong size on BattleCameraSeamless_C_OnInterpFinished");
static_assert(offsetof(BattleCameraSeamless_C_OnInterpFinished, CurrentBlendSpeed) == 0x000000, "Member 'BattleCameraSeamless_C_OnInterpFinished::CurrentBlendSpeed' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.CurrentForce
// 0x0004 (0x0004 - 0x0000)
struct BattleCameraSeamless_C_CurrentForce final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_CurrentForce) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_CurrentForce");
static_assert(sizeof(BattleCameraSeamless_C_CurrentForce) == 0x000004, "Wrong size on BattleCameraSeamless_C_CurrentForce");
static_assert(offsetof(BattleCameraSeamless_C_CurrentForce, BlendTime) == 0x000000, "Member 'BattleCameraSeamless_C_CurrentForce::BlendTime' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.UpDateShakeOffset
// 0x0290 (0x0290 - 0x0000)
struct BattleCameraSeamless_C_UpDateShakeOffset final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x010C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VecSinDeg_CosDeg;                         // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VecCosDeg_CosDeg;                         // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VecSinDeg_CosDeg_1;                       // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VecCosDeg_CosDeg_1;                       // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_UpDateShakeOffset) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_UpDateShakeOffset");
static_assert(sizeof(BattleCameraSeamless_C_UpDateShakeOffset) == 0x000290, "Wrong size on BattleCameraSeamless_C_UpDateShakeOffset");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, Delta) == 0x000000, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::Delta' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_DegCos_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_MakeRotator_ReturnValue) == 0x00000C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_ComposeRotators_ReturnValue) == 0x00001C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000028, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000048, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue) == 0x000054, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000060, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_ComposeRotators_ReturnValue_1) == 0x0000E8, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x0000F4, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000100, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00010C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000194, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001A0, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001AC, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_VecSinDeg_CosDeg) == 0x0001B8, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_VecSinDeg_CosDeg' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001C4, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0001D0, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_VecCosDeg_CosDeg) == 0x0001DC, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_VecCosDeg_CosDeg' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0001E8, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_VecSinDeg_CosDeg_1) == 0x0001F4, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_VecSinDeg_CosDeg_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000200, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_VecCosDeg_CosDeg_1) == 0x00020C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_VecCosDeg_CosDeg_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000218, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x000224, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000230, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x00023C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000248, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x000254, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000260, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x00026C, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x000278, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpDateShakeOffset, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000284, "Member 'BattleCameraSeamless_C_UpDateShakeOffset::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.CheckDegreeOvered
// 0x0078 (0x0078 - 0x0000)
struct BattleCameraSeamless_C_CheckDegreeOvered final
{
public:
	struct FVector                                Degree;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_z;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_y;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_x;                                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F16[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCameraSeamless_C_CheckDegreeOvered) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_CheckDegreeOvered");
static_assert(sizeof(BattleCameraSeamless_C_CheckDegreeOvered) == 0x000078, "Wrong size on BattleCameraSeamless_C_CheckDegreeOvered");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, Degree) == 0x000000, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::Degree' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, Lo_z) == 0x00000C, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::Lo_z' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, Lo_y) == 0x000010, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::Lo_y' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, Lo_x) == 0x000014, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::Lo_x' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_BreakVector_X) == 0x000018, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_BreakVector_Y) == 0x00001C, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_BreakVector_Z) == 0x000020, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_MakeVector_ReturnValue_1) == 0x000030, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_MakeVector_ReturnValue_2) == 0x00003C, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_MakeVector_ReturnValue_3) == 0x000048, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_MakeVector_ReturnValue_4) == 0x000054, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000060, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_Less_FloatFloat_ReturnValue) == 0x000061, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000062, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000063, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000064, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_MakeVector_ReturnValue_5) == 0x000068, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000074, "Member 'BattleCameraSeamless_C_CheckDegreeOvered::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.InitDiff
// 0x0054 (0x0054 - 0x0000)
struct BattleCameraSeamless_C_InitDiff final
{
public:
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F17[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_2;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F18[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_InitDiff) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_InitDiff");
static_assert(sizeof(BattleCameraSeamless_C_InitDiff) == 0x000054, "Wrong size on BattleCameraSeamless_C_InitDiff");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_RandomBool_ReturnValue) == 0x000000, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_RandomBool_ReturnValue_1) == 0x000001, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_SelectFloat_ReturnValue_1) == 0x000008, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_RandomBool_ReturnValue_2) == 0x00000C, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_RandomBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_SelectFloat_ReturnValue_2) == 0x000014, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_RandomUnitVector_ReturnValue) == 0x000024, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00003C, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InitDiff, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BattleCameraSeamless_C_InitDiff::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.CalcCapriciousness
// 0x006C (0x006C - 0x0000)
struct BattleCameraSeamless_C_CalcCapriciousness final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_2;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_CalcCapriciousness) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_CalcCapriciousness");
static_assert(sizeof(BattleCameraSeamless_C_CalcCapriciousness) == 0x00006C, "Wrong size on BattleCameraSeamless_C_CalcCapriciousness");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, Delta) == 0x000000, "Member 'BattleCameraSeamless_C_CalcCapriciousness::Delta' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Abs_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_BreakVector_X) == 0x000030, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_BreakVector_Y) == 0x000034, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_BreakVector_Z) == 0x000038, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_DegCos_ReturnValue) == 0x00003C, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Abs_ReturnValue_1) == 0x00004C, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_DegCos_ReturnValue_1) == 0x000050, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_DegCos_ReturnValue_2) == 0x000054, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_DegCos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Abs_ReturnValue_2) == 0x000058, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_Abs_ReturnValue_3) == 0x00005C, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcCapriciousness, CallFunc_MakeVector_ReturnValue_1) == 0x000060, "Member 'BattleCameraSeamless_C_CalcCapriciousness::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.DebugPrint
// 0x0080 (0x0080 - 0x0000)
struct BattleCameraSeamless_C_DebugPrint final
{
public:
	class FString                                 CallFunc_Conv_RotatorToString_ReturnValue;         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_RotatorToString_ReturnValue_1;       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_RotatorToString_ReturnValue_2;       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_DebugPrint) == 0x000008, "Wrong alignment on BattleCameraSeamless_C_DebugPrint");
static_assert(sizeof(BattleCameraSeamless_C_DebugPrint) == 0x000080, "Wrong size on BattleCameraSeamless_C_DebugPrint");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Conv_RotatorToString_ReturnValue) == 0x000000, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Conv_RotatorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Conv_RotatorToString_ReturnValue_1) == 0x000010, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Conv_RotatorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Conv_RotatorToString_ReturnValue_2) == 0x000040, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Conv_RotatorToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Conv_VectorToString_ReturnValue) == 0x000050, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000070, "Member 'BattleCameraSeamless_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.CalcInatia
// 0x016C (0x016C - 0x0000)
struct BattleCameraSeamless_C_CalcInatia final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_PlayRate;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_InatiaMax;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F19[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_RotatorRotator_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1A[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1B[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1C[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SubRotator_Ret;                           // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_1;      // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue_3;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_2;      // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SubRotator_Ret_1;                         // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_3;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_CalcInatia) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_CalcInatia");
static_assert(sizeof(BattleCameraSeamless_C_CalcInatia) == 0x00016C, "Wrong size on BattleCameraSeamless_C_CalcInatia");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, Delta) == 0x000000, "Member 'BattleCameraSeamless_C_CalcInatia::Delta' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, Lo_PlayRate) == 0x000004, "Member 'BattleCameraSeamless_C_CalcInatia::Lo_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, Lo_InatiaMax) == 0x000008, "Member 'BattleCameraSeamless_C_CalcInatia::Lo_InatiaMax' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00000C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000024, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000030, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00003D, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000040, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000054, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_GetFloatValue_ReturnValue) == 0x000060, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_GetFloatValue_ReturnValue_1) == 0x000064, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_NotEqual_RotatorRotator_ReturnValue) == 0x000068, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_NotEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000069, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_VSizeSquared_ReturnValue) == 0x00006C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000070, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_VSizeSquared_ReturnValue_1) == 0x000074, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000078, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_BooleanAND_ReturnValue_1) == 0x000079, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_VSize_ReturnValue) == 0x000094, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_VSize_ReturnValue_1) == 0x000098, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_ComposeRotators_ReturnValue) == 0x00009C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_GetFloatValue_ReturnValue_2) == 0x0000A8, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_SelectFloat_ReturnValue) == 0x0000AC, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_SubRotator_Ret) == 0x0000B0, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_SubRotator_Ret' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_RotatorFloat_ReturnValue_1) == 0x0000BC, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_RotatorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_GetFloatValue_ReturnValue_3) == 0x0000C8, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_GetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_RotatorFloat_ReturnValue_2) == 0x0000CC, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_RotatorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_SelectFloat_ReturnValue_1) == 0x0000D8, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000DC, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000EC, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000F8, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000FC, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000100, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00010C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000118, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_SubRotator_Ret_1) == 0x000124, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_SubRotator_Ret_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_RotatorFloat_ReturnValue_3) == 0x000130, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_RotatorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00013C, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000148, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000154, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CalcInatia, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000160, "Member 'BattleCameraSeamless_C_CalcInatia::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.SubRotator
// 0x0150 (0x0150 - 0x0000)
struct BattleCameraSeamless_C_SubRotator final
{
public:
	struct FRotator                               A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               B;                                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Ret;                                               // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Lo_RotB;                                           // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Lo_RotA;                                           // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_Test;                                           // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CommonBRight;                                   // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CommonARight;                                   // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_RotDegree;                                      // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CommonBForward;                                 // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CommonAForward;                                 // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsToRight;                                      // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1D[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_CommonUp;                                       // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_BtoA;                                           // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ForwardDot;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCameraSeamless_C_SubRotator) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_SubRotator");
static_assert(sizeof(BattleCameraSeamless_C_SubRotator) == 0x000150, "Wrong size on BattleCameraSeamless_C_SubRotator");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, A) == 0x000000, "Member 'BattleCameraSeamless_C_SubRotator::A' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, B) == 0x00000C, "Member 'BattleCameraSeamless_C_SubRotator::B' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Ret) == 0x000018, "Member 'BattleCameraSeamless_C_SubRotator::Ret' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_RotB) == 0x000024, "Member 'BattleCameraSeamless_C_SubRotator::Lo_RotB' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_RotA) == 0x000030, "Member 'BattleCameraSeamless_C_SubRotator::Lo_RotA' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_Test) == 0x00003C, "Member 'BattleCameraSeamless_C_SubRotator::Lo_Test' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_CommonBRight) == 0x000048, "Member 'BattleCameraSeamless_C_SubRotator::Lo_CommonBRight' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_CommonARight) == 0x000054, "Member 'BattleCameraSeamless_C_SubRotator::Lo_CommonARight' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_RotDegree) == 0x000060, "Member 'BattleCameraSeamless_C_SubRotator::Lo_RotDegree' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_CommonBForward) == 0x000064, "Member 'BattleCameraSeamless_C_SubRotator::Lo_CommonBForward' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_CommonAForward) == 0x000070, "Member 'BattleCameraSeamless_C_SubRotator::Lo_CommonAForward' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_IsToRight) == 0x00007C, "Member 'BattleCameraSeamless_C_SubRotator::Lo_IsToRight' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_CommonUp) == 0x000080, "Member 'BattleCameraSeamless_C_SubRotator::Lo_CommonUp' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_BtoA) == 0x00008C, "Member 'BattleCameraSeamless_C_SubRotator::Lo_BtoA' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, Lo_ForwardDot) == 0x000098, "Member 'BattleCameraSeamless_C_SubRotator::Lo_ForwardDot' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_NegateRotator_ReturnValue) == 0x00009C, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000A8, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_Normal_ReturnValue) == 0x0000B4, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_GetForwardVector_ReturnValue) == 0x0000C0, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_GetUpVector_ReturnValue) == 0x0000CC, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000E4, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_Normal_ReturnValue_1) == 0x0000F0, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_GetUpVector_ReturnValue_1) == 0x0000FC, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_GetForwardVector_ReturnValue_2) == 0x000114, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000120, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x00012C, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000138, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_SubRotator, CallFunc_ComposeRotators_ReturnValue) == 0x000144, "Member 'BattleCameraSeamless_C_SubRotator::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.ResetOverrunDistanceRate
// 0x000C (0x000C - 0x0000)
struct BattleCameraSeamless_C_ResetOverrunDistanceRate final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_ResetOverrunDistanceRate) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_ResetOverrunDistanceRate");
static_assert(sizeof(BattleCameraSeamless_C_ResetOverrunDistanceRate) == 0x00000C, "Wrong size on BattleCameraSeamless_C_ResetOverrunDistanceRate");
static_assert(offsetof(BattleCameraSeamless_C_ResetOverrunDistanceRate, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BattleCameraSeamless_C_ResetOverrunDistanceRate::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ResetOverrunDistanceRate, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_ResetOverrunDistanceRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ResetOverrunDistanceRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BattleCameraSeamless_C_ResetOverrunDistanceRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.ResetOverrunDegreeRate
// 0x000C (0x000C - 0x0000)
struct BattleCameraSeamless_C_ResetOverrunDegreeRate final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_ResetOverrunDegreeRate) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_ResetOverrunDegreeRate");
static_assert(sizeof(BattleCameraSeamless_C_ResetOverrunDegreeRate) == 0x00000C, "Wrong size on BattleCameraSeamless_C_ResetOverrunDegreeRate");
static_assert(offsetof(BattleCameraSeamless_C_ResetOverrunDegreeRate, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BattleCameraSeamless_C_ResetOverrunDegreeRate::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ResetOverrunDegreeRate, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_ResetOverrunDegreeRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_ResetOverrunDegreeRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BattleCameraSeamless_C_ResetOverrunDegreeRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.UpdateMoveShakeAmplifier
// 0x0028 (0x0028 - 0x0000)
struct BattleCameraSeamless_C_UpdateMoveShakeAmplifier final
{
public:
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_UpdateMoveShakeAmplifier");
static_assert(sizeof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier) == 0x000028, "Wrong size on BattleCameraSeamless_C_UpdateMoveShakeAmplifier");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_GetFloatValue_ReturnValue) == 0x000000, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_GetFloatValue_ReturnValue_1) == 0x000010, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_GetFloatValue_ReturnValue_2) == 0x000014, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateMoveShakeAmplifier, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BattleCameraSeamless_C_UpdateMoveShakeAmplifier::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.CheckDegreeOvered_Float
// 0x0008 (0x0008 - 0x0000)
struct BattleCameraSeamless_C_CheckDegreeOvered_Float final
{
public:
	float                                         Degree;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCameraSeamless_C_CheckDegreeOvered_Float) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_CheckDegreeOvered_Float");
static_assert(sizeof(BattleCameraSeamless_C_CheckDegreeOvered_Float) == 0x000008, "Wrong size on BattleCameraSeamless_C_CheckDegreeOvered_Float");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered_Float, Degree) == 0x000000, "Member 'BattleCameraSeamless_C_CheckDegreeOvered_Float::Degree' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_CheckDegreeOvered_Float, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_CheckDegreeOvered_Float::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.VecCosDeg
// 0x003C (0x003C - 0x0000)
struct BattleCameraSeamless_C_VecCosDeg final
{
public:
	struct FVector                                Vec;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CosDeg;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_2;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_VecCosDeg) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_VecCosDeg");
static_assert(sizeof(BattleCameraSeamless_C_VecCosDeg) == 0x00003C, "Wrong size on BattleCameraSeamless_C_VecCosDeg");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, Vec) == 0x000000, "Member 'BattleCameraSeamless_C_VecCosDeg::Vec' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CosDeg) == 0x00000C, "Member 'BattleCameraSeamless_C_VecCosDeg::CosDeg' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CallFunc_BreakVector_X) == 0x000018, "Member 'BattleCameraSeamless_C_VecCosDeg::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CallFunc_BreakVector_Y) == 0x00001C, "Member 'BattleCameraSeamless_C_VecCosDeg::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CallFunc_BreakVector_Z) == 0x000020, "Member 'BattleCameraSeamless_C_VecCosDeg::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CallFunc_DegCos_ReturnValue) == 0x000024, "Member 'BattleCameraSeamless_C_VecCosDeg::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CallFunc_DegCos_ReturnValue_1) == 0x000028, "Member 'BattleCameraSeamless_C_VecCosDeg::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CallFunc_DegCos_ReturnValue_2) == 0x00002C, "Member 'BattleCameraSeamless_C_VecCosDeg::CallFunc_DegCos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecCosDeg, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BattleCameraSeamless_C_VecCosDeg::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.VecSinDeg
// 0x003C (0x003C - 0x0000)
struct BattleCameraSeamless_C_VecSinDeg final
{
public:
	struct FVector                                Vec;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CosDeg;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_2;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_VecSinDeg) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_VecSinDeg");
static_assert(sizeof(BattleCameraSeamless_C_VecSinDeg) == 0x00003C, "Wrong size on BattleCameraSeamless_C_VecSinDeg");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, Vec) == 0x000000, "Member 'BattleCameraSeamless_C_VecSinDeg::Vec' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CosDeg) == 0x00000C, "Member 'BattleCameraSeamless_C_VecSinDeg::CosDeg' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CallFunc_BreakVector_X) == 0x000018, "Member 'BattleCameraSeamless_C_VecSinDeg::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CallFunc_BreakVector_Y) == 0x00001C, "Member 'BattleCameraSeamless_C_VecSinDeg::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CallFunc_BreakVector_Z) == 0x000020, "Member 'BattleCameraSeamless_C_VecSinDeg::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CallFunc_DegSin_ReturnValue) == 0x000024, "Member 'BattleCameraSeamless_C_VecSinDeg::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CallFunc_DegSin_ReturnValue_1) == 0x000028, "Member 'BattleCameraSeamless_C_VecSinDeg::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CallFunc_DegSin_ReturnValue_2) == 0x00002C, "Member 'BattleCameraSeamless_C_VecSinDeg::CallFunc_DegSin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_VecSinDeg, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BattleCameraSeamless_C_VecSinDeg::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.InatiaCancel
// 0x0060 (0x0060 - 0x0000)
struct BattleCameraSeamless_C_InatiaCancel final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_InatiaCancel) == 0x000010, "Wrong alignment on BattleCameraSeamless_C_InatiaCancel");
static_assert(sizeof(BattleCameraSeamless_C_InatiaCancel) == 0x000060, "Wrong size on BattleCameraSeamless_C_InatiaCancel");
static_assert(offsetof(BattleCameraSeamless_C_InatiaCancel, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BattleCameraSeamless_C_InatiaCancel::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InatiaCancel, CallFunc_BreakTransform_Location) == 0x000030, "Member 'BattleCameraSeamless_C_InatiaCancel::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InatiaCancel, CallFunc_BreakTransform_Rotation) == 0x00003C, "Member 'BattleCameraSeamless_C_InatiaCancel::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_InatiaCancel, CallFunc_BreakTransform_Scale) == 0x000048, "Member 'BattleCameraSeamless_C_InatiaCancel::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.IsShaking
// 0x0001 (0x0001 - 0x0000)
struct BattleCameraSeamless_C_IsShaking final
{
public:
	bool                                          Shaking;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCameraSeamless_C_IsShaking) == 0x000001, "Wrong alignment on BattleCameraSeamless_C_IsShaking");
static_assert(sizeof(BattleCameraSeamless_C_IsShaking) == 0x000001, "Wrong size on BattleCameraSeamless_C_IsShaking");
static_assert(offsetof(BattleCameraSeamless_C_IsShaking, Shaking) == 0x000000, "Member 'BattleCameraSeamless_C_IsShaking::Shaking' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.MasterVolumeUp
// 0x0008 (0x0008 - 0x0000)
struct BattleCameraSeamless_C_MasterVolumeUp final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCameraSeamless_C_MasterVolumeUp) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_MasterVolumeUp");
static_assert(sizeof(BattleCameraSeamless_C_MasterVolumeUp) == 0x000008, "Wrong size on BattleCameraSeamless_C_MasterVolumeUp");
static_assert(offsetof(BattleCameraSeamless_C_MasterVolumeUp, DeltaTime) == 0x000000, "Member 'BattleCameraSeamless_C_MasterVolumeUp::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_MasterVolumeUp, CallFunc_FInterpTo_ReturnValue) == 0x000004, "Member 'BattleCameraSeamless_C_MasterVolumeUp::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BattleCameraSeamless.BattleCameraSeamless_C.UpdateComponent
// 0x0008 (0x0008 - 0x0000)
struct BattleCameraSeamless_C_UpdateComponent final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContinueUpdate;                                    // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCameraSeamless_C_UpdateComponent) == 0x000004, "Wrong alignment on BattleCameraSeamless_C_UpdateComponent");
static_assert(sizeof(BattleCameraSeamless_C_UpdateComponent) == 0x000008, "Wrong size on BattleCameraSeamless_C_UpdateComponent");
static_assert(offsetof(BattleCameraSeamless_C_UpdateComponent, Delta) == 0x000000, "Member 'BattleCameraSeamless_C_UpdateComponent::Delta' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateComponent, ContinueUpdate) == 0x000004, "Member 'BattleCameraSeamless_C_UpdateComponent::ContinueUpdate' has a wrong offset!");
static_assert(offsetof(BattleCameraSeamless_C_UpdateComponent, CallFunc_UpdateComponent_ContinueUpdate) == 0x000005, "Member 'BattleCameraSeamless_C_UpdateComponent::CallFunc_UpdateComponent_ContinueUpdate' has a wrong offset!");

}

