#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaBaseTableInstance

#include "Basic.hpp"

#include "DevilPerformance_T_structs.hpp"
#include "Project_structs.hpp"
#include "BadStatusDecal_T_structs.hpp"
#include "CharaAttachParticle_T_structs.hpp"
#include "BadStatusNecessaries_T_structs.hpp"
#include "E_DEVIL_PERFORMANCE_TYPE_structs.hpp"
#include "DeadActionParticles_T_structs.hpp"
#include "BadStatusParticles_T_structs.hpp"
#include "BadStatusDecal_Array_structs.hpp"
#include "BadStatusParticles_Array_structs.hpp"
#include "BadStatusNecessaries_Array_structs.hpp"


namespace SDK::Params
{

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.ExecuteUbergraph_CharaBaseTableInstance
// 0x0004 (0x0004 - 0x0000)
struct CharaBaseTableInstance_C_ExecuteUbergraph_CharaBaseTableInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBaseTableInstance_C_ExecuteUbergraph_CharaBaseTableInstance) == 0x000004, "Wrong alignment on CharaBaseTableInstance_C_ExecuteUbergraph_CharaBaseTableInstance");
static_assert(sizeof(CharaBaseTableInstance_C_ExecuteUbergraph_CharaBaseTableInstance) == 0x000004, "Wrong size on CharaBaseTableInstance_C_ExecuteUbergraph_CharaBaseTableInstance");
static_assert(offsetof(CharaBaseTableInstance_C_ExecuteUbergraph_CharaBaseTableInstance, EntryPoint) == 0x000000, "Member 'CharaBaseTableInstance_C_ExecuteUbergraph_CharaBaseTableInstance::EntryPoint' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Load_BadStatusNecessaries
// 0x0100 (0x0100 - 0x0000)
struct CharaBaseTableInstance_C_Load_BadStatusNecessaries final
{
public:
	TArray<struct FBadStatusNecessaries_T>        NewLocalVar_1;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FBadStatusNecessaries_Array            Necessaries;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2338[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	struct FBadStatusNecessaries_Array            K2Node_MakeStruct_BadStatusNecessaries_Array;      // 0x0040(0x0010)(HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2339[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusNecessaries_T                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_233A[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusNecessaries_T>        K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233B[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusNecessaries_Array            K2Node_MakeStruct_BadStatusNecessaries_Array_1;    // 0x00D0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_233C[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusNecessaries_Array            CallFunc_Map_Find_Value;                           // 0x00E8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Load_BadStatusNecessaries) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Load_BadStatusNecessaries");
static_assert(sizeof(CharaBaseTableInstance_C_Load_BadStatusNecessaries) == 0x000100, "Wrong size on CharaBaseTableInstance_C_Load_BadStatusNecessaries");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, NewLocalVar_1) == 0x000000, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, Necessaries) == 0x000010, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::Necessaries' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, K2Node_MakeStruct_BadStatusNecessaries_Array) == 0x000040, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::K2Node_MakeStruct_BadStatusNecessaries_Array' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Array_Get_Item) == 0x000050, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, K2Node_MakeArray_Array) == 0x0000B8, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, K2Node_MakeStruct_BadStatusNecessaries_Array_1) == 0x0000D0, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::K2Node_MakeStruct_BadStatusNecessaries_Array_1' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Map_Remove_ReturnValue) == 0x0000E0, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusNecessaries, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'CharaBaseTableInstance_C_Load_BadStatusNecessaries::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Load_BadStatusParticle
// 0x00F8 (0x00F8 - 0x0000)
struct CharaBaseTableInstance_C_Load_BadStatusParticle final
{
public:
	struct FBadStatusParticles_Array              NewLocalVar_0;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233D[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusParticles_Array              K2Node_MakeStruct_BadStatusParticles_Array;        // 0x0038(0x0010)(HasGetValueTypeHash)
	struct FBadStatusParticles_T                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_233E[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_233F[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FBadStatusParticles_Array              K2Node_MakeStruct_BadStatusParticles_Array_1;      // 0x00C8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2340[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_Array              CallFunc_Map_Find_Value;                           // 0x00E0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Load_BadStatusParticle) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Load_BadStatusParticle");
static_assert(sizeof(CharaBaseTableInstance_C_Load_BadStatusParticle) == 0x0000F8, "Wrong size on CharaBaseTableInstance_C_Load_BadStatusParticle");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, NewLocalVar_0) == 0x000000, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, Temp_int_Array_Index_Variable) == 0x000010, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Array_Get_Item) == 0x000030, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, K2Node_MakeStruct_BadStatusParticles_Array) == 0x000038, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::K2Node_MakeStruct_BadStatusParticles_Array' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, K2Node_MakeArray_Array) == 0x0000B8, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, K2Node_MakeStruct_BadStatusParticles_Array_1) == 0x0000C8, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::K2Node_MakeStruct_BadStatusParticles_Array_1' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Map_Remove_ReturnValue) == 0x0000DC, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusParticle, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'CharaBaseTableInstance_C_Load_BadStatusParticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Load_CharaAttachParticle
// 0x0060 (0x0060 - 0x0000)
struct CharaBaseTableInstance_C_Load_CharaAttachParticle final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2341[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2342[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaAttachParticle_T                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Load_CharaAttachParticle) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Load_CharaAttachParticle");
static_assert(sizeof(CharaBaseTableInstance_C_Load_CharaAttachParticle) == 0x000060, "Wrong size on CharaBaseTableInstance_C_Load_CharaAttachParticle");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, CallFunc_Array_Get_Item) == 0x000024, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_CharaAttachParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'CharaBaseTableInstance_C_Load_CharaAttachParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Load_DeadActionParticle
// 0x00D0 (0x00D0 - 0x0000)
struct CharaBaseTableInstance_C_Load_DeadActionParticle final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2343[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2344[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0098)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Load_DeadActionParticle) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Load_DeadActionParticle");
static_assert(sizeof(CharaBaseTableInstance_C_Load_DeadActionParticle) == 0x0000D0, "Wrong size on CharaBaseTableInstance_C_Load_DeadActionParticle");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_Array_Get_Item) == 0x000024, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C8, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DeadActionParticle, CallFunc_Map_Contains_ReturnValue) == 0x0000C9, "Member 'CharaBaseTableInstance_C_Load_DeadActionParticle::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Load_DevilPerformance
// 0x0150 (0x0150 - 0x0000)
struct CharaBaseTableInstance_C_Load_DevilPerformance final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2345[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2346[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDevilPerformance_T                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0118)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Load_DevilPerformance) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Load_DevilPerformance");
static_assert(sizeof(CharaBaseTableInstance_C_Load_DevilPerformance) == 0x000150, "Wrong size on CharaBaseTableInstance_C_Load_DevilPerformance");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_Array_Get_Item) == 0x000024, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000148, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_DevilPerformance, CallFunc_Map_Contains_ReturnValue) == 0x000149, "Member 'CharaBaseTableInstance_C_Load_DevilPerformance::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusNecessaries
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusNecessaries final
{
public:
	TMap<class FName, struct FBadStatusNecessaries_T> Param_BadStatusNecessaries;                        // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusNecessaries) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusNecessaries");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusNecessaries) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusNecessaries");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusNecessaries, Param_BadStatusNecessaries) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusNecessaries::Param_BadStatusNecessaries' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusParticle
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusParticle final
{
public:
	TMap<class FName, struct FBadStatusParticles_T> Param_BadStatusParticles;                          // 0x0000(0x0050)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusParticle) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusParticle");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusParticle) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusParticle");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusParticle, Param_BadStatusParticles) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusParticle::Param_BadStatusParticles' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_CharaAttachParticle
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_CharaAttachParticle final
{
public:
	TMap<class FName, struct FCharaAttachParticle_T> Param_CharaAttachParticle;                         // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_CharaAttachParticle) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_CharaAttachParticle");
static_assert(sizeof(CharaBaseTableInstance_C_Get_CharaAttachParticle) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_CharaAttachParticle");
static_assert(offsetof(CharaBaseTableInstance_C_Get_CharaAttachParticle, Param_CharaAttachParticle) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_CharaAttachParticle::Param_CharaAttachParticle' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_DeadActionParticle
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_DeadActionParticle final
{
public:
	TMap<class FName, struct FDeadActionParticles_T> Param_DeadActionParticle;                          // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_DeadActionParticle) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_DeadActionParticle");
static_assert(sizeof(CharaBaseTableInstance_C_Get_DeadActionParticle) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_DeadActionParticle");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DeadActionParticle, Param_DeadActionParticle) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_DeadActionParticle::Param_DeadActionParticle' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_DevilPerformance
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_DevilPerformance final
{
public:
	TMap<class FName, struct FDevilPerformance_T> Param_DevilPerformance;                            // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_DevilPerformance) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_DevilPerformance");
static_assert(sizeof(CharaBaseTableInstance_C_Get_DevilPerformance) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_DevilPerformance");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DevilPerformance, Param_DevilPerformance) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_DevilPerformance::Param_DevilPerformance' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusNecessaries_List
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusNecessaries_List final
{
public:
	TMap<E_BAD_STATUS, struct FBadStatusNecessaries_Array> List;                                              // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_List) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusNecessaries_List");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_List) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusNecessaries_List");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_List, List) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusNecessaries_List::List' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusParticle_List
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusParticle_List final
{
public:
	TMap<E_BAD_STATUS, struct FBadStatusParticles_Array> List;                                              // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusParticle_List) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusParticle_List");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusParticle_List) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusParticle_List");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusParticle_List, List) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusParticle_List::List' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_DeadActionParticle_List
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_DeadActionParticle_List final
{
public:
	TMap<E_BTL_DEAD_EFFECT, struct FDeadActionParticles_T> List;                                              // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_DeadActionParticle_List) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_DeadActionParticle_List");
static_assert(sizeof(CharaBaseTableInstance_C_Get_DeadActionParticle_List) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_DeadActionParticle_List");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DeadActionParticle_List, List) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_DeadActionParticle_List::List' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_DevilPerformance_List
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_DevilPerformance_List final
{
public:
	TMap<E_DEVIL_PERFORMANCE_TYPE, struct FDevilPerformance_T> List;                                              // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_DevilPerformance_List) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_DevilPerformance_List");
static_assert(sizeof(CharaBaseTableInstance_C_Get_DevilPerformance_List) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_DevilPerformance_List");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DevilPerformance_List, List) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_DevilPerformance_List::List' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusParticle_Data
// 0x0030 (0x0030 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusParticle_Data final
{
public:
	E_BAD_STATUS                                  Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2347[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          OutRef;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FBadStatusParticles_Array              CallFunc_Map_Find_Value;                           // 0x0018(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusParticle_Data) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusParticle_Data");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusParticle_Data) == 0x000030, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusParticle_Data");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusParticle_Data, Status) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusParticle_Data::Status' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusParticle_Data, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_Get_BadStatusParticle_Data::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusParticle_Data, CallFunc_Map_Find_Value) == 0x000018, "Member 'CharaBaseTableInstance_C_Get_BadStatusParticle_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusParticle_Data, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'CharaBaseTableInstance_C_Get_BadStatusParticle_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusNecessaries_Data
// 0x0038 (0x0038 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data final
{
public:
	E_BAD_STATUS                                  Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2348[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusNecessaries_T>        OutRef;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Valid;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2349[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusNecessaries_Array            CallFunc_Map_Find_Value;                           // 0x0020(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data) == 0x000038, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data, Status) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data::Status' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data, Valid) == 0x000018, "Member 'CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data::Valid' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data, CallFunc_Map_Find_Value) == 0x000020, "Member 'CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'CharaBaseTableInstance_C_Get_BadStatusNecessaries_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_DeadActionParticle_Data
// 0x0148 (0x0148 - 0x0000)
struct CharaBaseTableInstance_C_Get_DeadActionParticle_Data final
{
public:
	E_BTL_DEAD_EFFECT                             DeadEffect;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 DeadAction;                                        // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_234B[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 CallFunc_Map_Find_Value;                           // 0x00A8(0x0098)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_DeadActionParticle_Data) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_DeadActionParticle_Data");
static_assert(sizeof(CharaBaseTableInstance_C_Get_DeadActionParticle_Data) == 0x000148, "Wrong size on CharaBaseTableInstance_C_Get_DeadActionParticle_Data");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DeadActionParticle_Data, DeadEffect) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_DeadActionParticle_Data::DeadEffect' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DeadActionParticle_Data, DeadAction) == 0x000008, "Member 'CharaBaseTableInstance_C_Get_DeadActionParticle_Data::DeadAction' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DeadActionParticle_Data, Valid) == 0x0000A0, "Member 'CharaBaseTableInstance_C_Get_DeadActionParticle_Data::Valid' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DeadActionParticle_Data, CallFunc_Map_Find_Value) == 0x0000A8, "Member 'CharaBaseTableInstance_C_Get_DeadActionParticle_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DeadActionParticle_Data, CallFunc_Map_Find_ReturnValue) == 0x000140, "Member 'CharaBaseTableInstance_C_Get_DeadActionParticle_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_DevilPerformance_Data
// 0x0248 (0x0248 - 0x0000)
struct CharaBaseTableInstance_C_Get_DevilPerformance_Data final
{
public:
	E_DEVIL_PERFORMANCE_TYPE                      NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDevilPerformance_T                    Param_DevilPerformance;                            // 0x0008(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_234D[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDevilPerformance_T                    CallFunc_Map_Find_Value;                           // 0x0128(0x0118)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_DevilPerformance_Data) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_DevilPerformance_Data");
static_assert(sizeof(CharaBaseTableInstance_C_Get_DevilPerformance_Data) == 0x000248, "Wrong size on CharaBaseTableInstance_C_Get_DevilPerformance_Data");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DevilPerformance_Data, NewParam) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_DevilPerformance_Data::NewParam' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DevilPerformance_Data, Param_DevilPerformance) == 0x000008, "Member 'CharaBaseTableInstance_C_Get_DevilPerformance_Data::Param_DevilPerformance' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DevilPerformance_Data, Valid) == 0x000120, "Member 'CharaBaseTableInstance_C_Get_DevilPerformance_Data::Valid' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DevilPerformance_Data, CallFunc_Map_Find_Value) == 0x000128, "Member 'CharaBaseTableInstance_C_Get_DevilPerformance_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_DevilPerformance_Data, CallFunc_Map_Find_ReturnValue) == 0x000240, "Member 'CharaBaseTableInstance_C_Get_DevilPerformance_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Load_BadStatusDecal
// 0x00F8 (0x00F8 - 0x0000)
struct CharaBaseTableInstance_C_Load_BadStatusDecal final
{
public:
	struct FBadStatusDecal_Array                  NewLocalVar_2;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FBadStatusParticles_Array              NewLocalVar_0;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusDecal_Array                  K2Node_MakeStruct_BadStatusDecal_Array;            // 0x0048(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FBadStatusDecal_T                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_234F[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2350[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusDecal_T>              K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FBadStatusDecal_Array                  K2Node_MakeStruct_BadStatusDecal_Array_1;          // 0x00D0(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FBadStatusDecal_Array                  CallFunc_Map_Find_Value;                           // 0x00E0(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Load_BadStatusDecal) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Load_BadStatusDecal");
static_assert(sizeof(CharaBaseTableInstance_C_Load_BadStatusDecal) == 0x0000F8, "Wrong size on CharaBaseTableInstance_C_Load_BadStatusDecal");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, NewLocalVar_2) == 0x000000, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, NewLocalVar_0) == 0x000010, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Array_Get_Item) == 0x000040, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, K2Node_MakeStruct_BadStatusDecal_Array) == 0x000048, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::K2Node_MakeStruct_BadStatusDecal_Array' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, K2Node_MakeArray_Array) == 0x0000C0, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, K2Node_MakeStruct_BadStatusDecal_Array_1) == 0x0000D0, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::K2Node_MakeStruct_BadStatusDecal_Array_1' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Load_BadStatusDecal, CallFunc_Map_Remove_ReturnValue) == 0x0000F1, "Member 'CharaBaseTableInstance_C_Load_BadStatusDecal::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusDecal_List
// 0x0050 (0x0050 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusDecal_List final
{
public:
	TMap<E_BAD_STATUS, struct FBadStatusDecal_Array> List;                                              // 0x0000(0x0050)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusDecal_List) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusDecal_List");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusDecal_List) == 0x000050, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusDecal_List");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusDecal_List, List) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusDecal_List::List' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.Get_BadStatusDecal_Data
// 0x0030 (0x0030 - 0x0000)
struct CharaBaseTableInstance_C_Get_BadStatusDecal_Data final
{
public:
	E_BAD_STATUS                                  Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2351[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusDecal_T>              OutRef;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FBadStatusDecal_Array                  CallFunc_Map_Find_Value;                           // 0x0018(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_Get_BadStatusDecal_Data) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_Get_BadStatusDecal_Data");
static_assert(sizeof(CharaBaseTableInstance_C_Get_BadStatusDecal_Data) == 0x000030, "Wrong size on CharaBaseTableInstance_C_Get_BadStatusDecal_Data");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusDecal_Data, Status) == 0x000000, "Member 'CharaBaseTableInstance_C_Get_BadStatusDecal_Data::Status' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusDecal_Data, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_Get_BadStatusDecal_Data::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusDecal_Data, CallFunc_Map_Find_Value) == 0x000018, "Member 'CharaBaseTableInstance_C_Get_BadStatusDecal_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_Get_BadStatusDecal_Data, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'CharaBaseTableInstance_C_Get_BadStatusDecal_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.BI_GetBadStatusSecessariesData
// 0x0020 (0x0020 - 0x0000)
struct CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData final
{
public:
	E_BAD_STATUS                                  Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2352[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusNecessaries_T>        OutRef;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Valid;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_BadStatusNecessaries_Data_Valid;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData");
static_assert(sizeof(CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData) == 0x000020, "Wrong size on CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData, Status) == 0x000000, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData::Status' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData, Valid) == 0x000018, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData::Valid' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData, CallFunc_Get_BadStatusNecessaries_Data_Valid) == 0x000019, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusSecessariesData::CallFunc_Get_BadStatusNecessaries_Data_Valid' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.BI_GetBadStatusParticleData
// 0x0020 (0x0020 - 0x0000)
struct CharaBaseTableInstance_C_BI_GetBadStatusParticleData final
{
public:
	E_BAD_STATUS                                  Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2353[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          OutRef;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          NoUse;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_BI_GetBadStatusParticleData) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_BI_GetBadStatusParticleData");
static_assert(sizeof(CharaBaseTableInstance_C_BI_GetBadStatusParticleData) == 0x000020, "Wrong size on CharaBaseTableInstance_C_BI_GetBadStatusParticleData");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusParticleData, Status) == 0x000000, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusParticleData::Status' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusParticleData, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusParticleData::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusParticleData, NoUse) == 0x000018, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusParticleData::NoUse' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.BI_GetDeadActionParticleData
// 0x00A8 (0x00A8 - 0x0000)
struct CharaBaseTableInstance_C_BI_GetDeadActionParticleData final
{
public:
	E_BTL_DEAD_EFFECT                             DeadEffect;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2354[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 OutRef;                                            // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_DeadActionParticle_Data_Valid;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_BI_GetDeadActionParticleData) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_BI_GetDeadActionParticleData");
static_assert(sizeof(CharaBaseTableInstance_C_BI_GetDeadActionParticleData) == 0x0000A8, "Wrong size on CharaBaseTableInstance_C_BI_GetDeadActionParticleData");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDeadActionParticleData, DeadEffect) == 0x000000, "Member 'CharaBaseTableInstance_C_BI_GetDeadActionParticleData::DeadEffect' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDeadActionParticleData, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_BI_GetDeadActionParticleData::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDeadActionParticleData, Valid) == 0x0000A0, "Member 'CharaBaseTableInstance_C_BI_GetDeadActionParticleData::Valid' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDeadActionParticleData, CallFunc_Get_DeadActionParticle_Data_Valid) == 0x0000A1, "Member 'CharaBaseTableInstance_C_BI_GetDeadActionParticleData::CallFunc_Get_DeadActionParticle_Data_Valid' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.BI_GetDevilPerformanceData
// 0x0128 (0x0128 - 0x0000)
struct CharaBaseTableInstance_C_BI_GetDevilPerformanceData final
{
public:
	E_DEVIL_PERFORMANCE_TYPE                      Performance;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2355[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDevilPerformance_T                    OutRef;                                            // 0x0008(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_DevilPerformance_Data_Valid;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_BI_GetDevilPerformanceData) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_BI_GetDevilPerformanceData");
static_assert(sizeof(CharaBaseTableInstance_C_BI_GetDevilPerformanceData) == 0x000128, "Wrong size on CharaBaseTableInstance_C_BI_GetDevilPerformanceData");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDevilPerformanceData, Performance) == 0x000000, "Member 'CharaBaseTableInstance_C_BI_GetDevilPerformanceData::Performance' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDevilPerformanceData, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_BI_GetDevilPerformanceData::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDevilPerformanceData, Valid) == 0x000120, "Member 'CharaBaseTableInstance_C_BI_GetDevilPerformanceData::Valid' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetDevilPerformanceData, CallFunc_Get_DevilPerformance_Data_Valid) == 0x000121, "Member 'CharaBaseTableInstance_C_BI_GetDevilPerformanceData::CallFunc_Get_DevilPerformance_Data_Valid' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.BI_GetCharaAttachParticle
// 0x00A0 (0x00A0 - 0x0000)
struct CharaBaseTableInstance_C_BI_GetCharaAttachParticle final
{
public:
	TMap<class FName, struct FCharaAttachParticle_T> Param_CharaAttachParticle;                         // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, struct FCharaAttachParticle_T> CallFunc_Get_CharaAttachParticle_CharaAttachParticle; // 0x0050(0x0050)()
};
static_assert(alignof(CharaBaseTableInstance_C_BI_GetCharaAttachParticle) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_BI_GetCharaAttachParticle");
static_assert(sizeof(CharaBaseTableInstance_C_BI_GetCharaAttachParticle) == 0x0000A0, "Wrong size on CharaBaseTableInstance_C_BI_GetCharaAttachParticle");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetCharaAttachParticle, Param_CharaAttachParticle) == 0x000000, "Member 'CharaBaseTableInstance_C_BI_GetCharaAttachParticle::Param_CharaAttachParticle' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetCharaAttachParticle, CallFunc_Get_CharaAttachParticle_CharaAttachParticle) == 0x000050, "Member 'CharaBaseTableInstance_C_BI_GetCharaAttachParticle::CallFunc_Get_CharaAttachParticle_CharaAttachParticle' has a wrong offset!");

// Function CharaBaseTableInstance.CharaBaseTableInstance_C.BI_GetBadStatusDecalData
// 0x0020 (0x0020 - 0x0000)
struct CharaBaseTableInstance_C_BI_GetBadStatusDecalData final
{
public:
	E_BAD_STATUS                                  Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2356[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusDecal_T>              OutRef;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          NoUse;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBaseTableInstance_C_BI_GetBadStatusDecalData) == 0x000008, "Wrong alignment on CharaBaseTableInstance_C_BI_GetBadStatusDecalData");
static_assert(sizeof(CharaBaseTableInstance_C_BI_GetBadStatusDecalData) == 0x000020, "Wrong size on CharaBaseTableInstance_C_BI_GetBadStatusDecalData");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusDecalData, Status) == 0x000000, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusDecalData::Status' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusDecalData, OutRef) == 0x000008, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusDecalData::OutRef' has a wrong offset!");
static_assert(offsetof(CharaBaseTableInstance_C_BI_GetBadStatusDecalData, NoUse) == 0x000018, "Member 'CharaBaseTableInstance_C_BI_GetBadStatusDecalData::NoUse' has a wrong offset!");

}

