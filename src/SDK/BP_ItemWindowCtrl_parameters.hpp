#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemWindowCtrl

#include "Basic.hpp"

#include "E_ITEMWINDOWCTRL_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.ExecuteUbergraph_BP_ItemWindowCtrl
// 0x0068 (0x0068 - 0x0000)
struct BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WIDGET_PRIO                                 K2Node_Event_InPrio;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E49[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    K2Node_Event_InScriptMessageAsset_1;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InLabel;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InExecutionText_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E4A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InFrame_1;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E4B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    K2Node_Event_InScriptMessageAsset;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIndex;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InExecutionText;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E4C[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InFrame;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InItemId;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InItemNum;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InItemAdd;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E4D[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ItemWindow_C*                       CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E4E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ItemGetMaxNum_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl) == 0x000008, "Wrong alignment on BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl");
static_assert(sizeof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl) == 0x000068, "Wrong size on BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, EntryPoint) == 0x000000, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InPrio) == 0x000004, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InPrio' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000005, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InScriptMessageAsset_1) == 0x000008, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InScriptMessageAsset_1' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InLabel) == 0x000010, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InLabel' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InExecutionText_1) == 0x000018, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InExecutionText_1' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InFrame_1) == 0x00001C, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InFrame_1' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InScriptMessageAsset) == 0x000028, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InIndex) == 0x000030, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InExecutionText) == 0x000034, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InFrame) == 0x000038, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InFrame' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InItemId) == 0x00003C, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InItemId' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InItemNum) == 0x000040, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InItemNum' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_InItemAdd) == 0x000044, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_InItemAdd' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_DeltaSeconds) == 0x000048, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004C, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_SwitchEnum_CmpSuccess) == 0x00004D, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, CallFunc_Create_ReturnValue) == 0x000050, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000058, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, CallFunc_ItemGetMaxNum_ReturnValue) == 0x00005C, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::CallFunc_ItemGetMaxNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, K2Node_Event_EndPlayReason) == 0x000060, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_ItemWindowCtrl_C_ExecuteUbergraph_BP_ItemWindowCtrl::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemWindowCtrl_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemWindowCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ItemWindowCtrl_C_ReceiveEndPlay");
static_assert(sizeof(BP_ItemWindowCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ItemWindowCtrl_C_ReceiveEndPlay");
static_assert(offsetof(BP_ItemWindowCtrl_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ItemWindowCtrl_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ItemWindowCtrl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemWindowCtrl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ItemWindowCtrl_C_ReceiveTick");
static_assert(sizeof(BP_ItemWindowCtrl_C_ReceiveTick) == 0x000004, "Wrong size on BP_ItemWindowCtrl_C_ReceiveTick");
static_assert(offsetof(BP_ItemWindowCtrl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ItemWindowCtrl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.IItemWindowSetParameter
// 0x000C (0x000C - 0x0000)
struct BP_ItemWindowCtrl_C_IItemWindowSetParameter final
{
public:
	int32                                         InItemId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemNum;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemAdd;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemWindowCtrl_C_IItemWindowSetParameter) == 0x000004, "Wrong alignment on BP_ItemWindowCtrl_C_IItemWindowSetParameter");
static_assert(sizeof(BP_ItemWindowCtrl_C_IItemWindowSetParameter) == 0x00000C, "Wrong size on BP_ItemWindowCtrl_C_IItemWindowSetParameter");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetParameter, InItemId) == 0x000000, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetParameter::InItemId' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetParameter, InItemNum) == 0x000004, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetParameter::InItemNum' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetParameter, InItemAdd) == 0x000008, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetParameter::InItemAdd' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.IItemWindowSetMessageByIndex
// 0x0018 (0x0018 - 0x0000)
struct BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E4F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InFrame;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex) == 0x000008, "Wrong alignment on BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex");
static_assert(sizeof(BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex) == 0x000018, "Wrong size on BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex, InScriptMessageAsset) == 0x000000, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex, InIndex) == 0x000008, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex, InExecutionText) == 0x00000C, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex, InFrame) == 0x000010, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessageByIndex::InFrame' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.IItemWindowSetMessage
// 0x0018 (0x0018 - 0x0000)
struct BP_ItemWindowCtrl_C_IItemWindowSetMessage final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E50[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InFrame;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemWindowCtrl_C_IItemWindowSetMessage) == 0x000008, "Wrong alignment on BP_ItemWindowCtrl_C_IItemWindowSetMessage");
static_assert(sizeof(BP_ItemWindowCtrl_C_IItemWindowSetMessage) == 0x000018, "Wrong size on BP_ItemWindowCtrl_C_IItemWindowSetMessage");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessage, InScriptMessageAsset) == 0x000000, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessage::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessage, InLabel) == 0x000008, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessage::InLabel' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessage, InExecutionText) == 0x000010, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessage::InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowSetMessage, InFrame) == 0x000014, "Member 'BP_ItemWindowCtrl_C_IItemWindowSetMessage::InFrame' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.IItemWindowCreate
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemWindowCtrl_C_IItemWindowCreate final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemWindowCtrl_C_IItemWindowCreate) == 0x000001, "Wrong alignment on BP_ItemWindowCtrl_C_IItemWindowCreate");
static_assert(sizeof(BP_ItemWindowCtrl_C_IItemWindowCreate) == 0x000001, "Wrong size on BP_ItemWindowCtrl_C_IItemWindowCreate");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowCreate, InPrio) == 0x000000, "Member 'BP_ItemWindowCtrl_C_IItemWindowCreate::InPrio' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.ChangeGstatusParam
// 0x0002 (0x0002 - 0x0000)
struct BP_ItemWindowCtrl_C_ChangeGstatusParam final
{
public:
	E_ITEMWINDOWCTRL                              InGStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InMain;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemWindowCtrl_C_ChangeGstatusParam) == 0x000001, "Wrong alignment on BP_ItemWindowCtrl_C_ChangeGstatusParam");
static_assert(sizeof(BP_ItemWindowCtrl_C_ChangeGstatusParam) == 0x000002, "Wrong size on BP_ItemWindowCtrl_C_ChangeGstatusParam");
static_assert(offsetof(BP_ItemWindowCtrl_C_ChangeGstatusParam, InGStatus) == 0x000000, "Member 'BP_ItemWindowCtrl_C_ChangeGstatusParam::InGStatus' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_ChangeGstatusParam, InMain) == 0x000001, "Member 'BP_ItemWindowCtrl_C_ChangeGstatusParam::InMain' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.Gstatus_WaitWindowOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemWindowCtrl_C_Gstatus_WaitWindowOpen final
{
public:
	bool                                          CallFunc_IsFinishedOpenWindow_OutFinished;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemWindowCtrl_C_Gstatus_WaitWindowOpen) == 0x000001, "Wrong alignment on BP_ItemWindowCtrl_C_Gstatus_WaitWindowOpen");
static_assert(sizeof(BP_ItemWindowCtrl_C_Gstatus_WaitWindowOpen) == 0x000001, "Wrong size on BP_ItemWindowCtrl_C_Gstatus_WaitWindowOpen");
static_assert(offsetof(BP_ItemWindowCtrl_C_Gstatus_WaitWindowOpen, CallFunc_IsFinishedOpenWindow_OutFinished) == 0x000000, "Member 'BP_ItemWindowCtrl_C_Gstatus_WaitWindowOpen::CallFunc_IsFinishedOpenWindow_OutFinished' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.Gstatus_WaitWindowClose
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemWindowCtrl_C_Gstatus_WaitWindowClose final
{
public:
	bool                                          CallFunc_IsFinishedCloseWindow_OutFinished;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemWindowCtrl_C_Gstatus_WaitWindowClose) == 0x000001, "Wrong alignment on BP_ItemWindowCtrl_C_Gstatus_WaitWindowClose");
static_assert(sizeof(BP_ItemWindowCtrl_C_Gstatus_WaitWindowClose) == 0x000001, "Wrong size on BP_ItemWindowCtrl_C_Gstatus_WaitWindowClose");
static_assert(offsetof(BP_ItemWindowCtrl_C_Gstatus_WaitWindowClose, CallFunc_IsFinishedCloseWindow_OutFinished) == 0x000000, "Member 'BP_ItemWindowCtrl_C_Gstatus_WaitWindowClose::CallFunc_IsFinishedCloseWindow_OutFinished' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.IIsFinishedItemWindowOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemWindowCtrl_C_IIsFinishedItemWindowOpen final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemWindowCtrl_C_IIsFinishedItemWindowOpen) == 0x000001, "Wrong alignment on BP_ItemWindowCtrl_C_IIsFinishedItemWindowOpen");
static_assert(sizeof(BP_ItemWindowCtrl_C_IIsFinishedItemWindowOpen) == 0x000001, "Wrong size on BP_ItemWindowCtrl_C_IIsFinishedItemWindowOpen");
static_assert(offsetof(BP_ItemWindowCtrl_C_IIsFinishedItemWindowOpen, OutFinished) == 0x000000, "Member 'BP_ItemWindowCtrl_C_IIsFinishedItemWindowOpen::OutFinished' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.IIsFinishedItemWindowClose
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemWindowCtrl_C_IIsFinishedItemWindowClose final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemWindowCtrl_C_IIsFinishedItemWindowClose) == 0x000001, "Wrong alignment on BP_ItemWindowCtrl_C_IIsFinishedItemWindowClose");
static_assert(sizeof(BP_ItemWindowCtrl_C_IIsFinishedItemWindowClose) == 0x000001, "Wrong size on BP_ItemWindowCtrl_C_IIsFinishedItemWindowClose");
static_assert(offsetof(BP_ItemWindowCtrl_C_IIsFinishedItemWindowClose, OutFinished) == 0x000000, "Member 'BP_ItemWindowCtrl_C_IIsFinishedItemWindowClose::OutFinished' has a wrong offset!");

// Function BP_ItemWindowCtrl.BP_ItemWindowCtrl_C.IItemWindowGetMessage
// 0x0010 (0x0010 - 0x0000)
struct BP_ItemWindowCtrl_C_IItemWindowGetMessage final
{
public:
	class UAtRichText*                            OutMessage;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtRichText*                            CallFunc_GetItemText_OutMessage;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemWindowCtrl_C_IItemWindowGetMessage) == 0x000008, "Wrong alignment on BP_ItemWindowCtrl_C_IItemWindowGetMessage");
static_assert(sizeof(BP_ItemWindowCtrl_C_IItemWindowGetMessage) == 0x000010, "Wrong size on BP_ItemWindowCtrl_C_IItemWindowGetMessage");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowGetMessage, OutMessage) == 0x000000, "Member 'BP_ItemWindowCtrl_C_IItemWindowGetMessage::OutMessage' has a wrong offset!");
static_assert(offsetof(BP_ItemWindowCtrl_C_IItemWindowGetMessage, CallFunc_GetItemText_OutMessage) == 0x000008, "Member 'BP_ItemWindowCtrl_C_IItemWindowGetMessage::CallFunc_GetItemText_OutMessage' has a wrong offset!");

}

