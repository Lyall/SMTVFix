#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillActionPointLight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SkillActionPointLight.SkillActionPointLight_C
// 0x00A8 (0x02C8 - 0x0220)
class ASkillActionPointLight_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLightComponent;                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Update_Color_D7CFFB1C41A306BF7DC0AE980144A1F2;     // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Update_FalloffExponent_D7CFFB1C41A306BF7DC0AE980144A1F2; // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Update_Radius_D7CFFB1C41A306BF7DC0AE980144A1F2;    // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Update_Intensity_D7CFFB1C41A306BF7DC0AE980144A1F2; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Update__Direction_D7CFFB1C41A306BF7DC0AE980144A1F2; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Update;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFollowSocket;                                    // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FollowSocketName;                                  // 0x025C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> FollowActor;                                       // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         GroupID;                                           // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          M_IsOverrideColor;                                 // 0x027C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           M_OverrideColor;                                   // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_OverrideIntensity;                               // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_OverrideRadius;                                  // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_IsOverrideIntensity;                             // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_IsOverrideRadius;                                // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         M_FalloffExponent;                                 // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_IsOverrideFalloffExponent;                       // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OffsetPos;                                         // 0x02A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<float>                                 M_DurationSec;                                     // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PrevLightScale;                                    // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SkillActionPointLight(int32 EntryPoint);
	void ActivateUpdateTimeline(class UCurveLinearColor* Color, const struct FLinearColor& OverrideColor, class UCurveFloat* Intensity, float OverrideIntensity, class UCurveFloat* Radius, float OverrideRadius, class UCurveFloat* FalloffExponent, float OverrideFalloffExponent);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Update__UpdateFunc();
	void Update__FinishedFunc();
	void UserConstructionScript();
	void UpdateLocation();
	void GetGroupID(int32* Param_GroupID);
	void CalcLightScale(float* RetVal);
	void SetLightParam(const struct FLinearColor& Color, float Intensity, float Radius, float FalloffExponent);
	void SetFollowSocket(TScriptInterface<class IBPI_CharaBaseAccessor_C> Param_FollowActor, class FName Param_FollowSocketName);
	void SetPlayRate(float Rate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SkillActionPointLight_C">();
	}
	static class ASkillActionPointLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASkillActionPointLight_C>();
	}
};
static_assert(alignof(ASkillActionPointLight_C) == 0x000008, "Wrong alignment on ASkillActionPointLight_C");
static_assert(sizeof(ASkillActionPointLight_C) == 0x0002C8, "Wrong size on ASkillActionPointLight_C");
static_assert(offsetof(ASkillActionPointLight_C, UberGraphFrame) == 0x000220, "Member 'ASkillActionPointLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, PointLightComponent) == 0x000228, "Member 'ASkillActionPointLight_C::PointLightComponent' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, Update_Color_D7CFFB1C41A306BF7DC0AE980144A1F2) == 0x000230, "Member 'ASkillActionPointLight_C::Update_Color_D7CFFB1C41A306BF7DC0AE980144A1F2' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, Update_FalloffExponent_D7CFFB1C41A306BF7DC0AE980144A1F2) == 0x000240, "Member 'ASkillActionPointLight_C::Update_FalloffExponent_D7CFFB1C41A306BF7DC0AE980144A1F2' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, Update_Radius_D7CFFB1C41A306BF7DC0AE980144A1F2) == 0x000244, "Member 'ASkillActionPointLight_C::Update_Radius_D7CFFB1C41A306BF7DC0AE980144A1F2' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, Update_Intensity_D7CFFB1C41A306BF7DC0AE980144A1F2) == 0x000248, "Member 'ASkillActionPointLight_C::Update_Intensity_D7CFFB1C41A306BF7DC0AE980144A1F2' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, Update__Direction_D7CFFB1C41A306BF7DC0AE980144A1F2) == 0x00024C, "Member 'ASkillActionPointLight_C::Update__Direction_D7CFFB1C41A306BF7DC0AE980144A1F2' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, Update) == 0x000250, "Member 'ASkillActionPointLight_C::Update' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, IsFollowSocket) == 0x000258, "Member 'ASkillActionPointLight_C::IsFollowSocket' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, FollowSocketName) == 0x00025C, "Member 'ASkillActionPointLight_C::FollowSocketName' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, FollowActor) == 0x000268, "Member 'ASkillActionPointLight_C::FollowActor' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, GroupID) == 0x000278, "Member 'ASkillActionPointLight_C::GroupID' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_IsOverrideColor) == 0x00027C, "Member 'ASkillActionPointLight_C::M_IsOverrideColor' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_OverrideColor) == 0x000280, "Member 'ASkillActionPointLight_C::M_OverrideColor' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_OverrideIntensity) == 0x000290, "Member 'ASkillActionPointLight_C::M_OverrideIntensity' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_OverrideRadius) == 0x000294, "Member 'ASkillActionPointLight_C::M_OverrideRadius' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_IsOverrideIntensity) == 0x000298, "Member 'ASkillActionPointLight_C::M_IsOverrideIntensity' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_IsOverrideRadius) == 0x000299, "Member 'ASkillActionPointLight_C::M_IsOverrideRadius' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_FalloffExponent) == 0x00029C, "Member 'ASkillActionPointLight_C::M_FalloffExponent' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_IsOverrideFalloffExponent) == 0x0002A0, "Member 'ASkillActionPointLight_C::M_IsOverrideFalloffExponent' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, OffsetPos) == 0x0002A4, "Member 'ASkillActionPointLight_C::OffsetPos' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, M_DurationSec) == 0x0002B0, "Member 'ASkillActionPointLight_C::M_DurationSec' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, PrevLightScale) == 0x0002C0, "Member 'ASkillActionPointLight_C::PrevLightScale' has a wrong offset!");
static_assert(offsetof(ASkillActionPointLight_C, PlayRate) == 0x0002C4, "Member 'ASkillActionPointLight_C::PlayRate' has a wrong offset!");

}

