#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaBodyComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CharaBodyComponent.CharaBodyComponent_C.Update
// 0x0030 (0x0030 - 0x0000)
struct CharaBodyComponent_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomPoseWeightTable*                 PoseWeightTable;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBodyComponent_C_Update) == 0x000008, "Wrong alignment on CharaBodyComponent_C_Update");
static_assert(sizeof(CharaBodyComponent_C_Update) == 0x000030, "Wrong size on CharaBodyComponent_C_Update");
static_assert(offsetof(CharaBodyComponent_C_Update, DeltaTime) == 0x000000, "Member 'CharaBodyComponent_C_Update::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_Update, Mesh) == 0x000008, "Member 'CharaBodyComponent_C_Update::Mesh' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_Update, PoseWeightTable) == 0x000010, "Member 'CharaBodyComponent_C_Update::PoseWeightTable' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_Update, IKEnable) == 0x000018, "Member 'CharaBodyComponent_C_Update::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_Update, GazePoint) == 0x00001C, "Member 'CharaBodyComponent_C_Update::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_Update, GazePointEnable) == 0x000028, "Member 'CharaBodyComponent_C_Update::GazePointEnable' has a wrong offset!");

// Function CharaBodyComponent.CharaBodyComponent_C.UpdateBodyRotation
// 0x0530 (0x0530 - 0x0000)
struct CharaBodyComponent_C_UpdateBodyRotation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomPoseWeightTable*                 PoseWeightTable;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PoseHorizontalMaxValue;                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PoseHorizontalMinValue;                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PoseVerticalMaxValue;                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PoseVerticalMinValue;                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BodyRotationTarget;                                // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         AngleHorizontalTarget;                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleVerticalTarget;                               // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FocalPointLocal;                                   // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GazePointLocal;                                    // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewPointLocal;                                    // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeCache;                                    // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromAtoB_ReturnValue;              // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_2;    // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_3;    // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_2;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_2;                      // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_3;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_2;                    // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_QuadraticFormula_X0;                      // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_QuadraticFormula_X1;                      // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_QuadraticFormula_ReturnValue;             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAtan2_ReturnValue_4;                   // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_3;                      // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue;          // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue_1;        // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0464(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_3;            // 0x0470(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0480(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x04B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBodyComponent_C_UpdateBodyRotation) == 0x000010, "Wrong alignment on CharaBodyComponent_C_UpdateBodyRotation");
static_assert(sizeof(CharaBodyComponent_C_UpdateBodyRotation) == 0x000530, "Wrong size on CharaBodyComponent_C_UpdateBodyRotation");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, DeltaTime) == 0x000000, "Member 'CharaBodyComponent_C_UpdateBodyRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, Mesh) == 0x000008, "Member 'CharaBodyComponent_C_UpdateBodyRotation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, PoseWeightTable) == 0x000010, "Member 'CharaBodyComponent_C_UpdateBodyRotation::PoseWeightTable' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, IKEnable) == 0x000018, "Member 'CharaBodyComponent_C_UpdateBodyRotation::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, GazePoint) == 0x00001C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, GazePointEnable) == 0x000028, "Member 'CharaBodyComponent_C_UpdateBodyRotation::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, PoseHorizontalMaxValue) == 0x00002C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::PoseHorizontalMaxValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, PoseHorizontalMinValue) == 0x000030, "Member 'CharaBodyComponent_C_UpdateBodyRotation::PoseHorizontalMinValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, PoseVerticalMaxValue) == 0x000034, "Member 'CharaBodyComponent_C_UpdateBodyRotation::PoseVerticalMaxValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, PoseVerticalMinValue) == 0x000038, "Member 'CharaBodyComponent_C_UpdateBodyRotation::PoseVerticalMinValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, BodyRotationTarget) == 0x00003C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::BodyRotationTarget' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, AngleHorizontalTarget) == 0x000048, "Member 'CharaBodyComponent_C_UpdateBodyRotation::AngleHorizontalTarget' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, AngleVerticalTarget) == 0x00004C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::AngleVerticalTarget' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, FocalPointLocal) == 0x000050, "Member 'CharaBodyComponent_C_UpdateBodyRotation::FocalPointLocal' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, GazePointLocal) == 0x00005C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::GazePointLocal' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, ViewPointLocal) == 0x000068, "Member 'CharaBodyComponent_C_UpdateBodyRotation::ViewPointLocal' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, DeltaTimeCache) == 0x000074, "Member 'CharaBodyComponent_C_UpdateBodyRotation::DeltaTimeCache' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FCeil_ReturnValue) == 0x000098, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FCeil_ReturnValue_1) == 0x00009C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000B0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000F0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F4, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FClamp_ReturnValue) == 0x0000F8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000FC, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000100, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FClamp_ReturnValue_1) == 0x000104, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000108, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00010C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FClamp_ReturnValue_2) == 0x000110, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000114, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000118, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FClamp_ReturnValue_3) == 0x00011C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_SelectFloat_ReturnValue) == 0x000120, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_RInterpTo_ReturnValue) == 0x000124, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000130, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x00013C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000148, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeRotFromAtoB_ReturnValue) == 0x000154, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeRotFromAtoB_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_X) == 0x000160, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_Y) == 0x000164, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_Z) == 0x000168, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_NegateRotator_ReturnValue) == 0x00016C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_DegAtan2_ReturnValue) == 0x000178, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeVector2D_ReturnValue) == 0x00017C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_2) == 0x000184, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_VSize2D_ReturnValue) == 0x000190, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_DegAtan2_ReturnValue_1) == 0x000194, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_VSizeSquared_ReturnValue) == 0x000198, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_3) == 0x00019C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_ComposeRotators_ReturnValue_1) == 0x0001A8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_VSizeSquared_ReturnValue_1) == 0x0001B4, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_ComposeRotators_ReturnValue_2) == 0x0001B8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001C4, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001C8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Sqrt_ReturnValue) == 0x0001D4, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_X_1) == 0x0001D8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_Y_1) == 0x0001DC, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_Z_1) == 0x0001E0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_X_2) == 0x0001E4, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_Y_2) == 0x0001E8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakVector_Z_2) == 0x0001EC, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_DegAtan2_ReturnValue_2) == 0x0001F0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_DegAtan2_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001F4, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FCeil_ReturnValue_2) == 0x0001FC, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FCeil_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_VSize2D_ReturnValue_1) == 0x000200, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000208, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_DegAtan2_ReturnValue_3) == 0x000218, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_DegAtan2_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FClamp_ReturnValue_4) == 0x00021C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_DegCos_ReturnValue) == 0x000220, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000224, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeVector2D_ReturnValue_2) == 0x000228, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000230, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_VSize2D_ReturnValue_2) == 0x000234, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_VSize2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_QuadraticFormula_X0) == 0x000238, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_QuadraticFormula_X0' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_QuadraticFormula_X1) == 0x00023C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_QuadraticFormula_X1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_QuadraticFormula_ReturnValue) == 0x000240, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_QuadraticFormula_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_DegAtan2_ReturnValue_4) == 0x000244, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_DegAtan2_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeVector_ReturnValue_1) == 0x000248, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FCeil_ReturnValue_3) == 0x000254, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FCeil_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000258, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000268, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000278, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_FClamp_ReturnValue_5) == 0x000288, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000290, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0002A0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002B0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_GetParentBone_ReturnValue) == 0x0002C0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_GetRefPoseTransform_ReturnValue) == 0x0002D0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_GetRefPoseTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_GetSocketTransform_ReturnValue) == 0x000300, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_ComposeTransforms_ReturnValue) == 0x000330, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_GetRefPoseTransform_ReturnValue_1) == 0x000360, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_GetRefPoseTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_InverseTransformLocation_ReturnValue) == 0x000390, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Location) == 0x00039C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Rotation) == 0x0003A8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Scale) == 0x0003B4, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_NegateRotator_ReturnValue_1) == 0x0003C0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeTransform_ReturnValue) == 0x0003D0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000400, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000410, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Location_1) == 0x000440, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Rotation_1) == 0x00044C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Scale_1) == 0x000458, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000464, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_ComposeRotators_ReturnValue_3) == 0x000470, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_ComposeRotators_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_MakeTransform_ReturnValue_1) == 0x000480, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_ComposeTransforms_ReturnValue_2) == 0x0004B0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_TransformLocation_ReturnValue) == 0x0004E0, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Location_2) == 0x0004EC, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Rotation_2) == 0x0004F8, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_BreakTransform_Scale_2) == 0x000504, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_TransformDirection_ReturnValue) == 0x000510, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBodyComponent_C_UpdateBodyRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00051C, "Member 'CharaBodyComponent_C_UpdateBodyRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

}

