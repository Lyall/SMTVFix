#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleCharaPanelCtrl

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelCreate
// 0x0002 (0x0002 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InStartPanel;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate) == 0x000002, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate, InPrio) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate::InPrio' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate, InStartPanel) == 0x000001, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCreate::InStartPanel' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelActorPanelOn
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn, IsSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOn::IsSingleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelActorPanelOff
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff, IsSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelActorPanelOff::IsSingleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelCalcHP
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InCalcHP;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP, InCalcHP) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHP::InCalcHP' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelCalcMP
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InCalcMP;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFlag;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP, InCalcMP) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP::InCalcMP' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP, InFlag) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcMP::InFlag' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetBst
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBst;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst, InBst) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBst::InBst' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelResetBst
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBst;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst, InBst) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetBst::InBst' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetReserveMPParam
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMp;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam, InMp) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveMPParam::InMp' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelResetReserveMPParam
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam, IsSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveMPParam::IsSingleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetPanelType
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InType;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType, InType) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelType::InType' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetParam
// 0x0330 (0x0330 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam final
{
public:
	int32                                         InType;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E2[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              InBtlParty;                                        // 0x0010(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam) == 0x000010, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam) == 0x000330, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam, InType) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam::InType' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam, InBtlParty) == 0x000010, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParam::InBtlParty' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetEmptyPanelStack
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InStartTime;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InOptionCheck;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InVisibleCheck;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack, InStartTime) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack::InStartTime' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack, InOptionCheck) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack::InOptionCheck' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack, InVisibleCheck) == 0x000009, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanelStack::InVisibleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSelectPanelOn
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn, InSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOn::InSingleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSelectPanelOff
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff, InSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSelectPanelOff::InSingleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelCalcHPNoLimit
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InCalcHP;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InLimitHp;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit, InCalcHP) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit::InCalcHP' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit, InLimitHp) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcHPNoLimit::InLimitHp' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetDamageAnimation
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation, IsSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetDamageAnimation::IsSingleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetRecoveryAnimation
// 0x0010 (0x0010 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InCalcParam;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InType;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation) == 0x000010, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation, IsSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation::IsSingleCheck' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation, InCalcParam) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation::InCalcParam' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation, InType) == 0x00000C, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetRecoveryAnimation::InType' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetSupport
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CNT                                     InSupport;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InValue;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport, InSupport) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport::InSupport' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport, InValue) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetSupport::InValue' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelResetSupport
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CNT                                     InSupport;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport, InSupport) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetSupport::InSupport' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSummonCharaPanelCreate
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InPartyIndex;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InUseSkillId;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate, InPrio) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate::InPrio' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate, InPartyIndex) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate::InPartyIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate, InUseSkillId) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelCreate::InUseSkillId' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSummonCharaPanelProc
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelProc final
{
public:
	bool                                          IsCanseled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelProc) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelProc");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelProc) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelProc");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelProc, IsCanseled) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelProc::IsCanseled' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSummonCharaPanelIsFinished
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelIsFinished final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelIsFinished) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelIsFinished");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelIsFinished) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelIsFinished");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelIsFinished, IsFinished) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonCharaPanelIsFinished::IsFinished' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleStatusCharaPanelCreate
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InStartPartyIndex;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate, InPrio) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate::InPrio' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate, InStartPartyIndex) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelCreate::InStartPartyIndex' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleStatusCharaPanelProc
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelProc final
{
public:
	bool                                          IsCanseled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelProc) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelProc");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelProc) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelProc");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelProc, IsCanseled) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelProc::IsCanseled' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleStatusCharaPanelIsFinished
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelIsFinished final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelIsFinished) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelIsFinished");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelIsFinished) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelIsFinished");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelIsFinished, IsFinished) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleStatusCharaPanelIsFinished::IsFinished' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSummonGetBattleInParty
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty final
{
public:
	int32                                         InType;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutParam;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty, InType) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty::InType' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty, InIndex) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty, OutParam) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonGetBattleInParty::OutParam' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSummonIsCanseled
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSummonIsCanseled final
{
public:
	bool                                          OutIsCanseled;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSummonIsCanseled) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSummonIsCanseled");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSummonIsCanseled) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSummonIsCanseled");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSummonIsCanseled, OutIsCanseled) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSummonIsCanseled::OutIsCanseled' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetBattleInterface
// 0x0020 (0x0020 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     InBPIBattleMain;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    InBPIBattleParty;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface) == 0x000008, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface) == 0x000020, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface, InBPIBattleMain) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface::InBPIBattleMain' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface, InBPIBattleParty) == 0x000010, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetBattleInterface::InBPIBattleParty' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleStatusGetPartyIndexByIndex
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutPartyIndex;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex, OutPartyIndex) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleStatusGetPartyIndexByIndex::OutPartyIndex' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleStatusIsCanseled
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleStatusIsCanseled final
{
public:
	bool                                          IsCanseled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleStatusIsCanseled) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleStatusIsCanseled");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleStatusIsCanseled) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleStatusIsCanseled");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleStatusIsCanseled, IsCanseled) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleStatusIsCanseled::IsCanseled' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSelectCharaPanelCreate
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InSelectType;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPartyIndex;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate, InPrio) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate::InPrio' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate, InSelectType) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate::InSelectType' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate, InPartyIndex) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelCreate::InPartyIndex' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSelectCharaPanelProc
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelProc final
{
public:
	bool                                          IsCanseled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelProc) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelProc");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelProc) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelProc");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelProc, IsCanseled) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelProc::IsCanseled' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSelectCharaPanelIsFinished
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsFinished final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsFinished) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsFinished");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsFinished) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsFinished");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsFinished, IsFinished) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsFinished::IsFinished' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSelectCharaPanelGetPartyIndexByIndex
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutPartyIndex;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex, OutPartyIndex) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelGetPartyIndexByIndex::OutPartyIndex' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleSelectCharaPanelIsCanseled
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsCanseled final
{
public:
	bool                                          IsCanseled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsCanseled) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsCanseled");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsCanseled) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsCanseled");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsCanseled, IsCanseled) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleSelectCharaPanelIsCanseled::IsCanseled' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelEnhanceAnimationOn
// 0x0004 (0x0004 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOn final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOn) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOn");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOn) == 0x000004, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOn");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOn, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOn::InIndex' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelEnhanceAnimationOff
// 0x0004 (0x0004 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOff final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOff) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOff");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOff) == 0x000004, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOff");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOff, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelEnhanceAnimationOff::InIndex' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelCalcKishibari
// 0x0010 (0x0010 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InCalcHP;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InHp;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InType;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari) == 0x000010, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari, InCalcHP) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari::InCalcHP' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari, InHp) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari::InHp' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari, InType) == 0x00000C, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcKishibari::InType' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelUpdateBst
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBst;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValue;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst, InBst) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst::InBst' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst, InValue) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelUpdateBst::InValue' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelIsFinishedBattleCharaPanel
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedBattleCharaPanel final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedBattleCharaPanel) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedBattleCharaPanel");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedBattleCharaPanel) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedBattleCharaPanel");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedBattleCharaPanel, OutFinished) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedBattleCharaPanel::OutFinished' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetPanelFadeOutStack
// 0x000C (0x000C - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InStartTime;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InOptionCheck;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InVisibleCheck;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutParam;                                          // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack) == 0x00000C, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack, InStartTime) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack::InStartTime' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack, InOptionCheck) == 0x000008, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack::InOptionCheck' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack, InVisibleCheck) == 0x000009, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack::InVisibleCheck' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack, OutParam) == 0x00000A, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetPanelFadeOutStack::OutParam' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetEmptyPanel
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel, OutParam) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetEmptyPanel::OutParam' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetParamStack
// 0x0340 (0x0340 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack final
{
public:
	int32                                         InType;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E8[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              InBtlParty;                                        // 0x0010(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         InStartTime;                                       // 0x0330(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InOptionCheck;                                     // 0x0334(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutParam;                                          // 0x0335(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack) == 0x000010, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack) == 0x000340, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack, InType) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack::InType' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack, InBtlParty) == 0x000010, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack::InBtlParty' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack, InStartTime) == 0x000330, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack::InStartTime' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack, InOptionCheck) == 0x000334, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack::InOptionCheck' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack, OutParam) == 0x000335, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetParamStack::OutParam' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelIsFinishedPanelFadeOut
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutFinished;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut, OutFinished) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedPanelFadeOut::OutFinished' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelCalcSupport
// 0x0340 (0x0340 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E9[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              InBtlParty;                                        // 0x0010(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          OutParam;                                          // 0x0330(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport) == 0x000010, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport) == 0x000340, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport, InBtlParty) == 0x000010, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport::InBtlParty' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport, OutParam) == 0x000330, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelCalcSupport::OutParam' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelStartPanel
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelStartPanel final
{
public:
	bool                                          OutParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelStartPanel) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelStartPanel");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelStartPanel) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelStartPanel");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelStartPanel, OutParam) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelStartPanel::OutParam' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelSetReserveHPParam
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InHp;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam, InHp) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelSetReserveHPParam::InHp' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelResetReserveHPParam
// 0x0008 (0x0008 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InSingleCheck;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam) == 0x000004, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam) == 0x000008, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam, InIndex) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam, InSingleCheck) == 0x000004, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelResetReserveHPParam::InSingleCheck' has a wrong offset!");

// Function BPI_BattleCharaPanelCtrl.BPI_BattleCharaPanelCtrl_C.IBattleCharaPanelIsFinishedInitialized
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedInitialized final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedInitialized) == 0x000001, "Wrong alignment on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedInitialized");
static_assert(sizeof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedInitialized) == 0x000001, "Wrong size on BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedInitialized");
static_assert(offsetof(BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedInitialized, OutFinished) == 0x000000, "Member 'BPI_BattleCharaPanelCtrl_C_IBattleCharaPanelIsFinishedInitialized::OutFinished' has a wrong offset!");

}

