#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventMissionBaseCommon

#include "Basic.hpp"

#include "E_EVENT_TOILETMARK_TYPE_structs.hpp"
#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.Character
// 0x0120 (0x0120 - 0x0000)
struct BP_EventMissionBaseCommon_C_Character final
{
public:
	class UClass*                                 Param_Class;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PosX;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PosY;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PosZ;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotZ;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FC4[0xF];                                     // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC5[0xC];                                     // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_Character) == 0x000010, "Wrong alignment on BP_EventMissionBaseCommon_C_Character");
static_assert(sizeof(BP_EventMissionBaseCommon_C_Character) == 0x000120, "Wrong size on BP_EventMissionBaseCommon_C_Character");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, Param_Class) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_Character::Param_Class' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, PosX) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_Character::PosX' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, PosY) == 0x00000C, "Member 'BP_EventMissionBaseCommon_C_Character::PosY' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, PosZ) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_Character::PosZ' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, RotZ) == 0x000014, "Member 'BP_EventMissionBaseCommon_C_Character::RotZ' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, Tag) == 0x000018, "Member 'BP_EventMissionBaseCommon_C_Character::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_IsValidClass_ReturnValue) == 0x000020, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakVector_X) == 0x000084, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakVector_Z) == 0x00008C, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakRotator_Roll) == 0x000090, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakRotator_Pitch) == 0x000094, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BreakRotator_Yaw) == 0x000098, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000A4, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_MakeRotator_ReturnValue) == 0x0000A8, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000B4, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_FinishSpawningActor_ReturnValue) == 0x000108, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_Array_AddUnique_ReturnValue) == 0x000110, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_Character, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000114, "Member 'BP_EventMissionBaseCommon_C_Character::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.SetLookAt
// 0x0001 (0x0001 - 0x0000)
struct BP_EventMissionBaseCommon_C_SetLookAt final
{
public:
	bool                                          LookAt;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_SetLookAt) == 0x000001, "Wrong alignment on BP_EventMissionBaseCommon_C_SetLookAt");
static_assert(sizeof(BP_EventMissionBaseCommon_C_SetLookAt) == 0x000001, "Wrong size on BP_EventMissionBaseCommon_C_SetLookAt");
static_assert(offsetof(BP_EventMissionBaseCommon_C_SetLookAt, LookAt) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_SetLookAt::LookAt' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.GetActive
// 0x0001 (0x0001 - 0x0000)
struct BP_EventMissionBaseCommon_C_GetActive final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_GetActive) == 0x000001, "Wrong alignment on BP_EventMissionBaseCommon_C_GetActive");
static_assert(sizeof(BP_EventMissionBaseCommon_C_GetActive) == 0x000001, "Wrong size on BP_EventMissionBaseCommon_C_GetActive");
static_assert(offsetof(BP_EventMissionBaseCommon_C_GetActive, Param_IsActive) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_GetActive::Param_IsActive' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.ToiletMark
// 0x0080 (0x0080 - 0x0000)
struct BP_EventMissionBaseCommon_C_ToiletMark final
{
public:
	E_EVENT_TOILETMARK_TYPE                       Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag;                                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       SpawnedActor;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FC8[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC9[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FCA[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_ToiletMark) == 0x000010, "Wrong alignment on BP_EventMissionBaseCommon_C_ToiletMark");
static_assert(sizeof(BP_EventMissionBaseCommon_C_ToiletMark) == 0x000080, "Wrong size on BP_EventMissionBaseCommon_C_ToiletMark");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, Type) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::Type' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, Tag) == 0x000004, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, SpawnedActor) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::SpawnedActor' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, CallFunc_SetStaticMesh_ReturnValue) == 0x000070, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, CallFunc_Array_AddUnique_ReturnValue) == 0x000074, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_ToiletMark, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000078, "Member 'BP_EventMissionBaseCommon_C_ToiletMark::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.AddCharacter
// 0x01C0 (0x01C0 - 0x0000)
struct BP_EventMissionBaseCommon_C_AddCharacter final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCB[0x8];                                     // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0130(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FCC[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_AddCharacter) == 0x000010, "Wrong alignment on BP_EventMissionBaseCommon_C_AddCharacter");
static_assert(sizeof(BP_EventMissionBaseCommon_C_AddCharacter) == 0x0001C0, "Wrong size on BP_EventMissionBaseCommon_C_AddCharacter");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, Character) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, Tag) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_GetTransform_ReturnValue_1) == 0x000040, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakTransform_Location_1) == 0x000094, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakTransform_Rotation_1) == 0x0000A0, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakTransform_Scale_1) == 0x0000AC, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakRotator_Roll) == 0x0000B8, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakRotator_Pitch) == 0x0000BC, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakRotator_Yaw) == 0x0000C0, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakRotator_Roll_1) == 0x0000C4, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakRotator_Pitch_1) == 0x0000C8, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_BreakRotator_Yaw_1) == 0x0000CC, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000E4, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_MakeRotator_ReturnValue) == 0x0000E8, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_Array_AddUnique_ReturnValue) == 0x0000F4, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000130, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001B8, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_AddCharacter, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001BC, "Member 'BP_EventMissionBaseCommon_C_AddCharacter::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.CreateMessageWindow
// 0x0038 (0x0038 - 0x0000)
struct BP_EventMissionBaseCommon_C_CreateMessageWindow final
{
public:
	EBgmScene                                     Scene;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Message_C*                          CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FCE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FCF[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetCurrentBGM_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBgmScene                                     CallFunc_GetBGMScene_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_CreateMessageWindow) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_CreateMessageWindow");
static_assert(sizeof(BP_EventMissionBaseCommon_C_CreateMessageWindow) == 0x000038, "Wrong size on BP_EventMissionBaseCommon_C_CreateMessageWindow");
static_assert(offsetof(BP_EventMissionBaseCommon_C_CreateMessageWindow, Scene) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_CreateMessageWindow::Scene' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_CreateMessageWindow, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_CreateMessageWindow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_CreateMessageWindow, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_CreateMessageWindow::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_CreateMessageWindow, CallFunc_Get_ReturnValue) == 0x000018, "Member 'BP_EventMissionBaseCommon_C_CreateMessageWindow::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_CreateMessageWindow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_EventMissionBaseCommon_C_CreateMessageWindow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_CreateMessageWindow, CallFunc_GetCurrentBGM_ReturnValue) == 0x000028, "Member 'BP_EventMissionBaseCommon_C_CreateMessageWindow::CallFunc_GetCurrentBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_CreateMessageWindow, CallFunc_GetBGMScene_ReturnValue) == 0x000030, "Member 'BP_EventMissionBaseCommon_C_CreateMessageWindow::CallFunc_GetBGMScene_ReturnValue' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.DeleteMessageWindow
// 0x0008 (0x0008 - 0x0000)
struct BP_EventMissionBaseCommon_C_DeleteMessageWindow final
{
public:
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_DeleteMessageWindow) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_DeleteMessageWindow");
static_assert(sizeof(BP_EventMissionBaseCommon_C_DeleteMessageWindow) == 0x000008, "Wrong size on BP_EventMissionBaseCommon_C_DeleteMessageWindow");
static_assert(offsetof(BP_EventMissionBaseCommon_C_DeleteMessageWindow, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_DeleteMessageWindow::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.IsPlayerLooking
// 0x0068 (0x0068 - 0x0000)
struct BP_EventMissionBaseCommon_C_IsPlayerLooking final
{
public:
	bool                                          IsLooking;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_IsPlayerLooking) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_IsPlayerLooking");
static_assert(sizeof(BP_EventMissionBaseCommon_C_IsPlayerLooking) == 0x000068, "Wrong size on BP_EventMissionBaseCommon_C_IsPlayerLooking");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, IsLooking) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::IsLooking' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000034, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_FindLookAtRotation_ReturnValue) == 0x000040, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_GetForwardVector_ReturnValue_1) == 0x00004C, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_Dot_VectorVector_ReturnValue) == 0x000058, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_DegAcos_ReturnValue) == 0x00005C, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_IsPlayerLooking, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_EventMissionBaseCommon_C_IsPlayerLooking::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.RegisterMissionIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_EventMissionBaseCommon_C_RegisterMissionIcon final
{
public:
	class AActor*                                 ThreeDCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_RegisterMissionIcon) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_RegisterMissionIcon");
static_assert(sizeof(BP_EventMissionBaseCommon_C_RegisterMissionIcon) == 0x000008, "Wrong size on BP_EventMissionBaseCommon_C_RegisterMissionIcon");
static_assert(offsetof(BP_EventMissionBaseCommon_C_RegisterMissionIcon, ThreeDCharacter) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_RegisterMissionIcon::ThreeDCharacter' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.StartMapEvent
// 0x0048 (0x0048 - 0x0000)
struct BP_EventMissionBaseCommon_C_StartMapEvent final
{
public:
	bool                                          PlayerVisible;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoStopPrioBGM;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayerCameraEnable;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoStopQuestBGM;                                    // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartMapEvent_Dummy;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetBGM_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetQuestMapBGM_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingPriorityBGM_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetCurrentBGM_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBgmScene                                     CallFunc_GetBGMScene_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD3[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_StartMapEvent) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_StartMapEvent");
static_assert(sizeof(BP_EventMissionBaseCommon_C_StartMapEvent) == 0x000048, "Wrong size on BP_EventMissionBaseCommon_C_StartMapEvent");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, PlayerVisible) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::PlayerVisible' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, NoStopPrioBGM) == 0x000001, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::NoStopPrioBGM' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, PlayerCameraEnable) == 0x000002, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::PlayerCameraEnable' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, NoStopQuestBGM) == 0x000003, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::NoStopQuestBGM' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, Dummy) == 0x000004, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_StartMapEvent_Dummy) == 0x000007, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_StartMapEvent_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, Temp_bool_Variable) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_Get_ReturnValue) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_GetBGM_ReturnValue) == 0x000018, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_GetBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_GetQuestMapBGM_ReturnValue) == 0x000020, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_GetQuestMapBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_IsPlayingPriorityBGM_ReturnValue) == 0x000028, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_IsPlayingPriorityBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_GetCurrentBGM_ReturnValue) == 0x000030, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_GetCurrentBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, CallFunc_GetBGMScene_ReturnValue) == 0x00003A, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::CallFunc_GetBGMScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEvent, K2Node_Select_Default) == 0x000040, "Member 'BP_EventMissionBaseCommon_C_StartMapEvent::K2Node_Select_Default' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.EndMapEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_EventMissionBaseCommon_C_EndMapEvent final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndMapEvent_Dummy;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_EndMapEvent) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_EndMapEvent");
static_assert(sizeof(BP_EventMissionBaseCommon_C_EndMapEvent) == 0x000018, "Wrong size on BP_EventMissionBaseCommon_C_EndMapEvent");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEvent, Dummy) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_EndMapEvent::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEvent, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_EndMapEvent::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEvent, CallFunc_EndMapEvent_Dummy) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_EndMapEvent::CallFunc_EndMapEvent_Dummy' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.StartMapEventEx
// 0x0028 (0x0028 - 0x0000)
struct BP_EventMissionBaseCommon_C_StartMapEventEx final
{
public:
	bool                                          PlayerVisible;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          BGMCue;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoStopPrioBGM;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayerCameraEnable;                                // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD6[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartMapEvent_Dummy;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_StartMapEventEx) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_StartMapEventEx");
static_assert(sizeof(BP_EventMissionBaseCommon_C_StartMapEventEx) == 0x000028, "Wrong size on BP_EventMissionBaseCommon_C_StartMapEventEx");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEventEx, PlayerVisible) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_StartMapEventEx::PlayerVisible' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEventEx, BGMCue) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_StartMapEventEx::BGMCue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEventEx, NoStopPrioBGM) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_StartMapEventEx::NoStopPrioBGM' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEventEx, PlayerCameraEnable) == 0x000011, "Member 'BP_EventMissionBaseCommon_C_StartMapEventEx::PlayerCameraEnable' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEventEx, Dummy) == 0x000012, "Member 'BP_EventMissionBaseCommon_C_StartMapEventEx::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEventEx, CallFunc_Get_ReturnValue) == 0x000018, "Member 'BP_EventMissionBaseCommon_C_StartMapEventEx::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_StartMapEventEx, CallFunc_StartMapEvent_Dummy) == 0x000020, "Member 'BP_EventMissionBaseCommon_C_StartMapEventEx::CallFunc_StartMapEvent_Dummy' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.EndMapEventEx
// 0x0020 (0x0020 - 0x0000)
struct BP_EventMissionBaseCommon_C_EndMapEventEx final
{
public:
	EBgmScene                                     BGMScene;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD7[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndMapEvent_Dummy;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingPriorityENV_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD8[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_EndMapEventEx) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_EndMapEventEx");
static_assert(sizeof(BP_EventMissionBaseCommon_C_EndMapEventEx) == 0x000020, "Wrong size on BP_EventMissionBaseCommon_C_EndMapEventEx");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventEx, BGMScene) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_EndMapEventEx::BGMScene' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventEx, Dummy) == 0x000001, "Member 'BP_EventMissionBaseCommon_C_EndMapEventEx::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventEx, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_EndMapEventEx::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventEx, CallFunc_EndMapEvent_Dummy) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_EndMapEventEx::CallFunc_EndMapEvent_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventEx, CallFunc_IsPlayingPriorityENV_ReturnValue) == 0x000011, "Member 'BP_EventMissionBaseCommon_C_EndMapEventEx::CallFunc_IsPlayingPriorityENV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventEx, CallFunc_Get_ReturnValue_1) == 0x000018, "Member 'BP_EventMissionBaseCommon_C_EndMapEventEx::CallFunc_Get_ReturnValue_1' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.BPI_CheckMissionEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventMissionBaseCommon_C_BPI_CheckMissionEvent final
{
public:
	bool                                          MissionEvent;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_BPI_CheckMissionEvent) == 0x000001, "Wrong alignment on BP_EventMissionBaseCommon_C_BPI_CheckMissionEvent");
static_assert(sizeof(BP_EventMissionBaseCommon_C_BPI_CheckMissionEvent) == 0x000001, "Wrong size on BP_EventMissionBaseCommon_C_BPI_CheckMissionEvent");
static_assert(offsetof(BP_EventMissionBaseCommon_C_BPI_CheckMissionEvent, MissionEvent) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_BPI_CheckMissionEvent::MissionEvent' has a wrong offset!");

// Function BP_EventMissionBaseCommon.BP_EventMissionBaseCommon_C.EndMapEventRyuketsu
// 0x0018 (0x0018 - 0x0000)
struct BP_EventMissionBaseCommon_C_EndMapEventRyuketsu final
{
public:
	int32                                         RyuketsuIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallRyuketsu_Success;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingPriorityENV_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEndMapEventParam_Dummy;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventMissionBaseCommon_C_EndMapEventRyuketsu) == 0x000008, "Wrong alignment on BP_EventMissionBaseCommon_C_EndMapEventRyuketsu");
static_assert(sizeof(BP_EventMissionBaseCommon_C_EndMapEventRyuketsu) == 0x000018, "Wrong size on BP_EventMissionBaseCommon_C_EndMapEventRyuketsu");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventRyuketsu, RyuketsuIndex) == 0x000000, "Member 'BP_EventMissionBaseCommon_C_EndMapEventRyuketsu::RyuketsuIndex' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventRyuketsu, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventMissionBaseCommon_C_EndMapEventRyuketsu::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventRyuketsu, CallFunc_CallRyuketsu_Success) == 0x000010, "Member 'BP_EventMissionBaseCommon_C_EndMapEventRyuketsu::CallFunc_CallRyuketsu_Success' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventRyuketsu, CallFunc_IsPlayingPriorityENV_ReturnValue) == 0x000011, "Member 'BP_EventMissionBaseCommon_C_EndMapEventRyuketsu::CallFunc_IsPlayingPriorityENV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventMissionBaseCommon_C_EndMapEventRyuketsu, CallFunc_SetEndMapEventParam_Dummy) == 0x000012, "Member 'BP_EventMissionBaseCommon_C_EndMapEventRyuketsu::CallFunc_SetEndMapEventParam_Dummy' has a wrong offset!");

}

