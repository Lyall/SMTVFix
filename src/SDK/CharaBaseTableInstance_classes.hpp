#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaBaseTableInstance

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "DevilPerformance_T_structs.hpp"
#include "BadStatusNecessaries_T_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BadStatusNecessaries_Array_structs.hpp"
#include "BadStatusParticles_T_structs.hpp"
#include "CharaAttachParticle_T_structs.hpp"
#include "DeadActionParticles_T_structs.hpp"
#include "BadStatusParticles_Array_structs.hpp"
#include "E_DEVIL_PERFORMANCE_TYPE_structs.hpp"
#include "BadStatusDecal_T_structs.hpp"
#include "BadStatusDecal_Array_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CharaBaseTableInstance.CharaBaseTableInstance_C
// 0x0380 (0x05A0 - 0x0220)
class ACharaBaseTableInstance_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FBadStatusNecessaries_T> BadStatusNecessaries;                              // 0x0230(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FBadStatusParticles_T> BadStatusParticles;                                // 0x0280(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FName, struct FCharaAttachParticle_T> CharaAttachParticle;                               // 0x02D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FDeadActionParticles_T> DeadActionParticle;                                // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FDevilPerformance_T> DevilPerformance;                                  // 0x0370(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_BAD_STATUS, struct FBadStatusNecessaries_Array> BadStatusNecessaries_List;                         // 0x03C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_BAD_STATUS, struct FBadStatusParticles_Array> BadStatusParticles_List;                           // 0x0410(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_BTL_DEAD_EFFECT, struct FDeadActionParticles_T> DeadActionParticle_List;                           // 0x0460(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_DEVIL_PERFORMANCE_TYPE, struct FDevilPerformance_T> DevilPerformance_List;                             // 0x04B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FBadStatusDecal_T>   BadStatusDecal;                                    // 0x0500(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<E_BAD_STATUS, struct FBadStatusDecal_Array> BadStatusDecal_List;                               // 0x0550(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_CharaBaseTableInstance(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Load_BadStatusNecessaries();
	void Load_BadStatusParticle();
	void Load_CharaAttachParticle();
	void Load_DeadActionParticle();
	void Load_DevilPerformance();
	void Get_BadStatusNecessaries(TMap<class FName, struct FBadStatusNecessaries_T>* Param_BadStatusNecessaries);
	void Get_BadStatusParticle(TMap<class FName, struct FBadStatusParticles_T>* Param_BadStatusParticles);
	void Get_CharaAttachParticle(TMap<class FName, struct FCharaAttachParticle_T>* Param_CharaAttachParticle);
	void Get_DeadActionParticle(TMap<class FName, struct FDeadActionParticles_T>* Param_DeadActionParticle);
	void Get_DevilPerformance(TMap<class FName, struct FDevilPerformance_T>* Param_DevilPerformance);
	void Get_BadStatusNecessaries_List(TMap<E_BAD_STATUS, struct FBadStatusNecessaries_Array>* List);
	void Get_BadStatusParticle_List(TMap<E_BAD_STATUS, struct FBadStatusParticles_Array>* List);
	void Get_DeadActionParticle_List(TMap<E_BTL_DEAD_EFFECT, struct FDeadActionParticles_T>* List);
	void Get_DevilPerformance_List(TMap<E_DEVIL_PERFORMANCE_TYPE, struct FDevilPerformance_T>* List);
	void Get_BadStatusParticle_Data(E_BAD_STATUS Status, TArray<struct FBadStatusParticles_T>& OutRef);
	void Get_BadStatusNecessaries_Data(E_BAD_STATUS Status, TArray<struct FBadStatusNecessaries_T>& OutRef, bool* Valid);
	void Get_DeadActionParticle_Data(E_BTL_DEAD_EFFECT DeadEffect, struct FDeadActionParticles_T& DeadAction, bool* Valid);
	void Get_DevilPerformance_Data(E_DEVIL_PERFORMANCE_TYPE NewParam, struct FDevilPerformance_T& Param_DevilPerformance, bool* Valid);
	void Load_BadStatusDecal();
	void Get_BadStatusDecal_List(TMap<E_BAD_STATUS, struct FBadStatusDecal_Array>* List);
	void Get_BadStatusDecal_Data(E_BAD_STATUS Status, TArray<struct FBadStatusDecal_T>& OutRef);
	void BI_GetBadStatusSecessariesData(E_BAD_STATUS Status, TArray<struct FBadStatusNecessaries_T>& OutRef, bool* Valid);
	void BI_GetBadStatusParticleData(E_BAD_STATUS Status, TArray<struct FBadStatusParticles_T>& OutRef, bool* NoUse);
	void BI_GetDeadActionParticleData(E_BTL_DEAD_EFFECT DeadEffect, struct FDeadActionParticles_T& OutRef, bool* Valid);
	void BI_GetDevilPerformanceData(E_DEVIL_PERFORMANCE_TYPE Performance, struct FDevilPerformance_T& OutRef, bool* Valid);
	void BI_GetCharaAttachParticle(TMap<class FName, struct FCharaAttachParticle_T>* Param_CharaAttachParticle);
	void BI_GetBadStatusDecalData(E_BAD_STATUS Status, TArray<struct FBadStatusDecal_T>& OutRef, bool* NoUse);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharaBaseTableInstance_C">();
	}
	static class ACharaBaseTableInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharaBaseTableInstance_C>();
	}
};
static_assert(alignof(ACharaBaseTableInstance_C) == 0x000008, "Wrong alignment on ACharaBaseTableInstance_C");
static_assert(sizeof(ACharaBaseTableInstance_C) == 0x0005A0, "Wrong size on ACharaBaseTableInstance_C");
static_assert(offsetof(ACharaBaseTableInstance_C, UberGraphFrame) == 0x000220, "Member 'ACharaBaseTableInstance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, DefaultSceneRoot) == 0x000228, "Member 'ACharaBaseTableInstance_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, BadStatusNecessaries) == 0x000230, "Member 'ACharaBaseTableInstance_C::BadStatusNecessaries' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, BadStatusParticles) == 0x000280, "Member 'ACharaBaseTableInstance_C::BadStatusParticles' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, CharaAttachParticle) == 0x0002D0, "Member 'ACharaBaseTableInstance_C::CharaAttachParticle' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, DeadActionParticle) == 0x000320, "Member 'ACharaBaseTableInstance_C::DeadActionParticle' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, DevilPerformance) == 0x000370, "Member 'ACharaBaseTableInstance_C::DevilPerformance' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, BadStatusNecessaries_List) == 0x0003C0, "Member 'ACharaBaseTableInstance_C::BadStatusNecessaries_List' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, BadStatusParticles_List) == 0x000410, "Member 'ACharaBaseTableInstance_C::BadStatusParticles_List' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, DeadActionParticle_List) == 0x000460, "Member 'ACharaBaseTableInstance_C::DeadActionParticle_List' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, DevilPerformance_List) == 0x0004B0, "Member 'ACharaBaseTableInstance_C::DevilPerformance_List' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, BadStatusDecal) == 0x000500, "Member 'ACharaBaseTableInstance_C::BadStatusDecal' has a wrong offset!");
static_assert(offsetof(ACharaBaseTableInstance_C, BadStatusDecal_List) == 0x000550, "Member 'ACharaBaseTableInstance_C::BadStatusDecal_List' has a wrong offset!");

}

