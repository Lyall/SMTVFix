#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DG_RoomRotator

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BP_DG_RoomRotator.BP_DG_RoomRotator_C.ExecuteUbergraph_BP_DG_RoomRotator
// 0x0038 (0x0038 - 0x0000)
struct BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_90E0[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90E1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator) == 0x000008, "Wrong alignment on BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator");
static_assert(sizeof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator) == 0x000038, "Wrong size on BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator");
static_assert(offsetof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator, EntryPoint) == 0x000000, "Member 'BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator, CallFunc_GetGameMode_ReturnValue) == 0x000020, "Member 'BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000028, "Member 'BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_DG_RoomRotator_C_ExecuteUbergraph_BP_DG_RoomRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_DG_RoomRotator.BP_DG_RoomRotator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DG_RoomRotator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DG_RoomRotator_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DG_RoomRotator_C_ReceiveTick");
static_assert(sizeof(BP_DG_RoomRotator_C_ReceiveTick) == 0x000004, "Wrong size on BP_DG_RoomRotator_C_ReceiveTick");
static_assert(offsetof(BP_DG_RoomRotator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DG_RoomRotator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DG_RoomRotator.BP_DG_RoomRotator_C.StartRotate_BP
// 0x0078 (0x0078 - 0x0000)
struct BP_DG_RoomRotator_C_StartRotate_BP final
{
public:
	E_DG_ROOM_ROTATOR_STATE                       Param_RotateDirection;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90E2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RotateCount;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_CameraActor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90E3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_90E4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GimicChestTakara_C> K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_90E5[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMovePiece_MovePiece;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_90E6[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DG_RoomRotator_C_StartRotate_BP) == 0x000008, "Wrong alignment on BP_DG_RoomRotator_C_StartRotate_BP");
static_assert(sizeof(BP_DG_RoomRotator_C_StartRotate_BP) == 0x000078, "Wrong size on BP_DG_RoomRotator_C_StartRotate_BP");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, Param_RotateDirection) == 0x000000, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::Param_RotateDirection' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, RotateCount) == 0x000004, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::RotateCount' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, Param_CameraActor) == 0x000008, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::Param_CameraActor' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara) == 0x000030, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_BPI_GetMovePiece_MovePiece) == 0x000048, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_BPI_GetMovePiece_MovePiece' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, K2Node_DynamicCast_AsBPI_Move_Piece) == 0x000060, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::K2Node_DynamicCast_AsBPI_Move_Piece' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_StartRotate_BP, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_DG_RoomRotator_C_StartRotate_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_DG_RoomRotator.BP_DG_RoomRotator_C.EndRotate_BP
// 0x0058 (0x0058 - 0x0000)
struct BP_DG_RoomRotator_C_EndRotate_BP final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90E7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_90E8[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GimicChestTakara_C> K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara;       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_90E9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMovePiece_MovePiece;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DG_RoomRotator_C_EndRotate_BP) == 0x000008, "Wrong alignment on BP_DG_RoomRotator_C_EndRotate_BP");
static_assert(sizeof(BP_DG_RoomRotator_C_EndRotate_BP) == 0x000058, "Wrong size on BP_DG_RoomRotator_C_EndRotate_BP");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara) == 0x000020, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, CallFunc_BPI_GetMovePiece_MovePiece) == 0x000038, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::CallFunc_BPI_GetMovePiece_MovePiece' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, K2Node_DynamicCast_AsBPI_Move_Piece) == 0x000040, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::K2Node_DynamicCast_AsBPI_Move_Piece' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DG_RoomRotator_C_EndRotate_BP, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_DG_RoomRotator_C_EndRotate_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

