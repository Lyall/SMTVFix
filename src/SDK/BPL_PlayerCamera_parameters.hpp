#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_PlayerCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.GetPlayerSpringArm
// 0x0020 (0x0020 - 0x0000)
struct BPL_PlayerCamera_C_GetPlayerSpringArm final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomSpringArmComponent*              PlayerSpringArmComponent;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomSpringArmComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerCamera_C_GetPlayerSpringArm) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_GetPlayerSpringArm");
static_assert(sizeof(BPL_PlayerCamera_C_GetPlayerSpringArm) == 0x000020, "Wrong size on BPL_PlayerCamera_C_GetPlayerSpringArm");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerSpringArm, __WorldContext) == 0x000000, "Member 'BPL_PlayerCamera_C_GetPlayerSpringArm::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerSpringArm, PlayerSpringArmComponent) == 0x000008, "Member 'BPL_PlayerCamera_C_GetPlayerSpringArm::PlayerSpringArmComponent' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerSpringArm, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BPL_PlayerCamera_C_GetPlayerSpringArm::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerSpringArm, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BPL_PlayerCamera_C_GetPlayerSpringArm::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.SendDiscardPlayerSpringArmLagRequest
// 0x0020 (0x0020 - 0x0000)
struct BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomSpringArmComponent*              CallFunc_GetPlayerSpringArm_PlayerSpringArmComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest");
static_assert(sizeof(BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest) == 0x000020, "Wrong size on BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest");
static_assert(offsetof(BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest, __WorldContext) == 0x000000, "Member 'BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest, Success) == 0x000008, "Member 'BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest::Success' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest, CallFunc_GetPlayerSpringArm_PlayerSpringArmComponent) == 0x000010, "Member 'BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest::CallFunc_GetPlayerSpringArm_PlayerSpringArmComponent' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPL_PlayerCamera_C_SendDiscardPlayerSpringArmLagRequest::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.GetPlayerCamera
// 0x0020 (0x0020 - 0x0000)
struct BPL_PlayerCamera_C_GetPlayerCamera final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       PlayerCamera;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerCamera_C_GetPlayerCamera) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_GetPlayerCamera");
static_assert(sizeof(BPL_PlayerCamera_C_GetPlayerCamera) == 0x000020, "Wrong size on BPL_PlayerCamera_C_GetPlayerCamera");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerCamera, __WorldContext) == 0x000000, "Member 'BPL_PlayerCamera_C_GetPlayerCamera::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerCamera, PlayerCamera) == 0x000008, "Member 'BPL_PlayerCamera_C_GetPlayerCamera::PlayerCamera' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BPL_PlayerCamera_C_GetPlayerCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetPlayerCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BPL_PlayerCamera_C_GetPlayerCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.GetDefaultPlayerCameraFOV
// 0x0030 (0x0030 - 0x0000)
struct BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultFOV;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B00[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDefaultFOV_DefaultFOV;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV");
static_assert(sizeof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV) == 0x000030, "Wrong size on BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV");
static_assert(offsetof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV, __WorldContext) == 0x000000, "Member 'BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV, DefaultFOV) == 0x000008, "Member 'BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV::DefaultFOV' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager) == 0x000018, "Member 'BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV, CallFunc_GetDefaultFOV_DefaultFOV) == 0x00002C, "Member 'BPL_PlayerCamera_C_GetDefaultPlayerCameraFOV::CallFunc_GetDefaultFOV_DefaultFOV' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.Set View Target with Blend Curve
// 0x0040 (0x0040 - 0x0000)
struct BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve final
{
public:
	class UObject*                                PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewViewTarget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B01[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCurveFloat*                      BlendCurve;                                        // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceOverwrite;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B02[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPlayerController*                K2Node_DynamicCast_AsCustom_Player_Controller;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve");
static_assert(sizeof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve) == 0x000040, "Wrong size on BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, PlayerController) == 0x000000, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::PlayerController' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, NewViewTarget) == 0x000008, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::NewViewTarget' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, BlendTime) == 0x000010, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::BlendTime' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, BlendCurve) == 0x000018, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::BlendCurve' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, bForceOverwrite) == 0x000020, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::bForceOverwrite' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, __WorldContext) == 0x000028, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, K2Node_DynamicCast_AsCustom_Player_Controller) == 0x000030, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::K2Node_DynamicCast_AsCustom_Player_Controller' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Curve::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.Set View Target with Blend Quartanion
// 0x0038 (0x0038 - 0x0000)
struct BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion final
{
public:
	class UObject*                                PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewViewTarget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      BlendFunc;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B03[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendExp;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLockOutgoing;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bForceOverwrite;                                   // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B04[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPlayerController*                K2Node_DynamicCast_AsCustom_Player_Controller;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion");
static_assert(sizeof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion) == 0x000038, "Wrong size on BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, PlayerController) == 0x000000, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::PlayerController' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, NewViewTarget) == 0x000008, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::NewViewTarget' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, BlendTime) == 0x000010, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::BlendTime' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, BlendFunc) == 0x000014, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::BlendFunc' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, BlendExp) == 0x000018, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::BlendExp' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, bLockOutgoing) == 0x00001C, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::bLockOutgoing' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, bForceOverwrite) == 0x00001D, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::bForceOverwrite' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, __WorldContext) == 0x000020, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, K2Node_DynamicCast_AsCustom_Player_Controller) == 0x000028, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::K2Node_DynamicCast_AsCustom_Player_Controller' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_PlayerCamera_C_Set_View_Target_with_Blend_Quartanion::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.ResetPlayerCameraRotation
// 0x0068 (0x0068 - 0x0000)
struct BPL_PlayerCamera_C_ResetPlayerCameraRotation final
{
public:
	bool                                          UseDelay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B05[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B06[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMapEventPlaying_IsMapEventPlaying;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SendDiscardPlayerSpringArmLagRequest_Success; // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B07[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectPlayerController_C> K2Node_DynamicCast_AsBPI_Project_Player_Controller; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B08[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetInitRotation_InitRotation;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_ResetPlayerCameraRotation) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_ResetPlayerCameraRotation");
static_assert(sizeof(BPL_PlayerCamera_C_ResetPlayerCameraRotation) == 0x000068, "Wrong size on BPL_PlayerCamera_C_ResetPlayerCameraRotation");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, UseDelay) == 0x000000, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::UseDelay' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, __WorldContext) == 0x000008, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000020, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, CallFunc_IsMapEventPlaying_IsMapEventPlaying) == 0x000031, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::CallFunc_IsMapEventPlaying_IsMapEventPlaying' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, CallFunc_SendDiscardPlayerSpringArmLagRequest_Success) == 0x000032, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::CallFunc_SendDiscardPlayerSpringArmLagRequest_Success' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, CallFunc_GetPlayerController_ReturnValue_1) == 0x000040, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, K2Node_DynamicCast_AsBPI_Project_Player_Controller) == 0x000048, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::K2Node_DynamicCast_AsBPI_Project_Player_Controller' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ResetPlayerCameraRotation, CallFunc_GetInitRotation_InitRotation) == 0x00005C, "Member 'BPL_PlayerCamera_C_ResetPlayerCameraRotation::CallFunc_GetInitRotation_InitRotation' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.SetPlayerCameraRotation
// 0x0048 (0x0048 - 0x0000)
struct BPL_PlayerCamera_C_SetPlayerCameraRotation final
{
public:
	bool                                          UseDelay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B09[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               NewRotation;                                       // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMapEventPlaying_IsMapEventPlaying;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SendDiscardPlayerSpringArmLagRequest_Success; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0B[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerCamera_C_SetPlayerCameraRotation) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_SetPlayerCameraRotation");
static_assert(sizeof(BPL_PlayerCamera_C_SetPlayerCameraRotation) == 0x000048, "Wrong size on BPL_PlayerCamera_C_SetPlayerCameraRotation");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, UseDelay) == 0x000000, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::UseDelay' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, NewRotation) == 0x000004, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::NewRotation' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, __WorldContext) == 0x000010, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000028, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, CallFunc_IsMapEventPlaying_IsMapEventPlaying) == 0x000039, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::CallFunc_IsMapEventPlaying_IsMapEventPlaying' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, CallFunc_SendDiscardPlayerSpringArmLagRequest_Success) == 0x00003A, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::CallFunc_SendDiscardPlayerSpringArmLagRequest_Success' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_SetPlayerCameraRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BPL_PlayerCamera_C_SetPlayerCameraRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.TryForceUpdatePlayerCameraCache
// 0x0020 (0x0020 - 0x0000)
struct BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPlayerCameraManager*             K2Node_DynamicCast_AsCustom_Player_Camera_Manager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache");
static_assert(sizeof(BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache) == 0x000020, "Wrong size on BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache");
static_assert(offsetof(BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache, __WorldContext) == 0x000000, "Member 'BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache, K2Node_DynamicCast_AsCustom_Player_Camera_Manager) == 0x000010, "Member 'BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache::K2Node_DynamicCast_AsCustom_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPL_PlayerCamera_C_TryForceUpdatePlayerCameraCache::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.ForceImmediateCameraHeightAdjust
// 0x0040 (0x0040 - 0x0000)
struct BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Player_Camera_Root_Init_dummy;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust");
static_assert(sizeof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust) == 0x000040, "Wrong size on BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, __WorldContext) == 0x000000, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, K2Node_DynamicCast_AsPlayer_Base) == 0x000018, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager) == 0x000028, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust, CallFunc_Player_Camera_Root_Init_dummy) == 0x000039, "Member 'BPL_PlayerCamera_C_ForceImmediateCameraHeightAdjust::CallFunc_Player_Camera_Root_Init_dummy' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.Immediate Temp Toggle Dither State
// 0x0040 (0x0040 - 0x0000)
struct BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State final
{
public:
	bool                                          ForceDitherOff;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraDitherComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CameraDither_C>   K2Node_DynamicCast_AsBPI_Camera_Dither;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_TempToggleDitherState_Immediate_dummy; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State");
static_assert(sizeof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State) == 0x000040, "Wrong size on BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, ForceDitherOff) == 0x000000, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::ForceDitherOff' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, __WorldContext) == 0x000008, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, K2Node_DynamicCast_AsBPI_Camera_Dither) == 0x000028, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::K2Node_DynamicCast_AsBPI_Camera_Dither' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, CallFunc_BPI_TempToggleDitherState_Immediate_dummy) == 0x000039, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::CallFunc_BPI_TempToggleDitherState_Immediate_dummy' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'BPL_PlayerCamera_C_Immediate_Temp_Toggle_Dither_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPL_PlayerCamera.BPL_PlayerCamera_C.ReapplyDitherState
// 0x0020 (0x0020 - 0x0000)
struct BPL_PlayerCamera_C_ReapplyDitherState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraDitherComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerCamera_C_ReapplyDitherState) == 0x000008, "Wrong alignment on BPL_PlayerCamera_C_ReapplyDitherState");
static_assert(sizeof(BPL_PlayerCamera_C_ReapplyDitherState) == 0x000020, "Wrong size on BPL_PlayerCamera_C_ReapplyDitherState");
static_assert(offsetof(BPL_PlayerCamera_C_ReapplyDitherState, __WorldContext) == 0x000000, "Member 'BPL_PlayerCamera_C_ReapplyDitherState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ReapplyDitherState, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BPL_PlayerCamera_C_ReapplyDitherState::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ReapplyDitherState, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BPL_PlayerCamera_C_ReapplyDitherState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ReapplyDitherState, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPL_PlayerCamera_C_ReapplyDitherState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerCamera_C_ReapplyDitherState, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BPL_PlayerCamera_C_ReapplyDitherState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

