#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_PlayerManager

#include "Basic.hpp"

#include "E_PLAYER_MANAGER_TYPE_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPL_PlayerManager.BPL_PlayerManager_C.GetPlayer
// 0x0068 (0x0068 - 0x0000)
struct BPL_PlayerManager_C_GetPlayer final
{
public:
	E_PLAYER_MANAGER_TYPE                         Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E86[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          AsPlayer_Base;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E87[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerManager_C>  K2Node_DynamicCast_AsBPI_Player_Manager;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E88[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_BPI_GetGamePlayer_list;                   // 0x0040(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerManager_C_GetPlayer) == 0x000008, "Wrong alignment on BPL_PlayerManager_C_GetPlayer");
static_assert(sizeof(BPL_PlayerManager_C_GetPlayer) == 0x000068, "Wrong size on BPL_PlayerManager_C_GetPlayer");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, Selection) == 0x000000, "Member 'BPL_PlayerManager_C_GetPlayer::Selection' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, __WorldContext) == 0x000008, "Member 'BPL_PlayerManager_C_GetPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, AsPlayer_Base) == 0x000010, "Member 'BPL_PlayerManager_C_GetPlayer::AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BPL_PlayerManager_C_GetPlayer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BPL_PlayerManager_C_GetPlayer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, K2Node_DynamicCast_AsBPI_Player_Manager) == 0x000028, "Member 'BPL_PlayerManager_C_GetPlayer::K2Node_DynamicCast_AsBPI_Player_Manager' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_PlayerManager_C_GetPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, CallFunc_BPI_GetGamePlayer_list) == 0x000040, "Member 'BPL_PlayerManager_C_GetPlayer::CallFunc_BPI_GetGamePlayer_list' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, CallFunc_Array_Get_Item) == 0x000050, "Member 'BPL_PlayerManager_C_GetPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, K2Node_DynamicCast_AsPlayer_Base) == 0x000058, "Member 'BPL_PlayerManager_C_GetPlayer::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BPL_PlayerManager_C_GetPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.PlayerCharaActive
// 0x00B0 (0x00B0 - 0x0000)
struct BPL_PlayerManager_C_PlayerCharaActive final
{
public:
	E_PLAYER_MANAGER_TYPE                         Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E89[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewTransform;                                      // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Ret;                                               // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          PlayerCache;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E8A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_SetActive_self_CastInput;             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerManager_C_PlayerCharaActive) == 0x000010, "Wrong alignment on BPL_PlayerManager_C_PlayerCharaActive");
static_assert(sizeof(BPL_PlayerManager_C_PlayerCharaActive) == 0x0000B0, "Wrong size on BPL_PlayerManager_C_PlayerCharaActive");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, Selection) == 0x000000, "Member 'BPL_PlayerManager_C_PlayerCharaActive::Selection' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, NewTransform) == 0x000010, "Member 'BPL_PlayerManager_C_PlayerCharaActive::NewTransform' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, __WorldContext) == 0x000040, "Member 'BPL_PlayerManager_C_PlayerCharaActive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, Ret) == 0x000048, "Member 'BPL_PlayerManager_C_PlayerCharaActive::Ret' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, PlayerCache) == 0x000050, "Member 'BPL_PlayerManager_C_PlayerCharaActive::PlayerCache' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, CallFunc_GetGameMode_ReturnValue) == 0x000058, "Member 'BPL_PlayerManager_C_PlayerCharaActive::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000060, "Member 'BPL_PlayerManager_C_PlayerCharaActive::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BPL_PlayerManager_C_PlayerCharaActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, CallFunc_BPI_SetActive_self_CastInput) == 0x000070, "Member 'BPL_PlayerManager_C_PlayerCharaActive::CallFunc_BPI_SetActive_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, CallFunc_GetPlayer_AsPlayer_Base) == 0x000080, "Member 'BPL_PlayerManager_C_PlayerCharaActive::CallFunc_GetPlayer_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, CallFunc_BreakTransform_Location) == 0x000088, "Member 'BPL_PlayerManager_C_PlayerCharaActive::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, CallFunc_BreakTransform_Rotation) == 0x000094, "Member 'BPL_PlayerManager_C_PlayerCharaActive::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaActive, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BPL_PlayerManager_C_PlayerCharaActive::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.PlayerCharaDeactive
// 0x0100 (0x0100 - 0x0000)
struct BPL_PlayerManager_C_PlayerCharaDeactive final
{
public:
	E_PLAYER_MANAGER_TYPE                         Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Ret;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          PlayerCache;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Cont_AwayPos;                                      // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E8C[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_SetActive_self_CastInput;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8D[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E8E[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_SetDeactiveLocation_self_CastInput;   // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerManager_C_PlayerCharaDeactive) == 0x000010, "Wrong alignment on BPL_PlayerManager_C_PlayerCharaDeactive");
static_assert(sizeof(BPL_PlayerManager_C_PlayerCharaDeactive) == 0x000100, "Wrong size on BPL_PlayerManager_C_PlayerCharaDeactive");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, Selection) == 0x000000, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::Selection' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, __WorldContext) == 0x000008, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, Ret) == 0x000010, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::Ret' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, PlayerCache) == 0x000018, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::PlayerCache' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, Cont_AwayPos) == 0x000020, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::Cont_AwayPos' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_GetGameMode_ReturnValue) == 0x000050, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_GetPlayerPawn_ReturnValue) == 0x000058, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000060, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_GetPlayer_AsPlayer_Base) == 0x000070, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_GetPlayer_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_BPI_SetActive_self_CastInput) == 0x000078, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_BPI_SetActive_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_BreakTransform_Location) == 0x000088, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_BreakTransform_Rotation) == 0x000094, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E0, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaDeactive, CallFunc_BPI_SetDeactiveLocation_self_CastInput) == 0x0000E8, "Member 'BPL_PlayerManager_C_PlayerCharaDeactive::CallFunc_BPI_SetDeactiveLocation_self_CastInput' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.PlayerChange
// 0x01A0 (0x01A0 - 0x0000)
struct BPL_PlayerManager_C_PlayerChange final
{
public:
	E_PLAYER_MANAGER_TYPE                         Select;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBattle;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E8F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_ViewTarget;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_IsBattle;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_PLAYER_MANAGER_TYPE                         L_Select;                                          // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E90[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Const_AwatPos;                                     // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               Rot;                                               // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E91[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Trans;                                             // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E92[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode_1;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E93[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E94[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0100(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E95[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E96[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_SetContlrolActivePawn_self_CastInput; // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerManager_C_PlayerChange) == 0x000010, "Wrong alignment on BPL_PlayerManager_C_PlayerChange");
static_assert(sizeof(BPL_PlayerManager_C_PlayerChange) == 0x0001A0, "Wrong size on BPL_PlayerManager_C_PlayerChange");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, Select) == 0x000000, "Member 'BPL_PlayerManager_C_PlayerChange::Select' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, IsBattle) == 0x000001, "Member 'BPL_PlayerManager_C_PlayerChange::IsBattle' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, __WorldContext) == 0x000008, "Member 'BPL_PlayerManager_C_PlayerChange::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, L_ViewTarget) == 0x000010, "Member 'BPL_PlayerManager_C_PlayerChange::L_ViewTarget' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, L_IsBattle) == 0x000018, "Member 'BPL_PlayerManager_C_PlayerChange::L_IsBattle' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, L_Select) == 0x000019, "Member 'BPL_PlayerManager_C_PlayerChange::L_Select' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, Const_AwatPos) == 0x000020, "Member 'BPL_PlayerManager_C_PlayerChange::Const_AwatPos' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, Rot) == 0x000050, "Member 'BPL_PlayerManager_C_PlayerChange::Rot' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, Trans) == 0x000060, "Member 'BPL_PlayerManager_C_PlayerChange::Trans' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetGameMode_ReturnValue) == 0x000090, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, K2Node_DynamicCast_AsProject_Game_Mode) == 0x0000A0, "Member 'BPL_PlayerManager_C_PlayerChange::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BPL_PlayerManager_C_PlayerChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetViewTarget_ReturnValue) == 0x0000B0, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000B8, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetGameMode_ReturnValue_1) == 0x0000C0, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetPlayerController_ReturnValue_2) == 0x0000C8, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, K2Node_DynamicCast_AsProject_Game_Mode_1) == 0x0000D0, "Member 'BPL_PlayerManager_C_PlayerChange::K2Node_DynamicCast_AsProject_Game_Mode_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BPL_PlayerManager_C_PlayerChange::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetControlRotation_ReturnValue) == 0x0000DC, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000E8, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, K2Node_DynamicCast_AsPlayer_Base) == 0x0000F0, "Member 'BPL_PlayerManager_C_PlayerChange::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BPL_PlayerManager_C_PlayerChange::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetTransform_ReturnValue) == 0x000100, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_Not_PreBool_ReturnValue) == 0x000130, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_BreakTransform_Location) == 0x000134, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_BreakTransform_Rotation) == 0x000140, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_BreakTransform_Scale) == 0x00014C, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, K2Node_SwitchEnum_CmpSuccess) == 0x000158, "Member 'BPL_PlayerManager_C_PlayerChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_GetPlayer_AsPlayer_Base) == 0x000160, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_GetPlayer_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_BPI_SetContlrolActivePawn_self_CastInput) == 0x000168, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_BPI_SetContlrolActivePawn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_BreakTransform_Location_1) == 0x000178, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_BreakTransform_Rotation_1) == 0x000184, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerChange, CallFunc_BreakTransform_Scale_1) == 0x000190, "Member 'BPL_PlayerManager_C_PlayerChange::CallFunc_BreakTransform_Scale_1' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.SetController
// 0x0030 (0x0030 - 0x0000)
struct BPL_PlayerManager_C_SetController final
{
public:
	E_PLAYER_MANAGER_TYPE                         Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E97[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerManager_C_SetController) == 0x000008, "Wrong alignment on BPL_PlayerManager_C_SetController");
static_assert(sizeof(BPL_PlayerManager_C_SetController) == 0x000030, "Wrong size on BPL_PlayerManager_C_SetController");
static_assert(offsetof(BPL_PlayerManager_C_SetController, Type) == 0x000000, "Member 'BPL_PlayerManager_C_SetController::Type' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SetController, __WorldContext) == 0x000008, "Member 'BPL_PlayerManager_C_SetController::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SetController, CallFunc_GetPlayer_AsPlayer_Base) == 0x000010, "Member 'BPL_PlayerManager_C_SetController::CallFunc_GetPlayer_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SetController, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BPL_PlayerManager_C_SetController::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SetController, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000020, "Member 'BPL_PlayerManager_C_SetController::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SetController, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_PlayerManager_C_SetController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.PlayerCharaReActive
// 0x00B0 (0x00B0 - 0x0000)
struct BPL_PlayerManager_C_PlayerCharaReActive final
{
public:
	E_PLAYER_MANAGER_TYPE                         PlayerType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E98[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          PlayerCache;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E99[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_SetActive_self_CastInput;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_GetDeactiveLocation_self_CastInput;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BPI_GetDeactiveLocation_Location;         // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerManager_C_PlayerCharaReActive) == 0x000010, "Wrong alignment on BPL_PlayerManager_C_PlayerCharaReActive");
static_assert(sizeof(BPL_PlayerManager_C_PlayerCharaReActive) == 0x0000B0, "Wrong size on BPL_PlayerManager_C_PlayerCharaReActive");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, PlayerType) == 0x000000, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::PlayerType' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, __WorldContext) == 0x000008, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, PlayerCache) == 0x000010, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::PlayerCache' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000020, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_BPI_SetActive_self_CastInput) == 0x000030, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_BPI_SetActive_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_BPI_GetDeactiveLocation_self_CastInput) == 0x000040, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_BPI_GetDeactiveLocation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_BPI_GetDeactiveLocation_Location) == 0x000050, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_BPI_GetDeactiveLocation_Location' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_GetPlayer_AsPlayer_Base) == 0x000080, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_GetPlayer_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_BreakTransform_Location) == 0x000088, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_BreakTransform_Rotation) == 0x000094, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_PlayerCharaReActive, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BPL_PlayerManager_C_PlayerCharaReActive::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.IsActive
// 0x0048 (0x0048 - 0x0000)
struct BPL_PlayerManager_C_IsActive final
{
public:
	E_PLAYER_MANAGER_TYPE                         PlayerType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsActive;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_GetActive_self_CastInput;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetActive_IsActive;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_PlayerManager_C_IsActive) == 0x000008, "Wrong alignment on BPL_PlayerManager_C_IsActive");
static_assert(sizeof(BPL_PlayerManager_C_IsActive) == 0x000048, "Wrong size on BPL_PlayerManager_C_IsActive");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, PlayerType) == 0x000000, "Member 'BPL_PlayerManager_C_IsActive::PlayerType' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, __WorldContext) == 0x000008, "Member 'BPL_PlayerManager_C_IsActive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, Param_IsActive) == 0x000010, "Member 'BPL_PlayerManager_C_IsActive::Param_IsActive' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BPL_PlayerManager_C_IsActive::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000020, "Member 'BPL_PlayerManager_C_IsActive::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_PlayerManager_C_IsActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, CallFunc_BPI_GetActive_self_CastInput) == 0x000030, "Member 'BPL_PlayerManager_C_IsActive::CallFunc_BPI_GetActive_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_IsActive, CallFunc_BPI_GetActive_IsActive) == 0x000040, "Member 'BPL_PlayerManager_C_IsActive::CallFunc_BPI_GetActive_IsActive' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.GetActivePlayer
// 0x0050 (0x0050 - 0x0000)
struct BPL_PlayerManager_C_GetActivePlayer final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          Player;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PLAYER_MANAGER_TYPE                         E_Type;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_GetContlrolActivePawn_self_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerBase_C*                          CallFunc_BPI_GetContlrolActivePawn_Pawn;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PLAYER_MANAGER_TYPE                         CallFunc_BPI_GetContlrolActivePawn_Type;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerManager_C_GetActivePlayer) == 0x000008, "Wrong alignment on BPL_PlayerManager_C_GetActivePlayer");
static_assert(sizeof(BPL_PlayerManager_C_GetActivePlayer) == 0x000050, "Wrong size on BPL_PlayerManager_C_GetActivePlayer");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, __WorldContext) == 0x000000, "Member 'BPL_PlayerManager_C_GetActivePlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, Player) == 0x000008, "Member 'BPL_PlayerManager_C_GetActivePlayer::Player' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, E_Type) == 0x000010, "Member 'BPL_PlayerManager_C_GetActivePlayer::E_Type' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BPL_PlayerManager_C_GetActivePlayer::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000020, "Member 'BPL_PlayerManager_C_GetActivePlayer::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_PlayerManager_C_GetActivePlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, CallFunc_BPI_GetContlrolActivePawn_self_CastInput) == 0x000030, "Member 'BPL_PlayerManager_C_GetActivePlayer::CallFunc_BPI_GetContlrolActivePawn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, CallFunc_BPI_GetContlrolActivePawn_Pawn) == 0x000040, "Member 'BPL_PlayerManager_C_GetActivePlayer::CallFunc_BPI_GetContlrolActivePawn_Pawn' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_GetActivePlayer, CallFunc_BPI_GetContlrolActivePawn_Type) == 0x000048, "Member 'BPL_PlayerManager_C_GetActivePlayer::CallFunc_BPI_GetContlrolActivePawn_Type' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.TokyoPlayerCh
// 0x0210 (0x0210 - 0x0000)
struct BPL_PlayerManager_C_TokyoPlayerCh final
{
public:
	E_PLAYER_MANAGER_TYPE                         Select;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TokyoReturn;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBtl;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsB;                                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 L_ViewTarget;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TokyoReturn_w;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_PLAYER_MANAGER_TYPE                         L_Select;                                          // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA1[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Const_AwatPos;                                     // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               Rot;                                               // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA2[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Trans;                                             // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA3[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode_1;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA4[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode_2;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA5[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue_1;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode_3;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA6[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA7[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA8[0xF];                                     // 0x0161(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0170(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA9[0x6];                                     // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          CallFunc_GetPlayer_AsPlayer_Base;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerManager_C>  CallFunc_BPI_SetContlrolActivePawn_self_CastInput; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerManager_C_TokyoPlayerCh) == 0x000010, "Wrong alignment on BPL_PlayerManager_C_TokyoPlayerCh");
static_assert(sizeof(BPL_PlayerManager_C_TokyoPlayerCh) == 0x000210, "Wrong size on BPL_PlayerManager_C_TokyoPlayerCh");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, Select) == 0x000000, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::Select' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, TokyoReturn) == 0x000001, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::TokyoReturn' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, IsBtl) == 0x000002, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::IsBtl' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, __WorldContext) == 0x000008, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, IsB) == 0x000010, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::IsB' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, L_ViewTarget) == 0x000018, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::L_ViewTarget' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, TokyoReturn_w) == 0x000020, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::TokyoReturn_w' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, L_Select) == 0x000021, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::L_Select' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, Const_AwatPos) == 0x000030, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::Const_AwatPos' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, Rot) == 0x000060, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::Rot' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, Trans) == 0x000070, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::Trans' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetGameMode_ReturnValue) == 0x0000A0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_AsProject_Game_Mode) == 0x0000A8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayerController_ReturnValue) == 0x0000B8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000C0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetViewTarget_ReturnValue) == 0x0000C8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000D0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetGameMode_ReturnValue_1) == 0x0000D8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetGameMode_ReturnValue_2) == 0x0000E0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_AsProject_Game_Mode_1) == 0x0000E8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_AsProject_Game_Mode_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_AsProject_Game_Mode_2) == 0x0000F8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_AsProject_Game_Mode_2' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayerController_ReturnValue_2) == 0x000108, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayerController_ReturnValue_3) == 0x000110, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetViewTarget_ReturnValue_1) == 0x000118, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetViewTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetGameMode_ReturnValue_3) == 0x000120, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_AsProject_Game_Mode_3) == 0x000128, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_AsProject_Game_Mode_3' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayerController_ReturnValue_4) == 0x000138, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetControlRotation_ReturnValue) == 0x000140, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000150, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_AsPlayer_Base) == 0x000158, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_DynamicCast_bSuccess_4) == 0x000160, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetTransform_ReturnValue) == 0x000170, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_Not_PreBool_ReturnValue) == 0x0001A0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, K2Node_SwitchEnum_CmpSuccess) == 0x0001A1, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_GetPlayer_AsPlayer_Base) == 0x0001A8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_GetPlayer_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_BPI_SetContlrolActivePawn_self_CastInput) == 0x0001B0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_BPI_SetContlrolActivePawn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_BreakTransform_Location) == 0x0001C0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_BreakTransform_Rotation) == 0x0001CC, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_BreakTransform_Scale) == 0x0001D8, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_BreakTransform_Location_1) == 0x0001E4, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_BreakTransform_Rotation_1) == 0x0001F0, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_TokyoPlayerCh, CallFunc_BreakTransform_Scale_1) == 0x0001FC, "Member 'BPL_PlayerManager_C_TokyoPlayerCh::CallFunc_BreakTransform_Scale_1' has a wrong offset!");

// Function BPL_PlayerManager.BPL_PlayerManager_C.SaveTokyoPlayer
// 0x0038 (0x0038 - 0x0000)
struct BPL_PlayerManager_C_SaveTokyoPlayer final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EAA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_PlayerManager_C_SaveTokyoPlayer) == 0x000008, "Wrong alignment on BPL_PlayerManager_C_SaveTokyoPlayer");
static_assert(sizeof(BPL_PlayerManager_C_SaveTokyoPlayer) == 0x000038, "Wrong size on BPL_PlayerManager_C_SaveTokyoPlayer");
static_assert(offsetof(BPL_PlayerManager_C_SaveTokyoPlayer, __WorldContext) == 0x000000, "Member 'BPL_PlayerManager_C_SaveTokyoPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SaveTokyoPlayer, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BPL_PlayerManager_C_SaveTokyoPlayer::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SaveTokyoPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_PlayerManager_C_SaveTokyoPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SaveTokyoPlayer, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000018, "Member 'BPL_PlayerManager_C_SaveTokyoPlayer::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SaveTokyoPlayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_PlayerManager_C_SaveTokyoPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SaveTokyoPlayer, CallFunc_GetViewTarget_ReturnValue) == 0x000028, "Member 'BPL_PlayerManager_C_SaveTokyoPlayer::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_PlayerManager_C_SaveTokyoPlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'BPL_PlayerManager_C_SaveTokyoPlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");

}

