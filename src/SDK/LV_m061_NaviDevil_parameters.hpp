#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LV_m061_NaviDevil

#include "Basic.hpp"


namespace SDK::Params
{

// Function LV_m061_NaviDevil.LV_m061_NaviDevil_C.ExecuteUbergraph_LV_m061_NaviDevil
// 0x0040 (0x0040 - 0x0000)
struct LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_DD20[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapCommonCtrl_C*                       K2Node_DynamicCast_AsMap_Common_Ctrl;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil) == 0x000008, "Wrong alignment on LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil");
static_assert(sizeof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil) == 0x000040, "Wrong size on LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil");
static_assert(offsetof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil, EntryPoint) == 0x000000, "Member 'LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil::EntryPoint' has a wrong offset!");
static_assert(offsetof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil, CallFunc_GetMapCommon_rerutn) == 0x000028, "Member 'LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil, K2Node_DynamicCast_AsMap_Common_Ctrl) == 0x000030, "Member 'LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil::K2Node_DynamicCast_AsMap_Common_Ctrl' has a wrong offset!");
static_assert(offsetof(LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'LV_m061_NaviDevil_C_ExecuteUbergraph_LV_m061_NaviDevil::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

