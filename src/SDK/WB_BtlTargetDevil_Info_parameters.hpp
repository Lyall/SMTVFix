#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlTargetDevil_Info

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Project_structs.hpp"
#include "T_TargetDevil_Info_Support_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.Evt_OnUnitSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlTargetDevil_Info_C_Evt_OnUnitSelected__DelegateSignature final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_Evt_OnUnitSelected__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_Evt_OnUnitSelected__DelegateSignature");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_Evt_OnUnitSelected__DelegateSignature) == 0x000004, "Wrong size on WB_BtlTargetDevil_Info_C_Evt_OnUnitSelected__DelegateSignature");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_Evt_OnUnitSelected__DelegateSignature, PartyIndex) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_Evt_OnUnitSelected__DelegateSignature::PartyIndex' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.Evt_OnUnitDecided__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlTargetDevil_Info_C_Evt_OnUnitDecided__DelegateSignature final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_Evt_OnUnitDecided__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_Evt_OnUnitDecided__DelegateSignature");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_Evt_OnUnitDecided__DelegateSignature) == 0x000004, "Wrong size on WB_BtlTargetDevil_Info_C_Evt_OnUnitDecided__DelegateSignature");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_Evt_OnUnitDecided__DelegateSignature, PartyIndex) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_Evt_OnUnitDecided__DelegateSignature::PartyIndex' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.ExecuteUbergraph_WB_BtlTargetDevil_Info
// 0x0048 (0x0048 - 0x0000)
struct WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately_1;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F2[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F3[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F4[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos;                    // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV;                     // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info) == 0x000048, "Wrong size on WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, EntryPoint) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_Event_Delta) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_Event_Rate_1) == 0x00000C, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_Event_Rate_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_Event_Immediately_1) == 0x000010, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_Event_Immediately_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_Event_Rate) == 0x000014, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_Event_Immediately) == 0x000018, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_Event_Immediately' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_ComponentBoundEvent_AnimPackName) == 0x00001C, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_ComponentBoundEvent_AnimationName) == 0x000024, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x00002C, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000030, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_SwitchInteger_CmpSuccess) == 0x000034, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_ComponentBoundEvent_Pos) == 0x000038, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_ComponentBoundEvent_Pos' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info, K2Node_ComponentBoundEvent_UV) == 0x000040, "Member 'WB_BtlTargetDevil_Info_C_ExecuteUbergraph_WB_BtlTargetDevil_Info::K2Node_ComponentBoundEvent_UV' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_BndEvt__WB_BtlTargetDevil_Info_ButtonS5_Select_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlTargetDevil_Info_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.Disappear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlTargetDevil_Info_C_Disappear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_Disappear) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_Disappear");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_Disappear) == 0x000008, "Wrong size on WB_BtlTargetDevil_Info_C_Disappear");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_Disappear, Rate) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_Disappear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_Disappear, Immediately) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_Disappear::Immediately' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.Appear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlTargetDevil_Info_C_Appear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_Appear) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_Appear");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_Appear) == 0x000008, "Wrong size on WB_BtlTargetDevil_Info_C_Appear");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_Appear, Rate) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_Appear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_Appear, Immediately) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_Appear::Immediately' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_Info_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_PreConstruct) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_Info_C_PreConstruct");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_PreConstruct) == 0x000001, "Wrong size on WB_BtlTargetDevil_Info_C_PreConstruct");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.CallTick
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlTargetDevil_Info_C_CallTick final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_CallTick) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_CallTick");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_CallTick) == 0x000004, "Wrong size on WB_BtlTargetDevil_Info_C_CallTick");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_CallTick, Delta) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_CallTick::Delta' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.ApplyDevilName
// 0x0058 (0x0058 - 0x0000)
struct WB_BtlTargetDevil_Info_C_ApplyDevilName final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPlayerName_ReturnValue;                // 0x0008(0x0018)()
	class FText                                   CallFunc_GetDevilName_ReturnValue;                 // 0x0020(0x0018)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F6[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)(ConstParm)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_ApplyDevilName) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Info_C_ApplyDevilName");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_ApplyDevilName) == 0x000058, "Wrong size on WB_BtlTargetDevil_Info_C_ApplyDevilName");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyDevilName, Temp_bool_Variable) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_ApplyDevilName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyDevilName, CallFunc_GetPlayerName_ReturnValue) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_ApplyDevilName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyDevilName, CallFunc_GetDevilName_ReturnValue) == 0x000020, "Member 'WB_BtlTargetDevil_Info_C_ApplyDevilName::CallFunc_GetDevilName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyDevilName, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'WB_BtlTargetDevil_Info_C_ApplyDevilName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyDevilName, K2Node_Select_Default) == 0x000040, "Member 'WB_BtlTargetDevil_Info_C_ApplyDevilName::K2Node_Select_Default' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.ApplyRaceName
// 0x0058 (0x0058 - 0x0000)
struct WB_BtlTargetDevil_Info_C_ApplyRaceName final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPlayerRace_ReturnValue;                // 0x0008(0x0018)(ConstParm)
	class FText                                   CallFunc_GetDevilRaceName_ReturnValue;             // 0x0020(0x0018)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F8[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)()
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_ApplyRaceName) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Info_C_ApplyRaceName");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_ApplyRaceName) == 0x000058, "Wrong size on WB_BtlTargetDevil_Info_C_ApplyRaceName");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyRaceName, Temp_bool_Variable) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_ApplyRaceName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyRaceName, CallFunc_GetPlayerRace_ReturnValue) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_ApplyRaceName::CallFunc_GetPlayerRace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyRaceName, CallFunc_GetDevilRaceName_ReturnValue) == 0x000020, "Member 'WB_BtlTargetDevil_Info_C_ApplyRaceName::CallFunc_GetDevilRaceName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyRaceName, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'WB_BtlTargetDevil_Info_C_ApplyRaceName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyRaceName, K2Node_Select_Default) == 0x000040, "Member 'WB_BtlTargetDevil_Info_C_ApplyRaceName::K2Node_Select_Default' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.SetInfoParam
// 0x0028 (0x0028 - 0x0000)
struct WB_BtlTargetDevil_Info_C_SetInfoParam final
{
public:
	int32                                         Param_M_DevilID;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BadStatus;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46F9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Supports;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         EnenrollStatus;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerSide;                                      // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUplifting;                                       // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUtsusemiProduct;                                 // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UI_STATUS_ESSENCE_ICON                      UtsusemiStatus;                                    // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_SetInfoParam) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Info_C_SetInfoParam");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_SetInfoParam) == 0x000028, "Wrong size on WB_BtlTargetDevil_Info_C_SetInfoParam");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, Param_M_DevilID) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::Param_M_DevilID' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, Level) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::Level' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, BadStatus) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::BadStatus' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, Supports) == 0x000010, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::Supports' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, EnenrollStatus) == 0x000020, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::EnenrollStatus' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, IsPlayerSide) == 0x000024, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::IsPlayerSide' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, IsUplifting) == 0x000025, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::IsUplifting' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, IsUtsusemiProduct) == 0x000026, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::IsUtsusemiProduct' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetInfoParam, UtsusemiStatus) == 0x000027, "Member 'WB_BtlTargetDevil_Info_C_SetInfoParam::UtsusemiStatus' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.PlayBGAnim
// 0x0014 (0x0014 - 0x0000)
struct WB_BtlTargetDevil_Info_C_PlayBGAnim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEndOfAnim;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46FA[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_PlayBGAnim) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_PlayBGAnim");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_PlayBGAnim) == 0x000014, "Wrong size on WB_BtlTargetDevil_Info_C_PlayBGAnim");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayBGAnim, AnimIndex) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_PlayBGAnim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayBGAnim, IsLoop) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_PlayBGAnim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayBGAnim, IsEndOfAnim) == 0x000005, "Member 'WB_BtlTargetDevil_Info_C_PlayBGAnim::IsEndOfAnim' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayBGAnim, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_PlayBGAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayBGAnim, CallFunc_SelectInt_ReturnValue_1) == 0x00000C, "Member 'WB_BtlTargetDevil_Info_C_PlayBGAnim::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayBGAnim, CallFunc_PlayByIndex_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_Info_C_PlayBGAnim::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.ApplyBadStatus
// 0x0020 (0x0020 - 0x0000)
struct WB_BtlTargetDevil_Info_C_ApplyBadStatus final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46FB[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BIT_AND_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_ApplyBadStatus) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_ApplyBadStatus");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_ApplyBadStatus) == 0x000020, "Wrong size on WB_BtlTargetDevil_Info_C_ApplyBadStatus");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, Temp_int_Variable) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, Temp_int_Variable_1) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_GetValidValue_ReturnValue) == 0x000014, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000016, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000017, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_BIT_AND_ReturnValue) == 0x00001C, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_BIT_AND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyBadStatus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001D, "Member 'WB_BtlTargetDevil_Info_C_ApplyBadStatus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.ApplySupport
// 0x0238 (0x0238 - 0x0000)
struct WB_BtlTargetDevil_Info_C_ApplySupport final
{
public:
	TMap<int32, E_BTL_CNT>                        EndNoticeData;                                     // 0x0000(0x0050)(Edit, BlueprintVisible)
	TMap<int32, struct FT_TargetDevil_Info_Support> SupportData;                                       // 0x0050(0x0050)(Edit, BlueprintVisible)
	bool                                          Collect;                                           // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46FC[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BTL_CNT>                             Supports;                                          // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46FD[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46FE[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BTL_CNT>                             K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	E_BTL_CNT                                     CallFunc_Array_Get_Item;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46FF[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4700[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4701[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_NSupportIcon_C*                     CallFunc_GetSupportIcon_Icon;                      // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4702[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FT_TargetDevil_Info_Support> K2Node_MakeVariable_MakeVariableOutput;            // 0x0120(0x0050)()
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0170(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CNT                                     CallFunc_Map_Find_Value;                           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4703[0x1];                                     // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARAPANEL_SUPPORTICON_TYPE                 CallFunc_CalcSupportParameter_ReturnValue;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4704[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_NSupportIcon_C*                     CallFunc_GetSupportIcon_Icon_1;                    // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, E_BTL_CNT>                        K2Node_MakeVariable_MakeVariableOutput_1;          // 0x01A0(0x0050)()
	TArray<int32>                                 CallFunc_Map_Keys_Keys_1;                          // 0x01F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_NSupportIcon_C*                     CallFunc_GetSupportIcon_Icon_2;                    // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4705[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FT_TargetDevil_Info_Support            CallFunc_Map_Find_Value_1;                         // 0x0218(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4706[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARAPANEL_SUPPORTICON_TYPE                 CallFunc_CalcSupportParameter_ReturnValue_1;       // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4707[0x1];                                     // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_ApplySupport) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Info_C_ApplySupport");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_ApplySupport) == 0x000238, "Wrong size on WB_BtlTargetDevil_Info_C_ApplySupport");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, EndNoticeData) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::EndNoticeData' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, SupportData) == 0x000050, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::SupportData' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Collect) == 0x0000A0, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Collect' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Supports) == 0x0000A8, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Supports' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C8, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Not_PreBool_ReturnValue) == 0x0000D0, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, K2Node_MakeArray_Array) == 0x0000D8, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000EC, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_int_Array_Index_Variable_1) == 0x0000F4, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_int_Loop_Counter_Variable_2) == 0x0000FC, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Add_IntInt_ReturnValue_2) == 0x000100, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_int_Array_Index_Variable_2) == 0x000104, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, Temp_int_Variable) == 0x000108, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_GetSupportIcon_Icon) == 0x000110, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_GetSupportIcon_Icon' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Add_IntInt_ReturnValue_3) == 0x00011C, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, K2Node_MakeVariable_MakeVariableOutput) == 0x000120, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Map_Keys_Keys) == 0x000170, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Array_Length_ReturnValue_1) == 0x000184, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Map_Find_Value) == 0x000188, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Map_Find_ReturnValue) == 0x000189, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018A, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00018C, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_CalcSupportParameter_ReturnValue) == 0x000190, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_CalcSupportParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000194, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_GetSupportIcon_Icon_1) == 0x000198, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_GetSupportIcon_Icon_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0001A0, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Map_Keys_Keys_1) == 0x0001F0, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Array_Get_Item_2) == 0x000200, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Array_Length_ReturnValue_2) == 0x000204, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_GetSupportIcon_Icon_2) == 0x000208, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_GetSupportIcon_Icon_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Greater_IntInt_ReturnValue) == 0x000210, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Map_Find_Value_1) == 0x000218, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Map_Find_ReturnValue_1) == 0x000228, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Array_Length_ReturnValue_3) == 0x00022C, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Less_IntInt_ReturnValue_2) == 0x000230, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000231, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_CalcSupportParameter_ReturnValue_1) == 0x000232, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_CalcSupportParameter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplySupport, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000234, "Member 'WB_BtlTargetDevil_Info_C_ApplySupport::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.GetSupportIcon
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlTargetDevil_Info_C_GetSupportIcon final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4708[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_NSupportIcon_C*                     Icon;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_GetSupportIcon) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Info_C_GetSupportIcon");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_GetSupportIcon) == 0x000018, "Wrong size on WB_BtlTargetDevil_Info_C_GetSupportIcon");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_GetSupportIcon, Param_Index) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_GetSupportIcon::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_GetSupportIcon, Icon) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_GetSupportIcon::Icon' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_GetSupportIcon, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_BtlTargetDevil_Info_C_GetSupportIcon::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.ApplyEnenroll
// 0x0024 (0x0024 - 0x0000)
struct WB_BtlTargetDevil_Info_C_ApplyEnenroll final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4709[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470A[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_ApplyEnenroll) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_Info_C_ApplyEnenroll");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_ApplyEnenroll) == 0x000024, "Wrong size on WB_BtlTargetDevil_Info_C_ApplyEnenroll");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, Temp_bool_Variable) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, Temp_name_Variable) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, Temp_name_Variable_1) == 0x00000C, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, CallFunc_Play_ReturnValue) == 0x000015, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, K2Node_Select_Default) == 0x000018, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, CallFunc_Play_ReturnValue_1) == 0x000021, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEnenroll, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'WB_BtlTargetDevil_Info_C_ApplyEnenroll::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.PlayEndNoticeAnim
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainTurn;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        Lo_Notice;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim) == 0x000018, "Wrong size on WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim, Param_Index) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim, RemainTurn) == 0x000004, "Member 'WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim::RemainTurn' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim, Lo_Notice) == 0x000008, "Member 'WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim::Lo_Notice' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000011, "Member 'WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim, CallFunc_Play_ReturnValue) == 0x000012, "Member 'WB_BtlTargetDevil_Info_C_PlayEndNoticeAnim::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.ApplyEssence
// 0x00B8 (0x00B8 - 0x0000)
struct WB_BtlTargetDevil_Info_C_ApplyEssence final
{
public:
	TMap<E_UI_STATUS_ESSENCE_ICON, class FName>   Lo_EssenceAnim;                                    // 0x0000(0x0050)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470B[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_UI_STATUS_ESSENCE_ICON, class FName>   K2Node_MakeVariable_MakeVariableOutput;            // 0x0058(0x0050)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_ApplyEssence) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_Info_C_ApplyEssence");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_ApplyEssence) == 0x0000B8, "Wrong size on WB_BtlTargetDevil_Info_C_ApplyEssence");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, Lo_EssenceAnim) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::Lo_EssenceAnim' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, Temp_bool_Variable) == 0x000050, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, Temp_byte_Variable) == 0x000051, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, Temp_byte_Variable_1) == 0x000052, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, Temp_bool_Variable_1) == 0x000053, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, Temp_byte_Variable_2) == 0x000054, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, Temp_byte_Variable_3) == 0x000055, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, K2Node_MakeVariable_MakeVariableOutput) == 0x000058, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, K2Node_Select_Default) == 0x0000A9, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, K2Node_Select_Default_1) == 0x0000AA, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, CallFunc_Play_ReturnValue) == 0x0000AB, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, CallFunc_Map_Find_Value) == 0x0000AC, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, CallFunc_Map_Find_ReturnValue) == 0x0000B4, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_ApplyEssence, CallFunc_Play_ReturnValue_1) == 0x0000B5, "Member 'WB_BtlTargetDevil_Info_C_ApplyEssence::CallFunc_Play_ReturnValue_1' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.SetButtonVisibility
// 0x0003 (0x0003 - 0x0000)
struct WB_BtlTargetDevil_Info_C_SetButtonVisibility final
{
public:
	ESlateVisibility                              Param_Visibility;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_SetButtonVisibility) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_Info_C_SetButtonVisibility");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_SetButtonVisibility) == 0x000003, "Wrong size on WB_BtlTargetDevil_Info_C_SetButtonVisibility");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetButtonVisibility, Param_Visibility) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_SetButtonVisibility::Param_Visibility' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetButtonVisibility, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'WB_BtlTargetDevil_Info_C_SetButtonVisibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetButtonVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WB_BtlTargetDevil_Info_C_SetButtonVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.SetAllWidgetTick
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_Info_C_SetAllWidgetTick final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_SetAllWidgetTick) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_Info_C_SetAllWidgetTick");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_SetAllWidgetTick) == 0x000001, "Wrong size on WB_BtlTargetDevil_Info_C_SetAllWidgetTick");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_SetAllWidgetTick, Enable) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_SetAllWidgetTick::Enable' has a wrong offset!");

// Function WB_BtlTargetDevil_Info.WB_BtlTargetDevil_Info_C.IsDisappeared
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_Info_C_IsDisappeared final
{
public:
	bool                                          Param_IsDisappeared;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_Info_C_IsDisappeared) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_Info_C_IsDisappeared");
static_assert(sizeof(WB_BtlTargetDevil_Info_C_IsDisappeared) == 0x000001, "Wrong size on WB_BtlTargetDevil_Info_C_IsDisappeared");
static_assert(offsetof(WB_BtlTargetDevil_Info_C_IsDisappeared, Param_IsDisappeared) == 0x000000, "Member 'WB_BtlTargetDevil_Info_C_IsDisappeared::Param_IsDisappeared' has a wrong offset!");

}

