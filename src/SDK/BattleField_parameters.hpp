#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleField

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BattleField.BattleField_C.Evt_EnemyIsReady__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BattleField_C_Evt_EnemyIsReady__DelegateSignature final
{
public:
	TArray<class ACharaBase_C*>                   EnemyUnitArray;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FTransform>                     EnemyPos;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattleField_C_Evt_EnemyIsReady__DelegateSignature) == 0x000008, "Wrong alignment on BattleField_C_Evt_EnemyIsReady__DelegateSignature");
static_assert(sizeof(BattleField_C_Evt_EnemyIsReady__DelegateSignature) == 0x000020, "Wrong size on BattleField_C_Evt_EnemyIsReady__DelegateSignature");
static_assert(offsetof(BattleField_C_Evt_EnemyIsReady__DelegateSignature, EnemyUnitArray) == 0x000000, "Member 'BattleField_C_Evt_EnemyIsReady__DelegateSignature::EnemyUnitArray' has a wrong offset!");
static_assert(offsetof(BattleField_C_Evt_EnemyIsReady__DelegateSignature, EnemyPos) == 0x000010, "Member 'BattleField_C_Evt_EnemyIsReady__DelegateSignature::EnemyPos' has a wrong offset!");

// Function BattleField.BattleField_C.Evt_PlayerIsReady__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BattleField_C_Evt_PlayerIsReady__DelegateSignature final
{
public:
	TArray<class ACharaBase_C*>                   PlayerUnitArray;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattleField_C_Evt_PlayerIsReady__DelegateSignature) == 0x000008, "Wrong alignment on BattleField_C_Evt_PlayerIsReady__DelegateSignature");
static_assert(sizeof(BattleField_C_Evt_PlayerIsReady__DelegateSignature) == 0x000010, "Wrong size on BattleField_C_Evt_PlayerIsReady__DelegateSignature");
static_assert(offsetof(BattleField_C_Evt_PlayerIsReady__DelegateSignature, PlayerUnitArray) == 0x000000, "Member 'BattleField_C_Evt_PlayerIsReady__DelegateSignature::PlayerUnitArray' has a wrong offset!");

// Function BattleField.BattleField_C.ExecuteUbergraph_BattleField
// 0x0038 (0x0038 - 0x0000)
struct BattleField_C_ExecuteUbergraph_BattleField final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyEncountPostData_IsDone;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_EncountID;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEvent;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Event_EnemyIDs;                             // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_OnlyApplyEncountPostData;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleField_C_ExecuteUbergraph_BattleField) == 0x000008, "Wrong alignment on BattleField_C_ExecuteUbergraph_BattleField");
static_assert(sizeof(BattleField_C_ExecuteUbergraph_BattleField) == 0x000038, "Wrong size on BattleField_C_ExecuteUbergraph_BattleField");
static_assert(offsetof(BattleField_C_ExecuteUbergraph_BattleField, EntryPoint) == 0x000000, "Member 'BattleField_C_ExecuteUbergraph_BattleField::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleField_C_ExecuteUbergraph_BattleField, CallFunc_ApplyEncountPostData_IsDone) == 0x000004, "Member 'BattleField_C_ExecuteUbergraph_BattleField::CallFunc_ApplyEncountPostData_IsDone' has a wrong offset!");
static_assert(offsetof(BattleField_C_ExecuteUbergraph_BattleField, K2Node_Event_EncountID) == 0x000008, "Member 'BattleField_C_ExecuteUbergraph_BattleField::K2Node_Event_EncountID' has a wrong offset!");
static_assert(offsetof(BattleField_C_ExecuteUbergraph_BattleField, K2Node_Event_IsEvent) == 0x00000C, "Member 'BattleField_C_ExecuteUbergraph_BattleField::K2Node_Event_IsEvent' has a wrong offset!");
static_assert(offsetof(BattleField_C_ExecuteUbergraph_BattleField, K2Node_Event_EnemyIDs) == 0x000010, "Member 'BattleField_C_ExecuteUbergraph_BattleField::K2Node_Event_EnemyIDs' has a wrong offset!");
static_assert(offsetof(BattleField_C_ExecuteUbergraph_BattleField, K2Node_Event_OnlyApplyEncountPostData) == 0x000020, "Member 'BattleField_C_ExecuteUbergraph_BattleField::K2Node_Event_OnlyApplyEncountPostData' has a wrong offset!");
static_assert(offsetof(BattleField_C_ExecuteUbergraph_BattleField, K2Node_MakeArray_Array) == 0x000028, "Member 'BattleField_C_ExecuteUbergraph_BattleField::K2Node_MakeArray_Array' has a wrong offset!");

// Function BattleField.BattleField_C.PrepareRenzokuBattle
// 0x0020 (0x0020 - 0x0000)
struct BattleField_C_PrepareRenzokuBattle final
{
public:
	int32                                         EncountID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEvent;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 EnemyIds;                                          // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          OnlyApplyEncountPostData;                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_PrepareRenzokuBattle) == 0x000008, "Wrong alignment on BattleField_C_PrepareRenzokuBattle");
static_assert(sizeof(BattleField_C_PrepareRenzokuBattle) == 0x000020, "Wrong size on BattleField_C_PrepareRenzokuBattle");
static_assert(offsetof(BattleField_C_PrepareRenzokuBattle, EncountID) == 0x000000, "Member 'BattleField_C_PrepareRenzokuBattle::EncountID' has a wrong offset!");
static_assert(offsetof(BattleField_C_PrepareRenzokuBattle, IsEvent) == 0x000004, "Member 'BattleField_C_PrepareRenzokuBattle::IsEvent' has a wrong offset!");
static_assert(offsetof(BattleField_C_PrepareRenzokuBattle, EnemyIds) == 0x000008, "Member 'BattleField_C_PrepareRenzokuBattle::EnemyIds' has a wrong offset!");
static_assert(offsetof(BattleField_C_PrepareRenzokuBattle, OnlyApplyEncountPostData) == 0x000018, "Member 'BattleField_C_PrepareRenzokuBattle::OnlyApplyEncountPostData' has a wrong offset!");

// Function BattleField.BattleField_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BattleField_C_UserConstructionScript final
{
public:
	class APlayerFieldBase_C*                     K2Node_DynamicCast_AsPlayer_Field_Base;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnemyFieldBase_C*                      K2Node_DynamicCast_AsEnemy_Field_Base;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_UserConstructionScript) == 0x000008, "Wrong alignment on BattleField_C_UserConstructionScript");
static_assert(sizeof(BattleField_C_UserConstructionScript) == 0x000020, "Wrong size on BattleField_C_UserConstructionScript");
static_assert(offsetof(BattleField_C_UserConstructionScript, K2Node_DynamicCast_AsPlayer_Field_Base) == 0x000000, "Member 'BattleField_C_UserConstructionScript::K2Node_DynamicCast_AsPlayer_Field_Base' has a wrong offset!");
static_assert(offsetof(BattleField_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BattleField_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleField_C_UserConstructionScript, K2Node_DynamicCast_AsEnemy_Field_Base) == 0x000010, "Member 'BattleField_C_UserConstructionScript::K2Node_DynamicCast_AsEnemy_Field_Base' has a wrong offset!");
static_assert(offsetof(BattleField_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'BattleField_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BattleField.BattleField_C.ApplyEncount
// 0x0440 (0x0440 - 0x0000)
struct BattleField_C_ApplyEncount final
{
public:
	TArray<class USceneComponent*>                Lo_AddPosArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<int32>                                 Lo_EnemyIDList;                                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class USceneComponent*>                Lo_PostArray;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<int32>                                 Lo_IDList;                                         // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerFieldBase_C*                     K2Node_DynamicCast_AsPlayer_Field_Base;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnemyFieldBase_C*                      K2Node_DynamicCast_AsEnemy_Field_Base;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_1;         // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventEncountData                      CallFunc_GetEvtEncountData_ReturnValue;            // 0x0250(0x0068)(ConstParm)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOneEncountData                        CallFunc_GetEncountData_ReturnValue;               // 0x02C0(0x0040)(ConstParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0338(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_2;         // 0x03C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_3;         // 0x03D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_4;         // 0x03E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_5;         // 0x03F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_6;         // 0x0400(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_7;         // 0x0410(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_8;         // 0x0420(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_9;         // 0x0430(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BattleField_C_ApplyEncount) == 0x000008, "Wrong alignment on BattleField_C_ApplyEncount");
static_assert(sizeof(BattleField_C_ApplyEncount) == 0x000440, "Wrong size on BattleField_C_ApplyEncount");
static_assert(offsetof(BattleField_C_ApplyEncount, Lo_AddPosArray) == 0x000000, "Member 'BattleField_C_ApplyEncount::Lo_AddPosArray' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Lo_EnemyIDList) == 0x000010, "Member 'BattleField_C_ApplyEncount::Lo_EnemyIDList' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Lo_PostArray) == 0x000020, "Member 'BattleField_C_ApplyEncount::Lo_PostArray' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Lo_IDList) == 0x000030, "Member 'BattleField_C_ApplyEncount::Lo_IDList' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BattleField_C_ApplyEncount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BattleField_C_ApplyEncount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BattleField_C_ApplyEncount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BattleField_C_ApplyEncount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Get_Item) == 0x000058, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BattleField_C_ApplyEncount::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BattleField_C_ApplyEncount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BattleField_C_ApplyEncount::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'BattleField_C_ApplyEncount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BattleField_C_ApplyEncount::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_SelectString_ReturnValue) == 0x000090, "Member 'BattleField_C_ApplyEncount::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000B0, "Member 'BattleField_C_ApplyEncount::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_SelectString_ReturnValue_1) == 0x0000E0, "Member 'BattleField_C_ApplyEncount::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000F0, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000100, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000110, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000120, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000130, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Greater_IntInt_ReturnValue) == 0x000144, "Member 'BattleField_C_ApplyEncount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, K2Node_DynamicCast_AsPlayer_Field_Base) == 0x000148, "Member 'BattleField_C_ApplyEncount::K2Node_DynamicCast_AsPlayer_Field_Base' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BattleField_C_ApplyEncount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Length_ReturnValue_2) == 0x000154, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'BattleField_C_ApplyEncount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, K2Node_DynamicCast_AsEnemy_Field_Base) == 0x000160, "Member 'BattleField_C_ApplyEncount::K2Node_DynamicCast_AsEnemy_Field_Base' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'BattleField_C_ApplyEncount::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children) == 0x000170, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Add_ReturnValue) == 0x000180, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Length_ReturnValue_3) == 0x000184, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Less_IntInt_ReturnValue_2) == 0x000188, "Member 'BattleField_C_ApplyEncount::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_1) == 0x000190, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Length_ReturnValue_4) == 0x0001A0, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001A4, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, K2Node_SwitchInteger_CmpSuccess) == 0x0001A5, "Member 'BattleField_C_ApplyEncount::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001A8, "Member 'BattleField_C_ApplyEncount::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Temp_int_Loop_Counter_Variable_2) == 0x000230, "Member 'BattleField_C_ApplyEncount::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Add_ReturnValue_1) == 0x000234, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Less_IntInt_ReturnValue_3) == 0x000238, "Member 'BattleField_C_ApplyEncount::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Add_IntInt_ReturnValue_2) == 0x00023C, "Member 'BattleField_C_ApplyEncount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, Temp_int_Array_Index_Variable_2) == 0x000240, "Member 'BattleField_C_ApplyEncount::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Get_Item_2) == 0x000248, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetEvtEncountData_ReturnValue) == 0x000250, "Member 'BattleField_C_ApplyEncount::CallFunc_GetEvtEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_Add_ReturnValue_2) == 0x0002B8, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetEncountData_ReturnValue) == 0x0002C0, "Member 'BattleField_C_ApplyEncount::CallFunc_GetEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000300, "Member 'BattleField_C_ApplyEncount::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000310, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000320, "Member 'BattleField_C_ApplyEncount::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000328, "Member 'BattleField_C_ApplyEncount::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000338, "Member 'BattleField_C_ApplyEncount::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_2) == 0x0003C0, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_2' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_3) == 0x0003D0, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_3' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_4) == 0x0003E0, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_4' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_5) == 0x0003F0, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_5' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_6) == 0x000400, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_6' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_7) == 0x000410, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_7' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_8) == 0x000420, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_8' has a wrong offset!");
static_assert(offsetof(BattleField_C_ApplyEncount, CallFunc_GetChildrenComponents_Children_9) == 0x000430, "Member 'BattleField_C_ApplyEncount::CallFunc_GetChildrenComponents_Children_9' has a wrong offset!");

// Function BattleField.BattleField_C.MakeEnemySide
// 0x0030 (0x0030 - 0x0000)
struct BattleField_C_MakeEnemySide final
{
public:
	class ACharaBase_C*                           SymbolActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharaBase_C*>                   AroundDevil;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 SpawnIDList;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsRenzokuEncount;                                  // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_MakeEnemySide) == 0x000008, "Wrong alignment on BattleField_C_MakeEnemySide");
static_assert(sizeof(BattleField_C_MakeEnemySide) == 0x000030, "Wrong size on BattleField_C_MakeEnemySide");
static_assert(offsetof(BattleField_C_MakeEnemySide, SymbolActor) == 0x000000, "Member 'BattleField_C_MakeEnemySide::SymbolActor' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakeEnemySide, AroundDevil) == 0x000008, "Member 'BattleField_C_MakeEnemySide::AroundDevil' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakeEnemySide, SpawnIDList) == 0x000018, "Member 'BattleField_C_MakeEnemySide::SpawnIDList' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakeEnemySide, IsRenzokuEncount) == 0x000028, "Member 'BattleField_C_MakeEnemySide::IsRenzokuEncount' has a wrong offset!");

// Function BattleField.BattleField_C.MakePlayerSide
// 0x0160 (0x0160 - 0x0000)
struct BattleField_C_MakePlayerSide final
{
public:
	bool                                          IsJump;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetChipLocationAndRotation_WorldLocation; // 0x0008(0x0010)(ReferenceParm)
	struct FRotator                               CallFunc_GetChipLocationAndRotation_Rotation;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerFieldBase_C*                     K2Node_DynamicCast_AsPlayer_Field_Base;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_MakePlayerSide) == 0x000010, "Wrong alignment on BattleField_C_MakePlayerSide");
static_assert(sizeof(BattleField_C_MakePlayerSide) == 0x000160, "Wrong size on BattleField_C_MakePlayerSide");
static_assert(offsetof(BattleField_C_MakePlayerSide, IsJump) == 0x000000, "Member 'BattleField_C_MakePlayerSide::IsJump' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_GetChipLocationAndRotation_WorldLocation) == 0x000008, "Member 'BattleField_C_MakePlayerSide::CallFunc_GetChipLocationAndRotation_WorldLocation' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_GetChipLocationAndRotation_Rotation) == 0x000018, "Member 'BattleField_C_MakePlayerSide::CallFunc_GetChipLocationAndRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BattleField_C_MakePlayerSide::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_Conv_TransformToString_ReturnValue) == 0x000060, "Member 'BattleField_C_MakePlayerSide::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'BattleField_C_MakePlayerSide::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BattleField_C_MakePlayerSide::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BattleField_C_MakePlayerSide::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_TraceGround_Hit) == 0x00009C, "Member 'BattleField_C_MakePlayerSide::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_TraceGround_Location) == 0x0000A0, "Member 'BattleField_C_MakePlayerSide::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_TraceGround_Normal) == 0x0000AC, "Member 'BattleField_C_MakePlayerSide::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_TraceGround_Surface) == 0x0000B8, "Member 'BattleField_C_MakePlayerSide::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000BC, "Member 'BattleField_C_MakePlayerSide::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, CallFunc_IsValid_ReturnValue) == 0x000144, "Member 'BattleField_C_MakePlayerSide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, K2Node_DynamicCast_AsPlayer_Field_Base) == 0x000148, "Member 'BattleField_C_MakePlayerSide::K2Node_DynamicCast_AsPlayer_Field_Base' has a wrong offset!");
static_assert(offsetof(BattleField_C_MakePlayerSide, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BattleField_C_MakePlayerSide::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleField.BattleField_C.GetAddPost
// 0x0028 (0x0028 - 0x0000)
struct BattleField_C_GetAddPost final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Output;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_GetAddPost) == 0x000008, "Wrong alignment on BattleField_C_GetAddPost");
static_assert(sizeof(BattleField_C_GetAddPost) == 0x000028, "Wrong size on BattleField_C_GetAddPost");
static_assert(offsetof(BattleField_C_GetAddPost, Param_Index) == 0x000000, "Member 'BattleField_C_GetAddPost::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleField_C_GetAddPost, Output) == 0x000008, "Member 'BattleField_C_GetAddPost::Output' has a wrong offset!");
static_assert(offsetof(BattleField_C_GetAddPost, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BattleField_C_GetAddPost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_GetAddPost, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleField_C_GetAddPost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleField_C_GetAddPost, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BattleField_C_GetAddPost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleField.BattleField_C.MakeEnemySideNoLoad
// 0x0010 (0x0010 - 0x0000)
struct BattleField_C_MakeEnemySideNoLoad final
{
public:
	TArray<class ACharaBase_C*>                   EnemyList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattleField_C_MakeEnemySideNoLoad) == 0x000008, "Wrong alignment on BattleField_C_MakeEnemySideNoLoad");
static_assert(sizeof(BattleField_C_MakeEnemySideNoLoad) == 0x000010, "Wrong size on BattleField_C_MakeEnemySideNoLoad");
static_assert(offsetof(BattleField_C_MakeEnemySideNoLoad, EnemyList) == 0x000000, "Member 'BattleField_C_MakeEnemySideNoLoad::EnemyList' has a wrong offset!");

// Function BattleField.BattleField_C.GetCommandBoxTransform
// 0x0060 (0x0060 - 0x0000)
struct BattleField_C_GetCommandBoxTransform final
{
public:
	struct FTransform                             RetValue;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_GetCommandBoxTransform) == 0x000010, "Wrong alignment on BattleField_C_GetCommandBoxTransform");
static_assert(sizeof(BattleField_C_GetCommandBoxTransform) == 0x000060, "Wrong size on BattleField_C_GetCommandBoxTransform");
static_assert(offsetof(BattleField_C_GetCommandBoxTransform, RetValue) == 0x000000, "Member 'BattleField_C_GetCommandBoxTransform::RetValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_GetCommandBoxTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BattleField_C_GetCommandBoxTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function BattleField.BattleField_C.SetFieldCollisionEnable
// 0x0048 (0x0048 - 0x0000)
struct BattleField_C_SetFieldCollisionEnable final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                Lo_child;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleField_C_SetFieldCollisionEnable) == 0x000008, "Wrong alignment on BattleField_C_SetFieldCollisionEnable");
static_assert(sizeof(BattleField_C_SetFieldCollisionEnable) == 0x000048, "Wrong size on BattleField_C_SetFieldCollisionEnable");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, Sw) == 0x000000, "Member 'BattleField_C_SetFieldCollisionEnable::Sw' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, Lo_child) == 0x000008, "Member 'BattleField_C_SetFieldCollisionEnable::Lo_child' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, Temp_bool_Variable) == 0x000018, "Member 'BattleField_C_SetFieldCollisionEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, Temp_byte_Variable) == 0x000019, "Member 'BattleField_C_SetFieldCollisionEnable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, Temp_byte_Variable_1) == 0x00001A, "Member 'BattleField_C_SetFieldCollisionEnable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BattleField_C_SetFieldCollisionEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, K2Node_Select_Default) == 0x000020, "Member 'BattleField_C_SetFieldCollisionEnable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleField_C_SetFieldCollisionEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleField_C_SetFieldCollisionEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleField_C_SetFieldCollisionEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000038, "Member 'BattleField_C_SetFieldCollisionEnable::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BattleField_C_SetFieldCollisionEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BattleField_C_SetFieldCollisionEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleField_C_SetFieldCollisionEnable, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleField_C_SetFieldCollisionEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleField.BattleField_C.BI_GetAddPost
// 0x0018 (0x0018 - 0x0000)
struct BattleField_C_BI_GetAddPost final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Output;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetAddPost_Output;                        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleField_C_BI_GetAddPost) == 0x000008, "Wrong alignment on BattleField_C_BI_GetAddPost");
static_assert(sizeof(BattleField_C_BI_GetAddPost) == 0x000018, "Wrong size on BattleField_C_BI_GetAddPost");
static_assert(offsetof(BattleField_C_BI_GetAddPost, Param_Index) == 0x000000, "Member 'BattleField_C_BI_GetAddPost::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleField_C_BI_GetAddPost, Output) == 0x000008, "Member 'BattleField_C_BI_GetAddPost::Output' has a wrong offset!");
static_assert(offsetof(BattleField_C_BI_GetAddPost, CallFunc_GetAddPost_Output) == 0x000010, "Member 'BattleField_C_BI_GetAddPost::CallFunc_GetAddPost_Output' has a wrong offset!");

// Function BattleField.BattleField_C.BI_GetPlayerReplaceResult
// 0x0050 (0x0050 - 0x0000)
struct BattleField_C_BI_GetPlayerReplaceResult final
{
public:
	TMap<int32, struct FTransform>                TransformMap;                                      // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BattleField_C_BI_GetPlayerReplaceResult) == 0x000008, "Wrong alignment on BattleField_C_BI_GetPlayerReplaceResult");
static_assert(sizeof(BattleField_C_BI_GetPlayerReplaceResult) == 0x000050, "Wrong size on BattleField_C_BI_GetPlayerReplaceResult");
static_assert(offsetof(BattleField_C_BI_GetPlayerReplaceResult, TransformMap) == 0x000000, "Member 'BattleField_C_BI_GetPlayerReplaceResult::TransformMap' has a wrong offset!");

// Function BattleField.BattleField_C.BI_IsReplaceFinished
// 0x0001 (0x0001 - 0x0000)
struct BattleField_C_BI_IsReplaceFinished final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_BI_IsReplaceFinished) == 0x000001, "Wrong alignment on BattleField_C_BI_IsReplaceFinished");
static_assert(sizeof(BattleField_C_BI_IsReplaceFinished) == 0x000001, "Wrong size on BattleField_C_BI_IsReplaceFinished");
static_assert(offsetof(BattleField_C_BI_IsReplaceFinished, IsFinished) == 0x000000, "Member 'BattleField_C_BI_IsReplaceFinished::IsFinished' has a wrong offset!");

// Function BattleField.BattleField_C.BI_ReplacePlayer
// 0x0018 (0x0018 - 0x0000)
struct BattleField_C_BI_ReplacePlayer final
{
public:
	TArray<int32>                                 InDevilList;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NoUse;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_BI_ReplacePlayer) == 0x000008, "Wrong alignment on BattleField_C_BI_ReplacePlayer");
static_assert(sizeof(BattleField_C_BI_ReplacePlayer) == 0x000018, "Wrong size on BattleField_C_BI_ReplacePlayer");
static_assert(offsetof(BattleField_C_BI_ReplacePlayer, InDevilList) == 0x000000, "Member 'BattleField_C_BI_ReplacePlayer::InDevilList' has a wrong offset!");
static_assert(offsetof(BattleField_C_BI_ReplacePlayer, NoUse) == 0x000010, "Member 'BattleField_C_BI_ReplacePlayer::NoUse' has a wrong offset!");

// Function BattleField.BattleField_C.BI_GetCommandBoxTransform
// 0x0060 (0x0060 - 0x0000)
struct BattleField_C_BI_GetCommandBoxTransform final
{
public:
	struct FTransform                             Trans;                                             // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetCommandBoxTransform_retValue;          // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_BI_GetCommandBoxTransform) == 0x000010, "Wrong alignment on BattleField_C_BI_GetCommandBoxTransform");
static_assert(sizeof(BattleField_C_BI_GetCommandBoxTransform) == 0x000060, "Wrong size on BattleField_C_BI_GetCommandBoxTransform");
static_assert(offsetof(BattleField_C_BI_GetCommandBoxTransform, Trans) == 0x000000, "Member 'BattleField_C_BI_GetCommandBoxTransform::Trans' has a wrong offset!");
static_assert(offsetof(BattleField_C_BI_GetCommandBoxTransform, CallFunc_GetCommandBoxTransform_retValue) == 0x000030, "Member 'BattleField_C_BI_GetCommandBoxTransform::CallFunc_GetCommandBoxTransform_retValue' has a wrong offset!");

// Function BattleField.BattleField_C.GetRenzokuBattleEnemy
// 0x0018 (0x0018 - 0x0000)
struct BattleField_C_GetRenzokuBattleEnemy final
{
public:
	TArray<class ACharaBase_C*>                   Enemy;                                             // 0x0000(0x0010)(Parm, OutParm)
	int32                                         EncountID;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleField_C_GetRenzokuBattleEnemy) == 0x000008, "Wrong alignment on BattleField_C_GetRenzokuBattleEnemy");
static_assert(sizeof(BattleField_C_GetRenzokuBattleEnemy) == 0x000018, "Wrong size on BattleField_C_GetRenzokuBattleEnemy");
static_assert(offsetof(BattleField_C_GetRenzokuBattleEnemy, Enemy) == 0x000000, "Member 'BattleField_C_GetRenzokuBattleEnemy::Enemy' has a wrong offset!");
static_assert(offsetof(BattleField_C_GetRenzokuBattleEnemy, EncountID) == 0x000010, "Member 'BattleField_C_GetRenzokuBattleEnemy::EncountID' has a wrong offset!");

// Function BattleField.BattleField_C.IsEndPrepareRenzokuBattle
// 0x0003 (0x0003 - 0x0000)
struct BattleField_C_IsEndPrepareRenzokuBattle final
{
public:
	bool                                          IsDone;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpawningEnemy_IsSpawning;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleField_C_IsEndPrepareRenzokuBattle) == 0x000001, "Wrong alignment on BattleField_C_IsEndPrepareRenzokuBattle");
static_assert(sizeof(BattleField_C_IsEndPrepareRenzokuBattle) == 0x000003, "Wrong size on BattleField_C_IsEndPrepareRenzokuBattle");
static_assert(offsetof(BattleField_C_IsEndPrepareRenzokuBattle, IsDone) == 0x000000, "Member 'BattleField_C_IsEndPrepareRenzokuBattle::IsDone' has a wrong offset!");
static_assert(offsetof(BattleField_C_IsEndPrepareRenzokuBattle, CallFunc_IsSpawningEnemy_IsSpawning) == 0x000001, "Member 'BattleField_C_IsEndPrepareRenzokuBattle::CallFunc_IsSpawningEnemy_IsSpawning' has a wrong offset!");
static_assert(offsetof(BattleField_C_IsEndPrepareRenzokuBattle, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BattleField_C_IsEndPrepareRenzokuBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

