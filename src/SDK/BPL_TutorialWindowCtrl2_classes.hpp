#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_TutorialWindowCtrl2

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "E_AmuletTutorial_MsgType_structs.hpp"
#include "E_TutorialWindow_WidgetState_structs.hpp"
#include "Project_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_TutorialWindowCtrl2.BPL_TutorialWindowCtrl2_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_TutorialWindowCtrl2_C final : public UBlueprintFunctionLibrary
{
public:
	static void BPL_TutorialWIndow2_Open(E_WIDGET_PRIO InWidgetPrio, bool IsPlaySE, bool IsSkipAnimation, bool IsDrawBlackCurtain, bool IsEscClose, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_Close(bool IsPlaySE, bool IsSkipAnimation, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetTextJustification(ETextJustify InJustification, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_GetScrollState(class UObject* __WorldContext, bool* IsRequiredScroll, float* ScrollPosRate);
	static void BPL_TutorialWIndow2_SetScrollOffset(int32 InScrollOffset, bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_Scroll_Up(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_Scroll_Down(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_Page_Up(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_Page_Down(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetTitle_byID(const class UScriptMessageAsset* InMessageAsset, const int32 InMessageId, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetTitle_byLabel(const class UScriptMessageAsset* InMessageAsset, class FName InMessageLabel, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetMainText_byID(const class UScriptMessageAsset* InMessageAsset, const int32 InMessageId, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetMainText_byLabel(const class UScriptMessageAsset* InMessageAsset, class FName InMessageLabel, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_PresetPattern(E_TUTORIAL_WINDOW_MESSAGE_TYPE InEnumPattern, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_ReleasedKamui(bool IsOpenedByEvent, class FName InEventMsgLabel, const TArray<int32>& InOpenedKamuiID, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_MimanReward(class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_AmuletMsg(E_AmuletTutorial_MsgType InAmuletType, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_IconHelp(class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_ApplyDLC(const TArray<class FName>& InContentsMsgLabel, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_GetAnimState(class UObject* __WorldContext, E_TutorialWindow_WidgetState* AnimState);
	static void BPL_TutorialWIndow2_Move_Top(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_Move_Bottom(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_CheckInputAndUpdateScroll(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_IsClickedByMouse(class UObject* __WorldContext, bool* IsClicked);
	static void BPL_TutorialWIndow2_SetInfo_InvalidDLC(const TArray<class FName>& InContentsMsgLabel, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_BenefitItem(class FName InTitleLabel, const struct FBenefitItemMsgDataList& InItemMsgList, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_SetInfo_BenefitDevil(class FName InTitleLabel, const struct FBenefitDevilMsgDataList& InDevilMsgList, class UObject* __WorldContext);
	static void BPL_TutorialWIndow2_IsNeedAmuletTutorial(E_AmuletTutorial_MsgType NowGetAmuletType, class UObject* __WorldContext, bool* IsNeedTutorial, bool* IsReifu);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_TutorialWindowCtrl2_C">();
	}
	static class UBPL_TutorialWindowCtrl2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_TutorialWindowCtrl2_C>();
	}
};
static_assert(alignof(UBPL_TutorialWindowCtrl2_C) == 0x000008, "Wrong alignment on UBPL_TutorialWindowCtrl2_C");
static_assert(sizeof(UBPL_TutorialWindowCtrl2_C) == 0x000028, "Wrong size on UBPL_TutorialWindowCtrl2_C");

}

