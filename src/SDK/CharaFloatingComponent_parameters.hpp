#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaFloatingComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CharaFloatingComponent.CharaFloatingComponent_C.Update
// 0x0060 (0x0060 - 0x0000)
struct CharaFloatingComponent_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D1[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IKPerch;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WatchOnesStep;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x002C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DeltaRotation;                                     // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_UpdateFloatingRotation_DeltaRotation;     // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_UpdateFloatingLocation_Offset;            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaFloatingComponent_C_Update) == 0x000008, "Wrong alignment on CharaFloatingComponent_C_Update");
static_assert(sizeof(CharaFloatingComponent_C_Update) == 0x000060, "Wrong size on CharaFloatingComponent_C_Update");
static_assert(offsetof(CharaFloatingComponent_C_Update, DeltaTime) == 0x000000, "Member 'CharaFloatingComponent_C_Update::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, Mesh) == 0x000008, "Member 'CharaFloatingComponent_C_Update::Mesh' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, IKEnable) == 0x000010, "Member 'CharaFloatingComponent_C_Update::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, IKPerch) == 0x000014, "Member 'CharaFloatingComponent_C_Update::IKPerch' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, WatchOnesStep) == 0x000018, "Member 'CharaFloatingComponent_C_Update::WatchOnesStep' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, GazePoint) == 0x00001C, "Member 'CharaFloatingComponent_C_Update::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, GazePointEnable) == 0x000028, "Member 'CharaFloatingComponent_C_Update::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, Offset) == 0x00002C, "Member 'CharaFloatingComponent_C_Update::Offset' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, DeltaRotation) == 0x000038, "Member 'CharaFloatingComponent_C_Update::DeltaRotation' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, CallFunc_UpdateFloatingRotation_DeltaRotation) == 0x000044, "Member 'CharaFloatingComponent_C_Update::CallFunc_UpdateFloatingRotation_DeltaRotation' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_Update, CallFunc_UpdateFloatingLocation_Offset) == 0x000050, "Member 'CharaFloatingComponent_C_Update::CallFunc_UpdateFloatingLocation_Offset' has a wrong offset!");

// Function CharaFloatingComponent.CharaFloatingComponent_C.UpdateFloatingRotation
// 0x0330 (0x0330 - 0x0000)
struct CharaFloatingComponent_C_UpdateFloatingRotation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IKPerch;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WatchOnesStep;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D6[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               DeltaRotation;                                     // 0x002C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationTarget;                                    // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                NormalAfter;                                       // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalBefore;                                      // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterScale;                                    // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeCache;                                    // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D8[0xB];                                     // 0x0065(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D9[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMinElement_ReturnValue;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DA[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23DB[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ModifyRotation_ReturnValue;               // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23DC[0x8];                                     // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotation_ReturnValue;                 // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeNormalFromTrianglePoints_ReturnValue; // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DD[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit_1;                        // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DE[0x2];                                     // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location_1;                   // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal_1;                     // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface_1;                    // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit_2;                        // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DF[0x2];                                     // 0x02F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location_2;                   // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal_2;                     // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface_2;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E0[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeNormalFromTrianglePoints_ReturnValue_1; // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaFloatingComponent_C_UpdateFloatingRotation) == 0x000010, "Wrong alignment on CharaFloatingComponent_C_UpdateFloatingRotation");
static_assert(sizeof(CharaFloatingComponent_C_UpdateFloatingRotation) == 0x000330, "Wrong size on CharaFloatingComponent_C_UpdateFloatingRotation");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, DeltaTime) == 0x000000, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, Mesh) == 0x000008, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, IKEnable) == 0x000010, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, IKPerch) == 0x000014, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::IKPerch' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, WatchOnesStep) == 0x000018, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::WatchOnesStep' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, GazePoint) == 0x00001C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, GazePointEnable) == 0x000028, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, DeltaRotation) == 0x00002C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::DeltaRotation' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, RotationTarget) == 0x000038, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::RotationTarget' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, NormalAfter) == 0x000044, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::NormalAfter' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, NormalBefore) == 0x000050, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::NormalBefore' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CharacterScale) == 0x00005C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CharacterScale' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, DeltaTimeCache) == 0x000060, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::DeltaTimeCache' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, Temp_byte_Variable) == 0x000064, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, Temp_byte_Variable_1) == 0x0000C4, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_GetMinElement_ReturnValue) == 0x0000C8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000CC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, Temp_bool_Variable) == 0x0000D8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000DC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000F4, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000100, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, K2Node_Select_Default) == 0x00010C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_ModifyRotation_ReturnValue) == 0x000110, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_ModifyRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_MakeVector_ReturnValue) == 0x00011C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_RLerp_ReturnValue) == 0x000128, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_MakeVector_ReturnValue_1) == 0x000134, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_MakeVector_ReturnValue_2) == 0x000140, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00014C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_GetSocketTransform_ReturnValue) == 0x000150, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000180, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Location_1) == 0x0001B0, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Rotation_1) == 0x0001BC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Scale_1) == 0x0001C8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Location_2) == 0x0001D4, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Rotation_2) == 0x0001E0, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Scale_2) == 0x0001EC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001F8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000204, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TransformLocation_ReturnValue) == 0x000210, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TransformLocation_ReturnValue_1) == 0x00021C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000230, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Location_3) == 0x000260, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Rotation_3) == 0x00026C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_BreakTransform_Scale_3) == 0x000278, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_MakeRotation_ReturnValue) == 0x000284, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_MakeRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000290, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TransformLocation_ReturnValue_2) == 0x00029C, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_MakeNormalFromTrianglePoints_ReturnValue) == 0x0002A8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_MakeNormalFromTrianglePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002B4, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002B8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Hit) == 0x0002BC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Location) == 0x0002C0, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Normal) == 0x0002CC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Surface) == 0x0002D8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Hit_1) == 0x0002D9, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Hit_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Location_1) == 0x0002DC, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Location_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Normal_1) == 0x0002E8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Normal_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Surface_1) == 0x0002F4, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Surface_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Hit_2) == 0x0002F5, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Hit_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Location_2) == 0x0002F8, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Location_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Normal_2) == 0x000304, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Normal_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_TraceGround_Surface_2) == 0x000310, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_TraceGround_Surface_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_MakeNormalFromTrianglePoints_ReturnValue_1) == 0x000314, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_MakeNormalFromTrianglePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_SelectFloat_ReturnValue) == 0x000320, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingRotation, CallFunc_RInterpTo_ReturnValue) == 0x000324, "Member 'CharaFloatingComponent_C_UpdateFloatingRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");

// Function CharaFloatingComponent.CharaFloatingComponent_C.UpdateFloatingLocation
// 0x00B0 (0x00B0 - 0x0000)
struct CharaFloatingComponent_C_UpdateFloatingLocation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E2[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IKPerch;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetZCurrent;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeCache;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E3[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaFloatingComponent_C_UpdateFloatingLocation) == 0x000010, "Wrong alignment on CharaFloatingComponent_C_UpdateFloatingLocation");
static_assert(sizeof(CharaFloatingComponent_C_UpdateFloatingLocation) == 0x0000B0, "Wrong size on CharaFloatingComponent_C_UpdateFloatingLocation");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, DeltaTime) == 0x000000, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, Mesh) == 0x000008, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, IKEnable) == 0x000010, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, IKPerch) == 0x000014, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::IKPerch' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, Offset) == 0x000018, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::Offset' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, OffsetZCurrent) == 0x000024, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::OffsetZCurrent' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, DeltaTimeCache) == 0x000028, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::DeltaTimeCache' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_MakeVector_ReturnValue) == 0x000064, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000070, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_TransformLocation_ReturnValue) == 0x00007C, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000088, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_SelectFloat_ReturnValue) == 0x00008C, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_SelectFloat_ReturnValue_1) == 0x000090, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x000094, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_FInterpTo_ReturnValue) == 0x0000A0, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_BreakVector_X) == 0x0000A4, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_UpdateFloatingLocation, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'CharaFloatingComponent_C_UpdateFloatingLocation::CallFunc_BreakVector_Z' has a wrong offset!");

// Function CharaFloatingComponent.CharaFloatingComponent_C.ModifyRotation
// 0x05E0 (0x05E0 - 0x0000)
struct CharaFloatingComponent_C_ModifyRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GazePoint;                                         // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E5[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReturnValue;                                       // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               RootRotationTarget;                                // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         AngleHorizontalTarget;                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleVerticalTarget;                               // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FocalPointLocal;                                   // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GazePointLocal;                                    // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewPointLocal;                                    // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E6[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E7[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromAtoB_ReturnValue;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_2;    // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_3;    // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_2;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_2;                      // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_3;                   // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_QuadraticFormula_X0;                      // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_QuadraticFormula_X1;                      // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_QuadraticFormula_ReturnValue;             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E8[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize2D_ReturnValue_2;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_4;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_3;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E9[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23EA[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23EB[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23EC[0xC];                                     // 0x02A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue;          // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_3;            // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0370(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_4;            // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_5;            // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23ED[0xC];                                     // 0x03C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetComposedRefPoseTransform_ReturnValue;  // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_2;              // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0460(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0490(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23EE[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x04A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x04DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x04E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x04F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_6;            // 0x0500(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_7;            // 0x050C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23EF[0x8];                                     // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0520(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_8;            // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23F0[0x4];                                     // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x0560(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaFloatingComponent_C_ModifyRotation) == 0x000010, "Wrong alignment on CharaFloatingComponent_C_ModifyRotation");
static_assert(sizeof(CharaFloatingComponent_C_ModifyRotation) == 0x0005E0, "Wrong size on CharaFloatingComponent_C_ModifyRotation");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, Rotation) == 0x000000, "Member 'CharaFloatingComponent_C_ModifyRotation::Rotation' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, Mesh) == 0x000010, "Member 'CharaFloatingComponent_C_ModifyRotation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, GazePoint) == 0x000018, "Member 'CharaFloatingComponent_C_ModifyRotation::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, GazePointEnable) == 0x000024, "Member 'CharaFloatingComponent_C_ModifyRotation::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, ReturnValue) == 0x000028, "Member 'CharaFloatingComponent_C_ModifyRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, RootRotationTarget) == 0x000034, "Member 'CharaFloatingComponent_C_ModifyRotation::RootRotationTarget' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, AngleHorizontalTarget) == 0x000040, "Member 'CharaFloatingComponent_C_ModifyRotation::AngleHorizontalTarget' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, AngleVerticalTarget) == 0x000044, "Member 'CharaFloatingComponent_C_ModifyRotation::AngleVerticalTarget' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, FocalPointLocal) == 0x000048, "Member 'CharaFloatingComponent_C_ModifyRotation::FocalPointLocal' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, GazePointLocal) == 0x000054, "Member 'CharaFloatingComponent_C_ModifyRotation::GazePointLocal' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, ViewPointLocal) == 0x000060, "Member 'CharaFloatingComponent_C_ModifyRotation::ViewPointLocal' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_FCeil_ReturnValue) == 0x0000AC, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_FCeil_ReturnValue_1) == 0x0000B0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000C8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000108, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x000114, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000120, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_X) == 0x00012C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_Y) == 0x000130, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_Z) == 0x000134, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeRotFromAtoB_ReturnValue) == 0x000138, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeRotFromAtoB_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_DegAtan2_ReturnValue) == 0x000144, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_NegateRotator_ReturnValue) == 0x000148, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_2) == 0x000154, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeVector2D_ReturnValue) == 0x000160, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_VSize2D_ReturnValue) == 0x000168, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_VSizeSquared_ReturnValue) == 0x00016C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_DegAtan2_ReturnValue_1) == 0x000170, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_3) == 0x000174, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_VSizeSquared_ReturnValue_1) == 0x000180, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_1) == 0x000184, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000190, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_2) == 0x000194, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Sqrt_ReturnValue) == 0x0001A0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001A4, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_X_1) == 0x0001B0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_Y_1) == 0x0001B4, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_Z_1) == 0x0001B8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_X_2) == 0x0001BC, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_Y_2) == 0x0001C0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakVector_Z_2) == 0x0001C4, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001C8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_DegAtan2_ReturnValue_2) == 0x0001D0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_DegAtan2_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_VSize2D_ReturnValue_1) == 0x0001D4, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_FCeil_ReturnValue_2) == 0x0001D8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_FCeil_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_DegAtan2_ReturnValue_3) == 0x0001DC, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_DegAtan2_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0001E0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_DegCos_ReturnValue) == 0x0001F0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_FClamp_ReturnValue) == 0x0001F4, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001F8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001FC, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeVector2D_ReturnValue_2) == 0x000200, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_QuadraticFormula_X0) == 0x000208, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_QuadraticFormula_X0' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_QuadraticFormula_X1) == 0x00020C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_QuadraticFormula_X1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_QuadraticFormula_ReturnValue) == 0x000210, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_QuadraticFormula_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_VSize2D_ReturnValue_2) == 0x000214, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_VSize2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeVector_ReturnValue_1) == 0x000218, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_DegAtan2_ReturnValue_4) == 0x000224, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_DegAtan2_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000228, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_FCeil_ReturnValue_3) == 0x000234, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_FCeil_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000238, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_FClamp_ReturnValue_1) == 0x000248, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000250, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000260, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000270, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_DoesSocketExist_ReturnValue) == 0x000280, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000288, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BooleanAND_ReturnValue) == 0x000298, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_GetParentBone_ReturnValue) == 0x00029C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_GetSocketTransform_ReturnValue) == 0x0002B0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_GetRefPoseTransform_ReturnValue) == 0x0002E0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_GetRefPoseTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Location) == 0x000310, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Rotation) == 0x00031C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Scale) == 0x000328, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Location_1) == 0x000334, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Rotation_1) == 0x000340, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Scale_1) == 0x00034C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_3) == 0x000358, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_NegateRotator_ReturnValue_1) == 0x000364, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeTransforms_ReturnValue) == 0x000370, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_4) == 0x0003A0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_InverseTransformLocation_ReturnValue) == 0x0003AC, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_5) == 0x0003B8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_GetComposedRefPoseTransform_ReturnValue) == 0x0003D0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_GetComposedRefPoseTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000400, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Location_2) == 0x000430, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Rotation_2) == 0x00043C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Scale_2) == 0x000448, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_NegateRotator_ReturnValue_2) == 0x000454, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_NegateRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeTransform_ReturnValue) == 0x000460, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000490, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0004A0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Location_3) == 0x0004D0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Rotation_3) == 0x0004DC, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Scale_3) == 0x0004E8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x0004F4, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_6) == 0x000500, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_7) == 0x00050C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_MakeTransform_ReturnValue_1) == 0x000520, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeRotators_ReturnValue_8) == 0x000550, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeRotators_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_ComposeTransforms_ReturnValue_2) == 0x000560, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Location_4) == 0x000590, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Rotation_4) == 0x00059C, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_BreakTransform_Scale_4) == 0x0005A8, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_TransformDirection_ReturnValue) == 0x0005B4, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_TransformLocation_ReturnValue) == 0x0005C0, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_ModifyRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0005CC, "Member 'CharaFloatingComponent_C_ModifyRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function CharaFloatingComponent.CharaFloatingComponent_C.MakeRotation
// 0x00E0 (0x00E0 - 0x0000)
struct CharaFloatingComponent_C_MakeRotation final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalBefore;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalAfter;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23F1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue_1;  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromAtoB_ReturnValue;              // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaFloatingComponent_C_MakeRotation) == 0x000010, "Wrong alignment on CharaFloatingComponent_C_MakeRotation");
static_assert(sizeof(CharaFloatingComponent_C_MakeRotation) == 0x0000E0, "Wrong size on CharaFloatingComponent_C_MakeRotation");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, Mesh) == 0x000000, "Member 'CharaFloatingComponent_C_MakeRotation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, NormalBefore) == 0x000008, "Member 'CharaFloatingComponent_C_MakeRotation::NormalBefore' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, NormalAfter) == 0x000014, "Member 'CharaFloatingComponent_C_MakeRotation::NormalAfter' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, ReturnValue) == 0x000020, "Member 'CharaFloatingComponent_C_MakeRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_InverseTransformDirection_ReturnValue) == 0x000060, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_InverseTransformDirection_ReturnValue_1) == 0x00006C, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_InverseTransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_MakeRotFromAtoB_ReturnValue) == 0x000078, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_MakeRotFromAtoB_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000084, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_BreakVector_X) == 0x000090, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_BreakVector_Y) == 0x000094, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_BreakVector_Z) == 0x000098, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_MakeVector2D_ReturnValue) == 0x00009C, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_DegAtan2_ReturnValue) == 0x0000A4, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_VSize2D_ReturnValue) == 0x0000A8, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_FClamp_ReturnValue) == 0x0000AC, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_DegAtan2_ReturnValue_1) == 0x0000B0, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0000B4, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_FClamp_ReturnValue_1) == 0x0000C0, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x0000C4, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaFloatingComponent_C_MakeRotation, CallFunc_ComposeRotators_ReturnValue) == 0x0000D0, "Member 'CharaFloatingComponent_C_MakeRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

}

