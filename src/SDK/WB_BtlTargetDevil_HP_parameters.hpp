#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlTargetDevil_HP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.ExecuteUbergraph_WB_BtlTargetDevil_HP
// 0x0094 (0x0094 - 0x0000)
struct WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C1[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately_1;                        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C2[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately;                          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C3[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_1;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C4[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP) == 0x000094, "Wrong size on WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, EntryPoint) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_Delta) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_IsDesignTime) == 0x000044, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_Rate_1) == 0x000048, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_Rate_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_Immediately_1) == 0x00004C, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_Immediately_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_Rate) == 0x000050, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_Event_Immediately) == 0x000054, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_Event_Immediately' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimPackName_1) == 0x000058, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimationName_1) == 0x000060, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimPackIndex_1) == 0x000068, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimPackIndex_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimationIndex_1) == 0x00006C, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimationIndex_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_SwitchInteger_CmpSuccess) == 0x000070, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimPackName) == 0x000074, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimationName) == 0x00007C, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000084, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000088, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, K2Node_SwitchInteger_CmpSuccess_1) == 0x00008C, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, CallFunc_IsPlaying_ReturnValue) == 0x00008D, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, CallFunc_BooleanOR_ReturnValue) == 0x00008E, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, CallFunc_Not_PreBool_ReturnValue) == 0x00008F, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, CallFunc_IsPlaying_ReturnValue_1) == 0x000090, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, CallFunc_BooleanOR_ReturnValue_1) == 0x000091, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000092, "Member 'WB_BtlTargetDevil_HP_C_ExecuteUbergraph_WB_BtlTargetDevil_HP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlTargetDevil_HP_C_BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.Disappear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlTargetDevil_HP_C_Disappear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_Disappear) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_Disappear");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_Disappear) == 0x000008, "Wrong size on WB_BtlTargetDevil_HP_C_Disappear");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_Disappear, Rate) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_Disappear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_Disappear, Immediately) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_Disappear::Immediately' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.Appear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlTargetDevil_HP_C_Appear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_Appear) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_Appear");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_Appear) == 0x000008, "Wrong size on WB_BtlTargetDevil_HP_C_Appear");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_Appear, Rate) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_Appear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_Appear, Immediately) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_Appear::Immediately' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_HP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_PreConstruct) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_HP_C_PreConstruct");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_PreConstruct) == 0x000001, "Wrong size on WB_BtlTargetDevil_HP_C_PreConstruct");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_BtlTargetDevil_HP_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_Tick) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_Tick");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_Tick) == 0x00003C, "Wrong size on WB_BtlTargetDevil_HP_C_Tick");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_Tick, MyGeometry) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_BtlTargetDevil_HP_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.CallTick
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlTargetDevil_HP_C_CallTick final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_CallTick) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_CallTick");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_CallTick) == 0x000004, "Wrong size on WB_BtlTargetDevil_HP_C_CallTick");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_CallTick, Delta) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_CallTick::Delta' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.SettingParam
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlTargetDevil_HP_C_SettingParam final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParamMax;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParamResult;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsAnalyzed;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_SettingParam) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_SettingParam");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_SettingParam) == 0x000010, "Wrong size on WB_BtlTargetDevil_HP_C_SettingParam");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SettingParam, Param) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_SettingParam::Param' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SettingParam, ParamMax) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_SettingParam::ParamMax' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SettingParam, ParamResult) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_SettingParam::ParamResult' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SettingParam, Param_IsAnalyzed) == 0x00000C, "Member 'WB_BtlTargetDevil_HP_C_SettingParam::Param_IsAnalyzed' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.StartAddAnim
// 0x0140 (0x0140 - 0x0000)
struct WB_BtlTargetDevil_HP_C_StartAddAnim final
{
public:
	int32                                         AddParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overflow;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C5[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Const_TimeMax;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Time;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BackAdd;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C6[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C7[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C8[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_StartAddAnim) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_HP_C_StartAddAnim");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_StartAddAnim) == 0x000140, "Wrong size on WB_BtlTargetDevil_HP_C_StartAddAnim");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, AddParam) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::AddParam' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, Time) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::Time' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, Overflow) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::Overflow' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, Const_TimeMax) == 0x00000C, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::Const_TimeMax' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, Lo_Time) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::Lo_Time' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, Lo_BackAdd) == 0x000014, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::Lo_BackAdd' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_SelectInt_ReturnValue) == 0x00003C, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000068, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000088, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0000A8, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D8, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E8, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000100, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000110, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Subtract_IntInt_ReturnValue) == 0x000120, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_GetTimeRange_MinTime) == 0x000124, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_GetTimeRange_MaxTime) == 0x000128, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00012C, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000130, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Greater_IntInt_ReturnValue) == 0x000134, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000135, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_BooleanAND_ReturnValue) == 0x000136, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000137, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_StartAddAnim, CallFunc_Add_IntInt_ReturnValue_1) == 0x000138, "Member 'WB_BtlTargetDevil_HP_C_StartAddAnim::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.PlayDamageAnim
// 0x00D0 (0x00D0 - 0x0000)
struct WB_BtlTargetDevil_HP_C_PlayDamageAnim final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SetParam2;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_SetParam;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_OneAdd;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C9[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10CA[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10CB[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10CC[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_PlayDamageAnim) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_HP_C_PlayDamageAnim");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_PlayDamageAnim) == 0x0000D0, "Wrong size on WB_BtlTargetDevil_HP_C_PlayDamageAnim");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, Time) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::Time' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, Lo_SetParam2) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::Lo_SetParam2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, Lo_SetParam) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::Lo_SetParam' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, Lo_OneAdd) == 0x00000C, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::Lo_OneAdd' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Conv_FloatToString_ReturnValue) == 0x000018, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000070, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x000072, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000098, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000A8, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B9, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000BA, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_BooleanOR_ReturnValue) == 0x0000BB, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_BooleanOR_ReturnValue_1) == 0x0000BC, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C4, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C8, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayDamageAnim, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000CC, "Member 'WB_BtlTargetDevil_HP_C_PlayDamageAnim::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.IsPlayDamageAnim
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_HP_C_IsPlayDamageAnim final
{
public:
	bool                                          M_PlayDamageAnim;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_IsPlayDamageAnim) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_HP_C_IsPlayDamageAnim");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_IsPlayDamageAnim) == 0x000001, "Wrong size on WB_BtlTargetDevil_HP_C_IsPlayDamageAnim");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_IsPlayDamageAnim, M_PlayDamageAnim) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_IsPlayDamageAnim::M_PlayDamageAnim' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.DebugPrint
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlTargetDevil_HP_C_DebugPrint final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_DebugPrint) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_HP_C_DebugPrint");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_DebugPrint) == 0x000010, "Wrong size on WB_BtlTargetDevil_HP_C_DebugPrint");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_DebugPrint, InString) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_DebugPrint::InString' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.PlayHPBarAnim
// 0x0014 (0x0014 - 0x0000)
struct WB_BtlTargetDevil_HP_C_PlayHPBarAnim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEndOfAnim;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10CD[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayByIndex_ReturnValue_1;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_PlayHPBarAnim");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim) == 0x000014, "Wrong size on WB_BtlTargetDevil_HP_C_PlayHPBarAnim");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim, AnimIndex) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarAnim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim, IsLoop) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarAnim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim, IsEndOfAnim) == 0x000005, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarAnim::IsEndOfAnim' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim, CallFunc_SelectInt_ReturnValue_1) == 0x00000C, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarAnim::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim, CallFunc_PlayByIndex_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarAnim::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarAnim, CallFunc_PlayByIndex_ReturnValue_1) == 0x000011, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarAnim::CallFunc_PlayByIndex_ReturnValue_1' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.UpDataHPBarColor
// 0x0014 (0x0014 - 0x0000)
struct WB_BtlTargetDevil_HP_C_UpDataHPBarColor final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10CE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayByIndex_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10CF[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_UpDataHPBarColor");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor) == 0x000014, "Wrong size on WB_BtlTargetDevil_HP_C_UpDataHPBarColor");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_UpDataHPBarColor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_UpDataHPBarColor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor, CallFunc_PlayByIndex_ReturnValue) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_UpDataHPBarColor::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor, CallFunc_PlayByIndex_ReturnValue_1) == 0x000009, "Member 'WB_BtlTargetDevil_HP_C_UpDataHPBarColor::CallFunc_PlayByIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'WB_BtlTargetDevil_HP_C_UpDataHPBarColor::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_UpDataHPBarColor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_UpDataHPBarColor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.PlayHPBarInnerAnim
// 0x00C0 (0x00C0 - 0x0000)
struct WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FName>                      AnimName;                                          // 0x0008(0x0050)(Edit, BlueprintVisible)
	TMap<int32, class FName>                      K2Node_MakeVariable_MakeVariableOutput;            // 0x0058(0x0050)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D1[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim) == 0x0000C0, "Wrong size on WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, AnimIndex) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, IsLoop) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, AnimName) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::AnimName' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, K2Node_MakeVariable_MakeVariableOutput) == 0x000058, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, CallFunc_SelectInt_ReturnValue) == 0x0000A8, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim, CallFunc_Play_ReturnValue) == 0x0000B9, "Member 'WB_BtlTargetDevil_HP_C_PlayHPBarInnerAnim::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.SetSsPlayerPartSize
// 0x0020 (0x0020 - 0x0000)
struct WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize final
{
public:
	class UWidget*                                SsPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PartSize;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerSlot*                          K2Node_DynamicCast_AsSs_Player_Slot;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize) == 0x000008, "Wrong alignment on WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize) == 0x000020, "Wrong size on WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize, SsPlayer) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize::SsPlayer' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize, PartSize) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize::PartSize' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize, K2Node_DynamicCast_AsSs_Player_Slot) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize::K2Node_DynamicCast_AsSs_Player_Slot' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_BtlTargetDevil_HP_C_SetSsPlayerPartSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.ApplyHP Num
// 0x0002 (0x0002 - 0x0000)
struct WB_BtlTargetDevil_HP_C_ApplyHP_Num final
{
public:
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_ApplyHP_Num) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_HP_C_ApplyHP_Num");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_ApplyHP_Num) == 0x000002, "Wrong size on WB_BtlTargetDevil_HP_C_ApplyHP_Num");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHP_Num, CallFunc_Less_IntInt_ReturnValue) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_ApplyHP_Num::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHP_Num, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'WB_BtlTargetDevil_HP_C_ApplyHP_Num::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.ApplyHPGauge
// 0x0074 (0x0074 - 0x0000)
struct WB_BtlTargetDevil_HP_C_ApplyHPGauge final
{
public:
	int32                                         InnerGauge;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Destination;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Bar;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Inner;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D2[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D4[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D5[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_ApplyHPGauge) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_ApplyHPGauge");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_ApplyHPGauge) == 0x000074, "Wrong size on WB_BtlTargetDevil_HP_C_ApplyHPGauge");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, InnerGauge) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::InnerGauge' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, Destination) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::Destination' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, Lo_Bar) == 0x000008, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::Lo_Bar' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, Lo_Inner) == 0x00000C, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::Lo_Inner' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000013, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000014, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_BooleanAND_ReturnValue_1) == 0x000020, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_MakeVector2D_ReturnValue_1) == 0x000024, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_SelectInt_ReturnValue) == 0x000030, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_SelectInt_ReturnValue_1) == 0x000038, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Min_ReturnValue) == 0x00003C, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Min_ReturnValue_1) == 0x000054, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000058, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00005C, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000060, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000064, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_FTrunc_ReturnValue_1) == 0x00006C, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ApplyHPGauge, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000070, "Member 'WB_BtlTargetDevil_HP_C_ApplyHPGauge::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.ShowCureExpection
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlTargetDevil_HP_C_ShowCureExpection final
{
public:
	int32                                         ExpectedHP;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_ShowCureExpection) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_ShowCureExpection");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_ShowCureExpection) == 0x000008, "Wrong size on WB_BtlTargetDevil_HP_C_ShowCureExpection");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ShowCureExpection, ExpectedHP) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_ShowCureExpection::ExpectedHP' has a wrong offset!");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_ShowCureExpection, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WB_BtlTargetDevil_HP_C_ShowCureExpection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.GetCurrentHP
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlTargetDevil_HP_C_GetCurrentHP final
{
public:
	int32                                         Hp;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_GetCurrentHP) == 0x000004, "Wrong alignment on WB_BtlTargetDevil_HP_C_GetCurrentHP");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_GetCurrentHP) == 0x000004, "Wrong size on WB_BtlTargetDevil_HP_C_GetCurrentHP");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_GetCurrentHP, Hp) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_GetCurrentHP::Hp' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.SetAllWidgetTick
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_HP_C_SetAllWidgetTick final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_SetAllWidgetTick) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_HP_C_SetAllWidgetTick");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_SetAllWidgetTick) == 0x000001, "Wrong size on WB_BtlTargetDevil_HP_C_SetAllWidgetTick");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_SetAllWidgetTick, Enable) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_SetAllWidgetTick::Enable' has a wrong offset!");

// Function WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C.IsDisappeared
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlTargetDevil_HP_C_IsDisappeared final
{
public:
	bool                                          Param_IsDisappeared;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlTargetDevil_HP_C_IsDisappeared) == 0x000001, "Wrong alignment on WB_BtlTargetDevil_HP_C_IsDisappeared");
static_assert(sizeof(WB_BtlTargetDevil_HP_C_IsDisappeared) == 0x000001, "Wrong size on WB_BtlTargetDevil_HP_C_IsDisappeared");
static_assert(offsetof(WB_BtlTargetDevil_HP_C_IsDisappeared, Param_IsDisappeared) == 0x000000, "Member 'WB_BtlTargetDevil_HP_C_IsDisappeared::Param_IsDisappeared' has a wrong offset!");

}

