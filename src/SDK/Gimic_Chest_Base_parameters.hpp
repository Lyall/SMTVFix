#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Gimic_Chest_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_MapGimmickHideReason_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"
#include "MapAttackDamageData_structs.hpp"


namespace SDK::Params
{

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.ExecuteUbergraph_Gimic_Chest_Base
// 0x1000 (0x1000 - 0x0000)
struct Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DC6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(E_BTL_END BtlEndType, int32 ChainEncountNum)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC7[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 Temp_class_Variable;                               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DC8[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isSkipped;                            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DC9[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DCA[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapAttackDamageData                   K2Node_Event_MapAttackData;                        // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x0160(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FlagCh_OK;                                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DCB[0x2];                                     // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetPieceSpawnPos_Pos;                     // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DCC[0x8];                                     // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0260(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor_1;                 // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DCD[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBreakSE_NewParam;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DCE[0x6];                                     // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FlagCh_OK_1;                              // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DCF[0x1];                                     // 0x02F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece;               // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD0[0x2];                                     // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD1[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ItemGetNum_ReturnValue;                   // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetMaxNum_ReturnValue;                // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetPartyMakka_ReturnValue;                // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetNum_ReturnValue_1;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD2[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD3[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTakaraFlag_ReturnValue;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD4[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD5[0x3];                                     // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BPI_GetTakaraId_TakaraId;                 // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTakaraData_SaveID;                     // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTakaraData                            CallFunc_GetTakaraData_ReturnValue;                // 0x0370(0x0024)(ConstParm, NoDestructor)
	uint8                                         Pad_4DD6[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPieceData>                     K2Node_MakeArray_Array_1;                          // 0x0398(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x03A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD7[0x3];                                     // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD8[0x3];                                     // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MovePiece;                            // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD9[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DDA[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0410(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_BPI_GetMapMakkaWinCtrl_Ctrl;              // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DDB[0x7];                                     // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapMakkaWinCtrl_C> K2Node_DynamicCast_AsBPI_Map_Makka_Win_Ctrl;       // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DDC[0x1];                                     // 0x045B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DDD[0x3];                                     // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResetMesh_NewParam;                       // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0485(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DDE[0x2];                                     // 0x0486(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DDF[0x2];                                     // 0x0496(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE0[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x04C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE1[0x3];                                     // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl_1;                 // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl_1;             // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE2[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapInfoWinCtrl_Ctrl;               // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_2;                    // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_2;             // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE3[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapInfoWinCtrl_C> K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl;        // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE4[0x3];                                     // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPI_GetTakaraId_TakaraId_1;               // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_CheckActive_Active;                   // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlagValue_ReturnValue;          // 0x055A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x055B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x055D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MapGimmickHideReason                        K2Node_Event_HideReason_1;                         // 0x055E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapGimmickHideReason                        K2Node_Event_HideReason;                           // 0x055F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE5[0x3];                                     // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_DEL_ReturnValue;                      // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BIT_ADD_ReturnValue;                      // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE6[0x3];                                     // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE7[0x3];                                     // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0598(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x05A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE8[0x3];                                     // 0x05D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue;          // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue_1;        // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGazeTarget>           CallFunc_RegisterGazeTarget_InTarget_CastInput;    // 0x05E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TArray<struct FVector>                        K2Node_MakeArray_Array_3;                          // 0x05F8(0x0010)(ReferenceParm)
	TScriptInterface<class IGazeTarget>           CallFunc_UnregisterGazeTarget_InTarget_CastInput;  // 0x0608(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE9[0x4];                                     // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue_2;        // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEA[0x4];                                     // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGazeTarget>           CallFunc_UnregisterGazeTarget_InTarget_CastInput_1; // 0x0630(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0640(0x0030)(IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DEB[0xF];                                     // 0x0671(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0680(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DEC[0x7];                                     // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue_3;        // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGazeTarget>           CallFunc_UnregisterGazeTarget_InTarget_CastInput_2; // 0x06C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x06D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x06D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DED[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x06E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x06F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl_2;                 // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0708(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DEE[0x7];                                     // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl_2;             // 0x0798(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DEF[0x6];                                     // 0x07AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapInfoWinCtrl_Ctrl_1;             // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapInfoWinCtrl_C> K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl_1;      // 0x07B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF0[0x7];                                     // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl_3;                 // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl_3;             // 0x07D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF1[0x7];                                     // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapInfoWinCtrl_Ctrl_2;             // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x07F8(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_MapInfoWinCtrl_C> K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl_2;      // 0x0808(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF2[0x6];                                     // 0x081A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetPieceSpawnPos_Pos_1;                   // 0x0820(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0850(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x085C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0868(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF3[0x4];                                     // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_4;                          // 0x0878(0x0010)(ReferenceParm)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0888(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_1;             // 0x0898(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF4[0x7];                                     // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPieceData>                     K2Node_MakeArray_Array_5;                          // 0x08B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF5[0x3];                                     // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x08DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF6[0x3];                                     // 0x08DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_1;                     // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x08F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTakaraBreakFlag_ReturnValue;           // 0x0904(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF7[0x3];                                     // 0x0905(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x0908(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x0914(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array_6;                          // 0x0920(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CheckPlayerOverlapComponent_AfterLoad_OverlapComponent; // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF8[0x7];                                     // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue_4;        // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGazeTarget>           CallFunc_UnregisterGazeTarget_InTarget_CastInput_3; // 0x0940(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_3;                    // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_3;             // 0x0958(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_1;              // 0x0969(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x096A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x096B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DF9[0x3];                                     // 0x096D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DFA[0x4];                                     // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckView_View;                           // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DFB[0xF];                                     // 0x0981(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapData                               CallFunc_GetMapData_ReturnValue;                   // 0x0990(0x03A0)()
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0D30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0D3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0D48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0D54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DFC[0x3];                                     // 0x0D61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_6;                     // 0x0D64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DFD[0x3];                                     // 0x0D71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0D74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0D80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DFE[0x4];                                     // 0x0D8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0D90(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0DC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DFF[0x4];                                     // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0DD0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0E00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Open_Check_Room_Rotate_Original;      // 0x0E0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E00[0x3];                                     // 0x0E0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_2;             // 0x0E30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E01[0x7];                                     // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_3;             // 0x0E48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E02[0x7];                                     // 0x0E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_BPI_GetMovePieceCollision_Collision;      // 0x0E60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_BPI_GetMovePieceCollision_Collision_1;    // 0x0E68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_4;             // 0x0E70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E03[0x7];                                     // 0x0E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_5;             // 0x0E88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E04[0x7];                                     // 0x0E99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0EA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E05[0x3];                                     // 0x0EB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0EB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0EC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0ECC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x0ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x0EDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E06[0x3];                                     // 0x0EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_2;              // 0x0EEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0EF8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E07[0x3];                                     // 0x0F81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ItemGetMaxNum_ReturnValue_1;              // 0x0F84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetNum_ReturnValue_2;                 // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0F8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E08[0x3];                                     // 0x0F8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0F90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0F94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0F98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0F9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E09[0x3];                                     // 0x0F9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0FA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_2;                   // 0x0FA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0A[0x7];                                     // 0x0FA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_4;                    // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_4;             // 0x0FB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0B[0x7];                                     // 0x0FC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor;           // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_END                                     K2Node_CustomEvent_BtlEndType;                     // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E0C[0x3];                                     // 0x0FD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ChainEncountNum;                // 0x0FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger;       // 0x0FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0FE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0D[0x3];                                     // 0x0FE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0FEC(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base) == 0x000010, "Wrong alignment on Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base");
static_assert(sizeof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base) == 0x001000, "Wrong size on Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, EntryPoint) == 0x000000, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_bool_Variable) == 0x000004, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_MakeArray_Array) == 0x000048, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_int_Variable) == 0x000058, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Percent_IntInt_ReturnValue) == 0x000064, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_class_Variable) == 0x0000A0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CustomEvent_Loaded) == 0x0000A8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_ClassDynamicCast_AsActor) == 0x0000B0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_ClassDynamicCast_bSuccess) == 0x0000B8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000BC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Event_isSkipped) == 0x0000D4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Event_isSkipped' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000D8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000E4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000F8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetNumMaterials_ReturnValue) == 0x000100, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Subtract_IntInt_ReturnValue) == 0x000104, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Event_MapAttackData) == 0x000108, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Event_MapAttackData' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetTimelineLength_ReturnValue) == 0x000118, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00011C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Normal_ReturnValue) == 0x000134, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_LineTraceComponent_HitLocation) == 0x000140, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_LineTraceComponent_HitNormal) == 0x00014C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_LineTraceComponent_BoneName) == 0x000158, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_LineTraceComponent_OutHit) == 0x000160, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x0001E8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_FlagCh_OK) == 0x0001E9, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_FlagCh_OK' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001EC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetPieceSpawnPos_Pos) == 0x0001F0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetPieceSpawnPos_Pos' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetPlayerPawn_ReturnValue) == 0x000220, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Location) == 0x000228, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Rotation) == 0x000234, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Scale) == 0x000240, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetActorForwardVector_ReturnValue) == 0x00024C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetTransform_ReturnValue) == 0x000260, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Normal_ReturnValue_1) == 0x000290, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Location_1) == 0x00029C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Rotation_1) == 0x0002A8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Scale_1) == 0x0002B4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_class_Variable_1) == 0x0002C0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_ClassDynamicCast_AsActor_1) == 0x0002C8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_ClassDynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_ClassDynamicCast_bSuccess_1) == 0x0002D0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x0002D8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_PlayBreakSE_NewParam) == 0x0002E0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_PlayBreakSE_NewParam' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_IsValid_ReturnValue) == 0x0002E1, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CustomEvent_Loaded_1) == 0x0002E8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_CheckEventFlag_ReturnValue) == 0x0002F0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue) == 0x0002F1, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_FlagCh_OK_1) == 0x0002F2, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_FlagCh_OK_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_int_Array_Index_Variable) == 0x0002F4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Move_Piece) == 0x0002F8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Move_Piece' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess) == 0x000308, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000309, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_float_Variable) == 0x00030C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_float_Variable_1) == 0x000310, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_bool_Variable_1) == 0x000314, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ItemGetNum_ReturnValue) == 0x000318, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ItemGetNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ItemGetMaxNum_ReturnValue) == 0x00031C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ItemGetMaxNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000320, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000321, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000322, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BooleanOR_ReturnValue) == 0x000323, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetPartyMakka_ReturnValue) == 0x000324, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetPartyMakka_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ItemGetNum_ReturnValue_1) == 0x000328, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ItemGetNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_int_Loop_Counter_Variable) == 0x00032C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_1) == 0x000330, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_IntInt_ReturnValue_1) == 0x000334, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_int_Variable_1) == 0x000338, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMaterial_ReturnValue) == 0x000340, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetTakaraFlag_ReturnValue) == 0x000348, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetTakaraFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000350, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Add_ReturnValue) == 0x000358, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00035C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_IntInt_ReturnValue_2) == 0x000360, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapID_ReturnValue) == 0x000364, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetTakaraId_TakaraId) == 0x000368, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetTakaraId_TakaraId' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetTakaraData_SaveID) == 0x00036C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetTakaraData_SaveID' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetTakaraData_ReturnValue) == 0x000370, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetTakaraData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_MakeArray_Array_1) == 0x000398, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_MakeArray_Array_2) == 0x0003A8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_2) == 0x0003B8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_3) == 0x0003BC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_4) == 0x0003C0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0003C4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x0003C8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0003CC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_FMax_ReturnValue) == 0x0003D0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Select_Default) == 0x0003D4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003D8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_IsValid_ReturnValue_1) == 0x0003DC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Event_MovePiece) == 0x0003E0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Event_MovePiece' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_IsValid_ReturnValue_2) == 0x0003E8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapUICtrl_MapUICtrl) == 0x0003F0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x0003F8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_1) == 0x000408, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_object_Variable) == 0x000410, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetMapMakkaWinCtrl_Ctrl) == 0x000420, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetMapMakkaWinCtrl_Ctrl' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapCommon_rerutn) == 0x000428, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000430, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_2) == 0x000440, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Makka_Win_Ctrl) == 0x000448, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Makka_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_3) == 0x000458, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_CheckMapPause_IsPause) == 0x000459, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_2) == 0x00045A, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_float_Variable_2) == 0x00045C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapCommon_rerutn_1) == 0x000460, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x000468, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_4) == 0x000478, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_float_Variable_3) == 0x00047C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeLiteralInt_ReturnValue) == 0x000480, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ResetMesh_NewParam) == 0x000484, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ResetMesh_NewParam' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_bool_Variable_2) == 0x000485, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Get_Item) == 0x000488, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_5) == 0x000490, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Less_IntInt_ReturnValue_1) == 0x000494, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_3) == 0x000495, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeVector_ReturnValue_1) == 0x000498, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeRotFromZX_ReturnValue) == 0x0004A4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0004B0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeTransform_ReturnValue_1) == 0x0004C0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BooleanAND_ReturnValue) == 0x0004F0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BooleanAND_ReturnValue_1) == 0x0004F1, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004F2, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_5) == 0x0004F3, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_6) == 0x0004F4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapUICtrl_MapUICtrl_1) == 0x0004F8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapUICtrl_MapUICtrl_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_UICtrl_1) == 0x000500, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_UICtrl_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_5) == 0x000510, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetMapInfoWinCtrl_Ctrl) == 0x000518, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetMapInfoWinCtrl_Ctrl' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapCommon_rerutn_2) == 0x000520, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapCommon_rerutn_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Common_2) == 0x000528, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Common_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_6) == 0x000538, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl) == 0x000540, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_7) == 0x000550, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetTakaraId_TakaraId_1) == 0x000554, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetTakaraId_TakaraId_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_CheckActive_Active) == 0x000558, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_CheckActive_Active' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_7) == 0x000559, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_CheckEventFlagValue_ReturnValue) == 0x00055A, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_CheckEventFlagValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_8) == 0x00055B, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00055C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BooleanAND_ReturnValue_2) == 0x00055D, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Event_HideReason_1) == 0x00055E, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Event_HideReason_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Event_HideReason) == 0x00055F, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Event_HideReason' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000560, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BIT_DEL_ReturnValue) == 0x000564, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BIT_DEL_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BIT_ADD_ReturnValue) == 0x000568, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BIT_ADD_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00056C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_int_Variable_2) == 0x000570, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_IntInt_ReturnValue_3) == 0x000574, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000578, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Less_IntInt_ReturnValue_2) == 0x00057C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_FloatFloat_ReturnValue) == 0x000580, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_DegCos_ReturnValue) == 0x000584, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_DegSin_ReturnValue) == 0x000588, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeVector_ReturnValue_2) == 0x00058C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Normal_ReturnValue_2) == 0x000598, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Normal_ReturnValue_3) == 0x0005A4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0005B0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0005BC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_VectorVector_ReturnValue) == 0x0005C8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_9) == 0x0005D4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetGazeTargetHolder_ReturnValue) == 0x0005D8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetGazeTargetHolder_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetGazeTargetHolder_ReturnValue_1) == 0x0005E0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetGazeTargetHolder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_RegisterGazeTarget_InTarget_CastInput) == 0x0005E8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_RegisterGazeTarget_InTarget_CastInput' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_MakeArray_Array_3) == 0x0005F8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_UnregisterGazeTarget_InTarget_CastInput) == 0x000608, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_UnregisterGazeTarget_InTarget_CastInput' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_6) == 0x000618, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetGazeTargetHolder_ReturnValue_2) == 0x000620, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetGazeTargetHolder_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000628, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_UnregisterGazeTarget_InTarget_CastInput_1) == 0x000630, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_UnregisterGazeTarget_InTarget_CastInput_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeTransform_ReturnValue_2) == 0x000640, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Event_EndPlayReason) == 0x000670, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ComposeTransforms_ReturnValue) == 0x000680, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0006B0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetGazeTargetHolder_ReturnValue_3) == 0x0006B8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetGazeTargetHolder_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_UnregisterGazeTarget_InTarget_CastInput_2) == 0x0006C0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_UnregisterGazeTarget_InTarget_CastInput_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_10) == 0x0006D0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BooleanOR_ReturnValue_1) == 0x0006D1, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_11) == 0x0006D2, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BooleanOR_ReturnValue_2) == 0x0006D3, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_And_IntInt_ReturnValue) == 0x0006D4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0006D8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0006E0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0006E8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0006F4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapUICtrl_MapUICtrl_2) == 0x000700, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapUICtrl_MapUICtrl_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_LineTraceSingle_OutHit) == 0x000708, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_LineTraceSingle_ReturnValue) == 0x000790, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_UICtrl_2) == 0x000798, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_UICtrl_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_8) == 0x0007A8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_12) == 0x0007A9, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetMapInfoWinCtrl_Ctrl_1) == 0x0007B0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetMapInfoWinCtrl_Ctrl_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl_1) == 0x0007B8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_9) == 0x0007C8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapUICtrl_MapUICtrl_3) == 0x0007D0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapUICtrl_MapUICtrl_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_UICtrl_3) == 0x0007D8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_UICtrl_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_10) == 0x0007E8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetMapInfoWinCtrl_Ctrl_2) == 0x0007F0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetMapInfoWinCtrl_Ctrl_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x0007F8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl_2) == 0x000808, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Info_Win_Ctrl_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_11) == 0x000818, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_IsValid_ReturnValue_3) == 0x000819, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetPieceSpawnPos_Pos_1) == 0x000820, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetPieceSpawnPos_Pos_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Location_2) == 0x000850, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Rotation_2) == 0x00085C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Scale_2) == 0x000868, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_MakeArray_Array_4) == 0x000878, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x000888, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Move_Piece_1) == 0x000898, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Move_Piece_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_12) == 0x0008A8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_MakeArray_Array_5) == 0x0008B0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_7) == 0x0008C0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_8) == 0x0008C4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Less_IntInt_ReturnValue_3) == 0x0008C8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0008CC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0008D0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Length_ReturnValue_9) == 0x0008D4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_FMax_ReturnValue_1) == 0x0008D8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0008DC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0008E0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0008E4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Select_Default_1) == 0x0008E8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0008EC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_DegCos_ReturnValue_1) == 0x0008F0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_DegSin_ReturnValue_1) == 0x0008F4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeVector_ReturnValue_3) == 0x0008F8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetTakaraBreakFlag_ReturnValue) == 0x000904, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetTakaraBreakFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Normal_ReturnValue_4) == 0x000908, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Normal_ReturnValue_5) == 0x000914, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_MakeArray_Array_6) == 0x000920, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_CheckPlayerOverlapComponent_AfterLoad_OverlapComponent) == 0x000930, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_CheckPlayerOverlapComponent_AfterLoad_OverlapComponent' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetGazeTargetHolder_ReturnValue_4) == 0x000938, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetGazeTargetHolder_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_UnregisterGazeTarget_InTarget_CastInput_3) == 0x000940, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_UnregisterGazeTarget_InTarget_CastInput_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapCommon_rerutn_3) == 0x000950, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapCommon_rerutn_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Common_3) == 0x000958, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Common_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_13) == 0x000968, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_CheckMapPause_IsPause_1) == 0x000969, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_CheckMapPause_IsPause_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_13) == 0x00096A, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_14) == 0x00096B, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Not_PreBool_ReturnValue_15) == 0x00096C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_int_Array_Index_Variable_1) == 0x000970, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Array_Get_Item_1) == 0x000978, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_CheckView_View) == 0x000980, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_CheckView_View' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapData_ReturnValue) == 0x000990, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Location_3) == 0x000D30, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Rotation_3) == 0x000D3C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BreakTransform_Scale_3) == 0x000D48, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetForwardVector_ReturnValue) == 0x000D54, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetFadeState_ReturnValue) == 0x000D60, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Normal_ReturnValue_6) == 0x000D64, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Normal_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000D70, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000D74, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000D80, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeTransform_ReturnValue_3) == 0x000D90, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000DC0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000DD0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000E00, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Can_Open_Check_Room_Rotate_Original) == 0x000E0C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Can_Open_Check_Room_Rotate_Original' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000E10, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000E18, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_FinishSpawningActor_ReturnValue) == 0x000E20, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000E28, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Move_Piece_2) == 0x000E30, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Move_Piece_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_14) == 0x000E40, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Move_Piece_3) == 0x000E48, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Move_Piece_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_15) == 0x000E58, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetMovePieceCollision_Collision) == 0x000E60, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetMovePieceCollision_Collision' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetMovePieceCollision_Collision_1) == 0x000E68, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetMovePieceCollision_Collision_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Move_Piece_4) == 0x000E70, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Move_Piece_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_16) == 0x000E80, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Move_Piece_5) == 0x000E88, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Move_Piece_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_17) == 0x000E98, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetGameMode_ReturnValue) == 0x000EA0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsProject_Game_Mode) == 0x000EA8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_18) == 0x000EB0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000EB4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeVector_ReturnValue_4) == 0x000EC0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeVector_ReturnValue_5) == 0x000ECC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapID_ReturnValue_1) == 0x000ED8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_Select_Default_2) == 0x000EDC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000EE8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_MakeRotFromZX_ReturnValue_2) == 0x000EEC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_MakeRotFromZX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000EF8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_IsValid_ReturnValue_4) == 0x000F80, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ItemGetMaxNum_ReturnValue_1) == 0x000F84, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ItemGetMaxNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_ItemGetNum_ReturnValue_2) == 0x000F88, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_ItemGetNum_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000F8C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000F90, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Min_ReturnValue) == 0x000F94, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, Temp_int_Loop_Counter_Variable_1) == 0x000F98, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Less_IntInt_ReturnValue_4) == 0x000F9C, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_Add_IntInt_ReturnValue_4) == 0x000FA0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapID_ReturnValue_2) == 0x000FA4, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000FA8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_GetMapCommon_rerutn_4) == 0x000FB0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_GetMapCommon_rerutn_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBPI_Map_Common_4) == 0x000FB8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBPI_Map_Common_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_19) == 0x000FC8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, CallFunc_BPI_GetMapGimmickTrigger_Actor) == 0x000FD0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::CallFunc_BPI_GetMapGimmickTrigger_Actor' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CustomEvent_BtlEndType) == 0x000FD8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CustomEvent_BtlEndType' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CustomEvent_ChainEncountNum) == 0x000FDC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CustomEvent_ChainEncountNum' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger) == 0x000FE0, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_DynamicCast_bSuccess_20) == 0x000FE8, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base, K2Node_CreateDelegate_OutputDelegate_6) == 0x000FEC, "Member 'Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnEndBattle
// 0x0008 (0x0008 - 0x0000)
struct Gimic_Chest_Base_C_OnEndBattle final
{
public:
	E_BTL_END                                     BtlEndType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E0E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChainEncountNum;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_OnEndBattle) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_OnEndBattle");
static_assert(sizeof(Gimic_Chest_Base_C_OnEndBattle) == 0x000008, "Wrong size on Gimic_Chest_Base_C_OnEndBattle");
static_assert(offsetof(Gimic_Chest_Base_C_OnEndBattle, BtlEndType) == 0x000000, "Member 'Gimic_Chest_Base_C_OnEndBattle::BtlEndType' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_OnEndBattle, ChainEncountNum) == 0x000004, "Member 'Gimic_Chest_Base_C_OnEndBattle::ChainEncountNum' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Gimic_Chest_Base_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_ReceiveEndPlay");
static_assert(sizeof(Gimic_Chest_Base_C_ReceiveEndPlay) == 0x000001, "Wrong size on Gimic_Chest_Base_C_ReceiveEndPlay");
static_assert(offsetof(Gimic_Chest_Base_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Gimic_Chest_Base_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_HideGimmick
// 0x0001 (0x0001 - 0x0000)
struct Gimic_Chest_Base_C_BPI_HideGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_HideGimmick) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_BPI_HideGimmick");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_HideGimmick) == 0x000001, "Wrong size on Gimic_Chest_Base_C_BPI_HideGimmick");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_HideGimmick, Param_HideReason) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_HideGimmick::Param_HideReason' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ShowGimmick
// 0x0001 (0x0001 - 0x0000)
struct Gimic_Chest_Base_C_BPI_ShowGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_ShowGimmick) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_BPI_ShowGimmick");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_ShowGimmick) == 0x000001, "Wrong size on Gimic_Chest_Base_C_BPI_ShowGimmick");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ShowGimmick, Param_HideReason) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_ShowGimmick::Param_HideReason' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_SetTakaraPiece
// 0x0008 (0x0008 - 0x0000)
struct Gimic_Chest_Base_C_BPI_SetTakaraPiece final
{
public:
	class AActor*                                 Param_MovePiece;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_SetTakaraPiece) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_BPI_SetTakaraPiece");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_SetTakaraPiece) == 0x000008, "Wrong size on Gimic_Chest_Base_C_BPI_SetTakaraPiece");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_SetTakaraPiece, Param_MovePiece) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_SetTakaraPiece::Param_MovePiece' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ReceiveMapAttack
// 0x0010 (0x0010 - 0x0000)
struct Gimic_Chest_Base_C_BPI_ReceiveMapAttack final
{
public:
	struct FMapAttackDamageData                   MapAttackData;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_ReceiveMapAttack) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_BPI_ReceiveMapAttack");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_ReceiveMapAttack) == 0x000010, "Wrong size on Gimic_Chest_Base_C_BPI_ReceiveMapAttack");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ReceiveMapAttack, MapAttackData) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_ReceiveMapAttack::MapAttackData' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnRotateFinished
// 0x0001 (0x0001 - 0x0000)
struct Gimic_Chest_Base_C_OnRotateFinished final
{
public:
	bool                                          IsSkipped;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_OnRotateFinished) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_OnRotateFinished");
static_assert(sizeof(Gimic_Chest_Base_C_OnRotateFinished) == 0x000001, "Wrong size on Gimic_Chest_Base_C_OnRotateFinished");
static_assert(offsetof(Gimic_Chest_Base_C_OnRotateFinished, IsSkipped) == 0x000000, "Member 'Gimic_Chest_Base_C_OnRotateFinished::IsSkipped' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnLoaded_000CEC1647E4F09283905AA669A9A431
// 0x0008 (0x0008 - 0x0000)
struct Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431");
static_assert(sizeof(Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431) == 0x000008, "Wrong size on Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431");
static_assert(offsetof(Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431, Loaded) == 0x000000, "Member 'Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431::Loaded' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnLoaded_000CEC1647E4F09283905AA6D49CDA93
// 0x0008 (0x0008 - 0x0000)
struct Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93");
static_assert(sizeof(Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93) == 0x000008, "Wrong size on Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93");
static_assert(offsetof(Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93, Loaded) == 0x000000, "Member 'Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93::Loaded' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.UserConstructionScript
// 0x00AC (0x00AC - 0x0000)
struct Gimic_Chest_Base_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0024(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Gimic_Chest_Base_C_UserConstructionScript) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_UserConstructionScript");
static_assert(sizeof(Gimic_Chest_Base_C_UserConstructionScript) == 0x0000AC, "Wrong size on Gimic_Chest_Base_C_UserConstructionScript");
static_assert(offsetof(Gimic_Chest_Base_C_UserConstructionScript, CallFunc_GetActorForwardVector_ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_UserConstructionScript::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x00000C, "Member 'Gimic_Chest_Base_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_UserConstructionScript, CallFunc_MakeRotFromZX_ReturnValue) == 0x000018, "Member 'Gimic_Chest_Base_C_UserConstructionScript::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000024, "Member 'Gimic_Chest_Base_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.IsLimitCore
// 0x03E8 (0x03E8 - 0x0000)
struct Gimic_Chest_Base_C_IsLimitCore final
{
public:
	int32                                         Enable;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StrT;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MgiT;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VitT;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AgiT;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LucT;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLimit;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E0F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Log;                                               // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_Log;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          L_IsLimit;                                         // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E10[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_LucP;                                            // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_AgiP;                                            // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_VitP;                                            // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_MgiP;                                            // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_StrP;                                            // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_LucT;                                            // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_AgiT;                                            // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_VitT;                                            // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_MgiT;                                            // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_StrT;                                            // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Enable;                                          // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FCharData                              CallFunc_GetPlayerData_ReturnValue;                // 0x0130(0x0130)(ConstParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E11[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E12[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E13[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E14[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E15[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E16[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E17[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E18[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_IsLimitCore) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_IsLimitCore");
static_assert(sizeof(Gimic_Chest_Base_C_IsLimitCore) == 0x0003E8, "Wrong size on Gimic_Chest_Base_C_IsLimitCore");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, Enable) == 0x000000, "Member 'Gimic_Chest_Base_C_IsLimitCore::Enable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, StrT) == 0x000004, "Member 'Gimic_Chest_Base_C_IsLimitCore::StrT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, MgiT) == 0x000008, "Member 'Gimic_Chest_Base_C_IsLimitCore::MgiT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, VitT) == 0x00000C, "Member 'Gimic_Chest_Base_C_IsLimitCore::VitT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, AgiT) == 0x000010, "Member 'Gimic_Chest_Base_C_IsLimitCore::AgiT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, LucT) == 0x000014, "Member 'Gimic_Chest_Base_C_IsLimitCore::LucT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, IsLimit) == 0x000018, "Member 'Gimic_Chest_Base_C_IsLimitCore::IsLimit' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, Log) == 0x000020, "Member 'Gimic_Chest_Base_C_IsLimitCore::Log' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_Log) == 0x000030, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_Log' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_IsLimit) == 0x000040, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_IsLimit' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_LucP) == 0x000044, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_LucP' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_AgiP) == 0x000048, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_AgiP' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_VitP) == 0x00004C, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_VitP' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_MgiP) == 0x000050, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_MgiP' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_StrP) == 0x000054, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_StrP' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_LucT) == 0x000058, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_LucT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_AgiT) == 0x00005C, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_AgiT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_VitT) == 0x000060, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_VitT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_MgiT) == 0x000064, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_MgiT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_StrT) == 0x000068, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_StrT' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, L_Enable) == 0x00006C, "Member 'Gimic_Chest_Base_C_IsLimitCore::L_Enable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000090, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0000A0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000F0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000100, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000110, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000120, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_GetPlayerData_ReturnValue) == 0x000130, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000260, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000270, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000280, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000290, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0002A0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0002B0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_8) == 0x0002C0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Conv_IntToString_ReturnValue_9) == 0x0002D0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002E0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0002E8, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0002F8, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000308, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000310, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000320, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000330, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000338, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000348, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000358, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000360, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000370, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x000380, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000388, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_BooleanOR_ReturnValue) == 0x000398, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0003A0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_BooleanOR_ReturnValue_1) == 0x0003B0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_20) == 0x0003B8, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_BooleanOR_ReturnValue_2) == 0x0003C8, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Concat_StrStr_ReturnValue_21) == 0x0003D0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_BooleanOR_ReturnValue_3) == 0x0003E0, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_Not_PreBool_ReturnValue) == 0x0003E1, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_IsLimitCore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003E2, "Member 'Gimic_Chest_Base_C_IsLimitCore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetPieceSpawnPos
// 0x0220 (0x0220 - 0x0000)
struct Gimic_Chest_Base_C_GetPieceSpawnPos final
{
public:
	struct FTransform                             Pos;                                               // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FRotator                               L_Rot;                                             // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E19[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1A[0x1];                                     // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1B[0x8];                                     // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_GetPieceSpawnPos) == 0x000010, "Wrong alignment on Gimic_Chest_Base_C_GetPieceSpawnPos");
static_assert(sizeof(Gimic_Chest_Base_C_GetPieceSpawnPos) == 0x000220, "Wrong size on Gimic_Chest_Base_C_GetPieceSpawnPos");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, Pos) == 0x000000, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::Pos' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, L_Rot) == 0x000030, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::L_Rot' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, Temp_object_Variable) == 0x000040, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00005C, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000068, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_LineTraceSingle_OutHit) == 0x0000BC, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_LineTraceSingle_ReturnValue) == 0x000144, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_bBlockingHit) == 0x000145, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_bInitialOverlap) == 0x000146, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_Time) == 0x000148, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_Distance) == 0x00014C, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_Location) == 0x000150, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_ImpactPoint) == 0x00015C, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_Normal) == 0x000168, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_ImpactNormal) == 0x000174, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_TraceStart) == 0x0001AC, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001C4, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001D0, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_MakeRotFromZX_ReturnValue) == 0x0001DC, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetPieceSpawnPos, CallFunc_MakeTransform_ReturnValue_1) == 0x0001F0, "Member 'Gimic_Chest_Base_C_GetPieceSpawnPos::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.ResetMesh
// 0x0001 (0x0001 - 0x0000)
struct Gimic_Chest_Base_C_ResetMesh final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_ResetMesh) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_ResetMesh");
static_assert(sizeof(Gimic_Chest_Base_C_ResetMesh) == 0x000001, "Wrong size on Gimic_Chest_Base_C_ResetMesh");
static_assert(offsetof(Gimic_Chest_Base_C_ResetMesh, NewParam) == 0x000000, "Member 'Gimic_Chest_Base_C_ResetMesh::NewParam' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcSuichoku
// 0x00B0 (0x00B0 - 0x0000)
struct Gimic_Chest_Base_C_CalcSuichoku final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_CalcSuichoku) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_CalcSuichoku");
static_assert(sizeof(Gimic_Chest_Base_C_CalcSuichoku) == 0x0000B0, "Wrong size on Gimic_Chest_Base_C_CalcSuichoku");
static_assert(offsetof(Gimic_Chest_Base_C_CalcSuichoku, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_CalcSuichoku::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcSuichoku, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00000C, "Member 'Gimic_Chest_Base_C_CalcSuichoku::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcSuichoku, CallFunc_GetActorForwardVector_ReturnValue) == 0x000094, "Member 'Gimic_Chest_Base_C_CalcSuichoku::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcSuichoku, CallFunc_MakeRotFromZX_ReturnValue) == 0x0000A0, "Member 'Gimic_Chest_Base_C_CalcSuichoku::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcSuichoku, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000AC, "Member 'Gimic_Chest_Base_C_CalcSuichoku::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcKatamukeru
// 0x00A0 (0x00A0 - 0x0000)
struct Gimic_Chest_Base_C_CalcKatamukeru final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Gimic_Chest_Base_C_CalcKatamukeru) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_CalcKatamukeru");
static_assert(sizeof(Gimic_Chest_Base_C_CalcKatamukeru) == 0x0000A0, "Wrong size on Gimic_Chest_Base_C_CalcKatamukeru");
static_assert(offsetof(Gimic_Chest_Base_C_CalcKatamukeru, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_CalcKatamukeru::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcKatamukeru, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000004, "Member 'Gimic_Chest_Base_C_CalcKatamukeru::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcKatamukeru, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000008, "Member 'Gimic_Chest_Base_C_CalcKatamukeru::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcKatamukeru, CallFunc_MakeRotator_ReturnValue) == 0x00000C, "Member 'Gimic_Chest_Base_C_CalcKatamukeru::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcKatamukeru, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000018, "Member 'Gimic_Chest_Base_C_CalcKatamukeru::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.SaveOpenFlag
// 0x0002 (0x0002 - 0x0000)
struct Gimic_Chest_Base_C_SaveOpenFlag final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_SaveOpenFlag) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_SaveOpenFlag");
static_assert(sizeof(Gimic_Chest_Base_C_SaveOpenFlag) == 0x000002, "Wrong size on Gimic_Chest_Base_C_SaveOpenFlag");
static_assert(offsetof(Gimic_Chest_Base_C_SaveOpenFlag, Sw) == 0x000000, "Member 'Gimic_Chest_Base_C_SaveOpenFlag::Sw' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SaveOpenFlag, NewParam) == 0x000001, "Member 'Gimic_Chest_Base_C_SaveOpenFlag::NewParam' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CheckOpenFlag
// 0x0002 (0x0002 - 0x0000)
struct Gimic_Chest_Base_C_CheckOpenFlag final
{
public:
	bool                                          Exist;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTakaraFlag_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_CheckOpenFlag) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_CheckOpenFlag");
static_assert(sizeof(Gimic_Chest_Base_C_CheckOpenFlag) == 0x000002, "Wrong size on Gimic_Chest_Base_C_CheckOpenFlag");
static_assert(offsetof(Gimic_Chest_Base_C_CheckOpenFlag, Exist) == 0x000000, "Member 'Gimic_Chest_Base_C_CheckOpenFlag::Exist' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CheckOpenFlag, CallFunc_GetTakaraFlag_ReturnValue) == 0x000001, "Member 'Gimic_Chest_Base_C_CheckOpenFlag::CallFunc_GetTakaraFlag_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.PlayBreakSE
// 0x0001 (0x0001 - 0x0000)
struct Gimic_Chest_Base_C_PlayBreakSE final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_PlayBreakSE) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_PlayBreakSE");
static_assert(sizeof(Gimic_Chest_Base_C_PlayBreakSE) == 0x000001, "Wrong size on Gimic_Chest_Base_C_PlayBreakSE");
static_assert(offsetof(Gimic_Chest_Base_C_PlayBreakSE, NewParam) == 0x000000, "Member 'Gimic_Chest_Base_C_PlayBreakSE::NewParam' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcPiece
// 0x0058 (0x0058 - 0x0000)
struct Gimic_Chest_Base_C_CalcPiece final
{
public:
	struct FTakaraItemList                        L_Item;                                            // 0x0000(0x000C)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPieceData                             K2Node_MakeStruct_PieceData;                       // 0x0010(0x000C)(NoDestructor)
	struct FPieceData                             K2Node_MakeStruct_PieceData_1;                     // 0x001C(0x000C)(NoDestructor)
	int32                                         CallFunc_BPI_GetTakaraId_TakaraId;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTakaraData_SaveID;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTakaraData                            CallFunc_GetTakaraData_ReturnValue;                // 0x0030(0x0024)(ConstParm, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_CalcPiece) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_CalcPiece");
static_assert(sizeof(Gimic_Chest_Base_C_CalcPiece) == 0x000058, "Wrong size on Gimic_Chest_Base_C_CalcPiece");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, L_Item) == 0x000000, "Member 'Gimic_Chest_Base_C_CalcPiece::L_Item' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, CallFunc_GetMapID_ReturnValue) == 0x00000C, "Member 'Gimic_Chest_Base_C_CalcPiece::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, K2Node_MakeStruct_PieceData) == 0x000010, "Member 'Gimic_Chest_Base_C_CalcPiece::K2Node_MakeStruct_PieceData' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, K2Node_MakeStruct_PieceData_1) == 0x00001C, "Member 'Gimic_Chest_Base_C_CalcPiece::K2Node_MakeStruct_PieceData_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, CallFunc_BPI_GetTakaraId_TakaraId) == 0x000028, "Member 'Gimic_Chest_Base_C_CalcPiece::CallFunc_BPI_GetTakaraId_TakaraId' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, CallFunc_GetTakaraData_SaveID) == 0x00002C, "Member 'Gimic_Chest_Base_C_CalcPiece::CallFunc_GetTakaraData_SaveID' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, CallFunc_GetTakaraData_ReturnValue) == 0x000030, "Member 'Gimic_Chest_Base_C_CalcPiece::CallFunc_GetTakaraData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'Gimic_Chest_Base_C_CalcPiece::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcPiece, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000055, "Member 'Gimic_Chest_Base_C_CalcPiece::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.Can Open Check Room Rotate
// 0x0004 (0x0004 - 0x0000)
struct Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate final
{
public:
	bool                                          Original;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInOriginalState_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate");
static_assert(sizeof(Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate) == 0x000004, "Wrong size on Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate");
static_assert(offsetof(Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate, Original) == 0x000000, "Member 'Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate::Original' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate, CallFunc_IsInOriginalState_ReturnValue) == 0x000002, "Member 'Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate::CallFunc_IsInOriginalState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.InitIcon
// 0x0028 (0x0028 - 0x0000)
struct Gimic_Chest_Base_C_InitIcon final
{
public:
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BPI_GetTakaraId_TakaraId;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTakaraDataId_SaveID;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetControlActorToStatic_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_InitIcon) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_InitIcon");
static_assert(sizeof(Gimic_Chest_Base_C_InitIcon) == 0x000028, "Wrong size on Gimic_Chest_Base_C_InitIcon");
static_assert(offsetof(Gimic_Chest_Base_C_InitIcon, CallFunc_GetMapID_ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_InitIcon::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_InitIcon, CallFunc_BPI_GetTakaraId_TakaraId) == 0x000004, "Member 'Gimic_Chest_Base_C_InitIcon::CallFunc_BPI_GetTakaraId_TakaraId' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_InitIcon, CallFunc_GetTakaraDataId_SaveID) == 0x000008, "Member 'Gimic_Chest_Base_C_InitIcon::CallFunc_GetTakaraDataId_SaveID' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_InitIcon, CallFunc_GetAreaID_ReturnValue) == 0x00000C, "Member 'Gimic_Chest_Base_C_InitIcon::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_InitIcon, CallFunc_GetMapID_ReturnValue_1) == 0x000010, "Member 'Gimic_Chest_Base_C_InitIcon::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_InitIcon, CallFunc_GetMinimapManager_ReturnValue) == 0x000018, "Member 'Gimic_Chest_Base_C_InitIcon::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_InitIcon, CallFunc_SetControlActorToStatic_ReturnValue) == 0x000020, "Member 'Gimic_Chest_Base_C_InitIcon::CallFunc_SetControlActorToStatic_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcCeiling
// 0x0018 (0x0018 - 0x0000)
struct Gimic_Chest_Base_C_CalcCeiling final
{
public:
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_CalcCeiling) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_CalcCeiling");
static_assert(sizeof(Gimic_Chest_Base_C_CalcCeiling) == 0x000018, "Wrong size on Gimic_Chest_Base_C_CalcCeiling");
static_assert(offsetof(Gimic_Chest_Base_C_CalcCeiling, CallFunc_GetActorUpVector_ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_CalcCeiling::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcCeiling, CallFunc_Dot_VectorVector_ReturnValue) == 0x00000C, "Member 'Gimic_Chest_Base_C_CalcCeiling::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcCeiling, CallFunc_DegAcos_ReturnValue) == 0x000010, "Member 'Gimic_Chest_Base_C_CalcCeiling::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_CalcCeiling, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'Gimic_Chest_Base_C_CalcCeiling::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.EndIcon
// 0x0028 (0x0028 - 0x0000)
struct Gimic_Chest_Base_C_EndIcon final
{
public:
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BPI_GetTakaraId_TakaraId;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTakaraDataId_SaveID;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearControlActorFromStatic_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_EndIcon) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_EndIcon");
static_assert(sizeof(Gimic_Chest_Base_C_EndIcon) == 0x000028, "Wrong size on Gimic_Chest_Base_C_EndIcon");
static_assert(offsetof(Gimic_Chest_Base_C_EndIcon, CallFunc_GetMapID_ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_EndIcon::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_EndIcon, CallFunc_BPI_GetTakaraId_TakaraId) == 0x000004, "Member 'Gimic_Chest_Base_C_EndIcon::CallFunc_BPI_GetTakaraId_TakaraId' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_EndIcon, CallFunc_GetAreaID_ReturnValue) == 0x000008, "Member 'Gimic_Chest_Base_C_EndIcon::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_EndIcon, CallFunc_GetTakaraDataId_SaveID) == 0x00000C, "Member 'Gimic_Chest_Base_C_EndIcon::CallFunc_GetTakaraDataId_SaveID' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_EndIcon, CallFunc_GetMapID_ReturnValue_1) == 0x000010, "Member 'Gimic_Chest_Base_C_EndIcon::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_EndIcon, CallFunc_GetMinimapManager_ReturnValue) == 0x000018, "Member 'Gimic_Chest_Base_C_EndIcon::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_EndIcon, CallFunc_ClearControlActorFromStatic_ReturnValue) == 0x000020, "Member 'Gimic_Chest_Base_C_EndIcon::CallFunc_ClearControlActorFromStatic_ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_GetDebugMemo
// 0x0018 (0x0018 - 0x0000)
struct Gimic_Chest_Base_C_BPI_GetDebugMemo final
{
public:
	class FText                                   Memo;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_GetDebugMemo) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_BPI_GetDebugMemo");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_GetDebugMemo) == 0x000018, "Wrong size on Gimic_Chest_Base_C_BPI_GetDebugMemo");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_GetDebugMemo, Memo) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_GetDebugMemo::Memo' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ChangeTakaraFlag
// 0x0006 (0x0006 - 0x0000)
struct Gimic_Chest_Base_C_BPI_ChangeTakaraFlag final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam1;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_sw;                                              // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckOpenFlag_Exist;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveOpenFlag_NewParam;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_BPI_ChangeTakaraFlag");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag) == 0x000006, "Wrong size on Gimic_Chest_Base_C_BPI_ChangeTakaraFlag");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag, Sw) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraFlag::Sw' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag, NewParam1) == 0x000001, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraFlag::NewParam1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag, L_sw) == 0x000002, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraFlag::L_sw' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag, CallFunc_CheckOpenFlag_Exist) == 0x000003, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraFlag::CallFunc_CheckOpenFlag_Exist' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraFlag::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraFlag, CallFunc_SaveOpenFlag_NewParam) == 0x000005, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraFlag::CallFunc_SaveOpenFlag_NewParam' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_GetTakaraId
// 0x0004 (0x0004 - 0x0000)
struct Gimic_Chest_Base_C_BPI_GetTakaraId final
{
public:
	int32                                         TakaraID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_GetTakaraId) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_BPI_GetTakaraId");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_GetTakaraId) == 0x000004, "Wrong size on Gimic_Chest_Base_C_BPI_GetTakaraId");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_GetTakaraId, TakaraID) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_GetTakaraId::TakaraID' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ChangeTakaraBreakFlag
// 0x0002 (0x0002 - 0x0000)
struct Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag) == 0x000002, "Wrong size on Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag, Sw) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag::Sw' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag, NewParam) == 0x000001, "Member 'Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag::NewParam' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_GetMovePiece
// 0x0008 (0x0008 - 0x0000)
struct Gimic_Chest_Base_C_BPI_GetMovePiece final
{
public:
	class AActor*                                 Param_MovePiece;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_BPI_GetMovePiece) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_BPI_GetMovePiece");
static_assert(sizeof(Gimic_Chest_Base_C_BPI_GetMovePiece) == 0x000008, "Wrong size on Gimic_Chest_Base_C_BPI_GetMovePiece");
static_assert(offsetof(Gimic_Chest_Base_C_BPI_GetMovePiece, Param_MovePiece) == 0x000000, "Member 'Gimic_Chest_Base_C_BPI_GetMovePiece::Param_MovePiece' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.SetMinimapIconTableRow
// 0x0120 (0x0120 - 0x0000)
struct Gimic_Chest_Base_C_SetMinimapIconTableRow final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimapIconTableRow                   OutRow;                                            // 0x0008(0x0058)(Parm, OutParm)
	bool                                          NeedToAddMore;                                     // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_OffFlag;                                         // 0x0064(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_InactiveFlag;                                    // 0x006C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MINIMAP_POI_ICON                            Temp_byte_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MINIMAP_POI_ICON                            Temp_byte_Variable_1;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E20[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MINIMAP_POI_ICON                            K2Node_Select_Default;                             // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEventFlagName_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BPI_GetTakaraId_TakaraId;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTakaraDataId_SaveID;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E21[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimapIconTableRow                   K2Node_MakeStruct_MinimapIconTableRow;             // 0x00C8(0x0058)()
};
static_assert(alignof(Gimic_Chest_Base_C_SetMinimapIconTableRow) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_SetMinimapIconTableRow");
static_assert(sizeof(Gimic_Chest_Base_C_SetMinimapIconTableRow) == 0x000120, "Wrong size on Gimic_Chest_Base_C_SetMinimapIconTableRow");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, Param_Index) == 0x000000, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::Param_Index' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, OutRow) == 0x000008, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::OutRow' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, NeedToAddMore) == 0x000060, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::NeedToAddMore' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, L_OffFlag) == 0x000064, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::L_OffFlag' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, L_InactiveFlag) == 0x00006C, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::L_InactiveFlag' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, Temp_byte_Variable) == 0x000074, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, Temp_byte_Variable_1) == 0x000075, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_GetAreaID_ReturnValue) == 0x000078, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, Temp_bool_Variable) == 0x00007C, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007D, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_IsValid_ReturnValue) == 0x00007E, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, K2Node_Select_Default) == 0x00007F, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_GetEventFlagName_ReturnValue) == 0x000080, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_GetEventFlagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_GetMapID_ReturnValue) == 0x000088, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00008C, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Roll) == 0x0000A4, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Pitch) == 0x0000A8, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Yaw) == 0x0000AC, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_BPI_GetTakaraId_TakaraId) == 0x0000B0, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_BPI_GetTakaraId_TakaraId' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_FTrunc_ReturnValue) == 0x0000B4, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_GetTakaraDataId_SaveID) == 0x0000B8, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_GetTakaraDataId_SaveID' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_GetAreaID_ReturnValue_1) == 0x0000BC, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_GetAreaID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, CallFunc_GetMapID_ReturnValue_1) == 0x0000C0, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetMinimapIconTableRow, K2Node_MakeStruct_MinimapIconTableRow) == 0x0000C8, "Member 'Gimic_Chest_Base_C_SetMinimapIconTableRow::K2Node_MakeStruct_MinimapIconTableRow' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.SetRoomRotator
// 0x0020 (0x0020 - 0x0000)
struct Gimic_Chest_Base_C_SetRoomRotator final
{
public:
	class ADG_RoomRotator*                        Param_RoomRotator;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E22[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DG_RoomRotator_C*                   K2Node_DynamicCast_AsBP_DG_Room_Rotator;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_SetRoomRotator) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_SetRoomRotator");
static_assert(sizeof(Gimic_Chest_Base_C_SetRoomRotator) == 0x000020, "Wrong size on Gimic_Chest_Base_C_SetRoomRotator");
static_assert(offsetof(Gimic_Chest_Base_C_SetRoomRotator, Param_RoomRotator) == 0x000000, "Member 'Gimic_Chest_Base_C_SetRoomRotator::Param_RoomRotator' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetRoomRotator, ReturnValue) == 0x000008, "Member 'Gimic_Chest_Base_C_SetRoomRotator::ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetRoomRotator, K2Node_DynamicCast_AsBP_DG_Room_Rotator) == 0x000010, "Member 'Gimic_Chest_Base_C_SetRoomRotator::K2Node_DynamicCast_AsBP_DG_Room_Rotator' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_SetRoomRotator, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Gimic_Chest_Base_C_SetRoomRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetRoomRotator
// 0x0008 (0x0008 - 0x0000)
struct Gimic_Chest_Base_C_GetRoomRotator final
{
public:
	class ADG_RoomRotator*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_GetRoomRotator) == 0x000008, "Wrong alignment on Gimic_Chest_Base_C_GetRoomRotator");
static_assert(sizeof(Gimic_Chest_Base_C_GetRoomRotator) == 0x000008, "Wrong size on Gimic_Chest_Base_C_GetRoomRotator");
static_assert(offsetof(Gimic_Chest_Base_C_GetRoomRotator, ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_GetRoomRotator::ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.FlagCh
// 0x0018 (0x0018 - 0x0000)
struct Gimic_Chest_Base_C_FlagCh final
{
public:
	bool                                          OK;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E23[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_Ed;                                              // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_St;                                              // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FlagCh_OK;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Gimic_Chest_Base_C_FlagCh) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_FlagCh");
static_assert(sizeof(Gimic_Chest_Base_C_FlagCh) == 0x000018, "Wrong size on Gimic_Chest_Base_C_FlagCh");
static_assert(offsetof(Gimic_Chest_Base_C_FlagCh, OK) == 0x000000, "Member 'Gimic_Chest_Base_C_FlagCh::OK' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_FlagCh, L_Ed) == 0x000004, "Member 'Gimic_Chest_Base_C_FlagCh::L_Ed' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_FlagCh, L_St) == 0x00000C, "Member 'Gimic_Chest_Base_C_FlagCh::L_St' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_FlagCh, CallFunc_FlagCh_OK) == 0x000014, "Member 'Gimic_Chest_Base_C_FlagCh::CallFunc_FlagCh_OK' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetGazeTargetType
// 0x0001 (0x0001 - 0x0000)
struct Gimic_Chest_Base_C_GetGazeTargetType final
{
public:
	EGazeTargetType                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_GetGazeTargetType) == 0x000001, "Wrong alignment on Gimic_Chest_Base_C_GetGazeTargetType");
static_assert(sizeof(Gimic_Chest_Base_C_GetGazeTargetType) == 0x000001, "Wrong size on Gimic_Chest_Base_C_GetGazeTargetType");
static_assert(offsetof(Gimic_Chest_Base_C_GetGazeTargetType, ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_GetGazeTargetType::ReturnValue' has a wrong offset!");

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetGazeTargetLocation
// 0x0018 (0x0018 - 0x0000)
struct Gimic_Chest_Base_C_GetGazeTargetLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Gimic_Chest_Base_C_GetGazeTargetLocation) == 0x000004, "Wrong alignment on Gimic_Chest_Base_C_GetGazeTargetLocation");
static_assert(sizeof(Gimic_Chest_Base_C_GetGazeTargetLocation) == 0x000018, "Wrong size on Gimic_Chest_Base_C_GetGazeTargetLocation");
static_assert(offsetof(Gimic_Chest_Base_C_GetGazeTargetLocation, ReturnValue) == 0x000000, "Member 'Gimic_Chest_Base_C_GetGazeTargetLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Gimic_Chest_Base_C_GetGazeTargetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'Gimic_Chest_Base_C_GetGazeTargetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

