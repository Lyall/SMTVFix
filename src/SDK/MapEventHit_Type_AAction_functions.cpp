#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapEventHit_Type_AAction

#include "Basic.hpp"

#include "MapEventHit_Type_AAction_classes.hpp"
#include "MapEventHit_Type_AAction_parameters.hpp"


namespace SDK
{

// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.ExecuteUbergraph_MapEventHit_Type_AAction
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMapEventHit_Type_AAction_C::ExecuteUbergraph_MapEventHit_Type_AAction(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "ExecuteUbergraph_MapEventHit_Type_AAction");

	Params::MapEventHit_Type_AAction_C_ExecuteUbergraph_MapEventHit_Type_AAction Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.OnUnPause_AfterLoad
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::OnUnPause_AfterLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "OnUnPause_AfterLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.RecalcOverlap
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::RecalcOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "RecalcOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.ManualBeginOverlap
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::ManualBeginOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "ManualBeginOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.UnlockAAction
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::UnlockAAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "UnlockAAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.LockAAction
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::LockAAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "LockAAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.HideAActionWidget
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::HideAActionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "HideAActionWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.ShowAActionWidget
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::ShowAActionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "ShowAActionWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.CallEventHitOut_
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::CallEventHitOut_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "CallEventHitOut_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.BndEvt__Hit_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMapEventHit_Type_AAction_C::BndEvt__Hit_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "BndEvt__Hit_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");

	Params::MapEventHit_Type_AAction_C_BndEvt__Hit_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.BndEvt__Hit_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMapEventHit_Type_AAction_C::BndEvt__Hit_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "BndEvt__Hit_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::MapEventHit_Type_AAction_C_BndEvt__Hit_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.Action
// (BlueprintCallable, BlueprintEvent)

void AMapEventHit_Type_AAction_C::Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.SettingWallCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  CheckPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   IgnoreActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AMapEventHit_Type_AAction_C::SettingWallCheck(class USceneComponent* CheckPoint, TArray<class AActor*>& IgnoreActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "SettingWallCheck");

	Params::MapEventHit_Type_AAction_C_SettingWallCheck Parms{};

	Parms.CheckPoint = CheckPoint;
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);

	IgnoreActors = std::move(Parms.IgnoreActors);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.EventHitActivate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMapEventHit_Type_AAction_C::EventHitActivate(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "EventHitActivate");

	Params::MapEventHit_Type_AAction_C_EventHitActivate Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMapEventHit_Type_AAction_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapEventHit_Type_AAction.MapEventHit_Type_AAction_C.FlagCh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    OK                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMapEventHit_Type_AAction_C::FlagCh(bool* OK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapEventHit_Type_AAction_C", "FlagCh");

	Params::MapEventHit_Type_AAction_C_FlagCh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OK != nullptr)
		*OK = Parms.OK;
}

}

