#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ElementCategory

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ElementCategory.WB_ElementCategory_C.MouseEvent_OnClicked_ElementIcon__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_ElementCategory_C_MouseEvent_OnClicked_ElementIcon__DelegateSignature final
{
public:
	int32                                         ElementIdx;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_MouseEvent_OnClicked_ElementIcon__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_MouseEvent_OnClicked_ElementIcon__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_MouseEvent_OnClicked_ElementIcon__DelegateSignature) == 0x000004, "Wrong size on WB_ElementCategory_C_MouseEvent_OnClicked_ElementIcon__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_MouseEvent_OnClicked_ElementIcon__DelegateSignature, ElementIdx) == 0x000000, "Member 'WB_ElementCategory_C_MouseEvent_OnClicked_ElementIcon__DelegateSignature::ElementIdx' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.ExecuteUbergraph_WB_ElementCategory
// 0x0154 (0x0154 - 0x0000)
struct WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGamePadUI_Gamepad;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGamePadUI_Gamepad_1;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_14;                 // 0x0060(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_14;                  // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_13;                 // 0x0070(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_13;                  // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_12;                 // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_12;                  // 0x0088(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_11;                 // 0x0090(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_11;                  // 0x0098(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_10;                 // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_10;                  // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_9;                  // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_9;                   // 0x00B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_8;                  // 0x00C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_8;                   // 0x00C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_7;                  // 0x00D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_7;                   // 0x00D8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_6;                  // 0x00E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_6;                   // 0x00E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_5;                  // 0x00F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_5;                   // 0x00F8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_4;                  // 0x0100(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_4;                   // 0x0108(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_3;                  // 0x0110(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_3;                   // 0x0118(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_2;                  // 0x0120(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_2;                   // 0x0128(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos_1;                  // 0x0130(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV_1;                   // 0x0138(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos;                    // 0x0140(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV;                     // 0x0148(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyboardLanguage                            CallFunc_GetKeyboardLanguage_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_KeyboardLanguage                            CallFunc_GetKeyboardLanguage_ReturnValue_1;        // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory) == 0x000004, "Wrong alignment on WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory");
static_assert(sizeof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory) == 0x000154, "Wrong size on WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, EntryPoint) == 0x000000, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_AnimPackName) == 0x000004, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_AnimationName) == 0x00000C, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000014, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000018, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_SwitchName_CmpSuccess) == 0x00001C, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_Event_MyGeometry) == 0x000020, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_Event_InDeltaTime) == 0x000058, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, CallFunc_CheckGamePadUI_Gamepad) == 0x00005C, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::CallFunc_CheckGamePadUI_Gamepad' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, CallFunc_CheckGamePadUI_Gamepad_1) == 0x00005D, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::CallFunc_CheckGamePadUI_Gamepad_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00005E, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_14) == 0x000060, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_14' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_14) == 0x000068, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_14' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_13) == 0x000070, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_13' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_13) == 0x000078, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_13' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_12) == 0x000080, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_12' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_12) == 0x000088, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_12' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_11) == 0x000090, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_11' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_11) == 0x000098, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_11' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_10) == 0x0000A0, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_10' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_10) == 0x0000A8, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_10' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_9) == 0x0000B0, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_9' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_9) == 0x0000B8, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_9' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_8) == 0x0000C0, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_8' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_8) == 0x0000C8, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_8' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_7) == 0x0000D0, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_7' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_7) == 0x0000D8, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_7' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_6) == 0x0000E0, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_6' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_6) == 0x0000E8, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_6' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_5) == 0x0000F0, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_5' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_5) == 0x0000F8, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_5' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_4) == 0x000100, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_4' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_4) == 0x000108, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_4' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_3) == 0x000110, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_3) == 0x000118, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_2) == 0x000120, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_2) == 0x000128, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos_1) == 0x000130, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV_1) == 0x000138, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_Pos) == 0x000140, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_ComponentBoundEvent_UV) == 0x000148, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_ComponentBoundEvent_UV' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, CallFunc_GetKeyboardLanguage_ReturnValue) == 0x000150, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::CallFunc_GetKeyboardLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, K2Node_Event_IsDesignTime) == 0x000151, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000152, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory, CallFunc_GetKeyboardLanguage_ReturnValue_1) == 0x000153, "Member 'WB_ElementCategory_C_ExecuteUbergraph_WB_ElementCategory::CallFunc_GetKeyboardLanguage_ReturnValue_1' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_ElementCategory_C_PreConstruct final
{
public:
	bool                                          Param_IsDesignTime;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ElementCategory_C_PreConstruct) == 0x000001, "Wrong alignment on WB_ElementCategory_C_PreConstruct");
static_assert(sizeof(WB_ElementCategory_C_PreConstruct) == 0x000001, "Wrong size on WB_ElementCategory_C_PreConstruct");
static_assert(offsetof(WB_ElementCategory_C_PreConstruct, Param_IsDesignTime) == 0x000000, "Member 'WB_ElementCategory_C_PreConstruct::Param_IsDesignTime' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_12_K2Node_ComponentBoundEvent_15_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_11_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_10_K2Node_ComponentBoundEvent_13_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_9_K2Node_ComponentBoundEvent_12_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_8_K2Node_ComponentBoundEvent_11_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_7_K2Node_ComponentBoundEvent_10_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_6_K2Node_ComponentBoundEvent_9_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_5_K2Node_ComponentBoundEvent_8_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_4_K2Node_ComponentBoundEvent_7_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_3_K2Node_ComponentBoundEvent_6_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_2_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_1_K2Node_ComponentBoundEvent_4_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Button_S5_Element_K2Node_ComponentBoundEvent_3_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_R_K2Node_ComponentBoundEvent_2_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__WB_ElementCategory_Btn_Arrow_L_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_ElementCategory_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_Tick) == 0x000004, "Wrong alignment on WB_ElementCategory_C_Tick");
static_assert(sizeof(WB_ElementCategory_C_Tick) == 0x00003C, "Wrong size on WB_ElementCategory_C_Tick");
static_assert(offsetof(WB_ElementCategory_C_Tick, MyGeometry) == 0x000000, "Member 'WB_ElementCategory_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_ElementCategory_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_ElementCategory_C_BndEvt__SsPlayer_BaseWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.Init
// 0x0120 (0x0120 - 0x0000)
struct WB_ElementCategory_C_Init final
{
public:
	TArray<int32>                                 L_ElementIconList;                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyboardLanguage                            CallFunc_GetKeyboardLanguage_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGamePadUI_Gamepad;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_2;             // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_3;             // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_NElementIcon_C*                     K2Node_DynamicCast_AsWB_NElement_Icon;             // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_Init) == 0x000008, "Wrong alignment on WB_ElementCategory_C_Init");
static_assert(sizeof(WB_ElementCategory_C_Init) == 0x000120, "Wrong size on WB_ElementCategory_C_Init");
static_assert(offsetof(WB_ElementCategory_C_Init, L_ElementIconList) == 0x000000, "Member 'WB_ElementCategory_C_Init::L_ElementIconList' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_ElementCategory_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_GetKeyboardLanguage_ReturnValue) == 0x000014, "Member 'WB_ElementCategory_C_Init::CallFunc_GetKeyboardLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WB_ElementCategory_C_Init::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_GetAllChildren_ReturnValue_1) == 0x000028, "Member 'WB_ElementCategory_C_Init::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WB_ElementCategory_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'WB_ElementCategory_C_Init::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'WB_ElementCategory_C_Init::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WB_ElementCategory_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WB_ElementCategory_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'WB_ElementCategory_C_Init::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000054, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Array_Get_Item) == 0x000058, "Member 'WB_ElementCategory_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000060, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000068, "Member 'WB_ElementCategory_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'WB_ElementCategory_C_Init::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_CheckGamePadUI_Gamepad) == 0x000074, "Member 'WB_ElementCategory_C_Init::CallFunc_CheckGamePadUI_Gamepad' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000078, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'WB_ElementCategory_C_Init::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'WB_ElementCategory_C_Init::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, K2Node_MakeArray_Array) == 0x000088, "Member 'WB_ElementCategory_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'WB_ElementCategory_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'WB_ElementCategory_C_Init::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_GetAllChildren_ReturnValue_2) == 0x0000A0, "Member 'WB_ElementCategory_C_Init::CallFunc_GetAllChildren_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000B0, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'WB_ElementCategory_C_Init::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000B8, "Member 'WB_ElementCategory_C_Init::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000BC, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000C0, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000C4, "Member 'WB_ElementCategory_C_Init::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'WB_ElementCategory_C_Init::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_GetAllChildren_ReturnValue_3) == 0x0000D0, "Member 'WB_ElementCategory_C_Init::CallFunc_GetAllChildren_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'WB_ElementCategory_C_Init::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000E8, "Member 'WB_ElementCategory_C_Init::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, K2Node_DynamicCast_AsWB_NElement_Icon) == 0x0000F0, "Member 'WB_ElementCategory_C_Init::K2Node_DynamicCast_AsWB_NElement_Icon' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'WB_ElementCategory_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000100, "Member 'WB_ElementCategory_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Array_Length_ReturnValue_3) == 0x000108, "Member 'WB_ElementCategory_C_Init::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Less_IntInt_ReturnValue_1) == 0x00010C, "Member 'WB_ElementCategory_C_Init::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000110, "Member 'WB_ElementCategory_C_Init::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_Init, CallFunc_MakeVector2D_ReturnValue_3) == 0x000114, "Member 'WB_ElementCategory_C_Init::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.SetAnimState
// 0x0070 (0x0070 - 0x0000)
struct WB_ElementCategory_C_SetAnimState final
{
public:
	E_CATEGORY_UI_STATE                           InNewState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORY_UI_STATE                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORY_CURSOR_MOVE_DIRECTION              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORY_FRAMEIN_TYPE                       Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORY_UI_STATE                           Temp_byte_Variable_8;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_5;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ElementCategory_C_SetAnimState) == 0x000004, "Wrong alignment on WB_ElementCategory_C_SetAnimState");
static_assert(sizeof(WB_ElementCategory_C_SetAnimState) == 0x000070, "Wrong size on WB_ElementCategory_C_SetAnimState");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, InNewState) == 0x000000, "Member 'WB_ElementCategory_C_SetAnimState::InNewState' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable) == 0x000001, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_1) == 0x000002, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_2) == 0x000003, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_3) == 0x000004, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_4) == 0x000005, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_5) == 0x000006, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_6) == 0x000007, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable) == 0x000008, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable_1) == 0x000010, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_7) == 0x000018, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable_2) == 0x00001C, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable_3) == 0x000024, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable_4) == 0x00002C, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_byte_Variable_8) == 0x000034, "Member 'WB_ElementCategory_C_SetAnimState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable_5) == 0x000038, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable_6) == 0x000040, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, Temp_name_Variable_7) == 0x000048, "Member 'WB_ElementCategory_C_SetAnimState::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, K2Node_Select_Default) == 0x000050, "Member 'WB_ElementCategory_C_SetAnimState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, K2Node_Select_Default_1) == 0x000054, "Member 'WB_ElementCategory_C_SetAnimState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, K2Node_Select_Default_2) == 0x00005C, "Member 'WB_ElementCategory_C_SetAnimState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, K2Node_Select_Default_3) == 0x000064, "Member 'WB_ElementCategory_C_SetAnimState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetAnimState, CallFunc_Play_ReturnValue) == 0x00006C, "Member 'WB_ElementCategory_C_SetAnimState::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.GetAnimState
// 0x0001 (0x0001 - 0x0000)
struct WB_ElementCategory_C_GetAnimState final
{
public:
	E_CATEGORY_UI_STATE                           UIState;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_GetAnimState) == 0x000001, "Wrong alignment on WB_ElementCategory_C_GetAnimState");
static_assert(sizeof(WB_ElementCategory_C_GetAnimState) == 0x000001, "Wrong size on WB_ElementCategory_C_GetAnimState");
static_assert(offsetof(WB_ElementCategory_C_GetAnimState, UIState) == 0x000000, "Member 'WB_ElementCategory_C_GetAnimState::UIState' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.OpenWindow
// 0x0002 (0x0002 - 0x0000)
struct WB_ElementCategory_C_OpenWindow final
{
public:
	E_CATEGORY_FRAMEIN_TYPE                       InFrameInType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipAnim;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ElementCategory_C_OpenWindow) == 0x000001, "Wrong alignment on WB_ElementCategory_C_OpenWindow");
static_assert(sizeof(WB_ElementCategory_C_OpenWindow) == 0x000002, "Wrong size on WB_ElementCategory_C_OpenWindow");
static_assert(offsetof(WB_ElementCategory_C_OpenWindow, InFrameInType) == 0x000000, "Member 'WB_ElementCategory_C_OpenWindow::InFrameInType' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_OpenWindow, IsSkipAnim) == 0x000001, "Member 'WB_ElementCategory_C_OpenWindow::IsSkipAnim' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.CloseWindow
// 0x0001 (0x0001 - 0x0000)
struct WB_ElementCategory_C_CloseWindow final
{
public:
	bool                                          IsSkipAnim;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ElementCategory_C_CloseWindow) == 0x000001, "Wrong alignment on WB_ElementCategory_C_CloseWindow");
static_assert(sizeof(WB_ElementCategory_C_CloseWindow) == 0x000001, "Wrong size on WB_ElementCategory_C_CloseWindow");
static_assert(offsetof(WB_ElementCategory_C_CloseWindow, IsSkipAnim) == 0x000000, "Member 'WB_ElementCategory_C_CloseWindow::IsSkipAnim' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.PlaySlideAnim
// 0x0002 (0x0002 - 0x0000)
struct WB_ElementCategory_C_PlaySlideAnim final
{
public:
	E_CATEGORY_CURSOR_MOVE_DIRECTION              InSlideDirection;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ElementCategory_C_PlaySlideAnim) == 0x000001, "Wrong alignment on WB_ElementCategory_C_PlaySlideAnim");
static_assert(sizeof(WB_ElementCategory_C_PlaySlideAnim) == 0x000002, "Wrong size on WB_ElementCategory_C_PlaySlideAnim");
static_assert(offsetof(WB_ElementCategory_C_PlaySlideAnim, InSlideDirection) == 0x000000, "Member 'WB_ElementCategory_C_PlaySlideAnim::InSlideDirection' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_PlaySlideAnim, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WB_ElementCategory_C_PlaySlideAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.SetWidgetPos
// 0x0010 (0x0010 - 0x0000)
struct WB_ElementCategory_C_SetWidgetPos final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_SetWidgetPos) == 0x000008, "Wrong alignment on WB_ElementCategory_C_SetWidgetPos");
static_assert(sizeof(WB_ElementCategory_C_SetWidgetPos) == 0x000010, "Wrong size on WB_ElementCategory_C_SetWidgetPos");
static_assert(offsetof(WB_ElementCategory_C_SetWidgetPos, InPosition) == 0x000000, "Member 'WB_ElementCategory_C_SetWidgetPos::InPosition' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetWidgetPos, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WB_ElementCategory_C_SetWidgetPos::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.GetCategoryCursor
// 0x0004 (0x0004 - 0x0000)
struct WB_ElementCategory_C_GetCategoryCursor final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_GetCategoryCursor) == 0x000004, "Wrong alignment on WB_ElementCategory_C_GetCategoryCursor");
static_assert(sizeof(WB_ElementCategory_C_GetCategoryCursor) == 0x000004, "Wrong size on WB_ElementCategory_C_GetCategoryCursor");
static_assert(offsetof(WB_ElementCategory_C_GetCategoryCursor, CursorIndex) == 0x000000, "Member 'WB_ElementCategory_C_GetCategoryCursor::CursorIndex' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.SetCategoryCursor
// 0x0078 (0x0078 - 0x0000)
struct WB_ElementCategory_C_SetCategoryCursor final
{
public:
	int32                                         InCursorIdx;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_MsgID;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   L_Text;                                            // 0x0010(0x0018)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAttrName_ReturnValue;                  // 0x0030(0x0018)(ConstParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ElementCategory_C_SetCategoryCursor) == 0x000008, "Wrong alignment on WB_ElementCategory_C_SetCategoryCursor");
static_assert(sizeof(WB_ElementCategory_C_SetCategoryCursor) == 0x000078, "Wrong size on WB_ElementCategory_C_SetCategoryCursor");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, InCursorIdx) == 0x000000, "Member 'WB_ElementCategory_C_SetCategoryCursor::InCursorIdx' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, L_MsgID) == 0x000004, "Member 'WB_ElementCategory_C_SetCategoryCursor::L_MsgID' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, L_MsgAsset) == 0x000008, "Member 'WB_ElementCategory_C_SetCategoryCursor::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, L_Text) == 0x000010, "Member 'WB_ElementCategory_C_SetCategoryCursor::L_Text' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, K2Node_SwitchInteger_CmpSuccess) == 0x000028, "Member 'WB_ElementCategory_C_SetCategoryCursor::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_Conv_IntToByte_ReturnValue) == 0x000029, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_GetValidValue_ReturnValue) == 0x00002A, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_GetAttrName_ReturnValue) == 0x000030, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_GetAttrName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000048, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_MakeVector2D_ReturnValue) == 0x000054, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_GetAllChildren_ReturnValue) == 0x000060, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_Array_LastIndex_ReturnValue) == 0x000070, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ElementCategory_C_SetCategoryCursor, CallFunc_Clamp_ReturnValue) == 0x000074, "Member 'WB_ElementCategory_C_SetCategoryCursor::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function WB_ElementCategory.WB_ElementCategory_C.SetBtnHelpDispMode
// 0x0001 (0x0001 - 0x0000)
struct WB_ElementCategory_C_SetBtnHelpDispMode final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ElementCategory_C_SetBtnHelpDispMode) == 0x000001, "Wrong alignment on WB_ElementCategory_C_SetBtnHelpDispMode");
static_assert(sizeof(WB_ElementCategory_C_SetBtnHelpDispMode) == 0x000001, "Wrong size on WB_ElementCategory_C_SetBtnHelpDispMode");
static_assert(offsetof(WB_ElementCategory_C_SetBtnHelpDispMode, IsGamePad) == 0x000000, "Member 'WB_ElementCategory_C_SetBtnHelpDispMode::IsGamePad' has a wrong offset!");

}

