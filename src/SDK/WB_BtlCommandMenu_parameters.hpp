#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlCommandMenu

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.Evt_OnListHovered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlCommandMenu_C_Evt_OnListHovered__DelegateSignature final
{
public:
	int32                                         ShiftIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_Evt_OnListHovered__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_Evt_OnListHovered__DelegateSignature");
static_assert(sizeof(WB_BtlCommandMenu_C_Evt_OnListHovered__DelegateSignature) == 0x000004, "Wrong size on WB_BtlCommandMenu_C_Evt_OnListHovered__DelegateSignature");
static_assert(offsetof(WB_BtlCommandMenu_C_Evt_OnListHovered__DelegateSignature, ShiftIndex) == 0x000000, "Member 'WB_BtlCommandMenu_C_Evt_OnListHovered__DelegateSignature::ShiftIndex' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.Evt_OnListClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlCommandMenu_C_Evt_OnListClicked__DelegateSignature final
{
public:
	E_BTL_UI_COMMAND                              Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_Evt_OnListClicked__DelegateSignature) == 0x000001, "Wrong alignment on WB_BtlCommandMenu_C_Evt_OnListClicked__DelegateSignature");
static_assert(sizeof(WB_BtlCommandMenu_C_Evt_OnListClicked__DelegateSignature) == 0x000001, "Wrong size on WB_BtlCommandMenu_C_Evt_OnListClicked__DelegateSignature");
static_assert(offsetof(WB_BtlCommandMenu_C_Evt_OnListClicked__DelegateSignature, Command) == 0x000000, "Member 'WB_BtlCommandMenu_C_Evt_OnListClicked__DelegateSignature::Command' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.ExecuteUbergraph_WB_BtlCommandMenu
// 0x0090 (0x0090 - 0x0000)
struct WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMouseWheelAxis_Axis;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_1;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_1;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate_1;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately_1;                        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately;                          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu");
static_assert(sizeof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu) == 0x000090, "Wrong size on WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, EntryPoint) == 0x000000, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, CallFunc_GetMouseWheelAxis_Axis) == 0x000004, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::CallFunc_GetMouseWheelAxis_Axis' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_Event_Delta) == 0x000008, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_Event_MyGeometry) == 0x00000C, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_Event_InDeltaTime) == 0x000044, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimPackName_1) == 0x000048, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimationName_1) == 0x000050, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimPackIndex_1) == 0x000058, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimPackIndex_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimationIndex_1) == 0x00005C, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimationIndex_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_SwitchInteger_CmpSuccess) == 0x000060, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimPackName) == 0x000064, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimationName) == 0x00006C, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000074, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000078, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_SwitchInteger_CmpSuccess_1) == 0x00007C, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_Event_Rate_1) == 0x000080, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_Event_Rate_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_Event_Immediately_1) == 0x000084, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_Event_Immediately_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_Event_Rate) == 0x000088, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu, K2Node_Event_Immediately) == 0x00008C, "Member 'WB_BtlCommandMenu_C_ExecuteUbergraph_WB_BtlCommandMenu::K2Node_Event_Immediately' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.Disappear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlCommandMenu_C_Disappear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_Disappear) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_Disappear");
static_assert(sizeof(WB_BtlCommandMenu_C_Disappear) == 0x000008, "Wrong size on WB_BtlCommandMenu_C_Disappear");
static_assert(offsetof(WB_BtlCommandMenu_C_Disappear, Rate) == 0x000000, "Member 'WB_BtlCommandMenu_C_Disappear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_Disappear, Immediately) == 0x000004, "Member 'WB_BtlCommandMenu_C_Disappear::Immediately' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.Appear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlCommandMenu_C_Appear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_Appear) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_Appear");
static_assert(sizeof(WB_BtlCommandMenu_C_Appear) == 0x000008, "Wrong size on WB_BtlCommandMenu_C_Appear");
static_assert(offsetof(WB_BtlCommandMenu_C_Appear, Rate) == 0x000000, "Member 'WB_BtlCommandMenu_C_Appear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_Appear, Immediately) == 0x000004, "Member 'WB_BtlCommandMenu_C_Appear::Immediately' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_Title_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlCommandMenu_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_BtlCommandMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_Tick) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_Tick");
static_assert(sizeof(WB_BtlCommandMenu_C_Tick) == 0x00003C, "Wrong size on WB_BtlCommandMenu_C_Tick");
static_assert(offsetof(WB_BtlCommandMenu_C_Tick, MyGeometry) == 0x000000, "Member 'WB_BtlCommandMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_BtlCommandMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.CallTick
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlCommandMenu_C_CallTick final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_CallTick) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_CallTick");
static_assert(sizeof(WB_BtlCommandMenu_C_CallTick) == 0x000004, "Wrong size on WB_BtlCommandMenu_C_CallTick");
static_assert(offsetof(WB_BtlCommandMenu_C_CallTick, Delta) == 0x000000, "Member 'WB_BtlCommandMenu_C_CallTick::Delta' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.AddMenu
// 0x0038 (0x0038 - 0x0000)
struct WB_BtlCommandMenu_C_AddMenu final
{
public:
	E_BTL_UI_COMMAND                              Menu;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selectable;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              Lo_Menu;                                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Selected;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Normal;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               Lo_Part;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Selectable;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_AddMenu) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_AddMenu");
static_assert(sizeof(WB_BtlCommandMenu_C_AddMenu) == 0x000038, "Wrong size on WB_BtlCommandMenu_C_AddMenu");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, Menu) == 0x000000, "Member 'WB_BtlCommandMenu_C_AddMenu::Menu' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, Selectable) == 0x000001, "Member 'WB_BtlCommandMenu_C_AddMenu::Selectable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, Lo_Menu) == 0x000002, "Member 'WB_BtlCommandMenu_C_AddMenu::Lo_Menu' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, Lo_Selected) == 0x000004, "Member 'WB_BtlCommandMenu_C_AddMenu::Lo_Selected' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, Lo_Normal) == 0x000008, "Member 'WB_BtlCommandMenu_C_AddMenu::Lo_Normal' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, Lo_Part) == 0x000010, "Member 'WB_BtlCommandMenu_C_AddMenu::Lo_Part' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, Lo_Selectable) == 0x000018, "Member 'WB_BtlCommandMenu_C_AddMenu::Lo_Selectable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, CallFunc_Map_Find_Value) == 0x000020, "Member 'WB_BtlCommandMenu_C_AddMenu::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'WB_BtlCommandMenu_C_AddMenu::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'WB_BtlCommandMenu_C_AddMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_AddMenu, CallFunc_AddChildToCanvas_ReturnValue) == 0x000030, "Member 'WB_BtlCommandMenu_C_AddMenu::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.DecidePos
// 0x0030 (0x0030 - 0x0000)
struct WB_BtlCommandMenu_C_DecidePos final
{
public:
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_1;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_2;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_DecidePos) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_DecidePos");
static_assert(sizeof(WB_BtlCommandMenu_C_DecidePos) == 0x000030, "Wrong size on WB_BtlCommandMenu_C_DecidePos");
static_assert(offsetof(WB_BtlCommandMenu_C_DecidePos, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000000, "Member 'WB_BtlCommandMenu_C_DecidePos::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecidePos, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_DecidePos::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecidePos, CallFunc_GetSSPPositionDataByPartsName_OutVec_1) == 0x000010, "Member 'WB_BtlCommandMenu_C_DecidePos::CallFunc_GetSSPPositionDataByPartsName_OutVec_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecidePos, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_DecidePos::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecidePos, CallFunc_GetSSPPositionDataByPartsName_OutVec_2) == 0x000020, "Member 'WB_BtlCommandMenu_C_DecidePos::CallFunc_GetSSPPositionDataByPartsName_OutVec_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecidePos, CallFunc_PlayByIndex_ReturnValue) == 0x000028, "Member 'WB_BtlCommandMenu_C_DecidePos::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.PlayTitleAnim
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlCommandMenu_C_PlayTitleAnim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_PlayTitleAnim) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_PlayTitleAnim");
static_assert(sizeof(WB_BtlCommandMenu_C_PlayTitleAnim) == 0x000010, "Wrong size on WB_BtlCommandMenu_C_PlayTitleAnim");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayTitleAnim, AnimIndex) == 0x000000, "Member 'WB_BtlCommandMenu_C_PlayTitleAnim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayTitleAnim, IsLoop) == 0x000004, "Member 'WB_BtlCommandMenu_C_PlayTitleAnim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayTitleAnim, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_PlayTitleAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayTitleAnim, CallFunc_PlayByIndex_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_PlayTitleAnim::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.PlayBG Anim
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlCommandMenu_C_PlayBG_Anim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_PlayBG_Anim) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_PlayBG_Anim");
static_assert(sizeof(WB_BtlCommandMenu_C_PlayBG_Anim) == 0x000010, "Wrong size on WB_BtlCommandMenu_C_PlayBG_Anim");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayBG_Anim, AnimIndex) == 0x000000, "Member 'WB_BtlCommandMenu_C_PlayBG_Anim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayBG_Anim, IsLoop) == 0x000004, "Member 'WB_BtlCommandMenu_C_PlayBG_Anim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayBG_Anim, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_PlayBG_Anim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayBG_Anim, CallFunc_PlayByIndex_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_PlayBG_Anim::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.PlayCursorAnim
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlCommandMenu_C_PlayCursorAnim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_PlayCursorAnim) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_PlayCursorAnim");
static_assert(sizeof(WB_BtlCommandMenu_C_PlayCursorAnim) == 0x000010, "Wrong size on WB_BtlCommandMenu_C_PlayCursorAnim");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayCursorAnim, AnimIndex) == 0x000000, "Member 'WB_BtlCommandMenu_C_PlayCursorAnim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayCursorAnim, IsLoop) == 0x000004, "Member 'WB_BtlCommandMenu_C_PlayCursorAnim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayCursorAnim, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_PlayCursorAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_PlayCursorAnim, CallFunc_PlayByIndex_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_PlayCursorAnim::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.SlideOut
// 0x0020 (0x0020 - 0x0000)
struct WB_BtlCommandMenu_C_SlideOut final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_SlideOut) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_SlideOut");
static_assert(sizeof(WB_BtlCommandMenu_C_SlideOut) == 0x000020, "Wrong size on WB_BtlCommandMenu_C_SlideOut");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideOut, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_BtlCommandMenu_C_SlideOut::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideOut, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_BtlCommandMenu_C_SlideOut::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideOut, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_SlideOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideOut, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_BtlCommandMenu_C_SlideOut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideOut, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_SlideOut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideOut, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WB_BtlCommandMenu_C_SlideOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideOut, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'WB_BtlCommandMenu_C_SlideOut::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.SlideIn
// 0x0058 (0x0058 - 0x0000)
struct WB_BtlCommandMenu_C_SlideIn final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_SlideIn) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_SlideIn");
static_assert(sizeof(WB_BtlCommandMenu_C_SlideIn) == 0x000058, "Wrong size on WB_BtlCommandMenu_C_SlideIn");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_BtlCommandMenu_C_SlideIn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Multiply_IntInt_ReturnValue) == 0x000010, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WB_BtlCommandMenu_C_SlideIn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WB_BtlCommandMenu_C_SlideIn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_BooleanAND_ReturnValue_1) == 0x000049, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SlideIn, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WB_BtlCommandMenu_C_SlideIn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.CursorCtrl
// 0x0038 (0x0038 - 0x0000)
struct WB_BtlCommandMenu_C_CursorCtrl final
{
public:
	int32                                         Direction;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CursorMoved;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllSlideInFinished_Finished;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinishSlideIn_isFinished;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_CursorCtrl) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_CursorCtrl");
static_assert(sizeof(WB_BtlCommandMenu_C_CursorCtrl) == 0x000038, "Wrong size on WB_BtlCommandMenu_C_CursorCtrl");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, Direction) == 0x000000, "Member 'WB_BtlCommandMenu_C_CursorCtrl::Direction' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CursorMoved) == 0x000004, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CursorMoved' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000005, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000006, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000007, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_IsAllSlideInFinished_Finished) == 0x000008, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_IsAllSlideInFinished_Finished' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_IsFinishSlideIn_isFinished) == 0x000018, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_IsFinishSlideIn_isFinished' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_SelectInt_ReturnValue) == 0x00001C, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000020, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00002C, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_Less_IntInt_ReturnValue) == 0x00002E, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_BooleanAND_ReturnValue_1) == 0x00002F, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_BooleanAND_ReturnValue_2) == 0x000030, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000031, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CursorCtrl, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'WB_BtlCommandMenu_C_CursorCtrl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.DecideCursor
// 0x0058 (0x0058 - 0x0000)
struct WB_BtlCommandMenu_C_DecideCursor final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_DecideCursor) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_DecideCursor");
static_assert(sizeof(WB_BtlCommandMenu_C_DecideCursor) == 0x000058, "Wrong size on WB_BtlCommandMenu_C_DecideCursor");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_BtlCommandMenu_C_DecideCursor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_BtlCommandMenu_C_DecideCursor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Array_LastIndex_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_MakeVector2D_ReturnValue) == 0x00001C, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000038, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_AddChildToCanvas_ReturnValue) == 0x000040, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideCursor, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000050, "Member 'WB_BtlCommandMenu_C_DecideCursor::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.GetResult
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlCommandMenu_C_GetResult final
{
public:
	E_BTL_UI_COMMAND                              Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selectable;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              CallFunc_GetResult_Result;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_Selectable;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_GetResult) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_GetResult");
static_assert(sizeof(WB_BtlCommandMenu_C_GetResult) == 0x000018, "Wrong size on WB_BtlCommandMenu_C_GetResult");
static_assert(offsetof(WB_BtlCommandMenu_C_GetResult, Return) == 0x000000, "Member 'WB_BtlCommandMenu_C_GetResult::Return' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_GetResult, Selectable) == 0x000001, "Member 'WB_BtlCommandMenu_C_GetResult::Selectable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_GetResult, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_BtlCommandMenu_C_GetResult::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_GetResult, CallFunc_GetResult_Result) == 0x000010, "Member 'WB_BtlCommandMenu_C_GetResult::CallFunc_GetResult_Result' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_GetResult, CallFunc_GetResult_Selectable) == 0x000011, "Member 'WB_BtlCommandMenu_C_GetResult::CallFunc_GetResult_Selectable' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.CreateMenu
// 0x0048 (0x0048 - 0x0000)
struct WB_BtlCommandMenu_C_CreateMenu final
{
public:
	E_BTL_UI_COMMAND                              Lo_Menu;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_Selected;                                       // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_Normal;                                         // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenuPart_C*               CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_CreateMenu) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_CreateMenu");
static_assert(sizeof(WB_BtlCommandMenu_C_CreateMenu) == 0x000048, "Wrong size on WB_BtlCommandMenu_C_CreateMenu");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, Lo_Menu) == 0x000000, "Member 'WB_BtlCommandMenu_C_CreateMenu::Lo_Menu' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, Lo_Selected) == 0x000004, "Member 'WB_BtlCommandMenu_C_CreateMenu::Lo_Selected' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, Lo_Normal) == 0x00000C, "Member 'WB_BtlCommandMenu_C_CreateMenu::Lo_Normal' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, Temp_int_Variable) == 0x000014, "Member 'WB_BtlCommandMenu_C_CreateMenu::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, Temp_int_Variable_1) == 0x000018, "Member 'WB_BtlCommandMenu_C_CreateMenu::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_Conv_IntToByte_ReturnValue) == 0x00001C, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_GetValidValue_ReturnValue) == 0x000024, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000025, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000026, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_Create_ReturnValue) == 0x000030, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'WB_BtlCommandMenu_C_CreateMenu::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_MakeLiteralInt_ReturnValue) == 0x00003C, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WB_BtlCommandMenu_C_CreateMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.RegisterMenu
// 0x03B0 (0x03B0 - 0x0000)
struct WB_BtlCommandMenu_C_RegisterMenu final
{
public:
	struct FBtlParty                              PartyData;                                         // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_BTL_UI_COMMAND                              InitialCursor;                                     // 0x0320(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExistNkm;                                          // 0x0321(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Escapable;                                         // 0x0322(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBlock;                                           // 0x0323(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHeroSleeped;                                     // 0x0324(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHero;                                            // 0x0325(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGuest;                                           // 0x0326(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327[0x1];                                      // 0x0327(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  Lo_Selectable;                                     // 0x0328(0x0010)(Edit, BlueprintVisible)
	TArray<E_BTL_UI_COMMAND>                      Lo_Menus;                                          // 0x0338(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0358(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(E_BTL_UI_COMMAND Command)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0368(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(E_BTL_UI_COMMAND Command)>     K2Node_CreateDelegate_OutputDelegate_2;            // 0x0378(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              CallFunc_Array_Get_Item;                           // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396[0x2];                                      // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item_1;                         // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_RegisterMenu) == 0x000010, "Wrong alignment on WB_BtlCommandMenu_C_RegisterMenu");
static_assert(sizeof(WB_BtlCommandMenu_C_RegisterMenu) == 0x0003B0, "Wrong size on WB_BtlCommandMenu_C_RegisterMenu");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, PartyData) == 0x000000, "Member 'WB_BtlCommandMenu_C_RegisterMenu::PartyData' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, InitialCursor) == 0x000320, "Member 'WB_BtlCommandMenu_C_RegisterMenu::InitialCursor' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, ExistNkm) == 0x000321, "Member 'WB_BtlCommandMenu_C_RegisterMenu::ExistNkm' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, Escapable) == 0x000322, "Member 'WB_BtlCommandMenu_C_RegisterMenu::Escapable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, IsBlock) == 0x000323, "Member 'WB_BtlCommandMenu_C_RegisterMenu::IsBlock' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, IsHeroSleeped) == 0x000324, "Member 'WB_BtlCommandMenu_C_RegisterMenu::IsHeroSleeped' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, IsHero) == 0x000325, "Member 'WB_BtlCommandMenu_C_RegisterMenu::IsHero' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, IsGuest) == 0x000326, "Member 'WB_BtlCommandMenu_C_RegisterMenu::IsGuest' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, Lo_Selectable) == 0x000328, "Member 'WB_BtlCommandMenu_C_RegisterMenu::Lo_Selectable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, Lo_Menus) == 0x000338, "Member 'WB_BtlCommandMenu_C_RegisterMenu::Lo_Menus' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, Temp_int_Array_Index_Variable) == 0x000348, "Member 'WB_BtlCommandMenu_C_RegisterMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, Temp_int_Loop_Counter_Variable) == 0x00034C, "Member 'WB_BtlCommandMenu_C_RegisterMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000350, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, Temp_int_Array_Index_Variable_1) == 0x000354, "Member 'WB_BtlCommandMenu_C_RegisterMenu::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000358, "Member 'WB_BtlCommandMenu_C_RegisterMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, K2Node_CreateDelegate_OutputDelegate_1) == 0x000368, "Member 'WB_BtlCommandMenu_C_RegisterMenu::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, K2Node_CreateDelegate_OutputDelegate_2) == 0x000378, "Member 'WB_BtlCommandMenu_C_RegisterMenu::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, Temp_int_Loop_Counter_Variable_1) == 0x000388, "Member 'WB_BtlCommandMenu_C_RegisterMenu::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Array_Get_Item) == 0x00038C, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Array_Length_ReturnValue) == 0x000390, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000394, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000395, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Add_IntInt_ReturnValue_1) == 0x000398, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Array_Length_ReturnValue_1) == 0x00039C, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Array_Get_Item_1) == 0x0003A0, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_RegisterMenu, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003A8, "Member 'WB_BtlCommandMenu_C_RegisterMenu::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.DecideMenuPos
// 0x0038 (0x0038 - 0x0000)
struct WB_BtlCommandMenu_C_DecideMenuPos final
{
public:
	int32                                         MenuIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_DecideMenuPos) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_DecideMenuPos");
static_assert(sizeof(WB_BtlCommandMenu_C_DecideMenuPos) == 0x000038, "Wrong size on WB_BtlCommandMenu_C_DecideMenuPos");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, MenuIndex) == 0x000000, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::MenuIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, Widget) == 0x000008, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::Widget' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DecideMenuPos, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'WB_BtlCommandMenu_C_DecideMenuPos::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.CreateMenuList
// 0x00F0 (0x00F0 - 0x0000)
struct WB_BtlCommandMenu_C_CreateMenuList final
{
public:
	TArray<E_BTL_UI_COMMAND>                      Menu;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  Selectable;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsHero;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExistNkm;                                          // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Escapable;                                         // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBlock;                                           // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHeroSleeped;                                     // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGuest;                                           // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              Temp_byte_Variable;                                // 0x0026(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_1;                              // 0x0034(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0035(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_2;                              // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0041(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0042(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_3;                              // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_4;                              // 0x0068(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_5;                              // 0x0070(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_6;                              // 0x0078(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_7;                              // 0x0080(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_8;                              // 0x0088(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_9;                              // 0x0090(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_14;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              CallFunc_Array_Get_Item;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00B4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              CallFunc_Array_Get_Item_1;                         // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_10;                             // 0x00B7(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_15;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_16;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_17;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue;    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_18;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_19;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_1; // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x00D6(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_20;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue_1;  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_21;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_CreateMenuList) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_CreateMenuList");
static_assert(sizeof(WB_BtlCommandMenu_C_CreateMenuList) == 0x0000F0, "Wrong size on WB_BtlCommandMenu_C_CreateMenuList");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Menu) == 0x000000, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Menu' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Selectable) == 0x000010, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Selectable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, IsHero) == 0x000020, "Member 'WB_BtlCommandMenu_C_CreateMenuList::IsHero' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, ExistNkm) == 0x000021, "Member 'WB_BtlCommandMenu_C_CreateMenuList::ExistNkm' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Escapable) == 0x000022, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Escapable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, IsBlock) == 0x000023, "Member 'WB_BtlCommandMenu_C_CreateMenuList::IsBlock' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, IsHeroSleeped) == 0x000024, "Member 'WB_BtlCommandMenu_C_CreateMenuList::IsHeroSleeped' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, IsGuest) == 0x000025, "Member 'WB_BtlCommandMenu_C_CreateMenuList::IsGuest' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable) == 0x000026, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_1) == 0x000034, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable) == 0x000035, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_1) == 0x000038, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_2) == 0x00003C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_2) == 0x000040, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable_1) == 0x000041, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable_2) == 0x000042, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_3) == 0x000044, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable_3) == 0x000048, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_4) == 0x00004C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable_4) == 0x000050, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_5) == 0x000054, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable_5) == 0x000058, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_6) == 0x00005C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_3) == 0x000060, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_7) == 0x000064, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_4) == 0x000068, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_8) == 0x00006C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_5) == 0x000070, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_9) == 0x000074, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_6) == 0x000078, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_10) == 0x00007C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_7) == 0x000080, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_11) == 0x000084, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_8) == 0x000088, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_12) == 0x00008C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_9) == 0x000090, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_13) == 0x000094, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_int_Array_Index_Variable) == 0x000098, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_14) == 0x00009C, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable_6) == 0x0000B4, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Get_Item_1) == 0x0000B5, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B6, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_byte_Variable_10) == 0x0000B7, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_15) == 0x0000BC, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_16) == 0x0000C0, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_17) == 0x0000C4, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue) == 0x0000C8, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue) == 0x0000C9, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_18) == 0x0000CC, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_19) == 0x0000D0, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_BooleanOR_ReturnValue) == 0x0000D4, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_1) == 0x0000D5, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_bool_Variable_7) == 0x0000D6, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_CheckEventFlag_ReturnValue) == 0x0000D7, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_20) == 0x0000D8, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'WB_BtlCommandMenu_C_CreateMenuList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue_1) == 0x0000E0, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Array_Add_ReturnValue_21) == 0x0000E4, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Array_Add_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'WB_BtlCommandMenu_C_CreateMenuList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.CreateMenuList_Nkm
// 0x0078 (0x0078 - 0x0000)
struct WB_BtlCommandMenu_C_CreateMenuList_Nkm final
{
public:
	TArray<E_BTL_UI_COMMAND>                      Menu;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  Selectable;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x002D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0039(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable;                                // 0x0044(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_1;                              // 0x0045(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_2;                              // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_3;                              // 0x0051(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_4;                              // 0x005C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_5;                              // 0x005D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable_6;                              // 0x0068(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLearningGodParameterSkill_ReturnValue;  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_CreateMenuList_Nkm) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_CreateMenuList_Nkm");
static_assert(sizeof(WB_BtlCommandMenu_C_CreateMenuList_Nkm) == 0x000078, "Wrong size on WB_BtlCommandMenu_C_CreateMenuList_Nkm");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Menu) == 0x000000, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Menu' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Selectable) == 0x000010, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Selectable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_bool_Variable) == 0x000020, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_bool_Variable_1) == 0x000021, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_1) == 0x000028, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_bool_Variable_2) == 0x00002C, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_bool_Variable_3) == 0x00002D, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_2) == 0x000030, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_3) == 0x000034, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_bool_Variable_4) == 0x000038, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_bool_Variable_5) == 0x000039, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_4) == 0x00003C, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_5) == 0x000040, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_byte_Variable) == 0x000044, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_byte_Variable_1) == 0x000045, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_6) == 0x000048, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_7) == 0x00004C, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_byte_Variable_2) == 0x000050, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_byte_Variable_3) == 0x000051, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_8) == 0x000054, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_9) == 0x000058, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_byte_Variable_4) == 0x00005C, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_byte_Variable_5) == 0x00005D, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_10) == 0x000060, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_11) == 0x000064, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, Temp_byte_Variable_6) == 0x000068, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_IsLearningGodParameterSkill_ReturnValue) == 0x000069, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_IsLearningGodParameterSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_12) == 0x00006C, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue) == 0x000070, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_ItemIsHaveAnyItems_Battle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_CreateMenuList_Nkm, CallFunc_Array_Add_ReturnValue_13) == 0x000074, "Member 'WB_BtlCommandMenu_C_CreateMenuList_Nkm::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.Constructinit
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlCommandMenu_C_Constructinit final
{
public:
	class USsPlayerWidget*                        SsPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayByIndex_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_Constructinit) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_Constructinit");
static_assert(sizeof(WB_BtlCommandMenu_C_Constructinit) == 0x000010, "Wrong size on WB_BtlCommandMenu_C_Constructinit");
static_assert(offsetof(WB_BtlCommandMenu_C_Constructinit, SsPlayer) == 0x000000, "Member 'WB_BtlCommandMenu_C_Constructinit::SsPlayer' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_Constructinit, CallFunc_PlayByIndex_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_Constructinit::CallFunc_PlayByIndex_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.IsAllSlideInFinished
// 0x0038 (0x0038 - 0x0000)
struct WB_BtlCommandMenu_C_IsAllSlideInFinished final
{
public:
	bool                                          Finished;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Cnt;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinishSlideIn_isFinished;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_IsAllSlideInFinished) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_IsAllSlideInFinished");
static_assert(sizeof(WB_BtlCommandMenu_C_IsAllSlideInFinished) == 0x000038, "Wrong size on WB_BtlCommandMenu_C_IsAllSlideInFinished");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, Finished) == 0x000000, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::Finished' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, Lo_Cnt) == 0x000004, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_IsFinishSlideIn_isFinished) == 0x000021, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_IsFinishSlideIn_isFinished' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000024, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsAllSlideInFinished, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WB_BtlCommandMenu_C_IsAllSlideInFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.SideInImmediately
// 0x0020 (0x0020 - 0x0000)
struct WB_BtlCommandMenu_C_SideInImmediately final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_SideInImmediately) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_SideInImmediately");
static_assert(sizeof(WB_BtlCommandMenu_C_SideInImmediately) == 0x000020, "Wrong size on WB_BtlCommandMenu_C_SideInImmediately");
static_assert(offsetof(WB_BtlCommandMenu_C_SideInImmediately, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_BtlCommandMenu_C_SideInImmediately::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SideInImmediately, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_BtlCommandMenu_C_SideInImmediately::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SideInImmediately, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_SideInImmediately::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SideInImmediately, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_SideInImmediately::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SideInImmediately, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_BtlCommandMenu_C_SideInImmediately::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_SideInImmediately, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_SideInImmediately::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.DebugCheckDisappeared
// 0x0030 (0x0030 - 0x0000)
struct WB_BtlCommandMenu_C_DebugCheckDisappeared final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_DebugCheckDisappeared) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_DebugCheckDisappeared");
static_assert(sizeof(WB_BtlCommandMenu_C_DebugCheckDisappeared) == 0x000030, "Wrong size on WB_BtlCommandMenu_C_DebugCheckDisappeared");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, CallFunc_IsDisappeared_IsDisappeared) == 0x000019, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::CallFunc_IsDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_DebugCheckDisappeared, CallFunc_Conv_BoolToString_ReturnValue) == 0x000020, "Member 'WB_BtlCommandMenu_C_DebugCheckDisappeared::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.OnListHovered
// 0x0030 (0x0030 - 0x0000)
struct WB_BtlCommandMenu_C_OnListHovered final
{
public:
	E_BTL_UI_COMMAND                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_HoveredIndex;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlCommandMenuPart_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              CallFunc_GetResult_Result;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_Selectable;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_OnListHovered) == 0x000008, "Wrong alignment on WB_BtlCommandMenu_C_OnListHovered");
static_assert(sizeof(WB_BtlCommandMenu_C_OnListHovered) == 0x000030, "Wrong size on WB_BtlCommandMenu_C_OnListHovered");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, Result) == 0x000000, "Member 'WB_BtlCommandMenu_C_OnListHovered::Result' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, Lo_HoveredIndex) == 0x000004, "Member 'WB_BtlCommandMenu_C_OnListHovered::Lo_HoveredIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_BtlCommandMenu_C_OnListHovered::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WB_BtlCommandMenu_C_OnListHovered::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_GetResult_Result) == 0x000020, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_GetResult_Result' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_GetResult_Selectable) == 0x000021, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_GetResult_Selectable' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListHovered, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'WB_BtlCommandMenu_C_OnListHovered::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.OnListClicked
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlCommandMenu_C_OnListClicked final
{
public:
	E_BTL_UI_COMMAND                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_OnListClicked) == 0x000001, "Wrong alignment on WB_BtlCommandMenu_C_OnListClicked");
static_assert(sizeof(WB_BtlCommandMenu_C_OnListClicked) == 0x000001, "Wrong size on WB_BtlCommandMenu_C_OnListClicked");
static_assert(offsetof(WB_BtlCommandMenu_C_OnListClicked, Result) == 0x000000, "Member 'WB_BtlCommandMenu_C_OnListClicked::Result' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.MouseWheel
// 0x001C (0x001C - 0x0000)
struct WB_BtlCommandMenu_C_MouseWheel final
{
public:
	float                                         MouseWheelDelta;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Shift;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlCommandMenu_C_MouseWheel) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_MouseWheel");
static_assert(sizeof(WB_BtlCommandMenu_C_MouseWheel) == 0x00001C, "Wrong size on WB_BtlCommandMenu_C_MouseWheel");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, MouseWheelDelta) == 0x000000, "Member 'WB_BtlCommandMenu_C_MouseWheel::MouseWheelDelta' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, Lo_Shift) == 0x000004, "Member 'WB_BtlCommandMenu_C_MouseWheel::Lo_Shift' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_BtlCommandMenu_C_MouseWheel::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'WB_BtlCommandMenu_C_MouseWheel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, CallFunc_Array_LastIndex_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_MouseWheel::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_BtlCommandMenu_C_MouseWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, CallFunc_InRange_IntInt_ReturnValue) == 0x000014, "Member 'WB_BtlCommandMenu_C_MouseWheel::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_MouseWheel, CallFunc_SelectInt_ReturnValue) == 0x000018, "Member 'WB_BtlCommandMenu_C_MouseWheel::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function WB_BtlCommandMenu.WB_BtlCommandMenu_C.IsDisappeared
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlCommandMenu_C_IsDisappeared final
{
public:
	bool                                          Param_IsDisappeared;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayingAnimationIndex_OutAnimPackIndex; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayingAnimationIndex_OutAnimationIndex; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlCommandMenu_C_IsDisappeared) == 0x000004, "Wrong alignment on WB_BtlCommandMenu_C_IsDisappeared");
static_assert(sizeof(WB_BtlCommandMenu_C_IsDisappeared) == 0x000010, "Wrong size on WB_BtlCommandMenu_C_IsDisappeared");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, Param_IsDisappeared) == 0x000000, "Member 'WB_BtlCommandMenu_C_IsDisappeared::Param_IsDisappeared' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'WB_BtlCommandMenu_C_IsDisappeared::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, CallFunc_GetPlayingAnimationIndex_OutAnimPackIndex) == 0x000004, "Member 'WB_BtlCommandMenu_C_IsDisappeared::CallFunc_GetPlayingAnimationIndex_OutAnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, CallFunc_GetPlayingAnimationIndex_OutAnimationIndex) == 0x000008, "Member 'WB_BtlCommandMenu_C_IsDisappeared::CallFunc_GetPlayingAnimationIndex_OutAnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WB_BtlCommandMenu_C_IsDisappeared::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'WB_BtlCommandMenu_C_IsDisappeared::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'WB_BtlCommandMenu_C_IsDisappeared::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlCommandMenu_C_IsDisappeared, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'WB_BtlCommandMenu_C_IsDisappeared::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

