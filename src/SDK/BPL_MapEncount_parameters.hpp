#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_MapEncount

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPL_MapEncount.BPL_MapEncount_C.GetSymbolId
// 0x0248 (0x0248 - 0x0000)
struct BPL_MapEncount_C_GetSymbolId final
{
public:
	int32                                         In_encount_id;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EnemyIdList;                                       // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Out_SymbolId;                                      // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Symbolindex1;                                      // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOneEncountData                        EncountData;                                       // 0x0028(0x0040)(Edit, BlueprintVisible)
	int32                                         L_index;                                           // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopIndex;                                         // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyID;                                           // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubSymbolID;                                       // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Symbolindex;                                       // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SymbolID;                                          // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyLv;                                           // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1F[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 EnemyIds;                                          // 0x0088(0x0010)(Edit, BlueprintVisible)
	int32                                         Encount_id;                                        // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D20[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOneEncountData                        CallFunc_GetEncountData_ReturnValue;               // 0x00A8(0x0040)(ConstParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D21[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D22[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D23[0x5];                                     // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyData                             CallFunc_GetEnemyBaseData_ReturnValue;             // 0x0110(0x00D8)(ConstParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D24[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D25[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D26[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapEncount_C_GetSymbolId) == 0x000008, "Wrong alignment on BPL_MapEncount_C_GetSymbolId");
static_assert(sizeof(BPL_MapEncount_C_GetSymbolId) == 0x000248, "Wrong size on BPL_MapEncount_C_GetSymbolId");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, In_encount_id) == 0x000000, "Member 'BPL_MapEncount_C_GetSymbolId::In_encount_id' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Param_Index) == 0x000004, "Member 'BPL_MapEncount_C_GetSymbolId::Param_Index' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, __WorldContext) == 0x000008, "Member 'BPL_MapEncount_C_GetSymbolId::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, EnemyIdList) == 0x000010, "Member 'BPL_MapEncount_C_GetSymbolId::EnemyIdList' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Out_SymbolId) == 0x000020, "Member 'BPL_MapEncount_C_GetSymbolId::Out_SymbolId' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Symbolindex1) == 0x000024, "Member 'BPL_MapEncount_C_GetSymbolId::Symbolindex1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, EncountData) == 0x000028, "Member 'BPL_MapEncount_C_GetSymbolId::EncountData' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, L_index) == 0x000068, "Member 'BPL_MapEncount_C_GetSymbolId::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, LoopIndex) == 0x00006C, "Member 'BPL_MapEncount_C_GetSymbolId::LoopIndex' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, EnemyID) == 0x000070, "Member 'BPL_MapEncount_C_GetSymbolId::EnemyID' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, SubSymbolID) == 0x000074, "Member 'BPL_MapEncount_C_GetSymbolId::SubSymbolID' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Symbolindex) == 0x000078, "Member 'BPL_MapEncount_C_GetSymbolId::Symbolindex' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, SymbolID) == 0x00007C, "Member 'BPL_MapEncount_C_GetSymbolId::SymbolID' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, EnemyLv) == 0x000080, "Member 'BPL_MapEncount_C_GetSymbolId::EnemyLv' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, EnemyIds) == 0x000088, "Member 'BPL_MapEncount_C_GetSymbolId::EnemyIds' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Encount_id) == 0x000098, "Member 'BPL_MapEncount_C_GetSymbolId::Encount_id' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BPL_MapEncount_C_GetSymbolId::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_GetEncountData_ReturnValue) == 0x0000A8, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_GetEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Temp_bool_True_if_break_was_hit_Variable) == 0x0000E8, "Member 'BPL_MapEncount_C_GetSymbolId::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000E9, "Member 'BPL_MapEncount_C_GetSymbolId::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Not_PreBool_ReturnValue) == 0x0000EA, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EB, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Temp_int_Array_Index_Variable) == 0x0000EC, "Member 'BPL_MapEncount_C_GetSymbolId::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Temp_int_Array_Index_Variable_1) == 0x0000F0, "Member 'BPL_MapEncount_C_GetSymbolId::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F9, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Array_Length_ReturnValue_1) == 0x000104, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_BooleanAND_ReturnValue) == 0x000108, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Less_IntInt_ReturnValue_1) == 0x000109, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_BooleanAND_ReturnValue_1) == 0x00010A, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_GetEnemyBaseData_ReturnValue) == 0x000110, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_GetEnemyBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Conv_IntToString_ReturnValue) == 0x0001E8, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F8, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Concat_StrStr_ReturnValue) == 0x000200, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000210, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000218, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Greater_IntInt_ReturnValue) == 0x000228, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, Temp_int_Loop_Counter_Variable_1) == 0x00022C, "Member 'BPL_MapEncount_C_GetSymbolId::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Add_IntInt_ReturnValue_1) == 0x000230, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Array_Get_Item_1) == 0x000234, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Array_Add_ReturnValue) == 0x000238, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Array_Length_ReturnValue_2) == 0x00023C, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_Less_IntInt_ReturnValue_2) == 0x000240, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId, CallFunc_BooleanAND_ReturnValue_2) == 0x000241, "Member 'BPL_MapEncount_C_GetSymbolId::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BPL_MapEncount.BPL_MapEncount_C.GetSymbolId_Event
// 0x0210 (0x0210 - 0x0000)
struct BPL_MapEncount_C_GetSymbolId_Event final
{
public:
	int32                                         In_encount_id;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D27[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EnemyIdList;                                       // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Out_SymbolId;                                      // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Symbolindex1;                                      // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Symbolindex;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SymbolID;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyLv;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D28[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 EnemyID;                                           // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Encount_id;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventEncountData                      CallFunc_GetEvtEncountData_ReturnValue;            // 0x0050(0x0068)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D29[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2A[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2B[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2C[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2D[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2E[0x1];                                     // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2F[0x1];                                     // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyData                             CallFunc_GetEnemyBaseData_ReturnValue;             // 0x0128(0x00D8)(ConstParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D30[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapEncount_C_GetSymbolId_Event) == 0x000008, "Wrong alignment on BPL_MapEncount_C_GetSymbolId_Event");
static_assert(sizeof(BPL_MapEncount_C_GetSymbolId_Event) == 0x000210, "Wrong size on BPL_MapEncount_C_GetSymbolId_Event");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, In_encount_id) == 0x000000, "Member 'BPL_MapEncount_C_GetSymbolId_Event::In_encount_id' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, __WorldContext) == 0x000008, "Member 'BPL_MapEncount_C_GetSymbolId_Event::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, EnemyIdList) == 0x000010, "Member 'BPL_MapEncount_C_GetSymbolId_Event::EnemyIdList' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Out_SymbolId) == 0x000020, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Out_SymbolId' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Symbolindex1) == 0x000024, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Symbolindex1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Symbolindex) == 0x000028, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Symbolindex' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, SymbolID) == 0x00002C, "Member 'BPL_MapEncount_C_GetSymbolId_Event::SymbolID' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, EnemyLv) == 0x000030, "Member 'BPL_MapEncount_C_GetSymbolId_Event::EnemyLv' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, EnemyID) == 0x000038, "Member 'BPL_MapEncount_C_GetSymbolId_Event::EnemyID' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Encount_id) == 0x000048, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Encount_id' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_GetEvtEncountData_ReturnValue) == 0x000050, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_GetEvtEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C0, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Temp_bool_True_if_break_was_hit_Variable) == 0x0000E8, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Not_PreBool_ReturnValue) == 0x0000E9, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000F8, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Temp_int_Array_Index_Variable_1) == 0x0000FC, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Array_Get_Item) == 0x000100, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000104, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Not_PreBool_ReturnValue_1) == 0x000105, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_BooleanAND_ReturnValue) == 0x000106, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000108, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, Temp_int_Loop_Counter_Variable_1) == 0x000118, "Member 'BPL_MapEncount_C_GetSymbolId_Event::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Array_Get_Item_1) == 0x00011C, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Less_IntInt_ReturnValue_1) == 0x000124, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000125, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_BooleanAND_ReturnValue_1) == 0x000126, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_GetEnemyBaseData_ReturnValue) == 0x000128, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_GetEnemyBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Add_IntInt_ReturnValue_1) == 0x000200, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Greater_IntInt_ReturnValue) == 0x000204, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapEncount_C_GetSymbolId_Event, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BPL_MapEncount_C_GetSymbolId_Event::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

