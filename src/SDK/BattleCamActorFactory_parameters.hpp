#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleCamActorFactory

#include "Basic.hpp"

#include "RigRailData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleCamActorFactory.BattleCamActorFactory_C.ExecuteUbergraph_BattleCamActorFactory
// 0x0050 (0x0050 - 0x0000)
struct BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory");
static_assert(sizeof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory) == 0x000050, "Wrong size on BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, EntryPoint) == 0x000000, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, CallFunc_GetTimeSeconds_ReturnValue) == 0x000004, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, K2Node_Event_EndPlayReason) == 0x000028, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x00002C, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000030, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BattleCamActorFactory_C_ExecuteUbergraph_BattleCamActorFactory::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleCamActorFactory_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_ReceiveEndPlay");
static_assert(sizeof(BattleCamActorFactory_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleCamActorFactory_C_ReceiveEndPlay");
static_assert(offsetof(BattleCamActorFactory_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleCamActorFactory_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.SpawnRailActor
// 0x00A0 (0x00A0 - 0x0000)
struct BattleCamActorFactory_C_SpawnRailActor final
{
public:
	E_BTL_CAM_TYPE                                CamType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_TiamatHead_retValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Command_retValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Target_retValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Recam_retValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_BadStatus_retValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_BadStatus_One_retValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Command_retValue_1;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Command_retValue_2;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Summon_One_retValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_N_Command_retValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_N_Command_retValue_1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Summon_retValue;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D2[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        CallFunc_Spawn_FusionForm_retValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Result_retValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_TurnPrevEnemy_retValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Start_retValue;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_TurnPrevPlayer_Output_Get;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_SpawnRailActor) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_SpawnRailActor");
static_assert(sizeof(BattleCamActorFactory_C_SpawnRailActor) == 0x0000A0, "Wrong size on BattleCamActorFactory_C_SpawnRailActor");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CamType) == 0x000000, "Member 'BattleCamActorFactory_C_SpawnRailActor::CamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, PartyIndex) == 0x000004, "Member 'BattleCamActorFactory_C_SpawnRailActor::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_SpawnRailActor::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_TiamatHead_retValue) == 0x000010, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_TiamatHead_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Command_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Command_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Target_retValue) == 0x000020, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Target_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Recam_retValue) == 0x000028, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Recam_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_BadStatus_retValue) == 0x000030, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_BadStatus_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_BadStatus_One_retValue) == 0x000038, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_BadStatus_One_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Command_retValue_1) == 0x000040, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Command_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Command_retValue_2) == 0x000048, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Command_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Summon_One_retValue) == 0x000050, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Summon_One_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_N_Command_retValue) == 0x000058, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_N_Command_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_N_Command_retValue_1) == 0x000060, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_N_Command_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Summon_retValue) == 0x000068, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Summon_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BattleCamActorFactory_C_SpawnRailActor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_FusionForm_retValue) == 0x000078, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_FusionForm_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Result_retValue) == 0x000080, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Result_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_TurnPrevEnemy_retValue) == 0x000088, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_TurnPrevEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_Start_retValue) == 0x000090, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_Start_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActor, CallFunc_Spawn_TurnPrevPlayer_Output_Get) == 0x000098, "Member 'BattleCamActorFactory_C_SpawnRailActor::CallFunc_Spawn_TurnPrevPlayer_Output_Get' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_TurnPrevPlayer
// 0x0330 (0x0330 - 0x0000)
struct BattleCamActorFactory_C_Spawn_TurnPrevPlayer final
{
public:
	bool                                          IsPreview;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        Output_Get;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Lo_RowNamePool;                                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsIgnoreSightCheck;                             // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_ReserveDestroyCurrent;                          // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsRotateRailOffset;                             // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D4[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_DebugItemPath;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsChecked;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_RowName;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Lo_Transform;                                      // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FString                                 Lo_DataName;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSideFirstIndex_retValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D6[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_MakeName_TurnPrev_CameraNames;            // 0x00B0(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D7[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0140(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D8[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Debug_GetCameraName_CameraName;           // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D9[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DA[0x8];                                     // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0250(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSplineSight_isClear;                 // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DB[0xE];                                     // 0x02E2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_TurnPrevPlayer");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer) == 0x000330, "Wrong size on BattleCamActorFactory_C_Spawn_TurnPrevPlayer");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, IsPreview) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::IsPreview' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Output_Get) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Output_Get' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_RowNamePool) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_RowNamePool' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_IsIgnoreSightCheck) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_IsIgnoreSightCheck' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_ReserveDestroyCurrent) == 0x000021, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_ReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_IsRotateRailOffset) == 0x000022, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_IsRotateRailOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_DebugItemPath) == 0x000028, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_DebugItemPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_IsChecked) == 0x000038, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_IsChecked' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_RowName) == 0x000040, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_Transform) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_Transform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, Lo_DataName) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::Lo_DataName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_GetSideFirstIndex_retValue) == 0x000090, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_GetSideFirstIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000098, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_MakeName_TurnPrev_CameraNames) == 0x0000B0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_MakeName_TurnPrev_CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_IdentifyTransform_ReturnValue) == 0x0000C0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_GetOriginUpVec_UpVec) == 0x000100, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000140, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Conv_StringToName_ReturnValue) == 0x0001C8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_IsSameCameraName_IsSame) == 0x0001D0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Concat_StrStr_ReturnValue) == 0x0001D8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Debug_GetCameraName_CameraName) == 0x0001E8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Debug_GetCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001F8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_SetCamFactory_Factory_CastInput) == 0x000208, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Debug_IsUseDebugData_IsUse) == 0x000218, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000220, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000230, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_GetDataTableRowFromName_OutRow) == 0x000250, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002E0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_CheckSplineSight_isClear) == 0x0002E1, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_CheckSplineSight_isClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_CalcCameraTransform_ret) == 0x0002F0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_CalcCameraTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x000320, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x000324, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetMainWork
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_GetMainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     AsBPI_Battle_Main;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetMainWork) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetMainWork");
static_assert(sizeof(BattleCamActorFactory_C_GetMainWork) == 0x000030, "Wrong size on BattleCamActorFactory_C_GetMainWork");
static_assert(offsetof(BattleCamActorFactory_C_GetMainWork, AsBPI_Battle_Main) == 0x000000, "Member 'BattleCamActorFactory_C_GetMainWork::AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetMainWork, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000018, "Member 'BattleCamActorFactory_C_GetMainWork::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCamActorFactory_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetPartySystem
// 0x0010 (0x0010 - 0x0000)
struct BattleCamActorFactory_C_GetPartySystem final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetPartySystem) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetPartySystem");
static_assert(sizeof(BattleCamActorFactory_C_GetPartySystem) == 0x000010, "Wrong size on BattleCamActorFactory_C_GetPartySystem");
static_assert(offsetof(BattleCamActorFactory_C_GetPartySystem, Ret) == 0x000000, "Member 'BattleCamActorFactory_C_GetPartySystem::Ret' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_Start
// 0x04E0 (0x04E0 - 0x0000)
struct BattleCamActorFactory_C_Spawn_Start final
{
public:
	bool                                          IsPrevBattle;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DevIDOption;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        RetValue;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_DevIDOption;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsPreview;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DD[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_PrevLocation;                                   // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Lo_RowNamePool;                                    // 0x0040(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsIgnoreSightCheck;                             // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DE[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_CAMERA_SIDE_LR_TYPE>                 Lo_InvalidLRCamera;                                // 0x0058(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_DebugMenuPath;                                  // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_RowName;                                        // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsChecked;                                      // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DF[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Transform;                                      // 0x0090(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FString                                 Lo_DataName;                                       // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FString>                         CallFunc_MakeName_Start_CameraNames;               // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E0[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InvestigateSideMaxSizeFloat_Scale;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E1[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_Array_Get_Item;                           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E2[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue_1;          // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0228(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E3[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x02B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E4[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Debug_GetCameraName_CameraName;           // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E5[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E6[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0370(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E7[0x3];                                     // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_RetrieveSocketName_ret;                   // 0x0404(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveSocketName_isAllSelect;           // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSplineSight_isClear;                 // 0x040D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E8[0x2];                                     // 0x040E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailPlayInfo                       K2Node_MakeStruct_RigRailPlayInfo;                 // 0x0410(0x0034)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E9[0xB];                                     // 0x0445(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0450(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BI_GetSocketTransform_RetVal;             // 0x0480(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_Start) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_Start");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_Start) == 0x0004E0, "Wrong size on BattleCamActorFactory_C_Spawn_Start");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, IsPrevBattle) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_Start::IsPrevBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, DevIDOption) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_Start::DevIDOption' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, RetValue) == 0x000018, "Member 'BattleCamActorFactory_C_Spawn_Start::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_DevIDOption) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_DevIDOption' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_IsPreview) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_IsPreview' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_PrevLocation) == 0x000034, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_PrevLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_RowNamePool) == 0x000040, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_RowNamePool' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_IsIgnoreSightCheck) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_IsIgnoreSightCheck' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_IsReserveDestroyCurrent) == 0x000051, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_InvalidLRCamera) == 0x000058, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_InvalidLRCamera' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_DebugMenuPath) == 0x000068, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_DebugMenuPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_RowName) == 0x000078, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_IsChecked) == 0x000088, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_IsChecked' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_Transform) == 0x000090, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_Transform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Lo_DataName) == 0x0000C0, "Member 'BattleCamActorFactory_C_Spawn_Start::Lo_DataName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_SetCamFactory_Factory_CastInput) == 0x0000D0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_MakeName_Start_CameraNames) == 0x0000E0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_MakeName_Start_CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BattleCamActorFactory_C_Spawn_Start::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Clamp_ReturnValue) == 0x0000FC, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000104, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, Temp_int_Array_Index_Variable) == 0x00010C, "Member 'BattleCamActorFactory_C_Spawn_Start::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_InvestigateSideMaxSizeFloat_Scale) == 0x000110, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_InvestigateSideMaxSizeFloat_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Array_Get_Item) == 0x000118, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Location) == 0x000128, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Rotation) == 0x000134, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Scale) == 0x000140, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_GetUpVector_ReturnValue) == 0x00014C, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Location_1) == 0x000158, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Rotation_1) == 0x000164, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Scale_1) == 0x000170, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Divide_VectorFloat_ReturnValue) == 0x00017C, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Array_Length_ReturnValue_2) == 0x000188, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00018C, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, K2Node_MakeArray_Array) == 0x000190, "Member 'BattleCamActorFactory_C_Spawn_Start::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_IdentifyTransform_ReturnValue) == 0x0001A0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_IdentifyTransform_ReturnValue_1) == 0x0001D0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_IdentifyTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000200, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_FinishSpawningActor_ReturnValue) == 0x000208, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_GetOriginUpVec_UpVec) == 0x000210, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_SelectVector_ReturnValue) == 0x00021C, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000228, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_IsSameCameraName_IsSame) == 0x0002B0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Conv_StringToName_ReturnValue) == 0x0002B4, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Array_Length_ReturnValue_3) == 0x0002BC, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Concat_StrStr_ReturnValue) == 0x0002C0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Greater_IntInt_ReturnValue) == 0x0002D0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0002D8, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0002E8, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Debug_GetCameraName_CameraName) == 0x0002F8, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Debug_GetCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Debug_IsUseDebugData_IsUse) == 0x000308, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_MakeTransform_ReturnValue) == 0x000310, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000340, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000350, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000360, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_GetDataTableRowFromName_OutRow) == 0x000370, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000400, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_RetrieveSocketName_ret) == 0x000404, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_RetrieveSocketName_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_RetrieveSocketName_isAllSelect) == 0x00040C, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_RetrieveSocketName_isAllSelect' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_CheckSplineSight_isClear) == 0x00040D, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_CheckSplineSight_isClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, K2Node_MakeStruct_RigRailPlayInfo) == 0x000410, "Member 'BattleCamActorFactory_C_Spawn_Start::K2Node_MakeStruct_RigRailPlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, K2Node_SwitchEnum_CmpSuccess) == 0x000444, "Member 'BattleCamActorFactory_C_Spawn_Start::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_CalcCameraTransform_ret) == 0x000450, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_CalcCameraTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BI_GetSocketTransform_RetVal) == 0x000480, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BI_GetSocketTransform_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Location_2) == 0x0004B0, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Rotation_2) == 0x0004BC, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_BreakTransform_Scale_2) == 0x0004C8, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Start, CallFunc_Add_VectorVector_ReturnValue) == 0x0004D4, "Member 'BattleCamActorFactory_C_Spawn_Start::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetCurrentActor
// 0x0008 (0x0008 - 0x0000)
struct BattleCamActorFactory_C_GetCurrentActor final
{
public:
	class ABP_RailActor_C*                        RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetCurrentActor) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetCurrentActor");
static_assert(sizeof(BattleCamActorFactory_C_GetCurrentActor) == 0x000008, "Wrong size on BattleCamActorFactory_C_GetCurrentActor");
static_assert(offsetof(BattleCamActorFactory_C_GetCurrentActor, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_GetCurrentActor::RetValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.DestroyCurrentActor
// 0x0001 (0x0001 - 0x0000)
struct BattleCamActorFactory_C_DestroyCurrentActor final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_DestroyCurrentActor) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_DestroyCurrentActor");
static_assert(sizeof(BattleCamActorFactory_C_DestroyCurrentActor) == 0x000001, "Wrong size on BattleCamActorFactory_C_DestroyCurrentActor");
static_assert(offsetof(BattleCamActorFactory_C_DestroyCurrentActor, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BattleCamActorFactory_C_DestroyCurrentActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_Command
// 0x0BD0 (0x0BD0 - 0x0000)
struct BattleCamActorFactory_C_Spawn_Command final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBackOnly;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFrontOnly;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EA[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_SightDistance;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EB[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_AdjustedCamPos;                                 // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             Lo_AdjustedOffsetTrans;                            // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsFrontOnly;                                    // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EC[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_TargetChara;                                    // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetPartyIndex;                               // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsBackOnly;                                     // 0x0094(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsIgnoreCheckSight;                             // 0x0095(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33ED[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Lo_RowNamePool;                                    // 0x0098(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsLookatEnemyHeight;                            // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EE[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_CameraSideBF;                                   // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsPassedNotFound;                               // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsLookatEnemyLine;                              // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EF[0x5];                                     // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_DebugMenuPath;                                  // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_RowName;                                        // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_33F0[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Revise;                                         // 0x00E0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FString                                 Lo_DataName;                                       // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust; // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F1[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F2[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F3[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F4[0xC];                                     // 0x01D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_1;      // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos;            // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid;              // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F5[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsAdjustRelativeDistance_IsAdjust; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F6[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F7[0x3];                                     // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F8[0xC];                                     // 0x0294(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_2;      // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos_1;          // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid_1;            // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLookAtEnemyHeight_IsLook;               // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLookAtEnemyLine_IsLook;                 // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_RIG_RAIL_ORIGIN_TYPE                        Temp_byte_Variable;                                // 0x033F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F9[0x3];                                     // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnitSocketLocation_Locat;              // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FA[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FB[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FC[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FD[0xC];                                     // 0x03F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0400(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0460(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FE[0x8];                                     // 0x04A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x04B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0510(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0540(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_MakeName_Command_CameraNames;             // 0x0588(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0598(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FF[0x7];                                     // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x05C8(0x0010)(ReferenceParm)
	uint8                                         Pad_3400[0x8];                                     // 0x05D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue_1;          // 0x05E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue_2;          // 0x0610(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x0650(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetOriginRightVec_UpVec;                  // 0x0680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x068C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x06A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue;                // 0x06B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x06CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x06D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x06E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3401[0x3];                                     // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x06F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3402[0x3];                                     // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0704(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec_1;                   // 0x0710(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x071C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x072C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3403[0x3];                                     // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue_1;                       // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue_1;           // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3404[0x4];                                     // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0760(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0790(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3405[0x8];                                     // 0x0818(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default;                             // 0x0820(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default_1;                           // 0x0850(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3406[0x3];                                     // 0x0889(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x088C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3407[0x4];                                     // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0898(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x08A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Debug_GetCameraName_CameraName;           // 0x08C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x08D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3408[0x7];                                     // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x08E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x08F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0910(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x09A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3409[0x2];                                     // 0x09A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_2;                           // 0x09A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnitSocketLocation_Locat_1;            // 0x09AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos_2;          // 0x09B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid_2;            // 0x09C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340A[0x3];                                     // 0x09C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x09C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue_1;              // 0x09D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default_3;                           // 0x09E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0A10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340B[0x4];                                     // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath;          // 0x0A20(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_4;           // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340C[0xC];                                     // 0x0A54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default_4;                           // 0x0A60(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340D[0x3];                                     // 0x0A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_5;           // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSplineSight_isClear;                 // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340E[0x3];                                     // 0x0A99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Acos_ReturnValue_2;                       // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340F[0x3];                                     // 0x0AA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RadiansToDegrees_ReturnValue_2;           // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3410[0x3];                                     // 0x0AA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0AAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0AB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0AC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3411[0xC];                                     // 0x0AD4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0AE0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default_5;                           // 0x0B10(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_3;      // 0x0B40(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_4;      // 0x0B70(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0BA0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_Command) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_Command");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_Command) == 0x000BD0, "Wrong size on BattleCamActorFactory_C_Spawn_Command");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_Command::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, IsBackOnly) == 0x000004, "Member 'BattleCamActorFactory_C_Spawn_Command::IsBackOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, IsFrontOnly) == 0x000005, "Member 'BattleCamActorFactory_C_Spawn_Command::IsFrontOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_Command::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_SightDistance) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_SightDistance' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_AdjustedCamPos) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_AdjustedCamPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_AdjustedOffsetTrans) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_AdjustedOffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_IsFrontOnly) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_IsFrontOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_TargetChara) == 0x000088, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_TargetChara' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_TargetPartyIndex) == 0x000090, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_IsBackOnly) == 0x000094, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_IsBackOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_IsIgnoreCheckSight) == 0x000095, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_IsIgnoreCheckSight' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_RowNamePool) == 0x000098, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_RowNamePool' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_IsLookatEnemyHeight) == 0x0000A8, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_IsLookatEnemyHeight' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_CameraSideBF) == 0x0000AC, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_CameraSideBF' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_IsReserveDestroyCurrent) == 0x0000B0, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_IsPassedNotFound) == 0x0000B1, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_IsPassedNotFound' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_IsLookatEnemyLine) == 0x0000B2, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_IsLookatEnemyLine' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_DebugMenuPath) == 0x0000B8, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_DebugMenuPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_RowName) == 0x0000C8, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_Revise) == 0x0000E0, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_Revise' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Lo_DataName) == 0x000110, "Member 'BattleCamActorFactory_C_Spawn_Command::Lo_DataName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_bool_Variable) == 0x000120, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_bool_Variable_1) == 0x000121, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_bool_Variable_2) == 0x000122, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust) == 0x000123, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000128, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000138, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BI_IsHugeBattle_retValue) == 0x000140, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BI_IsHugeBattle_DevID) == 0x000144, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_InvertTransform_ReturnValue) == 0x000150, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000180, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Location) == 0x0001B0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Rotation) == 0x0001BC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Scale) == 0x0001C8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRelativeTransform_ReturnValue_1) == 0x0001E0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CalcLookAtGlobalPos_GlobalPos) == 0x000210, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CalcLookAtGlobalPos_GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CalcLookAtGlobalPos_IsValid) == 0x00021C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CalcLookAtGlobalPos_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Location_1) == 0x000220, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Rotation_1) == 0x00022C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Scale_1) == 0x000238, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000244, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000250, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Normal_ReturnValue) == 0x00025C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_VSize_ReturnValue) == 0x000268, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_VSize_ReturnValue_1) == 0x00026C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BattleDesignDebugIsAdjustRelativeDistance_IsAdjust) == 0x000270, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BattleDesignDebugIsAdjustRelativeDistance_IsAdjust' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000274, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000278, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_bool_Variable_3) == 0x000284, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Add_VectorVector_ReturnValue) == 0x000288, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeTransform_ReturnValue) == 0x0002A0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_IdentifyTransform_ReturnValue) == 0x0002D0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRelativeTransform_ReturnValue_2) == 0x000300, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRelativeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CalcLookAtGlobalPos_GlobalPos_1) == 0x000330, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CalcLookAtGlobalPos_GlobalPos_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CalcLookAtGlobalPos_IsValid_1) == 0x00033C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CalcLookAtGlobalPos_IsValid_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_IsLookAtEnemyHeight_IsLook) == 0x00033D, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_IsLookAtEnemyHeight_IsLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_IsLookAtEnemyLine_IsLook) == 0x00033E, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_IsLookAtEnemyLine_IsLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_byte_Variable) == 0x00033F, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Array_Length_ReturnValue) == 0x000340, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Greater_IntInt_ReturnValue) == 0x000344, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetActorForwardVector_ReturnValue) == 0x000348, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetUnitSocketLocation_Locat) == 0x000354, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetUnitSocketLocation_Locat' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000360, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00036C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x000378, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Normal_ReturnValue_1) == 0x000384, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Cross_VectorVector_ReturnValue) == 0x000390, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Dot_VectorVector_ReturnValue) == 0x00039C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0003A0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Conv_TextToString_ReturnValue) == 0x0003A8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0003B8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue) == 0x0003C0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Acos_ReturnValue) == 0x0003D0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0003D8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_RadiansToDegrees_ReturnValue) == 0x0003E8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0003EC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_SelectFloat_ReturnValue) == 0x0003F0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetTransform_ReturnValue) == 0x000400, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotator_ReturnValue) == 0x000430, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Location_2) == 0x00043C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Rotation_2) == 0x000448, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Scale_2) == 0x000454, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeTransform_ReturnValue_1) == 0x000460, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakRotator_Roll) == 0x000490, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakRotator_Pitch) == 0x000494, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakRotator_Yaw) == 0x000498, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotator_ReturnValue_1) == 0x00049C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0004B0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotator_ReturnValue_2) == 0x0004E0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Location_3) == 0x0004EC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Rotation_3) == 0x0004F8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Scale_3) == 0x000504, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeTransform_ReturnValue_2) == 0x000510, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeTransform_ReturnValue_3) == 0x000540, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000570, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetPartyUnit_retValue) == 0x000580, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeName_Command_CameraNames) == 0x000588, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeName_Command_CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Right_ReturnValue) == 0x000598, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Conv_StringToInt_ReturnValue) == 0x0005A8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Array_Length_ReturnValue_1) == 0x0005AC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0005B0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005C0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, K2Node_MakeArray_Array) == 0x0005C8, "Member 'BattleCamActorFactory_C_Spawn_Command::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_IdentifyTransform_ReturnValue_1) == 0x0005E0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_IdentifyTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_IdentifyTransform_ReturnValue_2) == 0x000610, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_IdentifyTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000640, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_FinishSpawningActor_ReturnValue) == 0x000648, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetOriginTransform_ret) == 0x000650, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetOriginRightVec_UpVec) == 0x000680, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetOriginRightVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Location_4) == 0x00068C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Rotation_4) == 0x000698, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BreakTransform_Scale_4) == 0x0006A4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotFromXY_ReturnValue) == 0x0006B0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotFromXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_VSize_ReturnValue_2) == 0x0006BC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetUpVector_ReturnValue) == 0x0006C0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetForwardVector_ReturnValue) == 0x0006CC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetOriginUpVec_UpVec) == 0x0006D8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotFromZX_ReturnValue) == 0x0006E4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0006F0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetForwardVector_ReturnValue_1) == 0x0006F4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BooleanOR_ReturnValue) == 0x000700, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000704, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetOriginUpVec_UpVec_1) == 0x000710, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetOriginUpVec_UpVec_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetRightVector_ReturnValue) == 0x00071C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000728, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetForwardVector_ReturnValue_2) == 0x00072C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000738, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x00073C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Acos_ReturnValue_1) == 0x000740, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Acos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_RadiansToDegrees_ReturnValue_1) == 0x000744, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_RadiansToDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000748, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_SelectFloat_ReturnValue_1) == 0x00074C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotator_ReturnValue_3) == 0x000750, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeTransform_ReturnValue_4) == 0x000760, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000790, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, K2Node_Select_Default) == 0x000820, "Member 'BattleCamActorFactory_C_Spawn_Command::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, K2Node_Select_Default_1) == 0x000850, "Member 'BattleCamActorFactory_C_Spawn_Command::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Conv_StringToName_ReturnValue) == 0x000880, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_IsSameCameraName_IsSame) == 0x000888, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_name_Variable) == 0x00088C, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000898, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0008A8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_name_Variable_1) == 0x0008B8, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Debug_GetCameraName_CameraName) == 0x0008C0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Debug_GetCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0008D0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Debug_IsUseDebugData_IsUse) == 0x0008E0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0008E8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0008F8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000908, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetDataTableRowFromName_OutRow) == 0x000910, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0009A0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, Temp_bool_Variable_4) == 0x0009A1, "Member 'BattleCamActorFactory_C_Spawn_Command::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, K2Node_Select_Default_2) == 0x0009A4, "Member 'BattleCamActorFactory_C_Spawn_Command::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetUnitSocketLocation_Locat_1) == 0x0009AC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetUnitSocketLocation_Locat_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CalcLookAtGlobalPos_GlobalPos_2) == 0x0009B8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CalcLookAtGlobalPos_GlobalPos_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CalcLookAtGlobalPos_IsValid_2) == 0x0009C4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CalcLookAtGlobalPos_IsValid_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0009C8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotFromXY_ReturnValue_1) == 0x0009D4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotFromXY_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, K2Node_Select_Default_3) == 0x0009E0, "Member 'BattleCamActorFactory_C_Spawn_Command::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_GetForwardVector_ReturnValue_3) == 0x000A10, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CalcUpVecOnlyTransform_ForDaath) == 0x000A20, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CalcUpVecOnlyTransform_ForDaath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Dot_VectorVector_ReturnValue_4) == 0x000A50, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Dot_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, K2Node_Select_Default_4) == 0x000A60, "Member 'BattleCamActorFactory_C_Spawn_Command::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Less_FloatFloat_ReturnValue) == 0x000A90, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Dot_VectorVector_ReturnValue_5) == 0x000A94, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Dot_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_CheckSplineSight_isClear) == 0x000A98, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_CheckSplineSight_isClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Acos_ReturnValue_2) == 0x000A9C, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Acos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BooleanOR_ReturnValue_1) == 0x000AA0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_RadiansToDegrees_ReturnValue_2) == 0x000AA4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_RadiansToDegrees_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_BooleanOR_ReturnValue_2) == 0x000AA8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000AAC, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_SelectFloat_ReturnValue_2) == 0x000AB0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRotator_ReturnValue_4) == 0x000AB4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000AC0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_SelectFloat_ReturnValue_3) == 0x000AC4, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeVector_ReturnValue) == 0x000AC8, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeTransform_ReturnValue_5) == 0x000AE0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, K2Node_Select_Default_5) == 0x000B10, "Member 'BattleCamActorFactory_C_Spawn_Command::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRelativeTransform_ReturnValue_3) == 0x000B40, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRelativeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_MakeRelativeTransform_ReturnValue_4) == 0x000B70, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_MakeRelativeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Command, CallFunc_SelectTransform_ReturnValue) == 0x000BA0, "Member 'BattleCamActorFactory_C_Spawn_Command::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_TurnPrevEnemy
// 0x0300 (0x0300 - 0x0000)
struct BattleCamActorFactory_C_Spawn_TurnPrevEnemy final
{
public:
	class ABP_RailActor_C*                        RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Lo_RowNamePool;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsIgnoreSightCheck;                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3412[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_DebugMenuPath;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsChecked;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3413[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_RawName;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_DataName;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSideFirstIndex_retValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3414[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_MakeName_TurnPrev_CameraNames;            // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3415[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	uint8                                         Pad_3416[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue_1;          // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3417[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Debug_GetCameraName_CameraName;           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3418[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0210(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3419[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_341A[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSplineSight_isClear;                 // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341B[0x2];                                     // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_TurnPrevEnemy");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy) == 0x000300, "Wrong size on BattleCamActorFactory_C_Spawn_TurnPrevEnemy");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, Lo_RowNamePool) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::Lo_RowNamePool' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, Lo_IsIgnoreSightCheck) == 0x000018, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::Lo_IsIgnoreSightCheck' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, Lo_IsReserveDestroyCurrent) == 0x000019, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, Lo_DebugMenuPath) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::Lo_DebugMenuPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, Lo_IsChecked) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::Lo_IsChecked' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, Lo_RawName) == 0x000038, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::Lo_RawName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, Lo_DataName) == 0x000048, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::Lo_DataName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_GetSideFirstIndex_retValue) == 0x000058, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_GetSideFirstIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_MakeName_TurnPrev_CameraNames) == 0x000070, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_MakeName_TurnPrev_CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000084, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, K2Node_MakeArray_Array) == 0x000088, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_IdentifyTransform_ReturnValue) == 0x0000A0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_IdentifyTransform_ReturnValue_1) == 0x0000D0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_IdentifyTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_FinishSpawningActor_ReturnValue) == 0x000108, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_GetOriginUpVec_UpVec) == 0x000110, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x00011C, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Conv_StringToName_ReturnValue) == 0x0001A4, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_IsSameCameraName_IsSame) == 0x0001AC, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001B0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Debug_GetCameraName_CameraName) == 0x0001C0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Debug_GetCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001D0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Debug_IsUseDebugData_IsUse) == 0x0001E0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_SetCamFactory_Factory_CastInput) == 0x0001E8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001F8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000208, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_GetDataTableRowFromName_OutRow) == 0x000210, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002A0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0002A8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_CalcCameraTransform_ret) == 0x0002C0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_CalcCameraTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_CheckSplineSight_isClear) == 0x0002F0, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_CheckSplineSight_isClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_BooleanOR_ReturnValue) == 0x0002F1, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Array_Length_ReturnValue_1) == 0x0002F4, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TurnPrevEnemy, CallFunc_Greater_IntInt_ReturnValue) == 0x0002F8, "Member 'BattleCamActorFactory_C_Spawn_TurnPrevEnemy::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.SpawnRailActorSkill
// 0x0910 (0x0910 - 0x0000)
struct BattleCamActorFactory_C_SpawnRailActorSkill final
{
public:
	int32                                         TargetPartyIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Param_Name;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ActorPartyIndex;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConsiderActorLocation;                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOverrideHokanSpeed;                              // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHokanSpeedMax;                                   // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DoNotResetUnitAveLocation;                         // 0x001F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSuccess;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsHugeBattle;                                   // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsHokanSpeedMax;                                // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsOverrideHokanSpeedQuick;                      // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCalcedBeforeVec;                              // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_BeforeTargetVec;                                // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RailOffsetOriginSocket;                         // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_OverrideSocketName;                             // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341E[0xC];                                     // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_CameraTrans;                                    // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsReversedCamera;                               // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsOverrideHokanSpeed;                           // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341F[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_CharaCameraAdjustScale;                         // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Lo_RowNamePool;                                    // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Lo_IsIgnoreSightCheck;                             // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3420[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_KindString;                                     // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsConsiderActorLocation;                        // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3421[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailPlayInfo                       Lo_RigRailPlayInfo;                                // 0x00B4(0x0034)(Edit, BlueprintVisible, NoDestructor)
	TArray<struct FCustomSplinePoint>             Lo_CamSplinePoint;                                 // 0x00E8(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_ActorPartyIndex;                                // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Lo_BattleSkillCamType;                             // 0x00FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3422[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetPartyIndex;                               // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3423[0xC];                                     // 0x0104(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_ConsideredTrans;                                // 0x0110(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FString                                 Lo_DebugRootPath;                                  // 0x0140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsChecked;                                      // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3424[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_RowName;                                        // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_CamName;                                        // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3425[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelativeCameraScale_RetVal;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3426[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3427[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3428[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BattleDesignDebugGetCutChangeDegree_Degree; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3429[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342A[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRangeSkillCamera_Native_ReturnValue;    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342B[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcSkillCameraScaleReduction_ReductionScale; // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRangeSkillCamera_Native_ReturnValue_1;  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342C[0x2];                                     // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342D[0xC];                                     // 0x0224(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcSkillCameraTrans_ReturnValue;         // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelativeCameraScale_RetVal_1;          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342E[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main_1;          // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StartBlendOverride_retValue;           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342F[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCameraStartVec_ReturnValue;           // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3430[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3431[0x6];                                     // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_1;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachToSpringArm_IsAttached;             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3432[0xD];                                     // 0x02C3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0300(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BattleDesignDebugGetAllowSameCamera_Allowed; // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3433[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPartyMaxRelativeScale_New_Ret;         // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3434[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPartyMaxRelativeScale_New_Ret_1;       // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3435[0x3];                                     // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ConsiderSkillCameraRotation_Rotation;     // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_1;                       // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3436[0x3];                                     // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x03F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_2;                       // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3437[0x2];                                     // 0x0422(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3438[0x3];                                     // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_3;                       // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_4;                       // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x045B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x045D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable_1;                              // 0x045E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x045F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main_2;          // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StartBlendOverride_retValue_1;         // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3439[0xF];                                     // 0x0471(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0480(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPartyMaxRelativeScale_New_Ret_2;       // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelativeCameraScale_RetVal_2;          // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343A[0x4];                                     // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_2;                  // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343B[0x3];                                     // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPartyMaxRelativeScale_New_Ret_3;       // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x04D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelativeCameraScale_RetVal_3;          // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_5;                       // 0x04F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343C[0x2];                                     // 0x04F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPartyMaxRelativeScale_New_Ret_4;       // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343D[0x4];                                     // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343E[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                K2Node_Select_Default;                             // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343F[0x3];                                     // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3440[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main_3;          // 0x0538(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3441[0x4];                                     // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCamera_C*                        CallFunc_BI_Get_Camera_Accessor_Camera;            // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0558(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0564(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3442[0x4];                                     // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0570(0x0010)(ReferenceParm)
	bool                                          CallFunc_CheckSplineSight_isClear;                 // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0582(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3443[0x5];                                     // 0x0583(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0588(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_3;                              // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSplineSight_isClear_1;               // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3444[0x6];                                     // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue_1;          // 0x05A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3445[0x7];                                     // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveRigRailData_IsValid;              // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3446[0xF];                                     // 0x05F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_RetrieveRigRailData_RigRailData;          // 0x0600(0x0090)(HasGetValueTypeHash)
	class FName                                   CallFunc_RetrieveSocketName_ret;                   // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveSocketName_isAllSelect;           // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3447[0x3];                                     // 0x0699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailPlayInfo                       K2Node_MakeStruct_RigRailPlayInfo;                 // 0x069C(0x0034)(NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x06D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3448[0x1];                                     // 0x0703(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0704(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3449[0x7];                                     // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BattleDesignDebugGetSkillCameraSideLR_SideStr; // 0x0720(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BattleDesignDebugGetSkillCameraSideFB_SideStr; // 0x0730(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344A[0x7];                                     // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0748(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0758(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344B[0x7];                                     // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0770(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0780(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344C[0x2];                                     // 0x0792(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344D[0x4];                                     // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x07A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x07B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344E[0x7];                                     // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main_4;          // 0x07C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344F[0x8];                                     // 0x07D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x07E0(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0818(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0824(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0830(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0850(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select_Default_4;                           // 0x085C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3450[0xC];                                     // 0x0864(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0870(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class FString>                         CallFunc_RetrieveSkillCameraName_CameraNames;      // 0x08A0(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath;          // 0x08B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default_5;                           // 0x08E0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_SpawnRailActorSkill) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_SpawnRailActorSkill");
static_assert(sizeof(BattleCamActorFactory_C_SpawnRailActorSkill) == 0x000910, "Wrong size on BattleCamActorFactory_C_SpawnRailActorSkill");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, TargetPartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Type) == 0x000004, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Type' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Param_Name) == 0x000008, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, ActorPartyIndex) == 0x000018, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::ActorPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, IsConsiderActorLocation) == 0x00001C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::IsConsiderActorLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, IsOverrideHokanSpeed) == 0x00001D, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::IsOverrideHokanSpeed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, IsHokanSpeedMax) == 0x00001E, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::IsHokanSpeedMax' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, DoNotResetUnitAveLocation) == 0x00001F, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::DoNotResetUnitAveLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, IsSuccess) == 0x000020, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::IsSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsHugeBattle) == 0x000021, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsHugeBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsHokanSpeedMax) == 0x000022, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsHokanSpeedMax' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsOverrideHokanSpeedQuick) == 0x000023, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsOverrideHokanSpeedQuick' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsCalcedBeforeVec) == 0x000024, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsCalcedBeforeVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_BeforeTargetVec) == 0x000028, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_BeforeTargetVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_RailOffsetOriginSocket) == 0x000034, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_RailOffsetOriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_OverrideSocketName) == 0x00003C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_OverrideSocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_CameraTrans) == 0x000050, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_CameraTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsReversedCamera) == 0x000080, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsReversedCamera' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsOverrideHokanSpeed) == 0x000081, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsOverrideHokanSpeed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_CharaCameraAdjustScale) == 0x000084, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_CharaCameraAdjustScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_RowNamePool) == 0x000088, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_RowNamePool' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsIgnoreSightCheck) == 0x000098, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsIgnoreSightCheck' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_KindString) == 0x0000A0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_KindString' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsConsiderActorLocation) == 0x0000B0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsConsiderActorLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_RigRailPlayInfo) == 0x0000B4, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_RigRailPlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_CamSplinePoint) == 0x0000E8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_CamSplinePoint' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_ActorPartyIndex) == 0x0000F8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_ActorPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_BattleSkillCamType) == 0x0000FC, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_BattleSkillCamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_TargetPartyIndex) == 0x000100, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_ConsideredTrans) == 0x000110, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_ConsideredTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_DebugRootPath) == 0x000140, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_DebugRootPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_IsChecked) == 0x000150, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_IsChecked' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_RowName) == 0x000158, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Lo_CamName) == 0x000168, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Lo_CamName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Contains_ReturnValue) == 0x000178, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetRelativeCameraScale_RetVal) == 0x00017C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetRelativeCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000198, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BI_IsHugeBattle_retValue) == 0x0001A8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BI_IsHugeBattle_DevID) == 0x0001AC, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Contains_ReturnValue_1) == 0x0001B0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BattleDesignDebugGetCutChangeDegree_Degree) == 0x0001B4, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BattleDesignDebugGetCutChangeDegree_Degree' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_DegCos_ReturnValue) == 0x0001B8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsValid_ReturnValue_1) == 0x0001BC, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Conv_StringToName_ReturnValue) == 0x0001C0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_SelectFloat_ReturnValue) == 0x0001C8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Contains_ReturnValue_2) == 0x0001CC, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_MakeRotator_ReturnValue) == 0x0001D0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsRangeSkillCamera_Native_ReturnValue) == 0x0001DC, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsRangeSkillCamera_Native_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_RandomFloatInRange_ReturnValue) == 0x000210, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000214, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_CalcSkillCameraScaleReduction_ReductionScale) == 0x000218, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_CalcSkillCameraScaleReduction_ReductionScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsRangeSkillCamera_Native_ReturnValue_1) == 0x00021C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsRangeSkillCamera_Native_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanAND_ReturnValue) == 0x00021D, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_SelectFloat_ReturnValue_1) == 0x000220, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_CalcSkillCameraTrans_ReturnValue) == 0x000230, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_CalcSkillCameraTrans_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetRelativeCameraScale_RetVal_1) == 0x000260, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetRelativeCameraScale_RetVal_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetMainWork_AsBPI_Battle_Main_1) == 0x000268, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetMainWork_AsBPI_Battle_Main_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BI_StartBlendOverride_retValue) == 0x000278, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BI_StartBlendOverride_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyUnit_retValue) == 0x000280, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_CalcCameraStartVec_ReturnValue) == 0x000288, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_CalcCameraStartVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Dot_VectorVector_ReturnValue) == 0x000294, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Less_FloatFloat_ReturnValue) == 0x000298, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_SelectFloat_ReturnValue_2) == 0x00029C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsValid_ReturnValue_2) == 0x0002A0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_bool_Variable) == 0x0002A1, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_SetCamFactory_Factory_CastInput) == 0x0002A8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyUnit_retValue_1) == 0x0002B8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyUnit_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_AttachToSpringArm_IsAttached) == 0x0002C0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_AttachToSpringArm_IsAttached' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanOR_ReturnValue) == 0x0002C1, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Not_PreBool_ReturnValue) == 0x0002C2, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IdentifyTransform_ReturnValue) == 0x0002D0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000300, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BattleDesignDebugGetAllowSameCamera_Allowed) == 0x000388, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BattleDesignDebugGetAllowSameCamera_Allowed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Array_Length_ReturnValue) == 0x00038C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyMaxRelativeScale_New_Ret) == 0x000390, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyMaxRelativeScale_New_Ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Greater_IntInt_ReturnValue) == 0x000394, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyMaxRelativeScale_New_Ret_1) == 0x000398, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyMaxRelativeScale_New_Ret_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsEnemy_retValue) == 0x00039C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0003A0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetOriginTransform_ret) == 0x0003B0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_ConsiderSkillCameraRotation_Rotation) == 0x0003E0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_ConsiderSkillCameraRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsEnemy_retValue_1) == 0x0003EC, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsEnemy_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_MakeTransform_ReturnValue_1) == 0x0003F0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsEnemy_retValue_2) == 0x000420, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsEnemy_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Not_PreBool_ReturnValue_1) == 0x000421, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakTransform_Location) == 0x000424, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakTransform_Rotation) == 0x000430, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakTransform_Scale) == 0x00043C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanAND_ReturnValue_1) == 0x000448, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakVector_X) == 0x00044C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakVector_Y) == 0x000450, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakVector_Z) == 0x000454, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000458, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsEnemy_retValue_3) == 0x000459, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsEnemy_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsEnemy_retValue_4) == 0x00045A, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsEnemy_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_byte_Variable) == 0x00045B, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanOR_ReturnValue_1) == 0x00045C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanAND_ReturnValue_2) == 0x00045D, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_byte_Variable_1) == 0x00045E, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanOR_ReturnValue_2) == 0x00045F, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetMainWork_AsBPI_Battle_Main_2) == 0x000460, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetMainWork_AsBPI_Battle_Main_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BI_StartBlendOverride_retValue_1) == 0x000470, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BI_StartBlendOverride_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000480, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyMaxRelativeScale_New_Ret_2) == 0x0004B0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyMaxRelativeScale_New_Ret_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_FMax_ReturnValue) == 0x0004B4, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_SelectFloat_ReturnValue_3) == 0x0004B8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetRelativeCameraScale_RetVal_2) == 0x0004BC, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetRelativeCameraScale_RetVal_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_FMax_ReturnValue_1) == 0x0004C0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyUnit_retValue_2) == 0x0004C8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyUnit_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004D0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyMaxRelativeScale_New_Ret_3) == 0x0004D4, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyMaxRelativeScale_New_Ret_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartySystem_ret) == 0x0004D8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0004E8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetRelativeCameraScale_RetVal_3) == 0x0004F0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetRelativeCameraScale_RetVal_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsValid_ReturnValue_3) == 0x0004F4, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IsEnemy_retValue_5) == 0x0004F5, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IsEnemy_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetPartyMaxRelativeScale_New_Ret_4) == 0x0004F8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetPartyMaxRelativeScale_New_Ret_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000500, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_bool_Variable_1) == 0x000510, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000518, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_Select_Default) == 0x000528, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Array_Length_ReturnValue_1) == 0x00052C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000530, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetMainWork_AsBPI_Battle_Main_3) == 0x000538, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetMainWork_AsBPI_Battle_Main_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_SelectFloat_ReturnValue_4) == 0x000548, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BI_Get_Camera_Accessor_Camera) == 0x000550, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BI_Get_Camera_Accessor_Camera' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetActorForwardVector_ReturnValue) == 0x000558, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_name_Variable) == 0x000564, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_MakeArray_Array) == 0x000570, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_CheckSplineSight_isClear) == 0x000580, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_CheckSplineSight_isClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanOR_ReturnValue_3) == 0x000581, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_bool_Variable_2) == 0x000582, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_MakeArray_Array_1) == 0x000588, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_bool_Variable_3) == 0x000598, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_CheckSplineSight_isClear_1) == 0x000599, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_CheckSplineSight_isClear_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_IdentifyTransform_ReturnValue_1) == 0x0005A0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_IdentifyTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BooleanOR_ReturnValue_4) == 0x0005D0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0005D8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_FinishSpawningActor_ReturnValue) == 0x0005E0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0005E8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_RetrieveRigRailData_IsValid) == 0x0005F0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_RetrieveRigRailData_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_RetrieveRigRailData_RigRailData) == 0x000600, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_RetrieveRigRailData_RigRailData' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_RetrieveSocketName_ret) == 0x000690, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_RetrieveSocketName_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_RetrieveSocketName_isAllSelect) == 0x000698, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_RetrieveSocketName_isAllSelect' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_MakeStruct_RigRailPlayInfo) == 0x00069C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_MakeStruct_RigRailPlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_ComposeTransforms_ReturnValue) == 0x0006D0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000700, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_SwitchEnum_CmpSuccess) == 0x000701, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Not_PreBool_ReturnValue_3) == 0x000702, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetOriginUpVec_UpVec) == 0x000704, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000710, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_bool_Variable_4) == 0x000718, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BattleDesignDebugGetSkillCameraSideLR_SideStr) == 0x000720, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BattleDesignDebugGetSkillCameraSideLR_SideStr' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BattleDesignDebugGetSkillCameraSideFB_SideStr) == 0x000730, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BattleDesignDebugGetSkillCameraSideFB_SideStr' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_Select_Default_1) == 0x000740, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000748, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000758, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Debug_IsUseDebugData_IsUse) == 0x000768, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000770, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000780, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_bool_Variable_5) == 0x000790, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_Select_Default_2) == 0x000791, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_SelectFloat_ReturnValue_5) == 0x000794, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000798, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0007A0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0007B0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_bool_Variable_6) == 0x0007C0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_GetMainWork_AsBPI_Battle_Main_4) == 0x0007C8, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_GetMainWork_AsBPI_Battle_Main_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BI_GetOriginTransform_retValue) == 0x0007E0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, Temp_name_Variable_1) == 0x000810, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakTransform_Location_1) == 0x000818, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakTransform_Rotation_1) == 0x000824, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakTransform_Scale_1) == 0x000830, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakRotator_Roll) == 0x00083C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakRotator_Pitch) == 0x000840, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_BreakRotator_Yaw) == 0x000844, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_Select_Default_3) == 0x000848, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_MakeRotator_ReturnValue_1) == 0x000850, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_Select_Default_4) == 0x00085C, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_MakeTransform_ReturnValue_2) == 0x000870, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_RetrieveSkillCameraName_CameraNames) == 0x0008A0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_RetrieveSkillCameraName_CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, CallFunc_CalcUpVecOnlyTransform_ForDaath) == 0x0008B0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::CallFunc_CalcUpVecOnlyTransform_ForDaath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorSkill, K2Node_Select_Default_5) == 0x0008E0, "Member 'BattleCamActorFactory_C_SpawnRailActorSkill::K2Node_Select_Default_5' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_Result
// 0x03A0 (0x03A0 - 0x0000)
struct BattleCamActorFactory_C_Spawn_Result final
{
public:
	class ABP_RailActor_C*                        RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Player;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_DebugMenuPath;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_RowName;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Lo_Revise;                                         // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FString                                 Lo_DataName;                                       // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3451[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	uint8                                         Pad_3452[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3453[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3454[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Debug_GetCameraName_CameraName;           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3455[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3456[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0130(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3457[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetMainInterface_AsBPI_Main_Interface;    // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag_ReturnValue;      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3458[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailPlayInfo                       K2Node_MakeStruct_RigRailPlayInfo;                 // 0x01DC(0x0034)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3459[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345A[0x8];                                     // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath;          // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default;                             // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSplineSight_isClear;                 // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_Result) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_Result");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_Result) == 0x0003A0, "Wrong size on BattleCamActorFactory_C_Spawn_Result");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_Result::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, Lo_Player) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_Result::Lo_Player' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, Lo_DebugMenuPath) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_Result::Lo_DebugMenuPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, Lo_RowName) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_Result::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, Lo_Revise) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_Result::Lo_Revise' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, Lo_DataName) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_Result::Lo_DataName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, Temp_bool_Variable) == 0x000070, "Member 'BattleCamActorFactory_C_Spawn_Result::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, K2Node_MakeArray_Array) == 0x000078, "Member 'BattleCamActorFactory_C_Spawn_Result::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_IdentifyTransform_ReturnValue) == 0x000090, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D0, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D8, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_GetOriginUpVec_UpVec) == 0x0000E0, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_Conv_StringToName_ReturnValue) == 0x0000EC, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F8, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_IsSameCameraName_IsSame) == 0x000108, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_Debug_GetCameraName_CameraName) == 0x000110, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_Debug_GetCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_Debug_IsUseDebugData_IsUse) == 0x000120, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000124, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_GetDataTableRowFromName_OutRow) == 0x000130, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001C0, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_GetMainInterface_AsBPI_Main_Interface) == 0x0001C8, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_GetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BI_CheckBattleDebugFlag_ReturnValue) == 0x0001D8, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BI_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, K2Node_MakeStruct_RigRailPlayInfo) == 0x0001DC, "Member 'BattleCamActorFactory_C_Spawn_Result::K2Node_MakeStruct_RigRailPlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_Not_PreBool_ReturnValue) == 0x000210, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakTransform_Location) == 0x000214, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakTransform_Rotation) == 0x000220, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakTransform_Scale) == 0x00022C, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_GetPartyUnit_retValue) == 0x000238, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakVector_X) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakVector_Y) == 0x000244, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakVector_Z) == 0x000248, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_MakeVector_ReturnValue) == 0x00024C, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_MakeTransform_ReturnValue) == 0x000260, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_SetCamFactory_Factory_CastInput) == 0x000290, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0002A0, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakRotator_Roll) == 0x0002AC, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakRotator_Pitch) == 0x0002B0, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_BreakRotator_Yaw) == 0x0002B4, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002B8, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_MakeRotator_ReturnValue) == 0x0002C4, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_MakeTransform_ReturnValue_1) == 0x0002D0, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_MakeTransform_ReturnValue_2) == 0x000300, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_CalcUpVecOnlyTransform_ForDaath) == 0x000330, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_CalcUpVecOnlyTransform_ForDaath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, K2Node_Select_Default) == 0x000360, "Member 'BattleCamActorFactory_C_Spawn_Result::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Result, CallFunc_CheckSplineSight_isClear) == 0x000390, "Member 'BattleCamActorFactory_C_Spawn_Result::CallFunc_CheckSplineSight_isClear' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.SpawnRailActorPrevBattle
// 0x0080 (0x0080 - 0x0000)
struct BattleCamActorFactory_C_SpawnRailActorPrevBattle final
{
public:
	E_BTL_CAM_TYPE                                CamType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345B[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OriginTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>> InUnitList;                                        // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FTransform>                     InUnitTrans;                                       // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DevIDOption;                                       // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        RetValue;                                          // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_Spawn_Start_retValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_SpawnRailActorPrevBattle) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_SpawnRailActorPrevBattle");
static_assert(sizeof(BattleCamActorFactory_C_SpawnRailActorPrevBattle) == 0x000080, "Wrong size on BattleCamActorFactory_C_SpawnRailActorPrevBattle");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorPrevBattle, CamType) == 0x000000, "Member 'BattleCamActorFactory_C_SpawnRailActorPrevBattle::CamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorPrevBattle, OriginTransform) == 0x000010, "Member 'BattleCamActorFactory_C_SpawnRailActorPrevBattle::OriginTransform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorPrevBattle, InUnitList) == 0x000040, "Member 'BattleCamActorFactory_C_SpawnRailActorPrevBattle::InUnitList' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorPrevBattle, InUnitTrans) == 0x000050, "Member 'BattleCamActorFactory_C_SpawnRailActorPrevBattle::InUnitTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorPrevBattle, DevIDOption) == 0x000060, "Member 'BattleCamActorFactory_C_SpawnRailActorPrevBattle::DevIDOption' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorPrevBattle, RetValue) == 0x000070, "Member 'BattleCamActorFactory_C_SpawnRailActorPrevBattle::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SpawnRailActorPrevBattle, CallFunc_Spawn_Start_retValue) == 0x000078, "Member 'BattleCamActorFactory_C_SpawnRailActorPrevBattle::CallFunc_Spawn_Start_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_Target
// 0x0690 (0x0690 - 0x0000)
struct BattleCamActorFactory_C_Spawn_Target final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsSelfSide;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_InfoFovy;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetOffset;                                   // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345E[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_CameraTrans;                                    // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           Lo_TargetChara;                                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RIG_RAIL_ORIGIN_TYPE                        Lo_OriginType;                                     // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345F[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_OriginTargetSocketName;                         // 0x006C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3460[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_OffsetTrans;                                    // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_SortedCamSize;                                  // 0x00B0(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_CamSize;                                        // 0x00C0(0x0010)(Edit, BlueprintVisible)
	TMap<class FString, int32>                    Lo_SizeTable;                                      // 0x00D0(0x0050)(Edit, BlueprintVisible)
	bool                                          Lo_IsPartyCenter;                                  // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3461[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_CamName;                                        // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Lo_TargetType;                                     // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3462[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetPartyIndex;                               // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsAllSelect;                                    // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3463[0x6];                                     // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_DebutMenuPath;                                  // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   Lo_SocketName;                                     // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3464[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    K2Node_MakeVariable_MakeVariableOutput;            // 0x0168(0x0050)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcTargetRotation_SelfOne_ImmidiateYaw;  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcTargetRotation_SelfOne_AfterYaw;      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcTargetRotation_SelfOne_Pitch;         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfIntArray_IndexOfMinValue;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfIntArray_MinValue;                   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3465[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3466[0x3];                                     // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3467[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x02B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3468[0x3];                                     // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x02F0(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3469[0x3];                                     // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0388(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346A[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0396(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0397(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x039B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x039E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x039F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346B[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346C[0x8];                                     // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346D[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_RetrieveSocketName_ret;                   // 0x03F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveSocketName_isAllSelect;           // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType_1;        // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346E[0x2];                                     // 0x03FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346F[0x4];                                     // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0450(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0480(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3470[0x7];                                     // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Debug_GetCameraName_CameraName;           // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3471[0x7];                                     // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Debug_GetCameraName_CameraName_1;         // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0558(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse_1;             // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3472[0x7];                                     // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Debug_GetCameraName_CameraName_2;         // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse_2;             // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3473[0x7];                                     // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Debug_GetCameraName_CameraName_3;         // 0x05C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x05D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse_3;             // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3474[0x7];                                     // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x05F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0600(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3475[0x4];                                     // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Debug_GetCameraName_CameraName_4;         // 0x0618(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3476[0x3];                                     // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse_4;             // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3477[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_5;               // 0x0638(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRigRailPlayInfo                       K2Node_MakeStruct_RigRailPlayInfo;                 // 0x0648(0x0034)(NoDestructor)
	uint8                                         Pad_3478[0x4];                                     // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0680(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_Target) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_Target");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_Target) == 0x000690, "Wrong size on BattleCamActorFactory_C_Spawn_Target");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_Target::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_Target::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_IsSelfSide) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_IsSelfSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_InfoFovy) == 0x000014, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_InfoFovy' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_TargetOffset) == 0x000018, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_TargetOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_CameraTrans) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_CameraTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_TargetChara) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_TargetChara' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_OriginType) == 0x000068, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_OriginType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_OriginTargetSocketName) == 0x00006C, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_OriginTargetSocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_OffsetTrans) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_SortedCamSize) == 0x0000B0, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_SortedCamSize' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_CamSize) == 0x0000C0, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_CamSize' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_SizeTable) == 0x0000D0, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_SizeTable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_IsPartyCenter) == 0x000120, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_IsPartyCenter' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_CamName) == 0x000128, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_CamName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_TargetType) == 0x000138, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_TargetPartyIndex) == 0x00013C, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_IsAllSelect) == 0x000140, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_IsAllSelect' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_IsReserveDestroyCurrent) == 0x000141, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_DebutMenuPath) == 0x000148, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_DebutMenuPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Lo_SocketName) == 0x000158, "Member 'BattleCamActorFactory_C_Spawn_Target::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Temp_byte_Variable) == 0x000160, "Member 'BattleCamActorFactory_C_Spawn_Target::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, K2Node_MakeVariable_MakeVariableOutput) == 0x000168, "Member 'BattleCamActorFactory_C_Spawn_Target::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Conv_StringToName_ReturnValue) == 0x0001B8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Temp_int_Array_Index_Variable) == 0x0001C0, "Member 'BattleCamActorFactory_C_Spawn_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_CalcTargetRotation_SelfOne_ImmidiateYaw) == 0x0001C4, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_CalcTargetRotation_SelfOne_ImmidiateYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_CalcTargetRotation_SelfOne_AfterYaw) == 0x0001C8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_CalcTargetRotation_SelfOne_AfterYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_CalcTargetRotation_SelfOne_Pitch) == 0x0001CC, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_CalcTargetRotation_SelfOne_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001D0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_MakeRotator_ReturnValue) == 0x0001D4, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_ComposeTransforms_ReturnValue) == 0x000210, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Array_Length_ReturnValue) == 0x000248, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Divide_IntInt_ReturnValue) == 0x00024C, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_MinOfIntArray_IndexOfMinValue) == 0x000250, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_MinOfIntArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_MinOfIntArray_MinValue) == 0x000254, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_MinOfIntArray_MinValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, K2Node_SwitchInteger_CmpSuccess) == 0x000258, "Member 'BattleCamActorFactory_C_Spawn_Target::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Array_Add_ReturnValue) == 0x00025C, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000260, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Greater_IntInt_ReturnValue) == 0x000264, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue) == 0x000268, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000278, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000288, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_GetPartySystem_ret) == 0x000298, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BI_GetSide_side) == 0x0002A8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BI_GetSideActList_retValue) == 0x0002B0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Array_Get_Item) == 0x0002C0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Array_Length_ReturnValue_2) == 0x0002C4, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_GetPartyUnit_retValue) == 0x0002C8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Conv_TextToString_ReturnValue) == 0x0002D0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0002E0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Map_Find_Value) == 0x0002E8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Map_Find_ReturnValue) == 0x0002EC, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002F0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000380, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Array_Add_ReturnValue_1) == 0x000384, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Temp_int_Variable) == 0x000388, "Member 'BattleCamActorFactory_C_Spawn_Target::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00038C, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Array_Add_ReturnValue_2) == 0x000390, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000394, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000395, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000396, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000397, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000398, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue) == 0x000399, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue_1) == 0x00039A, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue_2) == 0x00039B, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue_3) == 0x00039C, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue_4) == 0x00039D, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue_5) == 0x00039E, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue_6) == 0x00039F, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BooleanOR_ReturnValue_7) == 0x0003A0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_SetCamFactory_Factory_CastInput) == 0x0003A8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_CalcCameraTransform_ret) == 0x0003C0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_CalcCameraTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_GetCurrentTargetType_TargetType) == 0x0003F0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_RetrieveSocketName_ret) == 0x0003F4, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_RetrieveSocketName_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_RetrieveSocketName_isAllSelect) == 0x0003FC, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_RetrieveSocketName_isAllSelect' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_GetCurrentTargetType_TargetType_1) == 0x0003FD, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_GetCurrentTargetType_TargetType_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_IdentifyTransform_ReturnValue) == 0x000400, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000430, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_FinishSpawningActor_ReturnValue) == 0x000438, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_GetOriginUpVec_UpVec) == 0x000440, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_MakeTransform_ReturnValue_1) == 0x000450, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000480, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_IsSameCameraName_IsSame) == 0x000508, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000510, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_GetCameraName_CameraName) == 0x000520, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_GetCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000530, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_IsUseDebugData_IsUse) == 0x000540, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_GetCameraName_CameraName_1) == 0x000548, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_GetCameraName_CameraName_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_SelectString_ReturnValue) == 0x000558, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_SelectString_ReturnValue_1) == 0x000568, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_IsUseDebugData_IsUse_1) == 0x000578, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_IsUseDebugData_IsUse_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_SelectString_ReturnValue_2) == 0x000580, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000590, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_GetCameraName_CameraName_2) == 0x0005A0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_GetCameraName_CameraName_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0005B0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_IsUseDebugData_IsUse_2) == 0x0005C0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_IsUseDebugData_IsUse_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_GetCameraName_CameraName_3) == 0x0005C8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_GetCameraName_CameraName_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_SelectString_ReturnValue_3) == 0x0005D8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_IsUseDebugData_IsUse_3) == 0x0005E8, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_IsUseDebugData_IsUse_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_SelectString_ReturnValue_4) == 0x0005F0, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000600, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, Temp_int_Loop_Counter_Variable) == 0x000610, "Member 'BattleCamActorFactory_C_Spawn_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_GetCameraName_CameraName_4) == 0x000618, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_GetCameraName_CameraName_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000628, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Add_IntInt_ReturnValue) == 0x00062C, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_Debug_IsUseDebugData_IsUse_4) == 0x000630, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_Debug_IsUseDebugData_IsUse_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, CallFunc_SelectString_ReturnValue_5) == 0x000638, "Member 'BattleCamActorFactory_C_Spawn_Target::CallFunc_SelectString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, K2Node_MakeStruct_RigRailPlayInfo) == 0x000648, "Member 'BattleCamActorFactory_C_Spawn_Target::K2Node_MakeStruct_RigRailPlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Target, K2Node_Select_Default) == 0x000680, "Member 'BattleCamActorFactory_C_Spawn_Target::K2Node_Select_Default' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.InvestigateSideMaxSize
// 0x00F8 (0x00F8 - 0x0000)
struct BattleCamActorFactory_C_InvestigateSideMaxSize final
{
public:
	bool                                          IsPlayerSide;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3479[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SizeString;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_CategoryString;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_Size;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347A[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_retValue;                       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347B[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConstGetEnemyLoopMax_retValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConstGetPartyLoopMax_retValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConstGetEnemyStart_retValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConstGetPartyStart_retValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347D[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcMaxSize_calced_size;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347E[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_CalcMaxSize_Category;                     // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcMaxSize_IsValid;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347F[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3480[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_Array_Get_Item;                           // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCharaParamComponent*                   CallFunc_BI_GetCharaParamComponent_Comp;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3481[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcMaxSize_calced_size_1;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3482[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_CalcMaxSize_Category_1;                   // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcMaxSize_IsValid_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_InvestigateSideMaxSize) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_InvestigateSideMaxSize");
static_assert(sizeof(BattleCamActorFactory_C_InvestigateSideMaxSize) == 0x0000F8, "Wrong size on BattleCamActorFactory_C_InvestigateSideMaxSize");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, IsPlayerSide) == 0x000000, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::IsPlayerSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, SizeString) == 0x000008, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::SizeString' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, Lo_CategoryString) == 0x000018, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::Lo_CategoryString' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, Lo_Size) == 0x000028, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::Lo_Size' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, Temp_int_Variable) == 0x000030, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_IsInField_retValue) == 0x000034, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_IsInField_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_GetPartyUnit_retValue) == 0x000038, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_ConstGetEnemyLoopMax_retValue) == 0x000058, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_ConstGetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_ConstGetPartyLoopMax_retValue) == 0x00005C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_ConstGetPartyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_ConstGetEnemyStart_retValue) == 0x000060, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_ConstGetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_SelectInt_ReturnValue) == 0x000064, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_ConstGetPartyStart_retValue) == 0x000068, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_ConstGetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_SelectInt_ReturnValue_1) == 0x000070, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_CalcMaxSize_calced_size) == 0x000078, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_CalcMaxSize_calced_size' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_CalcMaxSize_Category) == 0x000080, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_CalcMaxSize_Category' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_CalcMaxSize_IsValid) == 0x000090, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_CalcMaxSize_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_BI_GetCharaParamComponent_Comp) == 0x0000B0, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_BI_GetCharaParamComponent_Comp' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000C0, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_CalcMaxSize_calced_size_1) == 0x0000D0, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_CalcMaxSize_calced_size_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_CalcMaxSize_Category_1) == 0x0000D8, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_CalcMaxSize_Category_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_CalcMaxSize_IsValid_1) == 0x0000E8, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_CalcMaxSize_IsValid_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E9, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_BooleanXOR_ReturnValue) == 0x0000EA, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EB, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSize, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSize::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_Recam
// 0x0190 (0x0190 - 0x0000)
struct BattleCamActorFactory_C_Spawn_Recam final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3483[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RowName;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3484[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3485[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3486[0x8];                                     // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_Recam) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_Recam");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_Recam) == 0x000190, "Wrong size on BattleCamActorFactory_C_Spawn_Recam");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_Recam::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_Recam::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, Lo_RowName) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_Recam::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_SetCamFactory_Factory_CastInput) == 0x000018, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_GetOriginUpVec_UpVec) == 0x000028, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000138, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000148, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Recam, CallFunc_CalcCameraTransform_ret) == 0x000160, "Member 'BattleCamActorFactory_C_Spawn_Recam::CallFunc_CalcCameraTransform_ret' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcMaxSize
// 0x0068 (0x0068 - 0x0000)
struct BattleCamActorFactory_C_CalcMaxSize final
{
public:
	int32                                         Current_size;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3487[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Cam_category;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Calced_size;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3488[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Category;                                          // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3489[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_CategoryString;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_Size;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348A[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CalcMaxSize) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_CalcMaxSize");
static_assert(sizeof(BattleCamActorFactory_C_CalcMaxSize) == 0x000068, "Wrong size on BattleCamActorFactory_C_CalcMaxSize");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, Current_size) == 0x000000, "Member 'BattleCamActorFactory_C_CalcMaxSize::Current_size' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, Cam_category) == 0x000008, "Member 'BattleCamActorFactory_C_CalcMaxSize::Cam_category' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, Calced_size) == 0x000018, "Member 'BattleCamActorFactory_C_CalcMaxSize::Calced_size' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, Category) == 0x000020, "Member 'BattleCamActorFactory_C_CalcMaxSize::Category' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, IsValid) == 0x000030, "Member 'BattleCamActorFactory_C_CalcMaxSize::IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, Lo_CategoryString) == 0x000038, "Member 'BattleCamActorFactory_C_CalcMaxSize::Lo_CategoryString' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, Lo_Size) == 0x000048, "Member 'BattleCamActorFactory_C_CalcMaxSize::Lo_Size' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00004C, "Member 'BattleCamActorFactory_C_CalcMaxSize::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, CallFunc_SelectString_ReturnValue) == 0x000050, "Member 'BattleCamActorFactory_C_CalcMaxSize::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, K2Node_SwitchString_CmpSuccess) == 0x000060, "Member 'BattleCamActorFactory_C_CalcMaxSize::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000061, "Member 'BattleCamActorFactory_C_CalcMaxSize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000062, "Member 'BattleCamActorFactory_C_CalcMaxSize::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000063, "Member 'BattleCamActorFactory_C_CalcMaxSize::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000064, "Member 'BattleCamActorFactory_C_CalcMaxSize::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcMaxSize, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000065, "Member 'BattleCamActorFactory_C_CalcMaxSize::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Debug_IsUseDebugData
// 0x0018 (0x0018 - 0x0000)
struct BattleCamActorFactory_C_Debug_IsUseDebugData final
{
public:
	class FString                                 PathRoot;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsUse;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsUseDebugData_IsUse;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Debug_IsUseDebugData) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_Debug_IsUseDebugData");
static_assert(sizeof(BattleCamActorFactory_C_Debug_IsUseDebugData) == 0x000018, "Wrong size on BattleCamActorFactory_C_Debug_IsUseDebugData");
static_assert(offsetof(BattleCamActorFactory_C_Debug_IsUseDebugData, PathRoot) == 0x000000, "Member 'BattleCamActorFactory_C_Debug_IsUseDebugData::PathRoot' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Debug_IsUseDebugData, IsUse) == 0x000010, "Member 'BattleCamActorFactory_C_Debug_IsUseDebugData::IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Debug_IsUseDebugData, CallFunc_BattleDesignDebugIsUseDebugData_IsUse) == 0x000011, "Member 'BattleCamActorFactory_C_Debug_IsUseDebugData::CallFunc_BattleDesignDebugIsUseDebugData_IsUse' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Debug_GetCameraName
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_Debug_GetCameraName final
{
public:
	class FString                                 PathRoot;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CameraName;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BattleDesignDebugGetCameraName_IsCameraName; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_Debug_GetCameraName) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_Debug_GetCameraName");
static_assert(sizeof(BattleCamActorFactory_C_Debug_GetCameraName) == 0x000030, "Wrong size on BattleCamActorFactory_C_Debug_GetCameraName");
static_assert(offsetof(BattleCamActorFactory_C_Debug_GetCameraName, PathRoot) == 0x000000, "Member 'BattleCamActorFactory_C_Debug_GetCameraName::PathRoot' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Debug_GetCameraName, CameraName) == 0x000010, "Member 'BattleCamActorFactory_C_Debug_GetCameraName::CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Debug_GetCameraName, CallFunc_BattleDesignDebugGetCameraName_IsCameraName) == 0x000020, "Member 'BattleCamActorFactory_C_Debug_GetCameraName::CallFunc_BattleDesignDebugGetCameraName_IsCameraName' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ToCamera
// 0x0038 (0x0038 - 0x0000)
struct BattleCamActorFactory_C_ToCamera final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReversed;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEnableCharaDitherCtrl;                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348B[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTargetLocation_RetVal;                // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetRailCam_retValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_ToCamera) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_ToCamera");
static_assert(sizeof(BattleCamActorFactory_C_ToCamera) == 0x000038, "Wrong size on BattleCamActorFactory_C_ToCamera");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_ToCamera::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera, IsReversed) == 0x000004, "Member 'BattleCamActorFactory_C_ToCamera::IsReversed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera, IsEnableCharaDitherCtrl) == 0x000005, "Member 'BattleCamActorFactory_C_ToCamera::IsEnableCharaDitherCtrl' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera, CallFunc_GetPartyUnit_retValue) == 0x000008, "Member 'BattleCamActorFactory_C_ToCamera::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera, CallFunc_CalcTargetLocation_RetVal) == 0x000010, "Member 'BattleCamActorFactory_C_ToCamera::CallFunc_CalcTargetLocation_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000020, "Member 'BattleCamActorFactory_C_ToCamera::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera, CallFunc_BI_SetRailCam_retValue) == 0x000030, "Member 'BattleCamActorFactory_C_ToCamera::CallFunc_BI_SetRailCam_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcCameraTransform
// 0x03B0 (0x03B0 - 0x0000)
struct BattleCamActorFactory_C_CalcCameraTransform final
{
public:
	E_RIG_RAIL_ORIGIN_TYPE                        RigRailOrigin;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OriginSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsParty;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348E[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Ret;                                               // 0x0020(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FRotator                               Lo_Rotation;                                       // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_Location;                                       // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348F[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Ret;                                            // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3490[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3491[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3492[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3493[0xF];                                     // 0x01E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath;          // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0220(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3494[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_1;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3495[0xC];                                     // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue_1;            // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3496[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default;                             // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CalcCameraTransform) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcCameraTransform");
static_assert(sizeof(BattleCamActorFactory_C_CalcCameraTransform) == 0x0003B0, "Wrong size on BattleCamActorFactory_C_CalcCameraTransform");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, RigRailOrigin) == 0x000000, "Member 'BattleCamActorFactory_C_CalcCameraTransform::RigRailOrigin' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, PartyIndex) == 0x000004, "Member 'BattleCamActorFactory_C_CalcCameraTransform::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, OriginSocket) == 0x000008, "Member 'BattleCamActorFactory_C_CalcCameraTransform::OriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, IsParty) == 0x000010, "Member 'BattleCamActorFactory_C_CalcCameraTransform::IsParty' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, Ret) == 0x000020, "Member 'BattleCamActorFactory_C_CalcCameraTransform::Ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, Lo_Rotation) == 0x000050, "Member 'BattleCamActorFactory_C_CalcCameraTransform::Lo_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, Lo_Location) == 0x00005C, "Member 'BattleCamActorFactory_C_CalcCameraTransform::Lo_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, Lo_Ret) == 0x000070, "Member 'BattleCamActorFactory_C_CalcCameraTransform::Lo_Ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_GetPartyUnit_retValue) == 0x0000A0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BattleCamActorFactory_C_CalcCameraTransform::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_GetSocketTransform_retValue) == 0x0000B0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_GetSocketTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Location) == 0x000110, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Rotation) == 0x00011C, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Location_1) == 0x000134, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Rotation_1) == 0x000140, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Scale_1) == 0x00014C, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, Temp_bool_Variable) == 0x000158, "Member 'BattleCamActorFactory_C_CalcCameraTransform::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, Temp_int_Array_Index_Variable) == 0x000190, "Member 'BattleCamActorFactory_C_CalcCameraTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, Temp_int_Loop_Counter_Variable) == 0x000194, "Member 'BattleCamActorFactory_C_CalcCameraTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000198, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x0001A0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_GetPartySystem_ret) == 0x0001D0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BI_GetSide_side) == 0x0001E0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_CalcUpVecOnlyTransform_ForDaath) == 0x0001F0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_CalcUpVecOnlyTransform_ForDaath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BI_GetSideActList_retValue) == 0x000220, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Array_Get_Item) == 0x000230, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_GetPartyUnit_retValue_1) == 0x000238, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_GetPartyUnit_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Array_Length_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_GetSocketTransform_retValue_1) == 0x000250, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_GetSocketTransform_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Less_IntInt_ReturnValue) == 0x000280, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Location_2) == 0x000284, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Rotation_2) == 0x000290, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Scale_2) == 0x00029C, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0002A8, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0002B4, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Array_Length_ReturnValue_1) == 0x0002C0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Max_ReturnValue) == 0x0002C4, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Location_3) == 0x0002C8, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Rotation_3) == 0x0002D4, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakTransform_Scale_3) == 0x0002E0, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_Divide_VectorInt_ReturnValue) == 0x0002EC, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakRotator_Roll) == 0x0002F8, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakRotator_Pitch) == 0x0002FC, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BreakRotator_Yaw) == 0x000300, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_MakeRotator_ReturnValue) == 0x000304, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000310, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue_2) == 0x000320, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, CallFunc_BI_GetOriginTransform_retValue) == 0x000350, "Member 'BattleCamActorFactory_C_CalcCameraTransform::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraTransform, K2Node_Select_Default) == 0x000380, "Member 'BattleCamActorFactory_C_CalcCameraTransform::K2Node_Select_Default' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.RetrieveSocketName
// 0x0044 (0x0044 - 0x0000)
struct BattleCamActorFactory_C_RetrieveSocketName final
{
public:
	E_SKILL_TARGET                                Target;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3497[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Default;                                           // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Ret;                                               // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAllSelect;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3498[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_RetrieveSocketName) == 0x000004, "Wrong alignment on BattleCamActorFactory_C_RetrieveSocketName");
static_assert(sizeof(BattleCamActorFactory_C_RetrieveSocketName) == 0x000044, "Wrong size on BattleCamActorFactory_C_RetrieveSocketName");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Target) == 0x000000, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Target' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Default) == 0x000004, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Ret) == 0x00000C, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, IsAllSelect) == 0x000014, "Member 'BattleCamActorFactory_C_RetrieveSocketName::IsAllSelect' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_byte_Variable) == 0x000015, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable) == 0x000016, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_1) == 0x000017, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_2) == 0x000018, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_3) == 0x000019, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_4) == 0x00001A, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_5) == 0x00001B, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_6) == 0x00001C, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_7) == 0x00001D, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_8) == 0x00001E, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_9) == 0x00001F, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_bool_Variable_10) == 0x000020, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, Temp_byte_Variable_1) == 0x000021, "Member 'BattleCamActorFactory_C_RetrieveSocketName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, K2Node_Select_Default) == 0x000022, "Member 'BattleCamActorFactory_C_RetrieveSocketName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, CallFunc_MakeLiteralName_ReturnValue) == 0x000024, "Member 'BattleCamActorFactory_C_RetrieveSocketName::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, CallFunc_MakeLiteralName_ReturnValue_1) == 0x00002C, "Member 'BattleCamActorFactory_C_RetrieveSocketName::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000034, "Member 'BattleCamActorFactory_C_RetrieveSocketName::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSocketName, K2Node_Select_Default_1) == 0x00003C, "Member 'BattleCamActorFactory_C_RetrieveSocketName::K2Node_Select_Default_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.RetrieveGlobalSocketLocation
// 0x0068 (0x0068 - 0x0000)
struct BattleCamActorFactory_C_RetrieveGlobalSocketLocation final
{
public:
	class FName                                   CamCategoryName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GlobalLocation;                                    // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3499[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_SocketName;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsValid;                                        // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_Location;                                       // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349B[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos_1;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid_1;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349C[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos_2;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid_2;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation) == 0x000004, "Wrong alignment on BattleCamActorFactory_C_RetrieveGlobalSocketLocation");
static_assert(sizeof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation) == 0x000068, "Wrong size on BattleCamActorFactory_C_RetrieveGlobalSocketLocation");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, CamCategoryName) == 0x000000, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::CamCategoryName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, SocketName) == 0x000008, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, GlobalLocation) == 0x000010, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::GlobalLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, IsValid) == 0x00001C, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, Lo_SocketName) == 0x000020, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, Lo_IsValid) == 0x000028, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::Lo_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, Lo_Location) == 0x00002C, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::Lo_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, CallFunc_CalcLookAtGlobalPos_GlobalPos) == 0x000038, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::CallFunc_CalcLookAtGlobalPos_GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, CallFunc_CalcLookAtGlobalPos_IsValid) == 0x000044, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::CallFunc_CalcLookAtGlobalPos_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, K2Node_SwitchName_CmpSuccess) == 0x000045, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, CallFunc_CalcLookAtGlobalPos_GlobalPos_1) == 0x000048, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::CallFunc_CalcLookAtGlobalPos_GlobalPos_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, CallFunc_CalcLookAtGlobalPos_IsValid_1) == 0x000054, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::CallFunc_CalcLookAtGlobalPos_IsValid_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, CallFunc_CalcLookAtGlobalPos_GlobalPos_2) == 0x000058, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::CallFunc_CalcLookAtGlobalPos_GlobalPos_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveGlobalSocketLocation, CallFunc_CalcLookAtGlobalPos_IsValid_2) == 0x000064, "Member 'BattleCamActorFactory_C_RetrieveGlobalSocketLocation::CallFunc_CalcLookAtGlobalPos_IsValid_2' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_BadStatus
// 0x02C0 (0x02C0 - 0x0000)
struct BattleCamActorFactory_C_Spawn_BadStatus final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Lo_E_SkillTarget;                                  // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349E[0xE];                                     // 0x0012(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_CameraTransform;                                // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_RowName;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RowName_E;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RowName_P;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable_1;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349F[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A0[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_34A1[0x8];                                     // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x01A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A2[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                K2Node_Select_Default;                             // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_BadStatus) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_BadStatus");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_BadStatus) == 0x0002C0, "Wrong size on BattleCamActorFactory_C_Spawn_BadStatus");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Lo_IsReserveDestroyCurrent) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Lo_E_SkillTarget) == 0x000011, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Lo_E_SkillTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Lo_CameraTransform) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Lo_CameraTransform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Lo_RowName) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Lo_RowName_E) == 0x000058, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Lo_RowName_E' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Lo_RowName_P) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Lo_RowName_P' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Temp_byte_Variable) == 0x000068, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_IsEnemy_retValue) == 0x000069, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Temp_byte_Variable_1) == 0x00006A, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_Conv_NameToString_ReturnValue) == 0x000108, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000118, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_CalcCameraTransform_ret) == 0x000140, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_CalcCameraTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0001A0, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_MakeLiteralName_ReturnValue) == 0x000228, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_IsSameCameraName_IsSame) == 0x000230, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_GetOriginUpVec_UpVec) == 0x000234, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000250, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_IdentifyTransform_ReturnValue) == 0x000260, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000290, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_SetCamFactory_Factory_CastInput) == 0x000298, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002A8, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, Temp_bool_Variable) == 0x0002B0, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus, K2Node_Select_Default) == 0x0002B1, "Member 'BattleCamActorFactory_C_Spawn_BadStatus::K2Node_Select_Default' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_BadStatus_One
// 0x0280 (0x0280 - 0x0000)
struct BattleCamActorFactory_C_Spawn_BadStatus_One final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A4[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_RowName;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A5[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelativeCameraScale_RetVal;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A6[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A7[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A8[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0190(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A9[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_34AA[0x8];                                     // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_BadStatus_One) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_BadStatus_One");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_BadStatus_One) == 0x000280, "Wrong size on BattleCamActorFactory_C_Spawn_BadStatus_One");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, Lo_PartyIndex) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, Lo_IsReserveDestroyCurrent) == 0x000014, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, Lo_RowName) == 0x000018, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_BI_IsHugeBattle_retValue) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_BI_IsHugeBattle_DevID) == 0x000034, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_GetRelativeCameraScale_RetVal) == 0x000038, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_GetRelativeCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_IdentifyTransform_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_SetCamFactory_Factory_CastInput) == 0x000070, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_GetOriginUpVec_UpVec) == 0x000090, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000D0, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_Conv_NameToString_ReturnValue) == 0x000158, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_IsSameCameraName_IsSame) == 0x000168, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000170, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_GetDataTableRowFromName_OutRow) == 0x000190, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000220, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000228, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000238, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_BadStatus_One, CallFunc_CalcCameraTransform_ret) == 0x000250, "Member 'BattleCamActorFactory_C_Spawn_BadStatus_One::CallFunc_CalcCameraTransform_ret' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IsLookAtEnemyLine
// 0x0003 (0x0003 - 0x0000)
struct BattleCamActorFactory_C_IsLookAtEnemyLine final
{
public:
	bool                                          IsLook;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugDisableLookAtEnemyLine_DisableLook; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsLookAtEnemyLine) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_IsLookAtEnemyLine");
static_assert(sizeof(BattleCamActorFactory_C_IsLookAtEnemyLine) == 0x000003, "Wrong size on BattleCamActorFactory_C_IsLookAtEnemyLine");
static_assert(offsetof(BattleCamActorFactory_C_IsLookAtEnemyLine, IsLook) == 0x000000, "Member 'BattleCamActorFactory_C_IsLookAtEnemyLine::IsLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsLookAtEnemyLine, CallFunc_BattleDesignDebugDisableLookAtEnemyLine_DisableLook) == 0x000001, "Member 'BattleCamActorFactory_C_IsLookAtEnemyLine::CallFunc_BattleDesignDebugDisableLookAtEnemyLine_DisableLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsLookAtEnemyLine, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BattleCamActorFactory_C_IsLookAtEnemyLine::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.DecideCameraSide_BF
// 0x0040 (0x0040 - 0x0000)
struct BattleCamActorFactory_C_DecideCameraSide_BF final
{
public:
	int32                                         CameraSide;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_DebugRootKind;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CAMERA_SIDE_BF_TYPE                         Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_BF_TYPE                         Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BattleDesignDebugGetSkillCameraSideFB_SideStr; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseDebugData_IsUse;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CAMERA_SIDE_BF_TYPE                         K2Node_Select_Default_1;                           // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_DecideCameraSide_BF) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_DecideCameraSide_BF");
static_assert(sizeof(BattleCamActorFactory_C_DecideCameraSide_BF) == 0x000040, "Wrong size on BattleCamActorFactory_C_DecideCameraSide_BF");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, CameraSide) == 0x000000, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::CameraSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, Lo_DebugRootKind) == 0x000008, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::Lo_DebugRootKind' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, Temp_bool_Variable) == 0x000018, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, Temp_byte_Variable) == 0x000019, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, Temp_byte_Variable_1) == 0x00001A, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, Temp_bool_Variable_1) == 0x00001B, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, CallFunc_BattleDesignDebugGetSkillCameraSideFB_SideStr) == 0x000020, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::CallFunc_BattleDesignDebugGetSkillCameraSideFB_SideStr' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, CallFunc_Conv_StringToInt_ReturnValue) == 0x000030, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, CallFunc_BattleDesignDebugIsUseDebugData_IsUse) == 0x000034, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::CallFunc_BattleDesignDebugIsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, CallFunc_RandomBool_ReturnValue) == 0x000035, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, K2Node_Select_Default) == 0x000036, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, K2Node_Select_Default_1) == 0x000037, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_BF, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000038, "Member 'BattleCamActorFactory_C_DecideCameraSide_BF::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.DecideCameraSide_LR
// 0x0098 (0x0098 - 0x0000)
struct BattleCamActorFactory_C_DecideCameraSide_LR final
{
public:
	TArray<E_CAMERA_SIDE_LR_TYPE>                 InvalidChoice;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CameraSide;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_LR_TYPE                         ChoseType;                                         // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForceDecide;                                     // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AD[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_RootPathKind;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<E_CAMERA_SIDE_LR_TYPE>                 Lo_seed;                                           // 0x0028(0x0010)(Edit, BlueprintVisible)
	E_CAMERA_SIDE_LR_TYPE                         Temp_byte_Variable;                                // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_LR_TYPE                         Temp_byte_Variable_1;                              // 0x0039(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CAMERA_SIDE_LR_TYPE                         Temp_byte_Variable_2;                              // 0x003C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_LR_TYPE                         Temp_byte_Variable_3;                              // 0x003D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AE[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_4;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AF[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B0[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BattleDesignDebugGetSkillCameraSideLR_SideStr; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B1[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseDebugData_IsUse;    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B2[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_LR_TYPE                         CallFunc_Array_Get_Item;                           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B3[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_DecideCameraSide_LR) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_DecideCameraSide_LR");
static_assert(sizeof(BattleCamActorFactory_C_DecideCameraSide_LR) == 0x000098, "Wrong size on BattleCamActorFactory_C_DecideCameraSide_LR");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, InvalidChoice) == 0x000000, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::InvalidChoice' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CameraSide) == 0x000010, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CameraSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, ChoseType) == 0x000014, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::ChoseType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, IsForceDecide) == 0x000015, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::IsForceDecide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, Lo_RootPathKind) == 0x000018, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::Lo_RootPathKind' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, Lo_seed) == 0x000028, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::Lo_seed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, Temp_byte_Variable) == 0x000038, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, Temp_byte_Variable_1) == 0x000039, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Contains_ReturnValue) == 0x00003A, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Contains_ReturnValue_1) == 0x00003B, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, Temp_byte_Variable_2) == 0x00003C, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, Temp_byte_Variable_3) == 0x00003D, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Contains_ReturnValue_2) == 0x00003E, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Contains_ReturnValue_3) == 0x00003F, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, Temp_int_Variable) == 0x000044, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_BooleanAND_ReturnValue_1) == 0x000048, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Conv_IntToByte_ReturnValue) == 0x000049, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_BooleanAND_ReturnValue_2) == 0x00004A, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_GetValidValue_ReturnValue) == 0x00004B, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Contains_ReturnValue_4) == 0x00004C, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_MakeLiteralInt_ReturnValue) == 0x000054, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_BattleDesignDebugGetSkillCameraSideLR_SideStr) == 0x000060, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_BattleDesignDebugGetSkillCameraSideLR_SideStr' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Conv_StringToInt_ReturnValue) == 0x000074, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000078, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_GetValidValue_ReturnValue_1) == 0x000079, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_BattleDesignDebugIsUseDebugData_IsUse) == 0x00007A, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_BattleDesignDebugIsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000088, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Array_Get_Item) == 0x00008C, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_DecideCameraSide_LR, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000090, "Member 'BattleCamActorFactory_C_DecideCameraSide_LR::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.SplitString
// 0x0080 (0x0080 - 0x0000)
struct BattleCamActorFactory_C_SplitString final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Spliter;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         SplitedStrings;                                    // 0x0020(0x0010)(Parm, OutParm)
	class FString                                 Lo_Str;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Lo_Splited;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B4[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B5[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_SplitString) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_SplitString");
static_assert(sizeof(BattleCamActorFactory_C_SplitString) == 0x000080, "Wrong size on BattleCamActorFactory_C_SplitString");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, Source) == 0x000000, "Member 'BattleCamActorFactory_C_SplitString::Source' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, Spliter) == 0x000010, "Member 'BattleCamActorFactory_C_SplitString::Spliter' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, SplitedStrings) == 0x000020, "Member 'BattleCamActorFactory_C_SplitString::SplitedStrings' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, Lo_Str) == 0x000030, "Member 'BattleCamActorFactory_C_SplitString::Lo_Str' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, Lo_Splited) == 0x000040, "Member 'BattleCamActorFactory_C_SplitString::Lo_Splited' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BattleCamActorFactory_C_SplitString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, CallFunc_Split_LeftS) == 0x000058, "Member 'BattleCamActorFactory_C_SplitString::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, CallFunc_Split_RightS) == 0x000068, "Member 'BattleCamActorFactory_C_SplitString::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, CallFunc_Split_ReturnValue) == 0x000078, "Member 'BattleCamActorFactory_C_SplitString::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SplitString, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'BattleCamActorFactory_C_SplitString::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.RetrieveSkillCameraName
// 0x00A8 (0x00A8 - 0x0000)
struct BattleCamActorFactory_C_RetrieveSkillCameraName final
{
public:
	class FString                                 CameraName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   IgnoreCameraName;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CameraNames;                                       // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FString>                         Lo_CameraName;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_found;                                          // 0x0038(0x0010)(Edit, BlueprintVisible)
	bool                                          NewLocalVar_0;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B6[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_CameraSide;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_CAMERA_SIDE_LR_TYPE>                 Lo_InvalidCamera;                                  // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_SplitedCamName;                                 // 0x0060(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_RetrieveCameraNameInner_ReturnValue;      // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B7[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_RetrieveCameraNameInner_ReturnValue_1;    // 0x0098(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleCamActorFactory_C_RetrieveSkillCameraName) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_RetrieveSkillCameraName");
static_assert(sizeof(BattleCamActorFactory_C_RetrieveSkillCameraName) == 0x0000A8, "Wrong size on BattleCamActorFactory_C_RetrieveSkillCameraName");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, CameraName) == 0x000000, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, IgnoreCameraName) == 0x000010, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::IgnoreCameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, CameraNames) == 0x000018, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, Lo_CameraName) == 0x000028, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::Lo_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, Lo_found) == 0x000038, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::Lo_found' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, NewLocalVar_0) == 0x000048, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, Lo_CameraSide) == 0x00004C, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::Lo_CameraSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, Lo_InvalidCamera) == 0x000050, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::Lo_InvalidCamera' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, Lo_SplitedCamName) == 0x000060, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::Lo_SplitedCamName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, CallFunc_RetrieveCameraNameInner_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::CallFunc_RetrieveCameraNameInner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, CallFunc_StartsWith_ReturnValue) == 0x000090, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, CallFunc_Array_RemoveItem_ReturnValue) == 0x000091, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveSkillCameraName, CallFunc_RetrieveCameraNameInner_ReturnValue_1) == 0x000098, "Member 'BattleCamActorFactory_C_RetrieveSkillCameraName::CallFunc_RetrieveCameraNameInner_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CamFactoryLog
// 0x0050 (0x0050 - 0x0000)
struct BattleCamActorFactory_C_CamFactoryLog final
{
public:
	class FString                                 LogString;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsErrorLog;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B8[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleLog_retValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B9[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CamFactoryLog) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_CamFactoryLog");
static_assert(sizeof(BattleCamActorFactory_C_CamFactoryLog) == 0x000050, "Wrong size on BattleCamActorFactory_C_CamFactoryLog");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, LogString) == 0x000000, "Member 'BattleCamActorFactory_C_CamFactoryLog::LogString' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, IsErrorLog) == 0x000010, "Member 'BattleCamActorFactory_C_CamFactoryLog::IsErrorLog' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, CallFunc_IS_SHIPPING_BUILD_ReturnValue) == 0x000011, "Member 'BattleCamActorFactory_C_CamFactoryLog::CallFunc_IS_SHIPPING_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BattleCamActorFactory_C_CamFactoryLog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BattleCamActorFactory_C_CamFactoryLog::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000028, "Member 'BattleCamActorFactory_C_CamFactoryLog::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, CallFunc_BI_BattleLog_retValue) == 0x000038, "Member 'BattleCamActorFactory_C_CamFactoryLog::CallFunc_BI_BattleLog_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_CamFactoryLog::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CamFactoryLog, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BattleCamActorFactory_C_CamFactoryLog::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_FusionForm
// 0x02A0 (0x02A0 - 0x0000)
struct BattleCamActorFactory_C_Spawn_FusionForm final
{
public:
	class ABP_RailActor_C*                        RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_CameraTransform;                                // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_RowName;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RowName_E;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RowName_P;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BB[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BC[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BD[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B0(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BE[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_34BF[0x8];                                     // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_FusionForm) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_FusionForm");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_FusionForm) == 0x0002A0, "Wrong size on BattleCamActorFactory_C_Spawn_FusionForm");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, Lo_IsReserveDestroyCurrent) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, Lo_CameraTransform) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::Lo_CameraTransform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, Lo_RowName) == 0x000040, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, Lo_RowName_E) == 0x000048, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::Lo_RowName_E' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, Lo_RowName_P) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::Lo_RowName_P' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_IdentifyTransform_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_GetOriginUpVec_UpVec) == 0x0000A0, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000E0, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_Conv_NameToString_ReturnValue) == 0x000168, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_IsSameCameraName_IsSame) == 0x000178, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000180, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_Concat_StrStr_ReturnValue) == 0x000190, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_SetCamFactory_Factory_CastInput) == 0x0001A0, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B0, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000248, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000258, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_FusionForm, CallFunc_CalcCameraTransform_ret) == 0x000270, "Member 'BattleCamActorFactory_C_Spawn_FusionForm::CallFunc_CalcCameraTransform_ret' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IsSameCameraName
// 0x0028 (0x0028 - 0x0000)
struct BattleCamActorFactory_C_IsSameCameraName final
{
public:
	class ABP_RailActor_C*                        RailActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 RowName;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          IsSame;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C0[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsSameCameraName) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_IsSameCameraName");
static_assert(sizeof(BattleCamActorFactory_C_IsSameCameraName) == 0x000028, "Wrong size on BattleCamActorFactory_C_IsSameCameraName");
static_assert(offsetof(BattleCamActorFactory_C_IsSameCameraName, RailActor) == 0x000000, "Member 'BattleCamActorFactory_C_IsSameCameraName::RailActor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSameCameraName, RowName) == 0x000008, "Member 'BattleCamActorFactory_C_IsSameCameraName::RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSameCameraName, IsSame) == 0x000018, "Member 'BattleCamActorFactory_C_IsSameCameraName::IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSameCameraName, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'BattleCamActorFactory_C_IsSameCameraName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSameCameraName, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BattleCamActorFactory_C_IsSameCameraName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSameCameraName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000025, "Member 'BattleCamActorFactory_C_IsSameCameraName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcUpVecOnlyTransform
// 0x0060 (0x0060 - 0x0000)
struct BattleCamActorFactory_C_CalcUpVecOnlyTransform final
{
public:
	struct FTransform                             In;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             ForDaath;                                          // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CalcUpVecOnlyTransform) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcUpVecOnlyTransform");
static_assert(sizeof(BattleCamActorFactory_C_CalcUpVecOnlyTransform) == 0x000060, "Wrong size on BattleCamActorFactory_C_CalcUpVecOnlyTransform");
static_assert(offsetof(BattleCamActorFactory_C_CalcUpVecOnlyTransform, In) == 0x000000, "Member 'BattleCamActorFactory_C_CalcUpVecOnlyTransform::In' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUpVecOnlyTransform, ForDaath) == 0x000030, "Member 'BattleCamActorFactory_C_CalcUpVecOnlyTransform::ForDaath' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetOriginUpVec
// 0x00A0 (0x00A0 - 0x0000)
struct BattleCamActorFactory_C_GetOriginUpVec final
{
public:
	struct FVector                                UpVec;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C2[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C3[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetOriginUpVec) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_GetOriginUpVec");
static_assert(sizeof(BattleCamActorFactory_C_GetOriginUpVec) == 0x0000A0, "Wrong size on BattleCamActorFactory_C_GetOriginUpVec");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, UpVec) == 0x000000, "Member 'BattleCamActorFactory_C_GetOriginUpVec::UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000010, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_BI_GetOriginTransform_retValue) == 0x000030, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_BreakTransform_Location) == 0x000064, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginUpVec, CallFunc_GetUpVector_ReturnValue) == 0x000088, "Member 'BattleCamActorFactory_C_GetOriginUpVec::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetOriginRightVec
// 0x00A0 (0x00A0 - 0x0000)
struct BattleCamActorFactory_C_GetOriginRightVec final
{
public:
	struct FVector                                UpVec;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C5[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C6[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetOriginRightVec) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_GetOriginRightVec");
static_assert(sizeof(BattleCamActorFactory_C_GetOriginRightVec) == 0x0000A0, "Wrong size on BattleCamActorFactory_C_GetOriginRightVec");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, UpVec) == 0x000000, "Member 'BattleCamActorFactory_C_GetOriginRightVec::UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000010, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_BI_GetOriginTransform_retValue) == 0x000030, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_BreakTransform_Location) == 0x000064, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginRightVec, CallFunc_GetRightVector_ReturnValue) == 0x000088, "Member 'BattleCamActorFactory_C_GetOriginRightVec::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IsLookAtEnemyHeight
// 0x0003 (0x0003 - 0x0000)
struct BattleCamActorFactory_C_IsLookAtEnemyHeight final
{
public:
	bool                                          IsLook;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugDisableLookAtEnemyHeight_DisableLook; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsLookAtEnemyHeight) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_IsLookAtEnemyHeight");
static_assert(sizeof(BattleCamActorFactory_C_IsLookAtEnemyHeight) == 0x000003, "Wrong size on BattleCamActorFactory_C_IsLookAtEnemyHeight");
static_assert(offsetof(BattleCamActorFactory_C_IsLookAtEnemyHeight, IsLook) == 0x000000, "Member 'BattleCamActorFactory_C_IsLookAtEnemyHeight::IsLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsLookAtEnemyHeight, CallFunc_BattleDesignDebugDisableLookAtEnemyHeight_DisableLook) == 0x000001, "Member 'BattleCamActorFactory_C_IsLookAtEnemyHeight::CallFunc_BattleDesignDebugDisableLookAtEnemyHeight_DisableLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsLookAtEnemyHeight, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BattleCamActorFactory_C_IsLookAtEnemyHeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IdentifyTransform
// 0x0060 (0x0060 - 0x0000)
struct BattleCamActorFactory_C_IdentifyTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IdentifyTransform) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_IdentifyTransform");
static_assert(sizeof(BattleCamActorFactory_C_IdentifyTransform) == 0x000060, "Wrong size on BattleCamActorFactory_C_IdentifyTransform");
static_assert(offsetof(BattleCamActorFactory_C_IdentifyTransform, ReturnValue) == 0x000000, "Member 'BattleCamActorFactory_C_IdentifyTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IdentifyTransform, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BattleCamActorFactory_C_IdentifyTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcTargetLocation
// 0x01E0 (0x01E0 - 0x0000)
struct BattleCamActorFactory_C_CalcTargetLocation final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        Rail;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReversed;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RetVal;                                            // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_TargetActor;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C9[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_TargetTrans;                                    // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_TargetSocketName;                               // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetOffset;                                   // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CA[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        Lo_RailActor;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_Target;                                         // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CB[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CC[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigRailPlayInfo                       CallFunc_GetPlayInfo_m_PlayInfo;                   // 0x0108(0x0034)(NoDestructor)
	uint8                                         Pad_34CD[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0140(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CE[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RetrieveGlobalSocketLocation_GlobalLocation; // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveGlobalSocketLocation_IsValid;     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CF[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D0[0x8];                                     // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CalcTargetLocation) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcTargetLocation");
static_assert(sizeof(BattleCamActorFactory_C_CalcTargetLocation) == 0x0001E0, "Wrong size on BattleCamActorFactory_C_CalcTargetLocation");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_CalcTargetLocation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, Rail) == 0x000008, "Member 'BattleCamActorFactory_C_CalcTargetLocation::Rail' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, IsReversed) == 0x000010, "Member 'BattleCamActorFactory_C_CalcTargetLocation::IsReversed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, RetVal) == 0x000014, "Member 'BattleCamActorFactory_C_CalcTargetLocation::RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, Lo_TargetActor) == 0x000020, "Member 'BattleCamActorFactory_C_CalcTargetLocation::Lo_TargetActor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, Lo_TargetTrans) == 0x000030, "Member 'BattleCamActorFactory_C_CalcTargetLocation::Lo_TargetTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, Lo_TargetSocketName) == 0x000060, "Member 'BattleCamActorFactory_C_CalcTargetLocation::Lo_TargetSocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, Lo_TargetOffset) == 0x000068, "Member 'BattleCamActorFactory_C_CalcTargetLocation::Lo_TargetOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, Lo_RailActor) == 0x000078, "Member 'BattleCamActorFactory_C_CalcTargetLocation::Lo_RailActor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, Lo_Target) == 0x000080, "Member 'BattleCamActorFactory_C_CalcTargetLocation::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_GetPartyUnit_retValue) == 0x000090, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000098, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_BreakTransform_Rotation) == 0x0000CC, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_GetForwardVector_ReturnValue) == 0x0000E4, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000FC, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_GetPlayInfo_m_PlayInfo) == 0x000108, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_GetPlayInfo_m_PlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_GetTransform_ReturnValue) == 0x000140, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_BooleanAND_ReturnValue) == 0x000170, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_RetrieveGlobalSocketLocation_GlobalLocation) == 0x000174, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_RetrieveGlobalSocketLocation_GlobalLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_RetrieveGlobalSocketLocation_IsValid) == 0x000180, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_RetrieveGlobalSocketLocation_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_BreakTransform_Location_1) == 0x000184, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_BreakTransform_Rotation_1) == 0x000190, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_BreakTransform_Scale_1) == 0x00019C, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetLocation, CallFunc_GetSocketTransform_retValue) == 0x0001B0, "Member 'BattleCamActorFactory_C_CalcTargetLocation::CallFunc_GetSocketTransform_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CheckSplineSight
// 0x0110 (0x0110 - 0x0000)
struct BattleCamActorFactory_C_CheckSplineSight final
{
public:
	int32                                         TargetPartyIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Position;                                          // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             OffsetTransform;                                   // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	TArray<struct FCustomSplinePoint>             SplinePoint;                                       // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FRigRailPlayInfo                       PlayInfo;                                          // 0x0080(0x0034)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class FName                                   OverrideSocketName;                                // 0x00B4(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D1[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      TraceObject;                                       // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         AdjustScale;                                       // 0x00D0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SightRange;                                        // 0x00D4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClear;                                           // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D2[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_Location;                                       // 0x00DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D3[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTargetLocation_RetVal;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckObstruction_IsClear;                 // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CheckSplineSight) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CheckSplineSight");
static_assert(sizeof(BattleCamActorFactory_C_CheckSplineSight) == 0x000110, "Wrong size on BattleCamActorFactory_C_CheckSplineSight");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, TargetPartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_CheckSplineSight::TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, TargetLocation) == 0x000004, "Member 'BattleCamActorFactory_C_CheckSplineSight::TargetLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, Position) == 0x000010, "Member 'BattleCamActorFactory_C_CheckSplineSight::Position' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, OffsetTransform) == 0x000040, "Member 'BattleCamActorFactory_C_CheckSplineSight::OffsetTransform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, SplinePoint) == 0x000070, "Member 'BattleCamActorFactory_C_CheckSplineSight::SplinePoint' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, PlayInfo) == 0x000080, "Member 'BattleCamActorFactory_C_CheckSplineSight::PlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, OverrideSocketName) == 0x0000B4, "Member 'BattleCamActorFactory_C_CheckSplineSight::OverrideSocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, TraceObject) == 0x0000C0, "Member 'BattleCamActorFactory_C_CheckSplineSight::TraceObject' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, AdjustScale) == 0x0000D0, "Member 'BattleCamActorFactory_C_CheckSplineSight::AdjustScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, SightRange) == 0x0000D4, "Member 'BattleCamActorFactory_C_CheckSplineSight::SightRange' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, IsClear) == 0x0000D8, "Member 'BattleCamActorFactory_C_CheckSplineSight::IsClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, Lo_Location) == 0x0000DC, "Member 'BattleCamActorFactory_C_CheckSplineSight::Lo_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, CallFunc_GetPartyUnit_retValue) == 0x0000E8, "Member 'BattleCamActorFactory_C_CheckSplineSight::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BattleCamActorFactory_C_CheckSplineSight::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'BattleCamActorFactory_C_CheckSplineSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, CallFunc_SelectInt_ReturnValue) == 0x0000F4, "Member 'BattleCamActorFactory_C_CheckSplineSight::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, CallFunc_CalcTargetLocation_RetVal) == 0x0000F8, "Member 'BattleCamActorFactory_C_CheckSplineSight::CallFunc_CalcTargetLocation_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, CallFunc_CheckObstruction_IsClear) == 0x000104, "Member 'BattleCamActorFactory_C_CheckSplineSight::CallFunc_CheckObstruction_IsClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckSplineSight, CallFunc_IsValid_ReturnValue_1) == 0x000105, "Member 'BattleCamActorFactory_C_CheckSplineSight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.InitSightChecker
// 0x0050 (0x0050 - 0x0000)
struct BattleCamActorFactory_C_InitSightChecker final
{
public:
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D4[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailSightChecker_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_InitSightChecker) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_InitSightChecker");
static_assert(sizeof(BattleCamActorFactory_C_InitSightChecker) == 0x000050, "Wrong size on BattleCamActorFactory_C_InitSightChecker");
static_assert(offsetof(BattleCamActorFactory_C_InitSightChecker, CallFunc_IdentifyTransform_ReturnValue) == 0x000000, "Member 'BattleCamActorFactory_C_InitSightChecker::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InitSightChecker, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BattleCamActorFactory_C_InitSightChecker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InitSightChecker, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000038, "Member 'BattleCamActorFactory_C_InitSightChecker::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InitSightChecker, CallFunc_FinishSpawningActor_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_InitSightChecker::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.FinalizeSightChecker
// 0x0001 (0x0001 - 0x0000)
struct BattleCamActorFactory_C_FinalizeSightChecker final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_FinalizeSightChecker) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_FinalizeSightChecker");
static_assert(sizeof(BattleCamActorFactory_C_FinalizeSightChecker) == 0x000001, "Wrong size on BattleCamActorFactory_C_FinalizeSightChecker");
static_assert(offsetof(BattleCamActorFactory_C_FinalizeSightChecker, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BattleCamActorFactory_C_FinalizeSightChecker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.MakeName_TurnPrev
// 0x0128 (0x0128 - 0x0000)
struct BattleCamActorFactory_C_MakeName_TurnPrev final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUnionForm;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHugeBattle;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D5[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DevID;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CameraNames;                                       // 0x0018(0x0010)(Parm, OutParm)
	class FString                                 Lo_Header;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_CameraFB;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D6[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_Category;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D7[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D8[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D9[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<E_CAMERA_SIDE_LR_TYPE>                 K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_DecideCameraSide_LR_CameraSide;           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_LR_TYPE                         CallFunc_DecideCameraSide_LR_ChoseType;            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DecideCameraSide_LR_IsForceDecide;        // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DA[0x2];                                     // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_DecideCameraSide_BF_CameraSide;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecideCameraSide_BF_CameraSide_1;         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DB[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DC[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_RetrieveCameraNameInner_ReturnValue;      // 0x0118(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleCamActorFactory_C_MakeName_TurnPrev) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_MakeName_TurnPrev");
static_assert(sizeof(BattleCamActorFactory_C_MakeName_TurnPrev) == 0x000128, "Wrong size on BattleCamActorFactory_C_MakeName_TurnPrev");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, IsPlayer) == 0x000000, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, IsUnionForm) == 0x000001, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::IsUnionForm' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, IsHugeBattle) == 0x000002, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::IsHugeBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, DevID) == 0x000008, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CameraNames) == 0x000018, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Lo_Header) == 0x000028, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Lo_Header' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Lo_CameraFB) == 0x000038, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Lo_CameraFB' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Lo_Category) == 0x000040, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Lo_Category' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Temp_bool_Variable) == 0x000050, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_Len_ReturnValue) == 0x000068, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Temp_bool_Variable_1) == 0x00006C, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_Greater_IntInt_ReturnValue) == 0x00006D, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Temp_string_Variable) == 0x000070, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Temp_string_Variable_1) == 0x000080, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Temp_bool_Variable_2) == 0x000090, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, K2Node_Select_Default) == 0x000098, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Temp_string_Variable_2) == 0x0000A8, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, Temp_string_Variable_3) == 0x0000B8, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, K2Node_Select_Default_1) == 0x0000C8, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_DecideCameraSide_LR_CameraSide) == 0x0000E8, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_DecideCameraSide_LR_CameraSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_DecideCameraSide_LR_ChoseType) == 0x0000EC, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_DecideCameraSide_LR_ChoseType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_DecideCameraSide_LR_IsForceDecide) == 0x0000ED, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_DecideCameraSide_LR_IsForceDecide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_DecideCameraSide_BF_CameraSide) == 0x0000F0, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_DecideCameraSide_BF_CameraSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_DecideCameraSide_BF_CameraSide_1) == 0x0000F4, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_DecideCameraSide_BF_CameraSide_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_SelectInt_ReturnValue) == 0x0000F8, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000100, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, K2Node_Select_Default_2) == 0x000110, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_TurnPrev, CallFunc_RetrieveCameraNameInner_ReturnValue) == 0x000118, "Member 'BattleCamActorFactory_C_MakeName_TurnPrev::CallFunc_RetrieveCameraNameInner_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.MakeName_Start
// 0x0088 (0x0088 - 0x0000)
struct BattleCamActorFactory_C_MakeName_Start final
{
public:
	bool                                          IsHugeBattle;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DevIDOption;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CameraNames;                                       // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FString>                         Lo_Cameras;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DE[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_RetrieveCameraName_CameraNames;           // 0x0060(0x0010)(ReferenceParm)
	class FString                                 Temp_string_Variable_1;                            // 0x0070(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_MakeName_Start) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_MakeName_Start");
static_assert(sizeof(BattleCamActorFactory_C_MakeName_Start) == 0x000088, "Wrong size on BattleCamActorFactory_C_MakeName_Start");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, IsHugeBattle) == 0x000000, "Member 'BattleCamActorFactory_C_MakeName_Start::IsHugeBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, DevIDOption) == 0x000008, "Member 'BattleCamActorFactory_C_MakeName_Start::DevIDOption' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, CameraNames) == 0x000018, "Member 'BattleCamActorFactory_C_MakeName_Start::CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, Lo_Cameras) == 0x000028, "Member 'BattleCamActorFactory_C_MakeName_Start::Lo_Cameras' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, Temp_string_Variable) == 0x000038, "Member 'BattleCamActorFactory_C_MakeName_Start::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, CallFunc_Len_ReturnValue) == 0x000048, "Member 'BattleCamActorFactory_C_MakeName_Start::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BattleCamActorFactory_C_MakeName_Start::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BattleCamActorFactory_C_MakeName_Start::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, CallFunc_RetrieveCameraName_CameraNames) == 0x000060, "Member 'BattleCamActorFactory_C_MakeName_Start::CallFunc_RetrieveCameraName_CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, Temp_string_Variable_1) == 0x000070, "Member 'BattleCamActorFactory_C_MakeName_Start::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_MakeName_Start::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Start, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'BattleCamActorFactory_C_MakeName_Start::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.RetrieveCameraName
// 0x0080 (0x0080 - 0x0000)
struct BattleCamActorFactory_C_RetrieveCameraName final
{
public:
	class FString                                 CoreName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         FB_Priority;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LR_Priority;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoWildCard;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Table;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CameraNames;                                       // 0x0028(0x0010)(Parm, OutParm)
	int32                                         Lo_ItemIndex;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E0[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_FirstItem;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Lo_Collection;                                     // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0060(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_RetrieveCameraNameInner_ReturnValue;      // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleCamActorFactory_C_RetrieveCameraName) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_RetrieveCameraName");
static_assert(sizeof(BattleCamActorFactory_C_RetrieveCameraName) == 0x000080, "Wrong size on BattleCamActorFactory_C_RetrieveCameraName");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, CoreName) == 0x000000, "Member 'BattleCamActorFactory_C_RetrieveCameraName::CoreName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, FB_Priority) == 0x000010, "Member 'BattleCamActorFactory_C_RetrieveCameraName::FB_Priority' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, LR_Priority) == 0x000014, "Member 'BattleCamActorFactory_C_RetrieveCameraName::LR_Priority' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, NoWildCard) == 0x000018, "Member 'BattleCamActorFactory_C_RetrieveCameraName::NoWildCard' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, Table) == 0x000020, "Member 'BattleCamActorFactory_C_RetrieveCameraName::Table' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, CameraNames) == 0x000028, "Member 'BattleCamActorFactory_C_RetrieveCameraName::CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, Lo_ItemIndex) == 0x000038, "Member 'BattleCamActorFactory_C_RetrieveCameraName::Lo_ItemIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, Lo_FirstItem) == 0x000040, "Member 'BattleCamActorFactory_C_RetrieveCameraName::Lo_FirstItem' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, Lo_Collection) == 0x000050, "Member 'BattleCamActorFactory_C_RetrieveCameraName::Lo_Collection' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000060, "Member 'BattleCamActorFactory_C_RetrieveCameraName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveCameraName, CallFunc_RetrieveCameraNameInner_ReturnValue) == 0x000070, "Member 'BattleCamActorFactory_C_RetrieveCameraName::CallFunc_RetrieveCameraNameInner_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.MakeName_Command
// 0x00F8 (0x00F8 - 0x0000)
struct BattleCamActorFactory_C_MakeName_Command final
{
public:
	class FString                                 CameraCategory;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsHugeBattle;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBossBattle;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBackOnly;                                        // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFrontOnly;                                       // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsN_;                                              // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSelecting;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInvAll;                                          // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E1[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CameraNames;                                       // 0x0018(0x0010)(Parm, OutParm)
	bool                                          Lo_IsSelecting;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsInvAll;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E2[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_CameraCate;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsN;                                            // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsFrontOnly;                                    // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsBackOnly;                                     // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_isBoss;                                         // 0x0043(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsHuge;                                         // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E3[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Lo_RetVal;                                         // 0x0048(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_CoreName;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E4[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_MakeName_Command) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_MakeName_Command");
static_assert(sizeof(BattleCamActorFactory_C_MakeName_Command) == 0x0000F8, "Wrong size on BattleCamActorFactory_C_MakeName_Command");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CameraCategory) == 0x000000, "Member 'BattleCamActorFactory_C_MakeName_Command::CameraCategory' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, IsHugeBattle) == 0x000010, "Member 'BattleCamActorFactory_C_MakeName_Command::IsHugeBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, IsBossBattle) == 0x000011, "Member 'BattleCamActorFactory_C_MakeName_Command::IsBossBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, IsBackOnly) == 0x000012, "Member 'BattleCamActorFactory_C_MakeName_Command::IsBackOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, IsFrontOnly) == 0x000013, "Member 'BattleCamActorFactory_C_MakeName_Command::IsFrontOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, IsN_) == 0x000014, "Member 'BattleCamActorFactory_C_MakeName_Command::IsN_' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, IsSelecting) == 0x000015, "Member 'BattleCamActorFactory_C_MakeName_Command::IsSelecting' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, IsInvAll) == 0x000016, "Member 'BattleCamActorFactory_C_MakeName_Command::IsInvAll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CameraNames) == 0x000018, "Member 'BattleCamActorFactory_C_MakeName_Command::CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_IsSelecting) == 0x000028, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_IsSelecting' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_IsInvAll) == 0x000029, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_IsInvAll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_CameraCate) == 0x000030, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_CameraCate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_IsN) == 0x000040, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_IsN' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_IsFrontOnly) == 0x000041, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_IsFrontOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_IsBackOnly) == 0x000042, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_IsBackOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_isBoss) == 0x000043, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_isBoss' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_IsHuge) == 0x000044, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_IsHuge' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_RetVal) == 0x000048, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, Lo_CoreName) == 0x000058, "Member 'BattleCamActorFactory_C_MakeName_Command::Lo_CoreName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_SelectString_ReturnValue) == 0x000068, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_SelectString_ReturnValue_1) == 0x000078, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D0, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000E0, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Array_Add_ReturnValue_1) == 0x0000F0, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_MakeName_Command, CallFunc_Array_Add_ReturnValue_2) == 0x0000F4, "Member 'BattleCamActorFactory_C_MakeName_Command::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetPartyUnit
// 0x0040 (0x0040 - 0x0000)
struct BattleCamActorFactory_C_GetPartyUnit final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_GetPartyUnitIniterface_AsBPI_PTBPInterface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetPartyUnit) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetPartyUnit");
static_assert(sizeof(BattleCamActorFactory_C_GetPartyUnit) == 0x000040, "Wrong size on BattleCamActorFactory_C_GetPartyUnit");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnit, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_GetPartyUnit::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnit, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_GetPartyUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnit, CallFunc_GetPartyUnitIniterface_AsBPI_PTBPInterface) == 0x000010, "Member 'BattleCamActorFactory_C_GetPartyUnit::CallFunc_GetPartyUnitIniterface_AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnit, CallFunc_BI_GetPartyUnit_retValue) == 0x000020, "Member 'BattleCamActorFactory_C_GetPartyUnit::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnit, K2Node_DynamicCast_AsChara_Base) == 0x000030, "Member 'BattleCamActorFactory_C_GetPartyUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnit, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BattleCamActorFactory_C_GetPartyUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetSideFirstIndex
// 0x0004 (0x0004 - 0x0000)
struct BattleCamActorFactory_C_GetSideFirstIndex final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetSideFirstIndex) == 0x000004, "Wrong alignment on BattleCamActorFactory_C_GetSideFirstIndex");
static_assert(sizeof(BattleCamActorFactory_C_GetSideFirstIndex) == 0x000004, "Wrong size on BattleCamActorFactory_C_GetSideFirstIndex");
static_assert(offsetof(BattleCamActorFactory_C_GetSideFirstIndex, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_GetSideFirstIndex::RetValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ConstGetPartyStart
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_ConstGetPartyStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_ConstGetPartyStart) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_ConstGetPartyStart");
static_assert(sizeof(BattleCamActorFactory_C_ConstGetPartyStart) == 0x000020, "Wrong size on BattleCamActorFactory_C_ConstGetPartyStart");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetPartyStart, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_ConstGetPartyStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetPartyStart, CallFunc_GetPartySystem_ret) == 0x000008, "Member 'BattleCamActorFactory_C_ConstGetPartyStart::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetPartyStart, CallFunc_BI_const_GetPartyStart_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_ConstGetPartyStart::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ConstGetEnemyStart
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_ConstGetEnemyStart final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_ConstGetEnemyStart) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_ConstGetEnemyStart");
static_assert(sizeof(BattleCamActorFactory_C_ConstGetEnemyStart) == 0x000020, "Wrong size on BattleCamActorFactory_C_ConstGetEnemyStart");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetEnemyStart, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_ConstGetEnemyStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetEnemyStart, CallFunc_GetPartySystem_ret) == 0x000008, "Member 'BattleCamActorFactory_C_ConstGetEnemyStart::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetEnemyStart, CallFunc_BI_const_GetEnemyStart_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_ConstGetEnemyStart::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ConstGetPartyLoopMax
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_ConstGetPartyLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetPartyLoopMax_retValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_ConstGetPartyLoopMax) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_ConstGetPartyLoopMax");
static_assert(sizeof(BattleCamActorFactory_C_ConstGetPartyLoopMax) == 0x000020, "Wrong size on BattleCamActorFactory_C_ConstGetPartyLoopMax");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetPartyLoopMax, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_ConstGetPartyLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetPartyLoopMax, CallFunc_GetPartySystem_ret) == 0x000008, "Member 'BattleCamActorFactory_C_ConstGetPartyLoopMax::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetPartyLoopMax, CallFunc_BI_const_GetPartyLoopMax_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_ConstGetPartyLoopMax::CallFunc_BI_const_GetPartyLoopMax_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ConstGetEnemyLoopMax
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_ConstGetEnemyLoopMax final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetEnemyLoopMax_retValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_ConstGetEnemyLoopMax) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_ConstGetEnemyLoopMax");
static_assert(sizeof(BattleCamActorFactory_C_ConstGetEnemyLoopMax) == 0x000020, "Wrong size on BattleCamActorFactory_C_ConstGetEnemyLoopMax");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetEnemyLoopMax, RetValue) == 0x000000, "Member 'BattleCamActorFactory_C_ConstGetEnemyLoopMax::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetEnemyLoopMax, CallFunc_GetPartySystem_ret) == 0x000008, "Member 'BattleCamActorFactory_C_ConstGetEnemyLoopMax::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConstGetEnemyLoopMax, CallFunc_BI_const_GetEnemyLoopMax_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_ConstGetEnemyLoopMax::CallFunc_BI_const_GetEnemyLoopMax_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IsInField
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_IsInField final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetAllIsInFieldList_ReturnValue;       // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsInField) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_IsInField");
static_assert(sizeof(BattleCamActorFactory_C_IsInField) == 0x000030, "Wrong size on BattleCamActorFactory_C_IsInField");
static_assert(offsetof(BattleCamActorFactory_C_IsInField, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_IsInField::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsInField, RetValue) == 0x000004, "Member 'BattleCamActorFactory_C_IsInField::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsInField, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface) == 0x000008, "Member 'BattleCamActorFactory_C_IsInField::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsInField, CallFunc_BI_GetAllIsInFieldList_ReturnValue) == 0x000018, "Member 'BattleCamActorFactory_C_IsInField::CallFunc_BI_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsInField, CallFunc_Array_Contains_ReturnValue) == 0x000028, "Member 'BattleCamActorFactory_C_IsInField::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.isEnemy
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_IsEnemy final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTFlagInterface>  CallFunc_GetPartyFlagInterface_AsBPI_PTFlag_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckFlag_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsEnemy) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_IsEnemy");
static_assert(sizeof(BattleCamActorFactory_C_IsEnemy) == 0x000020, "Wrong size on BattleCamActorFactory_C_IsEnemy");
static_assert(offsetof(BattleCamActorFactory_C_IsEnemy, Param_Index) == 0x000000, "Member 'BattleCamActorFactory_C_IsEnemy::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsEnemy, RetValue) == 0x000004, "Member 'BattleCamActorFactory_C_IsEnemy::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsEnemy, CallFunc_GetPartyFlagInterface_AsBPI_PTFlag_Interface) == 0x000008, "Member 'BattleCamActorFactory_C_IsEnemy::CallFunc_GetPartyFlagInterface_AsBPI_PTFlag_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsEnemy, CallFunc_BI_CheckFlag_ReturnValue) == 0x000018, "Member 'BattleCamActorFactory_C_IsEnemy::CallFunc_BI_CheckFlag_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetCurrentTargetType
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_GetCurrentTargetType final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_BI_GetCurrentTargetType_TargetType;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetCurrentTargetType) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetCurrentTargetType");
static_assert(sizeof(BattleCamActorFactory_C_GetCurrentTargetType) == 0x000030, "Wrong size on BattleCamActorFactory_C_GetCurrentTargetType");
static_assert(offsetof(BattleCamActorFactory_C_GetCurrentTargetType, TargetType) == 0x000000, "Member 'BattleCamActorFactory_C_GetCurrentTargetType::TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCurrentTargetType, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000008, "Member 'BattleCamActorFactory_C_GetCurrentTargetType::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCurrentTargetType, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000018, "Member 'BattleCamActorFactory_C_GetCurrentTargetType::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCurrentTargetType, CallFunc_BI_GetCurrentTargetType_TargetType) == 0x000028, "Member 'BattleCamActorFactory_C_GetCurrentTargetType::CallFunc_BI_GetCurrentTargetType_TargetType' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcLookAtGlobalPos
// 0x0070 (0x0070 - 0x0000)
struct BattleCamActorFactory_C_CalcLookAtGlobalPos final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34ED[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GlobalPos;                                         // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                NewLocalVar_1;                                     // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EE[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_SocketName;                                     // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EF[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUnitAveLocation_Location;              // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnitAveLocation_Location_1;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnitAveLocation_Location_2;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnitAveLocation_Location_3;            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcLookAtGlobalPos) == 0x000004, "Wrong alignment on BattleCamActorFactory_C_CalcLookAtGlobalPos");
static_assert(sizeof(BattleCamActorFactory_C_CalcLookAtGlobalPos) == 0x000070, "Wrong size on BattleCamActorFactory_C_CalcLookAtGlobalPos");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, TargetType) == 0x000000, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, SocketName) == 0x000004, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, GlobalPos) == 0x00000C, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, IsValid) == 0x000018, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, NewLocalVar_1) == 0x000019, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, Lo_SocketName) == 0x00001C, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, CallFunc_GetUnitAveLocation_Location) == 0x000028, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::CallFunc_GetUnitAveLocation_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, CallFunc_GetUnitAveLocation_Location_1) == 0x000034, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::CallFunc_GetUnitAveLocation_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, CallFunc_GetUnitAveLocation_Location_2) == 0x000040, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::CallFunc_GetUnitAveLocation_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, CallFunc_GetUnitAveLocation_Location_3) == 0x00004C, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::CallFunc_GetUnitAveLocation_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtGlobalPos, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000064, "Member 'BattleCamActorFactory_C_CalcLookAtGlobalPos::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_Summon
// 0x02B0 (0x02B0 - 0x0000)
struct BattleCamActorFactory_C_Spawn_Summon final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Lo_E_SkillTarget;                                  // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F1[0xE];                                     // 0x0012(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_CameraTransform;                                // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_RowName;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RowName_E;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RowName_P;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F2[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F3[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B0(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F4[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F5[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_Summon) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_Summon");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_Summon) == 0x0002B0, "Wrong size on BattleCamActorFactory_C_Spawn_Summon");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_Summon::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_Summon::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, Lo_IsReserveDestroyCurrent) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_Summon::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, Lo_E_SkillTarget) == 0x000011, "Member 'BattleCamActorFactory_C_Spawn_Summon::Lo_E_SkillTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, Lo_CameraTransform) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_Summon::Lo_CameraTransform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, Lo_RowName) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_Summon::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, Lo_RowName_E) == 0x000058, "Member 'BattleCamActorFactory_C_Spawn_Summon::Lo_RowName_E' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, Lo_RowName_P) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_Summon::Lo_RowName_P' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_SetCamFactory_Factory_CastInput) == 0x000068, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_IdentifyTransform_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_GetOriginUpVec_UpVec) == 0x0000C0, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000100, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_MakeLiteralName_ReturnValue) == 0x000188, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_Conv_NameToString_ReturnValue) == 0x000190, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A0, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B0, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000248, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_IsSameCameraName_IsSame) == 0x000258, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_CalcCameraTransform_ret) == 0x000260, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_CalcCameraTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000290, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0002A0, "Member 'BattleCamActorFactory_C_Spawn_Summon::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_Summon_One
// 0x0260 (0x0260 - 0x0000)
struct BattleCamActorFactory_C_Spawn_Summon_One final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_RowName;                                        // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F9[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FA[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0170(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FB[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_34FC[0x8];                                     // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_Summon_One) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_Summon_One");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_Summon_One) == 0x000260, "Wrong size on BattleCamActorFactory_C_Spawn_Summon_One");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, Lo_IsReserveDestroyCurrent) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, Lo_RowName) == 0x000014, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_SetCamFactory_Factory_CastInput) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_IdentifyTransform_ReturnValue) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_GetOriginUpVec_UpVec) == 0x000070, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000B0, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_Conv_NameToString_ReturnValue) == 0x000138, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_IsSameCameraName_IsSame) == 0x000148, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000150, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_Concat_StrStr_ReturnValue) == 0x000160, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_GetDataTableRowFromName_OutRow) == 0x000170, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000208, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000218, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_Summon_One, CallFunc_CalcCameraTransform_ret) == 0x000230, "Member 'BattleCamActorFactory_C_Spawn_Summon_One::CallFunc_CalcCameraTransform_ret' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.AdjustRelativePitch
// 0x03E0 (0x03E0 - 0x0000)
struct BattleCamActorFactory_C_AdjustRelativePitch final
{
public:
	struct FTransform                             A;                                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             B;                                                 // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                A2;                                                // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyDistance;                                     // 0x006C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ReturnValue;                                       // 0x0070(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	float                                         Lo_ForwardVecRoll;                                 // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_UpDot;                                          // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CamUp;                                          // 0x00A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CamForward;                                     // 0x00B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToTarget;                                       // 0x00C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FD[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_RalativeTrans;                                  // 0x00D0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Lo_ForwardDot;                                     // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Length;                                         // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FE[0x8];                                     // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FF[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust; // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3500[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3501[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3502[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3503[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3504[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3505[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3506[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3507[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3508[0x8];                                     // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_1;      // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_AdjustRelativePitch) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_AdjustRelativePitch");
static_assert(sizeof(BattleCamActorFactory_C_AdjustRelativePitch) == 0x0003E0, "Wrong size on BattleCamActorFactory_C_AdjustRelativePitch");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, A) == 0x000000, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::A' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, B) == 0x000030, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::B' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, A2) == 0x000060, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::A2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, EnemyDistance) == 0x00006C, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::EnemyDistance' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, ReturnValue) == 0x000070, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_ForwardVecRoll) == 0x0000A0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_ForwardVecRoll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_UpDot) == 0x0000A4, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_UpDot' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_CamUp) == 0x0000A8, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_CamUp' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_CamForward) == 0x0000B4, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_CamForward' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_ToTarget) == 0x0000C0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_ToTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_RalativeTrans) == 0x0000D0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_RalativeTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_ForwardDot) == 0x000100, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_ForwardDot' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, Lo_Length) == 0x000104, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::Lo_Length' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000110, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakTransform_Location) == 0x000140, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakTransform_Rotation) == 0x00014C, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakTransform_Scale) == 0x000158, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakRotator_Roll) == 0x000164, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakRotator_Pitch) == 0x000168, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakRotator_Yaw) == 0x00016C, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_GetUpVector_ReturnValue) == 0x000170, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_GetForwardVector_ReturnValue) == 0x00017C, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_MakeVector_ReturnValue) == 0x000188, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000194, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001A0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakVector_X) == 0x0001AC, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakVector_Y) == 0x0001B0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakVector_Z) == 0x0001B4, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B8, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001C4, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakVector_X_1) == 0x0001D0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakVector_Y_1) == 0x0001D4, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BreakVector_Z_1) == 0x0001D8, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Conv_FloatToString_ReturnValue) == 0x0001E0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_MakeVector_ReturnValue_1) == 0x0001F0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust) == 0x0001FC, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Normal_ReturnValue) == 0x000200, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00020C, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_SelectFloat_ReturnValue) == 0x000210, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Conv_VectorToString_ReturnValue) == 0x000218, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue) == 0x000228, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Normal_ReturnValue_1) == 0x000238, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000248, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Dot_VectorVector_ReturnValue) == 0x000258, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000260, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Normal_ReturnValue_2) == 0x000270, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x00027C, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000280, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_DegAcos_ReturnValue) == 0x000284, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_DegAcos_ReturnValue_1) == 0x000288, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000290, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002A0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0002A8, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_MakeRotator_ReturnValue) == 0x0002B8, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0002C8, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_MakeTransform_ReturnValue) == 0x0002E0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000310, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_MakeRelativeTransform_ReturnValue_1) == 0x000320, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_MakeRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000350, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_SelectTransform_ReturnValue) == 0x000360, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000390, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x0003A0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0003B0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0003C0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_AdjustRelativePitch, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0003D0, "Member 'BattleCamActorFactory_C_AdjustRelativePitch::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcLookAtLocalPos
// 0x0150 (0x0150 - 0x0000)
struct BattleCamActorFactory_C_CalcLookAtLocalPos final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3509[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GlobalPos;                                         // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_AvePos;                                         // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ValidNum;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350B[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_EndIndex;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BeginIndex;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_SocketName;                                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350C[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350E[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350F[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3510[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideListCondition_ReturnValue;      // 0x0108(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideListCondition_ReturnValue_1;    // 0x0118(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideListCondition_ReturnValue_2;    // 0x0128(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideListCondition_ReturnValue_3;    // 0x0138(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleCamActorFactory_C_CalcLookAtLocalPos) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcLookAtLocalPos");
static_assert(sizeof(BattleCamActorFactory_C_CalcLookAtLocalPos) == 0x000150, "Wrong size on BattleCamActorFactory_C_CalcLookAtLocalPos");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, TargetType) == 0x000000, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, SocketName) == 0x000004, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, IsValid) == 0x00000C, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, GlobalPos) == 0x000010, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Lo_AvePos) == 0x00001C, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Lo_AvePos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Lo_ValidNum) == 0x000028, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Lo_ValidNum' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Lo_List) == 0x000030, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Lo_EndIndex) == 0x000040, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Lo_EndIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Lo_BeginIndex) == 0x000044, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Lo_BeginIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Lo_SocketName) == 0x000048, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, Temp_int_Variable) == 0x000060, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Array_Get_Item) == 0x000064, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_GetPartyUnit_retValue) == 0x000070, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Greater_IntInt_ReturnValue) == 0x000079, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Divide_VectorInt_ReturnValue) == 0x00007C, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_GetSocketTransform_ReturnValue) == 0x000090, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_BreakTransform_Rotation) == 0x0000CC, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E4, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface) == 0x0000F8, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_BI_GetSideListCondition_ReturnValue) == 0x000108, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_BI_GetSideListCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_BI_GetSideListCondition_ReturnValue_1) == 0x000118, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_BI_GetSideListCondition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_BI_GetSideListCondition_ReturnValue_2) == 0x000128, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_BI_GetSideListCondition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcLookAtLocalPos, CallFunc_BI_GetSideListCondition_ReturnValue_3) == 0x000138, "Member 'BattleCamActorFactory_C_CalcLookAtLocalPos::CallFunc_BI_GetSideListCondition_ReturnValue_3' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetOriginTransform
// 0x0070 (0x0070 - 0x0000)
struct BattleCamActorFactory_C_GetOriginTransform final
{
public:
	struct FTransform                             Ret;                                               // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetOriginTransform) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_GetOriginTransform");
static_assert(sizeof(BattleCamActorFactory_C_GetOriginTransform) == 0x000070, "Wrong size on BattleCamActorFactory_C_GetOriginTransform");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginTransform, Ret) == 0x000000, "Member 'BattleCamActorFactory_C_GetOriginTransform::Ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginTransform, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000030, "Member 'BattleCamActorFactory_C_GetOriginTransform::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetOriginTransform, CallFunc_BI_GetOriginTransform_retValue) == 0x000040, "Member 'BattleCamActorFactory_C_GetOriginTransform::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetPartyMaxRelativeScale
// 0x0070 (0x0070 - 0x0000)
struct BattleCamActorFactory_C_GetPartyMaxRelativeScale final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ret;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Lo_MaxScale;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Max;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInField_retValue;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3511[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcBattleCameraScale_RetVal;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3512[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_const_GetPlayerLoopMax_retValue;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyLoopMax_retValue;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckFlag2_retValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetPartyMaxRelativeScale) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetPartyMaxRelativeScale");
static_assert(sizeof(BattleCamActorFactory_C_GetPartyMaxRelativeScale) == 0x000070, "Wrong size on BattleCamActorFactory_C_GetPartyMaxRelativeScale");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, Ret) == 0x000004, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::Ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, Lo_PartySystem) == 0x000008, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, Lo_MaxScale) == 0x000018, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::Lo_MaxScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, Lo_Max) == 0x00001C, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::Lo_Max' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, Lo_Start) == 0x000020, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, Temp_int_Variable) == 0x000024, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_IsInField_retValue) == 0x000029, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_IsInField_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_GetPartyUnit_retValue) == 0x000030, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_CalcBattleCameraScale_RetVal) == 0x00003C, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_CalcBattleCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BI_IsExist_retValue) == 0x000040, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BI_const_GetPlayerLoopMax_retValue) == 0x000044, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BI_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BI_const_GetPartyStart_retValue) == 0x000048, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BI_const_GetEnemyLoopMax_retValue) == 0x00004C, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BI_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BI_const_GetEnemyStart_retValue) == 0x000050, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BI_CheckFlag2_retValue) == 0x000054, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BI_CheckFlag2_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BooleanOR_ReturnValue) == 0x000056, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_Less_FloatFloat_ReturnValue) == 0x000057, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_GetPartySystem_ret) == 0x000058, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale, CallFunc_BooleanAND_ReturnValue_1) == 0x00006A, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetPartyMaxRelativeScale_New
// 0x0090 (0x0090 - 0x0000)
struct BattleCamActorFactory_C_GetPartyMaxRelativeScale_New final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHugeBattle;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3513[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Ret;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3514[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_List;                                           // 0x0010(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Lo_MaxScale;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Max;                                            // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3515[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetActListForRelativeScale_retValue;   // 0x0050(0x0010)(ReferenceParm)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3516[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcHugeBattleCameraScale_RetVal;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcBattleCameraScale_RetVal;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3517[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetPartyMaxRelativeScale_New");
static_assert(sizeof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New) == 0x000090, "Wrong size on BattleCamActorFactory_C_GetPartyMaxRelativeScale_New");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, IsHugeBattle) == 0x000004, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::IsHugeBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Ret) == 0x000008, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Lo_List) == 0x000010, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Lo_PartySystem) == 0x000020, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Lo_MaxScale) == 0x000030, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Lo_MaxScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Lo_Max) == 0x000034, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Lo_Max' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Lo_Start) == 0x000038, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_BI_GetActListForRelativeScale_retValue) == 0x000050, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_BI_GetActListForRelativeScale_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_GetPartyUnit_retValue) == 0x000060, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_CalcHugeBattleCameraScale_RetVal) == 0x00006C, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_CalcHugeBattleCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_CalcBattleCameraScale_RetVal) == 0x000070, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_CalcBattleCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_Less_FloatFloat_ReturnValue) == 0x00007D, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyMaxRelativeScale_New, CallFunc_GetPartySystem_ret) == 0x000080, "Member 'BattleCamActorFactory_C_GetPartyMaxRelativeScale_New::CallFunc_GetPartySystem_ret' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.SetCamActorPlayRate
// 0x0008 (0x0008 - 0x0000)
struct BattleCamActorFactory_C_SetCamActorPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_SetCamActorPlayRate) == 0x000004, "Wrong alignment on BattleCamActorFactory_C_SetCamActorPlayRate");
static_assert(sizeof(BattleCamActorFactory_C_SetCamActorPlayRate) == 0x000008, "Wrong size on BattleCamActorFactory_C_SetCamActorPlayRate");
static_assert(offsetof(BattleCamActorFactory_C_SetCamActorPlayRate, PlayRate) == 0x000000, "Member 'BattleCamActorFactory_C_SetCamActorPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCamActorPlayRate, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BattleCamActorFactory_C_SetCamActorPlayRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCamActorPlayRate, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BattleCamActorFactory_C_SetCamActorPlayRate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_N_Command
// 0x0A30 (0x0A30 - 0x0000)
struct BattleCamActorFactory_C_Spawn_N_Command final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBackOnly;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFrontOnly;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3518[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpOverride;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3519[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_ForceBlendOverride;                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_BeforeTargetVec;                                // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsCalcedBeforeVec;                              // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsRecalcRotation;                               // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351B[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_InterpOverride;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_CameraCategory;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsInterpReduce;                                 // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351C[0xF];                                     // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           Lo_RigRailData;                                    // 0x0050(0x0090)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         Lo_SightDistance;                                  // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351D[0xC];                                     // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_AdjustedCamPos;                                 // 0x00F0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             Lo_AdjustedOffsetTrans;                            // 0x0120(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsFrontOnly;                                    // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351E[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_TargetChara;                                    // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetPartyIndex;                               // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsBackOnly;                                     // 0x0164(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsIgnoreCheckSight;                             // 0x0165(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351F[0x2];                                     // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Lo_RowNamePool;                                    // 0x0168(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsLookatEnemyHeight;                            // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3520[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_CameraSideBF;                                   // 0x017C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsPassedNotFound;                               // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsLookatEnemyLine;                              // 0x0182(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3521[0x5];                                     // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_DebugMenuPath;                                  // 0x0188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_RowName;                                        // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3522[0x8];                                     // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Revise;                                         // 0x01B0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FString                                 Lo_DataName;                                       // 0x01E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3523[0x2];                                     // 0x01F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcCameraStartVec_ReturnValue;           // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectingTarget_IsSelecting;            // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsIgnoreCameraRelativeRotation_IsAdjust; // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3524[0x5];                                     // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main_1;          // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StartBlendOverride_retValue;           // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3525[0xF];                                     // 0x0231(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetBattleCameraTransform_retValue;     // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3526[0x2];                                     // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x02A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountAliveEnemies_num;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_RIG_RAIL_ORIGIN_TYPE                        Temp_byte_Variable;                                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCreateCommandCam_HaveToDo;           // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3527[0x1];                                     // 0x02B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCurrentCameraName_IsInclude;         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x02CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3528[0x3];                                     // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCommandYowRotation_ImmidiateYaw;      // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCommandYowRotation_AfterYaw;          // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigRailPlayInfo                       K2Node_MakeStruct_RigRailPlayInfo;                 // 0x02F4(0x0034)(NoDestructor)
	uint8                                         Pad_3529[0x8];                                     // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust; // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352A[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352B[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCommandPitchRotation_ImmidiatePitch;  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCommandPitchRotation_AfterPitch;      // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main_2;          // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352C[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352D[0x3];                                     // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352E[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_MakeName_Command_CameraNames;             // 0x03C8(0x0010)(ReferenceParm)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x03E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352F[0x4];                                     // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0450(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0480(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos;            // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid;              // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3530[0xF];                                     // 0x04E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_1;      // 0x04F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsAdjustRelativeDistance_IsAdjust; // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3531[0x3];                                     // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3532[0xC];                                     // 0x0584(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0590(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3533[0x4];                                     // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x05D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_2;      // 0x0600(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLookAtEnemyHeight_IsLook;               // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLookAtEnemyLine_IsLook;                 // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3534[0x2];                                     // 0x0632(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCommandCamLocation_Locat;              // 0x0634(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0640(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0670(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x067C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0688(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3535[0x4];                                     // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0698(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x06B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3536[0x4];                                     // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x06D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0700(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default;                             // 0x0730(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3537[0xF];                                     // 0x0761(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath;          // 0x0770(0x0030)(IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x07A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x07C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3538[0x7];                                     // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x07D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_CheckSplineSight_isClear;                 // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3539[0x6];                                     // 0x07EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue_1;          // 0x07F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353A[0x7];                                     // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x0838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353B[0xC];                                     // 0x0844(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default_1;                           // 0x0850(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0880(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353C[0x7];                                     // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0918(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0928(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Debug_GetCameraName_CameraName;           // 0x0938(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Debug_IsUseDebugData_IsUse;               // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353D[0x7];                                     // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0950(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0960(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0970(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353E[0x8];                                     // 0x0988(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0990(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_N_Command) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_N_Command");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_N_Command) == 0x000A30, "Wrong size on BattleCamActorFactory_C_Spawn_N_Command");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_N_Command::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, IsBackOnly) == 0x000004, "Member 'BattleCamActorFactory_C_Spawn_N_Command::IsBackOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, IsFrontOnly) == 0x000005, "Member 'BattleCamActorFactory_C_Spawn_N_Command::IsFrontOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, InterpOverride) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_N_Command::InterpOverride' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, RetValue) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_N_Command::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_ForceBlendOverride) == 0x000018, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_ForceBlendOverride' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_BeforeTargetVec) == 0x00001C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_BeforeTargetVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsCalcedBeforeVec) == 0x000028, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsCalcedBeforeVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsRecalcRotation) == 0x000029, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsRecalcRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_InterpOverride) == 0x00002C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_InterpOverride' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_CameraCategory) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_CameraCategory' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsInterpReduce) == 0x000040, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsInterpReduce' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_RigRailData) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_RigRailData' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_SightDistance) == 0x0000E0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_SightDistance' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_AdjustedCamPos) == 0x0000F0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_AdjustedCamPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_AdjustedOffsetTrans) == 0x000120, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_AdjustedOffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsFrontOnly) == 0x000150, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsFrontOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_TargetChara) == 0x000158, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_TargetChara' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_TargetPartyIndex) == 0x000160, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsBackOnly) == 0x000164, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsBackOnly' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsIgnoreCheckSight) == 0x000165, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsIgnoreCheckSight' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_RowNamePool) == 0x000168, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_RowNamePool' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsLookatEnemyHeight) == 0x000178, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsLookatEnemyHeight' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_CameraSideBF) == 0x00017C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_CameraSideBF' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsReserveDestroyCurrent) == 0x000180, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsPassedNotFound) == 0x000181, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsPassedNotFound' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_IsLookatEnemyLine) == 0x000182, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_IsLookatEnemyLine' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_DebugMenuPath) == 0x000188, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_DebugMenuPath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_RowName) == 0x000198, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_Revise) == 0x0001B0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_Revise' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Lo_DataName) == 0x0001E0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Lo_DataName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Array_Length_ReturnValue) == 0x0001F0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Temp_bool_Variable) == 0x0001F5, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcCameraStartVec_ReturnValue) == 0x0001F8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcCameraStartVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Dot_VectorVector_ReturnValue) == 0x000204, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IsValid_ReturnValue) == 0x000208, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IsSelectingTarget_IsSelecting) == 0x000209, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IsSelectingTarget_IsSelecting' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BattleDesignDebugIsIgnoreCameraRelativeRotation_IsAdjust) == 0x00020A, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BattleDesignDebugIsIgnoreCameraRelativeRotation_IsAdjust' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000210, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetMainWork_AsBPI_Battle_Main_1) == 0x000220, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetMainWork_AsBPI_Battle_Main_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BI_StartBlendOverride_retValue) == 0x000230, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BI_StartBlendOverride_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BI_GetBattleCameraTransform_retValue) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BI_GetBattleCameraTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Location) == 0x000270, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Rotation) == 0x00027C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Scale) == 0x000288, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetForwardVector_ReturnValue) == 0x000294, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IsValid_ReturnValue_1) == 0x0002A0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Not_PreBool_ReturnValue) == 0x0002A1, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Conv_StringToName_ReturnValue) == 0x0002A4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CountAliveEnemies_num) == 0x0002AC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CountAliveEnemies_num' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002B0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, Temp_byte_Variable) == 0x0002B1, "Member 'BattleCamActorFactory_C_Spawn_N_Command::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CheckCreateCommandCam_HaveToDo) == 0x0002B2, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CheckCreateCommandCam_HaveToDo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetHeroIndex_Index) == 0x0002B4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_SetCamFactory_Factory_CastInput) == 0x0002B8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CheckCurrentCameraName_IsInclude) == 0x0002C8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CheckCurrentCameraName_IsInclude' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002C9, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002CA, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetCurrentTargetType_TargetType) == 0x0002CB, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002CC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002CD, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002CE, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0002CF, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_DegCos_ReturnValue) == 0x0002D0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BooleanOR_ReturnValue) == 0x0002D4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002D5, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BooleanOR_ReturnValue_1) == 0x0002D6, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BooleanOR_ReturnValue_2) == 0x0002D7, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BooleanAND_ReturnValue) == 0x0002D8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcCommandYowRotation_ImmidiateYaw) == 0x0002DC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcCommandYowRotation_ImmidiateYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcCommandYowRotation_AfterYaw) == 0x0002E0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcCommandYowRotation_AfterYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_SelectFloat_ReturnValue) == 0x0002E4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_SelectFloat_ReturnValue_1) == 0x0002E8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002EC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_SelectFloat_ReturnValue_2) == 0x0002F0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, K2Node_MakeStruct_RigRailPlayInfo) == 0x0002F4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::K2Node_MakeStruct_RigRailPlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetOriginTransform_ret) == 0x000330, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Location_1) == 0x000360, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Rotation_1) == 0x00036C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Scale_1) == 0x000378, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust) == 0x000384, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BattleDesignDebugDisableAdjustRelativePitch_DisableAdjust' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_VSize_ReturnValue) == 0x000388, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Not_PreBool_ReturnValue_2) == 0x00038C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcCommandPitchRotation_ImmidiatePitch) == 0x000390, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcCommandPitchRotation_ImmidiatePitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcCommandPitchRotation_AfterPitch) == 0x000394, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcCommandPitchRotation_AfterPitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetMainWork_AsBPI_Battle_Main_2) == 0x000398, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetMainWork_AsBPI_Battle_Main_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_SelectFloat_ReturnValue_3) == 0x0003A8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0003B0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BI_IsHugeBattle_retValue) == 0x0003B8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BI_IsHugeBattle_DevID) == 0x0003BC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IsValid_ReturnValue_2) == 0x0003C0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeName_Command_CameraNames) == 0x0003C8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeName_Command_CameraNames' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_SelectFloat_ReturnValue_4) == 0x0003D8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0003DC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_InvertTransform_ReturnValue) == 0x0003E0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeRotator_ReturnValue) == 0x000410, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeTransform_ReturnValue) == 0x000420, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_ComposeTransforms_ReturnValue) == 0x000450, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000480, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Location_2) == 0x0004B0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Rotation_2) == 0x0004BC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Scale_2) == 0x0004C8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcLookAtGlobalPos_GlobalPos) == 0x0004D4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcLookAtGlobalPos_GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcLookAtGlobalPos_IsValid) == 0x0004E0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcLookAtGlobalPos_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeRelativeTransform_ReturnValue_1) == 0x0004F0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000520, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Location_3) == 0x00052C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Rotation_3) == 0x000538, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Scale_3) == 0x000544, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Normal_ReturnValue) == 0x000550, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00055C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_VSize_ReturnValue_1) == 0x000568, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_VSize_ReturnValue_2) == 0x00056C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BattleDesignDebugIsAdjustRelativeDistance_IsAdjust) == 0x000570, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BattleDesignDebugIsAdjustRelativeDistance_IsAdjust' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000574, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000578, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IdentifyTransform_ReturnValue) == 0x000590, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Add_VectorVector_ReturnValue) == 0x0005C0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeTransform_ReturnValue_1) == 0x0005D0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeRelativeTransform_ReturnValue_2) == 0x000600, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeRelativeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IsLookAtEnemyHeight_IsLook) == 0x000630, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IsLookAtEnemyHeight_IsLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IsLookAtEnemyLine_IsLook) == 0x000631, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IsLookAtEnemyLine_IsLook' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetCommandCamLocation_Locat) == 0x000634, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetCommandCamLocation_Locat' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetTransform_ReturnValue) == 0x000640, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Location_4) == 0x000670, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Rotation_4) == 0x00067C, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakTransform_Scale_4) == 0x000688, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Conv_TextToString_ReturnValue) == 0x000698, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakRotator_Roll) == 0x0006A8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakRotator_Pitch) == 0x0006AC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BreakRotator_Yaw) == 0x0006B0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeRotator_ReturnValue_1) == 0x0006B4, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeRotator_ReturnValue_2) == 0x0006C0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeTransform_ReturnValue_2) == 0x0006D0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_MakeTransform_ReturnValue_3) == 0x000700, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, K2Node_Select_Default) == 0x000730, "Member 'BattleCamActorFactory_C_Spawn_N_Command::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BooleanOR_ReturnValue_3) == 0x000760, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CalcUpVecOnlyTransform_ForDaath) == 0x000770, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CalcUpVecOnlyTransform_ForDaath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetPartyUnit_retValue) == 0x0007A0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Right_ReturnValue) == 0x0007A8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Conv_StringToInt_ReturnValue) == 0x0007B8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Array_Length_ReturnValue_1) == 0x0007BC, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Concat_StrStr_ReturnValue) == 0x0007C0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0007D0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, K2Node_MakeArray_Array) == 0x0007D8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_CheckSplineSight_isClear) == 0x0007E8, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_CheckSplineSight_isClear' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BooleanOR_ReturnValue_4) == 0x0007E9, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IdentifyTransform_ReturnValue_1) == 0x0007F0, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IdentifyTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BooleanOR_ReturnValue_5) == 0x000820, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000828, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_FinishSpawningActor_ReturnValue) == 0x000830, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetOriginUpVec_UpVec) == 0x000838, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, K2Node_Select_Default_1) == 0x000850, "Member 'BattleCamActorFactory_C_Spawn_N_Command::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000880, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000908, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_IsSameCameraName_IsSame) == 0x000910, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000918, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000928, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Debug_GetCameraName_CameraName) == 0x000938, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Debug_GetCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Debug_IsUseDebugData_IsUse) == 0x000948, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Debug_IsUseDebugData_IsUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000950, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000960, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000970, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000980, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetDataTableRowFromName_OutRow) == 0x000990, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_N_Command, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000A20, "Member 'BattleCamActorFactory_C_Spawn_N_Command::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ToCamera_N
// 0x00C0 (0x00C0 - 0x0000)
struct BattleCamActorFactory_C_ToCamera_N final
{
public:
	struct FVector                                Lo_TargetLocation;                                 // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BI_GetCommandTargetLocation_retValue;     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3540[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetRailCam_retValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_ToCamera_N) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_ToCamera_N");
static_assert(sizeof(BattleCamActorFactory_C_ToCamera_N) == 0x0000C0, "Wrong size on BattleCamActorFactory_C_ToCamera_N");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, Lo_TargetLocation) == 0x000000, "Member 'BattleCamActorFactory_C_ToCamera_N::Lo_TargetLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_GetPartySystem_ret) == 0x000040, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_BI_GetCommandTargetLocation_retValue) == 0x000074, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_BI_GetCommandTargetLocation_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_GetForwardVector_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00008C, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x0000A8, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ToCamera_N, CallFunc_BI_SetRailCam_retValue) == 0x0000B8, "Member 'BattleCamActorFactory_C_ToCamera_N::CallFunc_BI_SetRailCam_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.PrepareAccessors
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_PrepareAccessors final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_PrepareAccessors) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_PrepareAccessors");
static_assert(sizeof(BattleCamActorFactory_C_PrepareAccessors) == 0x000030, "Wrong size on BattleCamActorFactory_C_PrepareAccessors");
static_assert(offsetof(BattleCamActorFactory_C_PrepareAccessors, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000000, "Member 'BattleCamActorFactory_C_PrepareAccessors::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_PrepareAccessors, CallFunc_BI_GetPartySystem_ret) == 0x000010, "Member 'BattleCamActorFactory_C_PrepareAccessors::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_PrepareAccessors, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'BattleCamActorFactory_C_PrepareAccessors::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_PrepareAccessors, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BattleCamActorFactory_C_PrepareAccessors::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetMainInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_GetMainInterface final
{
public:
	TScriptInterface<class IBPI_MainInterface>    AsBPI_Main_Interface;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    K2Node_DynamicCast_AsBPI_Main_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetMainInterface) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetMainInterface");
static_assert(sizeof(BattleCamActorFactory_C_GetMainInterface) == 0x000030, "Wrong size on BattleCamActorFactory_C_GetMainInterface");
static_assert(offsetof(BattleCamActorFactory_C_GetMainInterface, AsBPI_Main_Interface) == 0x000000, "Member 'BattleCamActorFactory_C_GetMainInterface::AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetMainInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_GetMainInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetMainInterface, K2Node_DynamicCast_AsBPI_Main_Interface) == 0x000018, "Member 'BattleCamActorFactory_C_GetMainInterface::K2Node_DynamicCast_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetMainInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCamActorFactory_C_GetMainInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetPartyFlagInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_GetPartyFlagInterface final
{
public:
	TScriptInterface<class IBPI_PTFlagInterface>  AsBPI_PTFlag_Interface;                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTFlagInterface>  K2Node_DynamicCast_AsBPI_PTFlag_Interface;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetPartyFlagInterface) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetPartyFlagInterface");
static_assert(sizeof(BattleCamActorFactory_C_GetPartyFlagInterface) == 0x000030, "Wrong size on BattleCamActorFactory_C_GetPartyFlagInterface");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyFlagInterface, AsBPI_PTFlag_Interface) == 0x000000, "Member 'BattleCamActorFactory_C_GetPartyFlagInterface::AsBPI_PTFlag_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyFlagInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_GetPartyFlagInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyFlagInterface, K2Node_DynamicCast_AsBPI_PTFlag_Interface) == 0x000018, "Member 'BattleCamActorFactory_C_GetPartyFlagInterface::K2Node_DynamicCast_AsBPI_PTFlag_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyFlagInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCamActorFactory_C_GetPartyFlagInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetPartyUtilInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_GetPartyUtilInterface final
{
public:
	TScriptInterface<class IBPI_PTUtilInterface>  AsBPI_PTUtil_Interface;                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTUtilInterface>  K2Node_DynamicCast_AsBPI_PTUtil_Interface;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetPartyUtilInterface) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetPartyUtilInterface");
static_assert(sizeof(BattleCamActorFactory_C_GetPartyUtilInterface) == 0x000030, "Wrong size on BattleCamActorFactory_C_GetPartyUtilInterface");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUtilInterface, AsBPI_PTUtil_Interface) == 0x000000, "Member 'BattleCamActorFactory_C_GetPartyUtilInterface::AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUtilInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_GetPartyUtilInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUtilInterface, K2Node_DynamicCast_AsBPI_PTUtil_Interface) == 0x000018, "Member 'BattleCamActorFactory_C_GetPartyUtilInterface::K2Node_DynamicCast_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUtilInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCamActorFactory_C_GetPartyUtilInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetPartyUnitIniterface
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_GetPartyUnitIniterface final
{
public:
	TScriptInterface<class IBPI_PTBPInterface_C>  AsBPI_PTBPInterface;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTBPInterface_C>  K2Node_DynamicCast_AsBPI_PTBPInterface;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetPartyUnitIniterface) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetPartyUnitIniterface");
static_assert(sizeof(BattleCamActorFactory_C_GetPartyUnitIniterface) == 0x000030, "Wrong size on BattleCamActorFactory_C_GetPartyUnitIniterface");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnitIniterface, AsBPI_PTBPInterface) == 0x000000, "Member 'BattleCamActorFactory_C_GetPartyUnitIniterface::AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnitIniterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_GetPartyUnitIniterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnitIniterface, K2Node_DynamicCast_AsBPI_PTBPInterface) == 0x000018, "Member 'BattleCamActorFactory_C_GetPartyUnitIniterface::K2Node_DynamicCast_AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetPartyUnitIniterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCamActorFactory_C_GetPartyUnitIniterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.InvestigateSideMaxSizeFloat
// 0x00A8 (0x00A8 - 0x0000)
struct BattleCamActorFactory_C_InvestigateSideMaxSizeFloat final
{
public:
	bool                                          IsPlayerSide;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3541[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_TempScale;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MaxScale;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_CategoryString;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_Size;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3542[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_retValue;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3543[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcBattleCameraScale_RetVal;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3544[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConstGetEnemyLoopMax_retValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3545[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConstGetPartyLoopMax_retValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3546[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConstGetEnemyStart_retValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConstGetPartyStart_retValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3547[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_Array_Get_Item;                           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3548[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BI_CalcBattleCameraScale_Scale;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharaParamComponent*                   CallFunc_BI_GetCharaParamComponent_Comp;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_InvestigateSideMaxSizeFloat");
static_assert(sizeof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat) == 0x0000A8, "Wrong size on BattleCamActorFactory_C_InvestigateSideMaxSizeFloat");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, IsPlayerSide) == 0x000000, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::IsPlayerSide' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Scale) == 0x000004, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Lo_TempScale) == 0x000008, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Lo_TempScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Lo_MaxScale) == 0x00000C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Lo_MaxScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Lo_CategoryString) == 0x000010, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Lo_CategoryString' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Lo_Size) == 0x000020, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Lo_Size' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Temp_int_Variable) == 0x000028, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_IsInField_retValue) == 0x00002C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_IsInField_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_GetPartyUnit_retValue) == 0x000030, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_CalcBattleCameraScale_RetVal) == 0x000038, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_CalcBattleCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_SelectFloat_ReturnValue) == 0x000044, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_ConstGetEnemyLoopMax_retValue) == 0x000048, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_ConstGetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_ConstGetPartyLoopMax_retValue) == 0x000050, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_ConstGetPartyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_SelectFloat_ReturnValue_1) == 0x000054, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_SelectInt_ReturnValue) == 0x000058, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_ConstGetEnemyStart_retValue) == 0x000060, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_ConstGetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_ConstGetPartyStart_retValue) == 0x000064, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_ConstGetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_SelectInt_ReturnValue_1) == 0x00006C, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Array_Get_Item) == 0x000080, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_BI_CalcBattleCameraScale_Scale) == 0x000094, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_BI_CalcBattleCameraScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_BI_GetCharaParamComponent_Comp) == 0x000098, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_BI_GetCharaParamComponent_Comp' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A5, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_BooleanXOR_ReturnValue) == 0x0000A6, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_InvestigateSideMaxSizeFloat, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A7, "Member 'BattleCamActorFactory_C_InvestigateSideMaxSizeFloat::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.ConsiderSkillCameraRotation
// 0x0370 (0x0370 - 0x0000)
struct BattleCamActorFactory_C_ConsiderSkillCameraRotation final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3549[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OriginTrans;                                       // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          BattleCamType;                                     // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354A[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0044(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          Lo_CamType;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354B[0xF];                                     // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Origin;                                         // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         Lo_Actor;                                          // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Target;                                         // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_OriginForward;                                  // 0x0098(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToActor;                                        // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToActorRight;                                   // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret_1;                     // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret_2;                     // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354C[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret_3;                     // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354D[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue;      // 0x0120(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354E[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354F[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetPartyTransform_retValue;            // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3550[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_1;                       // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3551[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_1;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3552[0x8];                                     // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetPartyTransform_retValue_1;          // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3553[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_2;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_Select_Default;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn_1;                // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3554[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3555[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomPawn*                            K2Node_Select_Default_1;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue_1; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue_2; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_BI_GetPartyTransform_retValue_2;          // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3556[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3557[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_ConsiderSkillCameraRotation) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_ConsiderSkillCameraRotation");
static_assert(sizeof(BattleCamActorFactory_C_ConsiderSkillCameraRotation) == 0x000370, "Wrong size on BattleCamActorFactory_C_ConsiderSkillCameraRotation");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, TargetIndex) == 0x000000, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, ActorIndex) == 0x000004, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, OriginTrans) == 0x000010, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::OriginTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, BattleCamType) == 0x000040, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::BattleCamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Rotation) == 0x000044, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Lo_CamType) == 0x000050, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Lo_CamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Lo_Origin) == 0x000060, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Lo_Origin' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Lo_Actor) == 0x000090, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Lo_Target) == 0x000094, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Lo_OriginForward) == 0x000098, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Lo_OriginForward' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Lo_ToActor) == 0x0000A4, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Lo_ToActor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Lo_ToActorRight) == 0x0000B0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Lo_ToActorRight' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartySystem_ret) == 0x0000C0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartySystem_ret_1) == 0x0000D0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartySystem_ret_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartySystem_ret_2) == 0x0000E0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartySystem_ret_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Temp_bool_Variable) == 0x0000F0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface) == 0x0000F8, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartySystem_ret_3) == 0x000108, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartySystem_ret_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Temp_bool_Variable_1) == 0x000118, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BI_GetSide_side) == 0x000119, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BI_GetSideIsInFieldList_ReturnValue) == 0x000120, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BI_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, K2Node_SwitchEnum_CmpSuccess) == 0x000130, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Array_Get_Item) == 0x000134, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BI_GetPartyTransform_retValue) == 0x000140, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BI_GetPartyTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartyUnit_retValue) == 0x000170, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Divide_VectorInt_ReturnValue) == 0x00017C, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue) == 0x000188, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_MakeVector_ReturnValue) == 0x00018C, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000198, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, Temp_int_Loop_Counter_Variable) == 0x0001A4, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001A8, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B4, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Less_IntInt_ReturnValue) == 0x0001C0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Add_IntInt_ReturnValue) == 0x0001C4, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_IsEnemy_retValue) == 0x0001C8, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_IsEnemy_retValue_1) == 0x0001C9, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_IsEnemy_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BooleanXOR_ReturnValue) == 0x0001CA, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Not_PreBool_ReturnValue) == 0x0001CB, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BreakTransform_Location) == 0x0001CC, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BreakTransform_Rotation) == 0x0001D8, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BreakTransform_Scale) == 0x0001E4, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetForwardVector_ReturnValue) == 0x0001F0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartyUnit_retValue_1) == 0x000200, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartyUnit_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BI_GetPartyTransform_retValue_1) == 0x000210, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BI_GetPartyTransform_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetOwner_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, K2Node_DynamicCast_AsCustom_Pawn) == 0x000248, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, K2Node_DynamicCast_bSuccess) == 0x000250, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetPartyUnit_retValue_2) == 0x000258, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetPartyUnit_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetOwner_ReturnValue_1) == 0x000260, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, K2Node_Select_Default) == 0x000268, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, K2Node_DynamicCast_AsCustom_Pawn_1) == 0x000270, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::K2Node_DynamicCast_AsCustom_Pawn_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, K2Node_DynamicCast_bSuccess_1) == 0x000278, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00027C, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetActorRightVector_ReturnValue) == 0x000288, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, K2Node_Select_Default_1) == 0x000298, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002A0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue_1) == 0x0002AC, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue_2) == 0x0002B0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_MakeVector_ReturnValue_1) == 0x0002B4, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_MakeVector_ReturnValue_2) == 0x0002C0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002CC, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0002D8, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0002E4, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_BI_GetPartyTransform_retValue_2) == 0x0002F0, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_BI_GetPartyTransform_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Normal_ReturnValue) == 0x000320, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Dot_VectorVector_ReturnValue) == 0x00032C, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000330, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_SelectFloat_ReturnValue) == 0x000334, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000338, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_DegAcos_ReturnValue) == 0x00033C, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000340, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000344, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_MakeRotator_ReturnValue) == 0x000348, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000354, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_SelectFloat_ReturnValue_1) == 0x000358, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_ConsiderSkillCameraRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00035C, "Member 'BattleCamActorFactory_C_ConsiderSkillCameraRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetSelectedTargetLocation
// 0x0068 (0x0068 - 0x0000)
struct BattleCamActorFactory_C_GetSelectedTargetLocation final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3558[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetInvTargetIndex_TargetIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root;              // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation;    // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate;            // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetSelectedTargetLocation) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetSelectedTargetLocation");
static_assert(sizeof(BattleCamActorFactory_C_GetSelectedTargetLocation) == 0x000068, "Wrong size on BattleCamActorFactory_C_GetSelectedTargetLocation");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, SocketName) == 0x000000, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, Location) == 0x000008, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, Valid) == 0x000014, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000018, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000028, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, CallFunc_BI_GetInvTargetIndex_TargetIndex) == 0x000038, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::CallFunc_BI_GetInvTargetIndex_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, CallFunc_CalcUnitSocketLocation_Root) == 0x00003C, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::CallFunc_CalcUnitSocketLocation_Root' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, CallFunc_CalcUnitSocketLocation_SocketLocation) == 0x000048, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::CallFunc_CalcUnitSocketLocation_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, CallFunc_CalcUnitSocketLocation_Rotate) == 0x000054, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::CallFunc_CalcUnitSocketLocation_Rotate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetSelectedTargetLocation, CallFunc_CalcUnitSocketLocation_Valid) == 0x000060, "Member 'BattleCamActorFactory_C_GetSelectedTargetLocation::CallFunc_CalcUnitSocketLocation_Valid' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetUnitSocketLocation
// 0x00B0 (0x00B0 - 0x0000)
struct BattleCamActorFactory_C_GetUnitSocketLocation final
{
public:
	class ACharaBase_C*                           Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Locat;                                             // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3559[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USpringArmComponent*>            Lo_SpringArms;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class USpringArmComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355A[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpringArmComponent*                    CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnfixedCameraPosition_ReturnValue;     // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355C[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetUnitSocketLocation) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetUnitSocketLocation");
static_assert(sizeof(BattleCamActorFactory_C_GetUnitSocketLocation) == 0x0000B0, "Wrong size on BattleCamActorFactory_C_GetUnitSocketLocation");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, Target) == 0x000000, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::Target' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, Socket) == 0x000008, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::Socket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, Locat) == 0x000010, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::Locat' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, Lo_SpringArms) == 0x000020, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::Lo_SpringArms' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000040, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000050, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00005C, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_DoesSocketExist_ReturnValue) == 0x000068, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_Array_Get_Item) == 0x000078, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_GetUnfixedCameraPosition_ReturnValue) == 0x000084, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_GetUnfixedCameraPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_GetObjectName_ReturnValue) == 0x000098, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitSocketLocation, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000AC, "Member 'BattleCamActorFactory_C_GetUnitSocketLocation::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.EnableMotionBlur
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_EnableMotionBlur final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattlePostProcessCtrl_C> CallFunc_BI_GetPostProcessCtrl_retValue;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_MotionBlurEnable_NoUse;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_EnableMotionBlur) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_EnableMotionBlur");
static_assert(sizeof(BattleCamActorFactory_C_EnableMotionBlur) == 0x000030, "Wrong size on BattleCamActorFactory_C_EnableMotionBlur");
static_assert(offsetof(BattleCamActorFactory_C_EnableMotionBlur, Enable) == 0x000000, "Member 'BattleCamActorFactory_C_EnableMotionBlur::Enable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_EnableMotionBlur, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000008, "Member 'BattleCamActorFactory_C_EnableMotionBlur::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_EnableMotionBlur, CallFunc_BI_GetPostProcessCtrl_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_EnableMotionBlur::CallFunc_BI_GetPostProcessCtrl_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_EnableMotionBlur, CallFunc_BI_MotionBlurEnable_NoUse) == 0x000028, "Member 'BattleCamActorFactory_C_EnableMotionBlur::CallFunc_BI_MotionBlurEnable_NoUse' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.SetCommandCamInfo
// 0x0038 (0x0038 - 0x0000)
struct BattleCamActorFactory_C_SetCommandCamInfo final
{
public:
	int32                                         CommandTargetParty;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectingTarget_IsSelecting;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355E[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetInvTargetIndex_TargetIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_SetCommandCamInfo) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_SetCommandCamInfo");
static_assert(sizeof(BattleCamActorFactory_C_SetCommandCamInfo) == 0x000038, "Wrong size on BattleCamActorFactory_C_SetCommandCamInfo");
static_assert(offsetof(BattleCamActorFactory_C_SetCommandCamInfo, CommandTargetParty) == 0x000000, "Member 'BattleCamActorFactory_C_SetCommandCamInfo::CommandTargetParty' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCommandCamInfo, CallFunc_GetCurrentTargetType_TargetType) == 0x000004, "Member 'BattleCamActorFactory_C_SetCommandCamInfo::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCommandCamInfo, CallFunc_IsSelectingTarget_IsSelecting) == 0x000005, "Member 'BattleCamActorFactory_C_SetCommandCamInfo::CallFunc_IsSelectingTarget_IsSelecting' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCommandCamInfo, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000008, "Member 'BattleCamActorFactory_C_SetCommandCamInfo::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCommandCamInfo, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BattleCamActorFactory_C_SetCommandCamInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCommandCamInfo, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000020, "Member 'BattleCamActorFactory_C_SetCommandCamInfo::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_SetCommandCamInfo, CallFunc_BI_GetInvTargetIndex_TargetIndex) == 0x000030, "Member 'BattleCamActorFactory_C_SetCommandCamInfo::CallFunc_BI_GetInvTargetIndex_TargetIndex' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CountAliveEnemies
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_CountAliveEnemies final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Exists;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue;      // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CountAliveEnemies) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_CountAliveEnemies");
static_assert(sizeof(BattleCamActorFactory_C_CountAliveEnemies) == 0x000030, "Wrong size on BattleCamActorFactory_C_CountAliveEnemies");
static_assert(offsetof(BattleCamActorFactory_C_CountAliveEnemies, Num) == 0x000000, "Member 'BattleCamActorFactory_C_CountAliveEnemies::Num' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CountAliveEnemies, Lo_Exists) == 0x000004, "Member 'BattleCamActorFactory_C_CountAliveEnemies::Lo_Exists' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CountAliveEnemies, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface) == 0x000008, "Member 'BattleCamActorFactory_C_CountAliveEnemies::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CountAliveEnemies, CallFunc_BI_GetSideIsInFieldList_ReturnValue) == 0x000018, "Member 'BattleCamActorFactory_C_CountAliveEnemies::CallFunc_BI_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CountAliveEnemies, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BattleCamActorFactory_C_CountAliveEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcSkillCameraTrans
// 0x0990 (0x0990 - 0x0000)
struct BattleCamActorFactory_C_CalcSkillCameraTrans final
{
public:
	int32                                         ActorPartyIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetPartyIndex;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RailOffsetOriginSocket;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReverseCamera;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3560[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ConsideredTrans;                                   // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FString                                 CameraName;                                        // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          CamType;                                           // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3561[0xF];                                     // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0070(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_TeamSocketLocation;                             // 0x00A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Lo_TeamRotation;                                   // 0x00AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          Lo_CamType;                                        // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3562[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_CameraName;                                     // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Lo_ConsideredTrans;                                // 0x00D0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsReverseCamera;                                // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3563[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ActorPartyIndex;                                // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_RailOffsetOriginSocket;                         // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetPartyIndex;                               // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3564[0x9];                                     // 0x0117(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3565[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3566[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3567[0x6];                                     // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue;      // 0x01E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root;              // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation;    // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate;            // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid;             // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3568[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3569[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356A[0xC];                                     // 0x0274(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath;          // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356B[0x8];                                     // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356C[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath_1;        // 0x0370(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x03A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root_1;            // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation_1;  // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate_1;          // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid_1;           // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_1;                       // 0x03F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356D[0x2];                                     // 0x03F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356E[0x4];                                     // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_ret_1;                 // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356F[0x3];                                     // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAxes_X_1;                              // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y_1;                              // 0x0464(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z_1;                              // 0x0470(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x04AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3570[0x8];                                     // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x04C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x04F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath_2;        // 0x0520(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default;                             // 0x0550(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetOriginTransform_ret_2;                 // 0x0580(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_retValue_2;                       // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3571[0x3];                                     // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X_2;                              // 0x05DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y_2;                              // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z_2;                              // 0x05F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3572[0x3];                                     // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0604(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_2;              // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3573[0x4];                                     // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default_1;                           // 0x0620(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetOriginTransform_ret_3;                 // 0x0650(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3574[0xF];                                     // 0x0681(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default_2;                           // 0x0690(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3575[0x6];                                     // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface_1; // 0x06C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3576[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret_1;                     // 0x06E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side_1;                        // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3577[0x6];                                     // 0x06F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue_1;    // 0x06F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3578[0x3];                                     // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3579[0x3];                                     // 0x0711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x071C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357A[0x3];                                     // 0x071D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x072C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root_2;            // 0x0738(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation_2;  // 0x0744(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate_2;          // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid_2;           // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357B[0x3];                                     // 0x075D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0760(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357C[0x3];                                     // 0x0771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357D[0x4];                                     // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_ret_4;                 // 0x0780(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x07B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x07BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x07C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x07D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357E[0x3];                                     // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAxes_X_3;                              // 0x07D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y_3;                              // 0x07E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z_3;                              // 0x07F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnitSocketLocation_Locat;              // 0x0808(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357F[0x4];                                     // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3580[0x7];                                     // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default_3;                           // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3581[0xC];                                     // 0x0844(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0850(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_3;              // 0x0880(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x088C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0898(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x08A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3582[0x4];                                     // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x08C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x08F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3583[0x4];                                     // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcUpVecOnlyTransform_ForDaath_3;        // 0x0900(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0930(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default_4;                           // 0x0960(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CalcSkillCameraTrans) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcSkillCameraTrans");
static_assert(sizeof(BattleCamActorFactory_C_CalcSkillCameraTrans) == 0x000990, "Wrong size on BattleCamActorFactory_C_CalcSkillCameraTrans");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, ActorPartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::ActorPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, TargetPartyIndex) == 0x000004, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, RailOffsetOriginSocket) == 0x000008, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::RailOffsetOriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, IsReverseCamera) == 0x000010, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::IsReverseCamera' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, ConsideredTrans) == 0x000020, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::ConsideredTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CameraName) == 0x000050, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CamType) == 0x000060, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, ReturnValue) == 0x000070, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_TeamSocketLocation) == 0x0000A0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_TeamSocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_TeamRotation) == 0x0000AC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_TeamRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_CamType) == 0x0000B8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_CamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_CameraName) == 0x0000C0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_ConsideredTrans) == 0x0000D0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_ConsideredTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_IsReverseCamera) == 0x000100, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_IsReverseCamera' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_ActorPartyIndex) == 0x000104, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_ActorPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_RailOffsetOriginSocket) == 0x000108, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_RailOffsetOriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Lo_TargetPartyIndex) == 0x000110, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Lo_TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_bool_Variable) == 0x000114, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_bool_Variable_1) == 0x000115, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_bool_Variable_2) == 0x000116, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetOriginTransform_ret) == 0x000120, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_IsEnemy_retValue) == 0x000150, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Location) == 0x000154, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Rotation) == 0x000160, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Scale) == 0x00016C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_SelectFloat_ReturnValue) == 0x000178, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_X) == 0x00017C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Y) == 0x000188, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Z) == 0x000194, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001A4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotFromZX_ReturnValue) == 0x0001B0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface) == 0x0001C0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetPartySystem_ret) == 0x0001D0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BI_GetSide_side) == 0x0001E0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001E1, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BI_GetSideIsInFieldList_ReturnValue) == 0x0001E8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BI_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Array_Length_ReturnValue) == 0x0001FC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Root) == 0x000200, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Root' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_SocketLocation) == 0x00020C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Rotate) == 0x000218, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Rotate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Valid) == 0x000224, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Array_Length_ReturnValue_1) == 0x000228, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Add_VectorVector_ReturnValue) == 0x00022C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Greater_IntInt_ReturnValue) == 0x000238, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00023C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeVector_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_SelectFloat_ReturnValue_1) == 0x00024C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000250, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Roll) == 0x00025C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Pitch) == 0x000260, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Yaw) == 0x000264, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotator_ReturnValue) == 0x000268, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue) == 0x000280, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue_1) == 0x0002B0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUpVecOnlyTransform_ForDaath) == 0x0002E0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUpVecOnlyTransform_ForDaath' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeVector_ReturnValue_1) == 0x000310, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Roll_1) == 0x00031C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Pitch_1) == 0x000320, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Yaw_1) == 0x000324, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue_2) == 0x000330, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotator_ReturnValue_1) == 0x000360, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUpVecOnlyTransform_ForDaath_1) == 0x000370, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUpVecOnlyTransform_ForDaath_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue_3) == 0x0003A0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Root_1) == 0x0003D0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Root_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_SocketLocation_1) == 0x0003DC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_SocketLocation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Rotate_1) == 0x0003E8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Rotate_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Valid_1) == 0x0003F4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Valid_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_IsEnemy_retValue_1) == 0x0003F5, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_IsEnemy_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_SelectFloat_ReturnValue_2) == 0x0003F8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetOriginTransform_ret_1) == 0x000400, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetOriginTransform_ret_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Location_1) == 0x000430, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Rotation_1) == 0x00043C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Scale_1) == 0x000448, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000454, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_X_1) == 0x000458, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_X_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Y_1) == 0x000464, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Y_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Z_1) == 0x000470, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Z_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00047C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000488, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeVector_ReturnValue_2) == 0x000494, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Roll_2) == 0x0004A0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Pitch_2) == 0x0004A4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Yaw_2) == 0x0004A8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotator_ReturnValue_2) == 0x0004AC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue_4) == 0x0004C0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue_5) == 0x0004F0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUpVecOnlyTransform_ForDaath_2) == 0x000520, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUpVecOnlyTransform_ForDaath_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, K2Node_Select_Default) == 0x000550, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetOriginTransform_ret_2) == 0x000580, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetOriginTransform_ret_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_IsEnemy_retValue_2) == 0x0005B0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_IsEnemy_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Location_2) == 0x0005B4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Rotation_2) == 0x0005C0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Scale_2) == 0x0005CC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_SelectFloat_ReturnValue_3) == 0x0005D8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_X_2) == 0x0005DC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_X_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Y_2) == 0x0005E8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Y_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Z_2) == 0x0005F4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Z_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_bool_Variable_3) == 0x000600, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000604, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotFromZX_ReturnValue_2) == 0x000610, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotFromZX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, K2Node_Select_Default_1) == 0x000620, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetOriginTransform_ret_3) == 0x000650, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetOriginTransform_ret_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_bool_Variable_4) == 0x000680, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, K2Node_Select_Default_2) == 0x000690, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0006C0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0006C1, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface_1) == 0x0006C8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BooleanOR_ReturnValue) == 0x0006D8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetPartySystem_ret_1) == 0x0006E0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetPartySystem_ret_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BI_GetSide_side_1) == 0x0006F0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BI_GetSide_side_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0006F1, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BI_GetSideIsInFieldList_ReturnValue_1) == 0x0006F8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BI_GetSideIsInFieldList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000708, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Array_Length_ReturnValue_2) == 0x00070C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BooleanOR_ReturnValue_1) == 0x000710, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Array_Length_ReturnValue_3) == 0x000714, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000718, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00071C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_int_Array_Index_Variable_1) == 0x000720, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_SelectFloat_ReturnValue_4) == 0x000724, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Array_Get_Item_1) == 0x000728, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x00072C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Root_2) == 0x000738, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Root_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_SocketLocation_2) == 0x000744, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_SocketLocation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Rotate_2) == 0x000750, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Rotate_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUnitSocketLocation_Valid_2) == 0x00075C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUnitSocketLocation_Valid_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000760, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_int_Loop_Counter_Variable) == 0x00076C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Less_IntInt_ReturnValue) == 0x000770, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Add_IntInt_ReturnValue) == 0x000774, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, Temp_int_Loop_Counter_Variable_1) == 0x000778, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetOriginTransform_ret_4) == 0x000780, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetOriginTransform_ret_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Location_3) == 0x0007B0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Rotation_3) == 0x0007BC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Scale_3) == 0x0007C8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Less_IntInt_ReturnValue_1) == 0x0007D4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_X_3) == 0x0007D8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_X_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Y_3) == 0x0007E4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Y_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetAxes_Z_3) == 0x0007F0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetAxes_Z_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_Add_IntInt_ReturnValue_1) == 0x0007FC, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetPartyUnit_retValue) == 0x000800, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetUnitSocketLocation_Locat) == 0x000808, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetUnitSocketLocation_Locat' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetOwner_ReturnValue) == 0x000818, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, K2Node_DynamicCast_AsCustom_Pawn) == 0x000820, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, K2Node_DynamicCast_bSuccess) == 0x000828, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, K2Node_Select_Default_3) == 0x000830, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetActorForwardVector_ReturnValue) == 0x000838, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_GetTransform_ReturnValue) == 0x000850, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotFromZX_ReturnValue_3) == 0x000880, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotFromZX_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Location_4) == 0x00088C, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Rotation_4) == 0x000898, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakTransform_Scale_4) == 0x0008A4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Roll_3) == 0x0008B0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Pitch_3) == 0x0008B4, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_BreakRotator_Yaw_3) == 0x0008B8, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue_6) == 0x0008C0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeRotator_ReturnValue_3) == 0x0008F0, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_CalcUpVecOnlyTransform_ForDaath_3) == 0x000900, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_CalcUpVecOnlyTransform_ForDaath_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, CallFunc_MakeTransform_ReturnValue_7) == 0x000930, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraTrans, K2Node_Select_Default_4) == 0x000960, "Member 'BattleCamActorFactory_C_CalcSkillCameraTrans::K2Node_Select_Default_4' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IsRangeSkillCamera
// 0x0018 (0x0018 - 0x0000)
struct BattleCamActorFactory_C_IsRangeSkillCamera final
{
public:
	class FString                                 CameraName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_1;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_2;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsRangeSkillCamera) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_IsRangeSkillCamera");
static_assert(sizeof(BattleCamActorFactory_C_IsRangeSkillCamera) == 0x000018, "Wrong size on BattleCamActorFactory_C_IsRangeSkillCamera");
static_assert(offsetof(BattleCamActorFactory_C_IsRangeSkillCamera, CameraName) == 0x000000, "Member 'BattleCamActorFactory_C_IsRangeSkillCamera::CameraName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsRangeSkillCamera, ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_IsRangeSkillCamera::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsRangeSkillCamera, CallFunc_MatchesWildcard_ReturnValue) == 0x000011, "Member 'BattleCamActorFactory_C_IsRangeSkillCamera::CallFunc_MatchesWildcard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsRangeSkillCamera, CallFunc_MatchesWildcard_ReturnValue_1) == 0x000012, "Member 'BattleCamActorFactory_C_IsRangeSkillCamera::CallFunc_MatchesWildcard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsRangeSkillCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'BattleCamActorFactory_C_IsRangeSkillCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsRangeSkillCamera, CallFunc_MatchesWildcard_ReturnValue_2) == 0x000014, "Member 'BattleCamActorFactory_C_IsRangeSkillCamera::CallFunc_MatchesWildcard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsRangeSkillCamera, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'BattleCamActorFactory_C_IsRangeSkillCamera::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcSkillCameraScaleReduction
// 0x0070 (0x0070 - 0x0000)
struct BattleCamActorFactory_C_CalcSkillCameraScaleReduction final
{
public:
	struct FTransform                             ConsideredTrans;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Range;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReductionScale;                                    // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcSkillCameraScaleReduction");
static_assert(sizeof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction) == 0x000070, "Wrong size on BattleCamActorFactory_C_CalcSkillCameraScaleReduction");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, ConsideredTrans) == 0x000000, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::ConsideredTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, Range) == 0x000030, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::Range' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, ReductionScale) == 0x000034, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::ReductionScale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, CallFunc_BreakTransform_Location) == 0x000038, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, CallFunc_BreakTransform_Rotation) == 0x000044, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, CallFunc_BreakTransform_Scale) == 0x000050, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, CallFunc_VSize_ReturnValue) == 0x00005C, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcSkillCameraScaleReduction, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_CalcSkillCameraScaleReduction::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.RetrieveRigRailData
// 0x0390 (0x0390 - 0x0000)
struct BattleCamActorFactory_C_RetrieveRigRailData final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3584[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           RigRailData;                                       // 0x0010(0x0090)(Parm, OutParm, HasGetValueTypeHash)
	struct FRigRailPlayInfo                       K2Node_MakeStruct_RigRailPlayInfo;                 // 0x00A0(0x0034)(NoDestructor)
	uint8                                         Pad_3585[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E0(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3586[0xF];                                     // 0x0171(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0180(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3587[0xF];                                     // 0x0211(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0220(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3588[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCustomSplinePoint>             K2Node_MakeArray_Array;                            // 0x02B8(0x0010)(ReferenceParm)
	uint8                                         Pad_3589[0x8];                                     // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRigRailData                           K2Node_MakeStruct_RigRailData;                     // 0x0300(0x0090)(HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_RetrieveRigRailData) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_RetrieveRigRailData");
static_assert(sizeof(BattleCamActorFactory_C_RetrieveRigRailData) == 0x000390, "Wrong size on BattleCamActorFactory_C_RetrieveRigRailData");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, RowName) == 0x000000, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, IsValid) == 0x000008, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, RigRailData) == 0x000010, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::RigRailData' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, K2Node_MakeStruct_RigRailPlayInfo) == 0x0000A0, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::K2Node_MakeStruct_RigRailPlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E0, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000170, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000180, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000210, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000220, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0002B0, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, K2Node_MakeArray_Array) == 0x0002B8, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, CallFunc_MakeTransform_ReturnValue) == 0x0002D0, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_RetrieveRigRailData, K2Node_MakeStruct_RigRailData) == 0x000300, "Member 'BattleCamActorFactory_C_RetrieveRigRailData::K2Node_MakeStruct_RigRailData' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcUnitSocketLocation
// 0x02C0 (0x02C0 - 0x0000)
struct BattleCamActorFactory_C_CalcUnitSocketLocation final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForCommandCam;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUseHomeTrans;                                    // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358A[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Root;                                              // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SocketLocation;                                    // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotate;                                            // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IgnoreZOffset;                                  // 0x0035(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358B[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_PartyUnit;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Lo_PartyTrans;                                     // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_LocalSocketLocation;                            // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358D[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetCommandBoxTrans_Trans;                 // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358E[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358F[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BI_GetPartyTransform_retValue;            // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3590[0xF];                                     // 0x01E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3591[0xC];                                     // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Native_OutRoot;    // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Native_OutSocketLoc; // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcUnitSocketLocation) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcUnitSocketLocation");
static_assert(sizeof(BattleCamActorFactory_C_CalcUnitSocketLocation) == 0x0002C0, "Wrong size on BattleCamActorFactory_C_CalcUnitSocketLocation");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, SocketName) == 0x000004, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, IsForCommandCam) == 0x00000C, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::IsForCommandCam' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, IsUseHomeTrans) == 0x00000D, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::IsUseHomeTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, Root) == 0x000010, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::Root' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, SocketLocation) == 0x00001C, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, Rotate) == 0x000028, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::Rotate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, Valid) == 0x000034, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, Lo_IgnoreZOffset) == 0x000035, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::Lo_IgnoreZOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, Lo_PartyUnit) == 0x000038, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::Lo_PartyUnit' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, Lo_PartyTrans) == 0x000040, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::Lo_PartyTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, Lo_LocalSocketLocation) == 0x000070, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::Lo_LocalSocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GetPartyUnit_retValue) == 0x000080, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_IsEnemy_retValue) == 0x000088, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_IsEnemy_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GetCommandBoxTrans_Trans) == 0x000090, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GetCommandBoxTrans_Trans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation) == 0x0000CC, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_1) == 0x0000E4, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_1) == 0x0000F0, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_1) == 0x0000FC, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GetUpVector_ReturnValue) == 0x000108, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakVector_X) == 0x000114, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakVector_Y) == 0x000118, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakVector_Z) == 0x00011C, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000120, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GetSocketTransform_ReturnValue) == 0x000130, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000160, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_2) == 0x00016C, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_2) == 0x000178, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_2) == 0x000184, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000190, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GetPartySystem_ret) == 0x0001A0, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BI_GetPartyTransform_retValue) == 0x0001B0, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BI_GetPartyTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GetTransform_ReturnValue) == 0x0001F0, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_3) == 0x000220, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_3) == 0x00022C, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_3) == 0x000238, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_GetSocketTransform_retValue) == 0x000250, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_GetSocketTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_4) == 0x000280, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_4) == 0x00028C, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_4) == 0x000298, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_SelectFloat_ReturnValue) == 0x0002A4, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_CalcUnitSocketLocation_Native_OutRoot) == 0x0002A8, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_CalcUnitSocketLocation_Native_OutRoot' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcUnitSocketLocation, CallFunc_CalcUnitSocketLocation_Native_OutSocketLoc) == 0x0002B4, "Member 'BattleCamActorFactory_C_CalcUnitSocketLocation::CallFunc_CalcUnitSocketLocation_Native_OutSocketLoc' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetCommandCamLocation
// 0x0130 (0x0130 - 0x0000)
struct BattleCamActorFactory_C_GetCommandCamLocation final
{
public:
	class ACharaBase_C*                           Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Locat;                                             // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USpringArmComponent*>            Lo_SpringArms;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root;              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation;    // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate;            // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3592[0xB];                                     // 0x0055(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetCommandCamLocation) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_GetCommandCamLocation");
static_assert(sizeof(BattleCamActorFactory_C_GetCommandCamLocation) == 0x000130, "Wrong size on BattleCamActorFactory_C_GetCommandCamLocation");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, Target) == 0x000000, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::Target' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, Socket) == 0x000008, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::Socket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, PartyIndex) == 0x000010, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, Locat) == 0x000014, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::Locat' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, Lo_SpringArms) == 0x000020, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::Lo_SpringArms' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_CalcUnitSocketLocation_Root) == 0x000030, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_CalcUnitSocketLocation_Root' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_CalcUnitSocketLocation_SocketLocation) == 0x00003C, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_CalcUnitSocketLocation_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_CalcUnitSocketLocation_Rotate) == 0x000048, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_CalcUnitSocketLocation_Rotate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_CalcUnitSocketLocation_Valid) == 0x000054, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_CalcUnitSocketLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_GetAxes_X) == 0x000090, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_GetAxes_Y) == 0x00009C, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_GetAxes_Z) == 0x0000A8, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_BreakTransform_Location) == 0x0000B4, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_BreakTransform_Rotation) == 0x0000C0, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_BreakTransform_Scale) == 0x0000CC, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_GetMeshRelativeScale_Scale) == 0x0000D8, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000DC, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_BreakVector_X) == 0x0000E8, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_BreakVector_Y) == 0x0000EC, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000F4, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000100, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00010C, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandCamLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000118, "Member 'BattleCamActorFactory_C_GetCommandCamLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcCommandYowRotation
// 0x0560 (0x0560 - 0x0000)
struct BattleCamActorFactory_C_CalcCommandYowRotation final
{
public:
	class ACharaBase_C*                           TargetChara;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InfoFovy;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3593[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RailOffset;                                        // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   OriginSocket;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRecalcRotation;                                  // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3594[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookOffset;                                        // 0x0050(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImmidiateYaw;                                      // 0x005C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterYaw;                                          // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsHuge;                                         // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3595[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_LookOffset;                                     // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3596[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_CommandTrans;                                   // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Lo_OutImmidiateYaw;                                // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_OutAfterYaw;                                    // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsRecalcRotation;                               // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3597[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_OriginSocket;                                   // 0x00BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_AveToSelected;                                  // 0x00C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsSelectedRight;                                // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3598[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_NormalizedTargetDir;                            // 0x00D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetDir;                                      // 0x00E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Lo_ActorRotation;                                  // 0x00F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3599[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_RailOffset;                                     // 0x0100(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Lo_LimitFovy;                                      // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_DefDegree;                                      // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorRoot;                                      // 0x0138(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorFoward;                                    // 0x0144(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorToInvSideAve;                              // 0x0150(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorToTarget;                                  // 0x015C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverrideCommandCamera_IsOverride;       // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359A[0x6];                                     // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetCommandBoxTrans_Trans;                 // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos;            // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid;              // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359B[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSelectedTargetLocation_Location;       // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedTargetLocation_Valid;          // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359C[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_1;                          // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359D[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root;              // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation;    // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate;            // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid;             // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359E[0x3];                                     // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359F[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A0[0x3];                                     // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A1[0x3];                                     // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A2[0x2];                                     // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A3[0x2];                                     // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A4[0x3];                                     // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x04B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x04C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_4;           // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x04FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0508(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_2;             // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_5;           // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_6;           // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A5[0x3];                                     // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Acos_ReturnValue_1;                       // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue_1;           // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcCommandYowRotation) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcCommandYowRotation");
static_assert(sizeof(BattleCamActorFactory_C_CalcCommandYowRotation) == 0x000560, "Wrong size on BattleCamActorFactory_C_CalcCommandYowRotation");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, TargetChara) == 0x000000, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::TargetChara' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, InfoFovy) == 0x000008, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::InfoFovy' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, RailOffset) == 0x000010, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::RailOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, OriginSocket) == 0x000040, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::OriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, IsRecalcRotation) == 0x000048, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::IsRecalcRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, PartyIndex) == 0x00004C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, LookOffset) == 0x000050, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::LookOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, ImmidiateYaw) == 0x00005C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::ImmidiateYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, AfterYaw) == 0x000060, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::AfterYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_IsHuge) == 0x000064, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_IsHuge' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_LookOffset) == 0x000068, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_LookOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_CommandTrans) == 0x000080, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_CommandTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_OutImmidiateYaw) == 0x0000B0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_OutImmidiateYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_OutAfterYaw) == 0x0000B4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_OutAfterYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_IsRecalcRotation) == 0x0000B8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_IsRecalcRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_OriginSocket) == 0x0000BC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_OriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_AveToSelected) == 0x0000C4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_AveToSelected' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_IsSelectedRight) == 0x0000D0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_IsSelectedRight' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_TargetIndex) == 0x0000D4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_NormalizedTargetDir) == 0x0000D8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_NormalizedTargetDir' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_TargetDir) == 0x0000E4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_TargetDir' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_ActorRotation) == 0x0000F0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_ActorRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_RailOffset) == 0x000100, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_RailOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_LimitFovy) == 0x000130, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_LimitFovy' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_DefDegree) == 0x000134, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_DefDegree' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_ActorRoot) == 0x000138, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_ActorRoot' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_ActorFoward) == 0x000144, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_ActorFoward' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_ActorToInvSideAve) == 0x000150, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_ActorToInvSideAve' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Lo_ActorToTarget) == 0x00015C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Lo_ActorToTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Temp_name_Variable) == 0x000168, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Temp_name_Variable_1) == 0x000170, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetAxes_X) == 0x000184, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetAxes_Y) == 0x000190, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetAxes_Z) == 0x00019C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, Temp_bool_Variable) == 0x0001A8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_IsOverrideCommandCamera_IsOverride) == 0x0001A9, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_IsOverrideCommandCamera_IsOverride' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetOriginTransform_ret) == 0x0001B0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetCommandBoxTrans_Trans) == 0x0001E0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetCommandBoxTrans_Trans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_InvertTransform_ReturnValue) == 0x000210, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_ComposeTransforms_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakTransform_Location) == 0x000270, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakTransform_Rotation) == 0x00027C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakTransform_Scale) == 0x000288, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, K2Node_Select_Default) == 0x000294, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00029C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_MakeLiteralName_ReturnValue) == 0x0002A8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_X) == 0x0002B0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Y) == 0x0002B4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Z) == 0x0002B8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_CalcLookAtGlobalPos_GlobalPos) == 0x0002BC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_CalcLookAtGlobalPos_GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_CalcLookAtGlobalPos_IsValid) == 0x0002C8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_CalcLookAtGlobalPos_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_MakeVector_ReturnValue) == 0x0002CC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetSelectedTargetLocation_Location) == 0x0002D8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetSelectedTargetLocation_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetSelectedTargetLocation_Valid) == 0x0002E4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetSelectedTargetLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Normal_ReturnValue) == 0x0002E8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_VSize_ReturnValue) == 0x0002F4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002F8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000304, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakTransform_Location_1) == 0x000310, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakTransform_Rotation_1) == 0x00031C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakTransform_Scale_1) == 0x000328, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakRotator_Roll) == 0x000334, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakRotator_Pitch) == 0x000338, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakRotator_Yaw) == 0x00033C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_MakeRotator_ReturnValue) == 0x000340, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_X_1) == 0x00034C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Y_1) == 0x000350, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Z_1) == 0x000354, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetRightVector_ReturnValue) == 0x000358, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_MakeVector_ReturnValue_1) == 0x000364, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000370, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Dot_VectorVector_ReturnValue) == 0x00037C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_X_2) == 0x000380, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Y_2) == 0x000384, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Z_2) == 0x000388, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00038C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000390, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_SelectFloat_ReturnValue) == 0x000394, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_DegAtan_ReturnValue) == 0x000398, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00039C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_CalcUnitSocketLocation_Root) == 0x0003A0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_CalcUnitSocketLocation_Root' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_CalcUnitSocketLocation_SocketLocation) == 0x0003AC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_CalcUnitSocketLocation_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_CalcUnitSocketLocation_Rotate) == 0x0003B8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_CalcUnitSocketLocation_Rotate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_CalcUnitSocketLocation_Valid) == 0x0003C4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_CalcUnitSocketLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0003C8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetForwardVector_ReturnValue) == 0x0003CC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0003D8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_X_3) == 0x0003DC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Y_3) == 0x0003E0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BreakVector_Z_3) == 0x0003E4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0003E8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0003F4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000400, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000410, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000420, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BI_IsHugeBattle_retValue) == 0x00042C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BI_IsHugeBattle_DevID) == 0x000430, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000434, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000440, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x00044C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetRightVector_ReturnValue_1) == 0x000458, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000464, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000468, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Normal_ReturnValue_1) == 0x00046C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetCurrentTargetType_TargetType) == 0x000478, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000479, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Normal_ReturnValue_2) == 0x00047C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000488, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_BooleanOR_ReturnValue) == 0x000489, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Cross_VectorVector_ReturnValue) == 0x00048C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000498, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x00049C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Acos_ReturnValue) == 0x0004A0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0004A4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_RadiansToDegrees_ReturnValue) == 0x0004A8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0004AC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_SelectFloat_ReturnValue_1) == 0x0004B0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0004B4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0004B8, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Normal_ReturnValue_3) == 0x0004C4, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0004D0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Dot_VectorVector_ReturnValue_4) == 0x0004DC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Dot_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_SelectVector_ReturnValue) == 0x0004E0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_DegAcos_ReturnValue) == 0x0004EC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetOriginUpVec_UpVec) == 0x0004F0, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_MakeRotFromZX_ReturnValue) == 0x0004FC, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000508, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetRightVector_ReturnValue_2) == 0x000514, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetForwardVector_ReturnValue_1) == 0x000520, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_GetForwardVector_ReturnValue_2) == 0x00052C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Dot_VectorVector_ReturnValue_5) == 0x000538, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Dot_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Dot_VectorVector_ReturnValue_6) == 0x00053C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Dot_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000540, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Acos_ReturnValue_1) == 0x000544, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Acos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_RadiansToDegrees_ReturnValue_1) == 0x000548, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_RadiansToDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00054C, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_SelectFloat_ReturnValue_2) == 0x000550, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandYowRotation, CallFunc_SelectFloat_ReturnValue_3) == 0x000554, "Member 'BattleCamActorFactory_C_CalcCommandYowRotation::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CheckCreateCommandCam
// 0x0098 (0x0098 - 0x0000)
struct BattleCamActorFactory_C_CheckCreateCommandCam final
{
public:
	int32                                         CommandTargetParty;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Category;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          HaveToDo;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectingTarget_IsSelecting;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesWildcard_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AB[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetInvTargetIndex_TargetIndex;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameCommandCamInfo_IsSame;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CheckCreateCommandCam) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_CheckCreateCommandCam");
static_assert(sizeof(BattleCamActorFactory_C_CheckCreateCommandCam) == 0x000098, "Wrong size on BattleCamActorFactory_C_CheckCreateCommandCam");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CommandTargetParty) == 0x000000, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CommandTargetParty' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, Category) == 0x000008, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::Category' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, HaveToDo) == 0x000018, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::HaveToDo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_IsSelectingTarget_IsSelecting) == 0x000048, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_IsSelectingTarget_IsSelecting' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_MatchesWildcard_ReturnValue) == 0x000060, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_MatchesWildcard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000068, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_GetCurrentTargetType_TargetType) == 0x000078, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000080, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_BI_GetInvTargetIndex_TargetIndex) == 0x000090, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_BI_GetInvTargetIndex_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_IsSameCommandCamInfo_IsSame) == 0x000094, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_IsSameCommandCamInfo_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_BooleanAND_ReturnValue) == 0x000095, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCreateCommandCam, CallFunc_Not_PreBool_ReturnValue) == 0x000096, "Member 'BattleCamActorFactory_C_CheckCreateCommandCam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcCommandPitchRotation
// 0x04D0 (0x04D0 - 0x0000)
struct BattleCamActorFactory_C_CalcCommandPitchRotation final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           TargetChara;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InfoFovy;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AD[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RailOffset;                                        // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   OriginSocket;                                      // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRecalcRotation;                                  // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AE[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookOffset;                                        // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImmidiatePitch;                                    // 0x006C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterPitch;                                        // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsHuge;                                         // 0x0074(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AF[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_LookOffset;                                     // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorForward;                                   // 0x0088(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsRecalc;                                       // 0x0094(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsUseTarget;                                    // 0x0095(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B0[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_ToDir;                                          // 0x0098(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ShapedToCentor;                                 // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ShapedToTarget;                                 // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_OutImmidiatePitch;                              // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_OutAfterPitch;                                  // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B1[0xC];                                     // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Offset;                                         // 0x00D0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_RootLocation;                                   // 0x0100(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_OriginSocket;                                   // 0x010C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_LimitedFovy;                                    // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToInvCentor;                                    // 0x0118(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToSelectedTarget;                               // 0x0124(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_TargetChara;                                    // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Enable;                                         // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B2[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B3[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B4[0x8];                                     // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B5[0xC];                                     // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B6[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetCommandBoxTrans_Trans;                 // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B7[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B8[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverrideCommandCamera_IsOverride;       // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B9[0x3];                                     // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BA[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginRightVec_UpVec;                  // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromYX_ReturnValue;                // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetOriginRightVec_UpVec_1;                // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromYX_ReturnValue_1;              // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCommandCamLocation_Locat;              // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x042C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0436(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0437(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BB[0x2];                                     // 0x043A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x043C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BC[0x3];                                     // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos;            // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid;              // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BD[0x3];                                     // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSelectedTargetLocation_Location;       // 0x0464(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedTargetLocation_Valid;          // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BE[0x3];                                     // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginRightVec_UpVec_2;                // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromYX_ReturnValue_2;              // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BF[0x3];                                     // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcCommandPitchRotation) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcCommandPitchRotation");
static_assert(sizeof(BattleCamActorFactory_C_CalcCommandPitchRotation) == 0x0004D0, "Wrong size on BattleCamActorFactory_C_CalcCommandPitchRotation");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Enable) == 0x000000, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Enable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, TargetChara) == 0x000008, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::TargetChara' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, InfoFovy) == 0x000010, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::InfoFovy' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, RailOffset) == 0x000020, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::RailOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, OriginSocket) == 0x000050, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::OriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, IsRecalcRotation) == 0x000058, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::IsRecalcRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, PartyIndex) == 0x00005C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, LookOffset) == 0x000060, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::LookOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, ImmidiatePitch) == 0x00006C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::ImmidiatePitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, AfterPitch) == 0x000070, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::AfterPitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_IsHuge) == 0x000074, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_IsHuge' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_LookOffset) == 0x000078, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_LookOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_TargetIndex) == 0x000084, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_ActorForward) == 0x000088, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_ActorForward' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_IsRecalc) == 0x000094, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_IsRecalc' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_IsUseTarget) == 0x000095, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_IsUseTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_ToDir) == 0x000098, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_ToDir' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_ShapedToCentor) == 0x0000A4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_ShapedToCentor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_ShapedToTarget) == 0x0000B0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_ShapedToTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_OutImmidiatePitch) == 0x0000BC, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_OutImmidiatePitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_OutAfterPitch) == 0x0000C0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_OutAfterPitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_Offset) == 0x0000D0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_Offset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_RootLocation) == 0x000100, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_RootLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_OriginSocket) == 0x00010C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_OriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_LimitedFovy) == 0x000114, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_LimitedFovy' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_ToInvCentor) == 0x000118, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_ToInvCentor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_ToSelectedTarget) == 0x000124, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_ToSelectedTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_TargetChara) == 0x000130, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_TargetChara' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Lo_Enable) == 0x000138, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Lo_Enable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Temp_name_Variable) == 0x00013C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Temp_name_Variable_1) == 0x000144, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Temp_bool_Variable) == 0x00014C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Temp_name_Variable_2) == 0x000150, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetOriginTransform_ret) == 0x000160, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Location) == 0x000190, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Rotation) == 0x00019C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Scale) == 0x0001A8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_InvertTransform_ReturnValue) == 0x0001C0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_X) == 0x0001F0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Y) == 0x0001F4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Z) == 0x0001F8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetCommandBoxTrans_Trans) == 0x000200, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetCommandBoxTrans_Trans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000230, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_ComposeTransforms_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BI_IsHugeBattle_retValue) == 0x000270, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BI_IsHugeBattle_DevID) == 0x000274, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Location_1) == 0x000278, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Rotation_1) == 0x000284, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Scale_1) == 0x000290, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00029C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_X_1) == 0x0002A8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Y_1) == 0x0002AC, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Z_1) == 0x0002B0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_MakeVector_ReturnValue) == 0x0002B4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetActorForwardVector_ReturnValue) == 0x0002C0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Normal_ReturnValue) == 0x0002CC, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetActorUpVector_ReturnValue) == 0x0002D8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Location_2) == 0x0002E4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Rotation_2) == 0x0002F0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakTransform_Scale_2) == 0x0002FC, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000308, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakRotator_Roll) == 0x000314, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakRotator_Pitch) == 0x000318, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakRotator_Yaw) == 0x00031C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_X_2) == 0x000320, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Y_2) == 0x000324, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Z_2) == 0x000328, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_MakeRotator_ReturnValue) == 0x00032C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_MakeVector_ReturnValue_1) == 0x000338, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetUpVector_ReturnValue) == 0x000344, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000350, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000354, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_SelectFloat_ReturnValue) == 0x000358, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_SelectVector_ReturnValue) == 0x00035C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_VSize_ReturnValue) == 0x000368, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_IsOverrideCommandCamera_IsOverride) == 0x00036C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_IsOverrideCommandCamera_IsOverride' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000370, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00037C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_X_3) == 0x000388, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Y_3) == 0x00038C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BreakVector_Z_3) == 0x000390, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, Temp_bool_Variable_1) == 0x000394, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000398, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_DegAtan_ReturnValue) == 0x00039C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0003A0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0003A4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_SelectVector_ReturnValue_1) == 0x0003A8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Normal_ReturnValue_1) == 0x0003B4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0003C0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_DegAcos_ReturnValue) == 0x0003C4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0003C8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetOriginRightVec_UpVec) == 0x0003CC, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetOriginRightVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_MakeRotFromYX_ReturnValue) == 0x0003D8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_MakeRotFromYX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetOriginRightVec_UpVec_1) == 0x0003E4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetOriginRightVec_UpVec_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetForwardVector_ReturnValue) == 0x0003F0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_MakeRotFromYX_ReturnValue_1) == 0x0003FC, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_MakeRotFromYX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetForwardVector_ReturnValue_1) == 0x000408, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetCommandCamLocation_Locat) == 0x000414, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetCommandCamLocation_Locat' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000420, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, K2Node_Select_Default) == 0x00042C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetCurrentTargetType_TargetType) == 0x000434, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000435, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000436, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000437, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BooleanOR_ReturnValue) == 0x000438, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000439, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, K2Node_Select_Default_1) == 0x00043C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_BooleanAND_ReturnValue) == 0x000444, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_CalcLookAtGlobalPos_GlobalPos) == 0x000448, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_CalcLookAtGlobalPos_GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_CalcLookAtGlobalPos_IsValid) == 0x000454, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_CalcLookAtGlobalPos_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000458, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetSelectedTargetLocation_Location) == 0x000464, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetSelectedTargetLocation_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetSelectedTargetLocation_Valid) == 0x000470, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetSelectedTargetLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000474, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetOriginRightVec_UpVec_2) == 0x000480, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetOriginRightVec_UpVec_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_MakeRotFromYX_ReturnValue_2) == 0x00048C, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_MakeRotFromYX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetForwardVector_ReturnValue_2) == 0x000498, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_GetUpVector_ReturnValue_1) == 0x0004A4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x0004B0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x0004B4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Acos_ReturnValue) == 0x0004B8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0004BC, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_RadiansToDegrees_ReturnValue) == 0x0004C0, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0004C4, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCommandPitchRotation, CallFunc_SelectFloat_ReturnValue_1) == 0x0004C8, "Member 'BattleCamActorFactory_C_CalcCommandPitchRotation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetCommandBoxTrans
// 0x0130 (0x0130 - 0x0000)
struct BattleCamActorFactory_C_GetCommandBoxTrans final
{
public:
	struct FTransform                             Trans;                                             // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C0[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_FieldGetComandBoxTransform_retValue;   // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C1[0xC];                                     // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_GetCommandBoxTrans) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_GetCommandBoxTrans");
static_assert(sizeof(BattleCamActorFactory_C_GetCommandBoxTrans) == 0x000130, "Wrong size on BattleCamActorFactory_C_GetCommandBoxTrans");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, Trans) == 0x000000, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::Trans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_GetOriginTransform_ret) == 0x000030, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000060, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_BI_FieldGetComandBoxTransform_retValue) == 0x0000A0, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_BI_FieldGetComandBoxTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_BreakTransform_Location_1) == 0x0000D0, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_BreakTransform_Rotation_1) == 0x0000DC, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_BreakTransform_Scale_1) == 0x0000E8, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetCommandBoxTrans, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BattleCamActorFactory_C_GetCommandBoxTrans::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IsOverrideCommandCamera
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_IsOverrideCommandCamera final
{
public:
	bool                                          IsOverride;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsOverrideCommandCamera_IsOverride;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsOverrideCommandCamera) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_IsOverrideCommandCamera");
static_assert(sizeof(BattleCamActorFactory_C_IsOverrideCommandCamera) == 0x000030, "Wrong size on BattleCamActorFactory_C_IsOverrideCommandCamera");
static_assert(offsetof(BattleCamActorFactory_C_IsOverrideCommandCamera, IsOverride) == 0x000000, "Member 'BattleCamActorFactory_C_IsOverrideCommandCamera::IsOverride' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsOverrideCommandCamera, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000008, "Member 'BattleCamActorFactory_C_IsOverrideCommandCamera::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsOverrideCommandCamera, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000018, "Member 'BattleCamActorFactory_C_IsOverrideCommandCamera::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsOverrideCommandCamera, CallFunc_BI_IsOverrideCommandCamera_IsOverride) == 0x000028, "Member 'BattleCamActorFactory_C_IsOverrideCommandCamera::CallFunc_BI_IsOverrideCommandCamera_IsOverride' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.IsSelectingTarget
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_IsSelectingTarget final
{
public:
	bool                                          IsSelecting;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMM_STEP                            CallFunc_BI_UICommandGetMenuStep_retValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_IsSelectingTarget) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_IsSelectingTarget");
static_assert(sizeof(BattleCamActorFactory_C_IsSelectingTarget) == 0x000020, "Wrong size on BattleCamActorFactory_C_IsSelectingTarget");
static_assert(offsetof(BattleCamActorFactory_C_IsSelectingTarget, IsSelecting) == 0x000000, "Member 'BattleCamActorFactory_C_IsSelectingTarget::IsSelecting' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSelectingTarget, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000008, "Member 'BattleCamActorFactory_C_IsSelectingTarget::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSelectingTarget, CallFunc_BI_UICommandGetMenuStep_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_IsSelectingTarget::CallFunc_BI_UICommandGetMenuStep_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_IsSelectingTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BattleCamActorFactory_C_IsSelectingTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetUnitAveLocation
// 0x0088 (0x0088 - 0x0000)
struct BattleCamActorFactory_C_GetUnitAveLocation final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Lo_side;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_SocketName;                                     // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BI_GetUnitAveLocation_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C7[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Map_Find_Value_1;                         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C8[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface_1; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BI_GetUnitAveLocation_ReturnValue_1;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetUnitAveLocation) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetUnitAveLocation");
static_assert(sizeof(BattleCamActorFactory_C_GetUnitAveLocation) == 0x000088, "Wrong size on BattleCamActorFactory_C_GetUnitAveLocation");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, Side) == 0x000000, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::Side' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, SocketName) == 0x000004, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, Location) == 0x00000C, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, Lo_side) == 0x000018, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::Lo_side' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, Lo_SocketName) == 0x00001C, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface) == 0x000028, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_BI_GetUnitAveLocation_ReturnValue) == 0x000038, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_BI_GetUnitAveLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_Map_Find_Value) == 0x000044, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_Map_Find_Value_1) == 0x000054, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_Map_Find_ReturnValue_1) == 0x000060, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface_1) == 0x000068, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetUnitAveLocation, CallFunc_BI_GetUnitAveLocation_ReturnValue_1) == 0x000078, "Member 'BattleCamActorFactory_C_GetUnitAveLocation::CallFunc_BI_GetUnitAveLocation_ReturnValue_1' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcCameraStartVec
// 0x0050 (0x0050 - 0x0000)
struct BattleCamActorFactory_C_CalcCameraStartVec final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        Rail;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReversed;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CA[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTargetLocation_RetVal;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcCameraStartVec) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_CalcCameraStartVec");
static_assert(sizeof(BattleCamActorFactory_C_CalcCameraStartVec) == 0x000050, "Wrong size on BattleCamActorFactory_C_CalcCameraStartVec");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, Rail) == 0x000008, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::Rail' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, IsReversed) == 0x000010, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::IsReversed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, ReturnValue) == 0x000014, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, CallFunc_CalcTargetLocation_RetVal) == 0x000020, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::CallFunc_CalcTargetLocation_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x00002C, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraStartVec, CallFunc_Normal_ReturnValue) == 0x000044, "Member 'BattleCamActorFactory_C_CalcCameraStartVec::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcCameraLastVec
// 0x0058 (0x0058 - 0x0000)
struct BattleCamActorFactory_C_CalcCameraLastVec final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        Rail;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReversed;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTargetLocation_RetVal;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcCameraLastVec) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_CalcCameraLastVec");
static_assert(sizeof(BattleCamActorFactory_C_CalcCameraLastVec) == 0x000058, "Wrong size on BattleCamActorFactory_C_CalcCameraLastVec");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, Rail) == 0x000008, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::Rail' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, IsReversed) == 0x000010, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::IsReversed' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, ReturnValue) == 0x000014, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, CallFunc_CalcTargetLocation_RetVal) == 0x000020, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::CallFunc_CalcTargetLocation_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, CallFunc_GetSplineLength_ReturnValue) == 0x00002C, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000030, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcCameraLastVec, CallFunc_Normal_ReturnValue) == 0x000048, "Member 'BattleCamActorFactory_C_CalcCameraLastVec::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CalcTargetRotation_SelfOne
// 0x0600 (0x0600 - 0x0000)
struct BattleCamActorFactory_C_CalcTargetRotation_SelfOne final
{
public:
	float                                         InfoFovy;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CD[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RailTrans;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             RailOffset;                                        // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   OriginSocket;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRecalcRotation;                                  // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CE[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookOffset;                                        // 0x0080(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImmidiateYaw;                                      // 0x008C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterYaw;                                          // 0x0090(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0094(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CF[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_RailTrans;                                      // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_LookOffset;                                     // 0x00D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D0[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_CommandTrans;                                   // 0x00E0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Lo_OutImmidiateYaw;                                // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_OutAfterYaw;                                    // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsRecalcRotation;                               // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D1[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_OriginSocket;                                   // 0x011C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_AveToSelected;                                  // 0x0124(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsSelectedRight;                                // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D2[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_NormalizedTargetDir;                            // 0x0138(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetDir;                                      // 0x0144(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Lo_ActorRotation;                                  // 0x0150(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D3[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_RailOffset;                                     // 0x0160(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Lo_LimitFovy;                                      // 0x0190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_DefDegree;                                      // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorRoot;                                      // 0x0198(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorFoward;                                    // 0x01A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorToInvSideAve;                              // 0x01B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorToTarget;                                  // 0x01BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D4[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_ret;                   // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D5[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D6[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcLookAtGlobalPos_GlobalPos;            // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_IsValid;              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D7[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetOriginUpVec_UpVec_1;                   // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root;              // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation;    // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate;            // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid;             // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D8[0x3];                                     // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D9[0x3];                                     // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x04FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0508(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DA[0x3];                                     // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DB[0x3];                                     // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_4;           // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DC[0x3];                                     // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetOriginUpVec_UpVec_2;                   // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0598(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_2;              // 0x05A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_2;             // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_5;           // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_6;           // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DD[0x3];                                     // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Acos_ReturnValue_1;                       // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue_1;           // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_CalcTargetRotation_SelfOne");
static_assert(sizeof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne) == 0x000600, "Wrong size on BattleCamActorFactory_C_CalcTargetRotation_SelfOne");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, InfoFovy) == 0x000000, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::InfoFovy' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, RailTrans) == 0x000010, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::RailTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, RailOffset) == 0x000040, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::RailOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, OriginSocket) == 0x000070, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::OriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, IsRecalcRotation) == 0x000078, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::IsRecalcRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, PartyIndex) == 0x00007C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, LookOffset) == 0x000080, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::LookOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, ImmidiateYaw) == 0x00008C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::ImmidiateYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, AfterYaw) == 0x000090, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::AfterYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Pitch) == 0x000094, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_RailTrans) == 0x0000A0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_RailTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_LookOffset) == 0x0000D0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_LookOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_CommandTrans) == 0x0000E0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_CommandTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_OutImmidiateYaw) == 0x000110, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_OutImmidiateYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_OutAfterYaw) == 0x000114, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_OutAfterYaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_IsRecalcRotation) == 0x000118, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_IsRecalcRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_OriginSocket) == 0x00011C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_OriginSocket' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_AveToSelected) == 0x000124, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_AveToSelected' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_IsSelectedRight) == 0x000130, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_IsSelectedRight' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_TargetIndex) == 0x000134, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_NormalizedTargetDir) == 0x000138, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_NormalizedTargetDir' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_TargetDir) == 0x000144, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_TargetDir' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_ActorRotation) == 0x000150, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_ActorRotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_RailOffset) == 0x000160, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_RailOffset' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_LimitFovy) == 0x000190, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_LimitFovy' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_DefDegree) == 0x000194, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_DefDegree' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_ActorRoot) == 0x000198, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_ActorRoot' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_ActorFoward) == 0x0001A4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_ActorFoward' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_ActorToInvSideAve) == 0x0001B0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_ActorToInvSideAve' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, Lo_ActorToTarget) == 0x0001BC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::Lo_ActorToTarget' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001CC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetOriginUpVec_UpVec) == 0x0001D8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetRightVector_ReturnValue) == 0x0001E4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_ComposeTransforms_ReturnValue) == 0x0001F0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000220, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeRotFromZX_ReturnValue) == 0x000250, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Location) == 0x00025C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Rotation) == 0x000268, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Scale) == 0x000274, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetForwardVector_ReturnValue) == 0x000280, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_X) == 0x00028C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Y) == 0x000290, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Z) == 0x000294, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetAxes_X) == 0x000298, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetAxes_Y) == 0x0002A4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetAxes_Z) == 0x0002B0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetOriginTransform_ret) == 0x0002C0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetOriginTransform_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002F0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_InvertTransform_ReturnValue) == 0x000300, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000330, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_ComposeTransforms_ReturnValue_2) == 0x000340, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000370, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Location_1) == 0x00037C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Rotation_1) == 0x000388, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Scale_1) == 0x000394, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Add_VectorVector_ReturnValue) == 0x0003A0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_X_1) == 0x0003AC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Y_1) == 0x0003B0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Z_1) == 0x0003B4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0003B8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeVector_ReturnValue) == 0x0003C4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeLiteralName_ReturnValue) == 0x0003D0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Normal_ReturnValue) == 0x0003D8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_CalcLookAtGlobalPos_GlobalPos) == 0x0003E4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_CalcLookAtGlobalPos_GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_CalcLookAtGlobalPos_IsValid) == 0x0003F0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_CalcLookAtGlobalPos_IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetOriginUpVec_UpVec_1) == 0x0003F4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetOriginUpVec_UpVec_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000400, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_VSize_ReturnValue) == 0x00040C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000410, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00041C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_CalcUnitSocketLocation_Root) == 0x000428, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_CalcUnitSocketLocation_Root' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_CalcUnitSocketLocation_SocketLocation) == 0x000434, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_CalcUnitSocketLocation_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_CalcUnitSocketLocation_Rotate) == 0x000440, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_CalcUnitSocketLocation_Rotate' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_CalcUnitSocketLocation_Valid) == 0x00044C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_CalcUnitSocketLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000450, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Location_2) == 0x00045C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Rotation_2) == 0x000468, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakTransform_Scale_2) == 0x000474, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakRotator_Roll) == 0x000480, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakRotator_Pitch) == 0x000484, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakRotator_Yaw) == 0x000488, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_X_2) == 0x00048C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Y_2) == 0x000490, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Z_2) == 0x000494, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeRotator_ReturnValue) == 0x000498, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeVector_ReturnValue_1) == 0x0004A4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetRightVector_ReturnValue_1) == 0x0004B0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0004BC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Dot_VectorVector_ReturnValue) == 0x0004C8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_X_3) == 0x0004CC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Y_3) == 0x0004D0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakVector_Z_3) == 0x0004D4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0004D8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0004DC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_SelectFloat_ReturnValue) == 0x0004E0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_DegAtan_ReturnValue) == 0x0004E4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0004E8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0004EC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0004F0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0004FC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Normal_ReturnValue_1) == 0x000508, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Normal_ReturnValue_2) == 0x000514, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000520, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Cross_VectorVector_ReturnValue) == 0x00052C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakRotator_Roll_1) == 0x000538, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakRotator_Pitch_1) == 0x00053C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_BreakRotator_Yaw_1) == 0x000540, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000544, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000548, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x00054C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Acos_ReturnValue) == 0x000550, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_RadiansToDegrees_ReturnValue) == 0x000554, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000558, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00055C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_SelectVector_ReturnValue) == 0x000560, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_SelectFloat_ReturnValue_1) == 0x00056C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Normal_ReturnValue_3) == 0x000570, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x00057C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Dot_VectorVector_ReturnValue_4) == 0x000580, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Dot_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_DegAcos_ReturnValue) == 0x000584, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000588, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetOriginUpVec_UpVec_2) == 0x00058C, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetOriginUpVec_UpVec_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000598, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_MakeRotFromZX_ReturnValue_2) == 0x0005A4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_MakeRotFromZX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetRightVector_ReturnValue_2) == 0x0005B0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetForwardVector_ReturnValue_1) == 0x0005BC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_GetForwardVector_ReturnValue_2) == 0x0005C8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Dot_VectorVector_ReturnValue_5) == 0x0005D4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Dot_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Dot_VectorVector_ReturnValue_6) == 0x0005D8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Dot_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x0005DC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Acos_ReturnValue_1) == 0x0005E0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Acos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_RadiansToDegrees_ReturnValue_1) == 0x0005E4, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_RadiansToDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0005E8, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_SelectFloat_ReturnValue_2) == 0x0005EC, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CalcTargetRotation_SelfOne, CallFunc_SelectFloat_ReturnValue_3) == 0x0005F0, "Member 'BattleCamActorFactory_C_CalcTargetRotation_SelfOne::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetHeroIndex
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_GetHeroIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetHeroIndex_index;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetHeroIndex) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetHeroIndex");
static_assert(sizeof(BattleCamActorFactory_C_GetHeroIndex) == 0x000020, "Wrong size on BattleCamActorFactory_C_GetHeroIndex");
static_assert(offsetof(BattleCamActorFactory_C_GetHeroIndex, Param_Index) == 0x000000, "Member 'BattleCamActorFactory_C_GetHeroIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetHeroIndex, CallFunc_GetPartySystem_ret) == 0x000008, "Member 'BattleCamActorFactory_C_GetHeroIndex::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetHeroIndex, CallFunc_BI_GetHeroIndex_index) == 0x000018, "Member 'BattleCamActorFactory_C_GetHeroIndex::CallFunc_BI_GetHeroIndex_index' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.FaceUpDitherSetting
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_FaceUpDitherSetting final
{
public:
	bool                                          IsFaceUpCam;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_FaceUpDitherSetting) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_FaceUpDitherSetting");
static_assert(sizeof(BattleCamActorFactory_C_FaceUpDitherSetting) == 0x000020, "Wrong size on BattleCamActorFactory_C_FaceUpDitherSetting");
static_assert(offsetof(BattleCamActorFactory_C_FaceUpDitherSetting, IsFaceUpCam) == 0x000000, "Member 'BattleCamActorFactory_C_FaceUpDitherSetting::IsFaceUpCam' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_FaceUpDitherSetting, PartyIndex) == 0x000004, "Member 'BattleCamActorFactory_C_FaceUpDitherSetting::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_FaceUpDitherSetting, K2Node_MakeArray_Array) == 0x000008, "Member 'BattleCamActorFactory_C_FaceUpDitherSetting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_FaceUpDitherSetting, CallFunc_GetPartyUnit_retValue) == 0x000018, "Member 'BattleCamActorFactory_C_FaceUpDitherSetting::CallFunc_GetPartyUnit_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.CheckCurrentCameraName
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_CheckCurrentCameraName final
{
public:
	class FString                                 Wildcard;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsInclude;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E0[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesWildcard_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_CheckCurrentCameraName) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_CheckCurrentCameraName");
static_assert(sizeof(BattleCamActorFactory_C_CheckCurrentCameraName) == 0x000030, "Wrong size on BattleCamActorFactory_C_CheckCurrentCameraName");
static_assert(offsetof(BattleCamActorFactory_C_CheckCurrentCameraName, Wildcard) == 0x000000, "Member 'BattleCamActorFactory_C_CheckCurrentCameraName::Wildcard' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCurrentCameraName, IsInclude) == 0x000010, "Member 'BattleCamActorFactory_C_CheckCurrentCameraName::IsInclude' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCurrentCameraName, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BattleCamActorFactory_C_CheckCurrentCameraName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCurrentCameraName, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BattleCamActorFactory_C_CheckCurrentCameraName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_CheckCurrentCameraName, CallFunc_MatchesWildcard_ReturnValue) == 0x000028, "Member 'BattleCamActorFactory_C_CheckCurrentCameraName::CallFunc_MatchesWildcard_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.GetRelativeCameraScale
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_GetRelativeCameraScale final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHugeBattle;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RetVal;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcHugeBattleCameraScale_RetVal;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcBattleCameraScale_RetVal;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_GetRelativeCameraScale) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_GetRelativeCameraScale");
static_assert(sizeof(BattleCamActorFactory_C_GetRelativeCameraScale) == 0x000020, "Wrong size on BattleCamActorFactory_C_GetRelativeCameraScale");
static_assert(offsetof(BattleCamActorFactory_C_GetRelativeCameraScale, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_GetRelativeCameraScale::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetRelativeCameraScale, IsHugeBattle) == 0x000004, "Member 'BattleCamActorFactory_C_GetRelativeCameraScale::IsHugeBattle' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetRelativeCameraScale, RetVal) == 0x000008, "Member 'BattleCamActorFactory_C_GetRelativeCameraScale::RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetRelativeCameraScale, CallFunc_GetPartyUnit_retValue) == 0x000010, "Member 'BattleCamActorFactory_C_GetRelativeCameraScale::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetRelativeCameraScale, CallFunc_CalcHugeBattleCameraScale_RetVal) == 0x000018, "Member 'BattleCamActorFactory_C_GetRelativeCameraScale::CallFunc_CalcHugeBattleCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_GetRelativeCameraScale, CallFunc_CalcBattleCameraScale_RetVal) == 0x00001C, "Member 'BattleCamActorFactory_C_GetRelativeCameraScale::CallFunc_CalcBattleCameraScale_RetVal' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.RegisterAnimCam
// 0x0008 (0x0008 - 0x0000)
struct BattleCamActorFactory_C_RegisterAnimCam final
{
public:
	class ABattleAnimationCamera_C*               AnimCam;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_RegisterAnimCam) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_RegisterAnimCam");
static_assert(sizeof(BattleCamActorFactory_C_RegisterAnimCam) == 0x000008, "Wrong size on BattleCamActorFactory_C_RegisterAnimCam");
static_assert(offsetof(BattleCamActorFactory_C_RegisterAnimCam, AnimCam) == 0x000000, "Member 'BattleCamActorFactory_C_RegisterAnimCam::AnimCam' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.Spawn_TiamatHead
// 0x02A0 (0x02A0 - 0x0000)
struct BattleCamActorFactory_C_Spawn_TiamatHead final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReserveDestroyCurrent;                        // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E4[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_RowName;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_ret;                       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_AsBPI_Battle_Main;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetCharaID_retValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E5[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E6[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelativeCameraScale_RetVal;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E7[0xC];                                     // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_IdentifyTransform_ReturnValue;            // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CallFunc_SetCamFactory_Factory_CastInput;          // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOriginUpVec_UpVec;                     // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E8[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsSameCameraName_IsSame;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E9[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B0(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EA[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_35EB[0x8];                                     // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_ret;                  // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_Spawn_TiamatHead) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_Spawn_TiamatHead");
static_assert(sizeof(BattleCamActorFactory_C_Spawn_TiamatHead) == 0x0002A0, "Wrong size on BattleCamActorFactory_C_Spawn_TiamatHead");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, PartyIndex) == 0x000000, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, RetValue) == 0x000008, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, Lo_PartyIndex) == 0x000010, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, Lo_IsReserveDestroyCurrent) == 0x000014, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::Lo_IsReserveDestroyCurrent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, Lo_RowName) == 0x000018, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::Lo_RowName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_GetPartySystem_ret) == 0x000030, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_GetMainWork_AsBPI_Battle_Main) == 0x000040, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_GetMainWork_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_BI_GetCharaID_retValue) == 0x000050, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_BI_GetCharaID_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_BI_IsHugeBattle_retValue) == 0x000054, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_BI_IsHugeBattle_DevID) == 0x000058, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, K2Node_SwitchInteger_CmpSuccess) == 0x00005C, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_GetRelativeCameraScale_RetVal) == 0x000060, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_GetRelativeCameraScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_IdentifyTransform_ReturnValue) == 0x000070, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_IdentifyTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_SetCamFactory_Factory_CastInput) == 0x0000A0, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_SetCamFactory_Factory_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_GetOriginUpVec_UpVec) == 0x0000C0, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_GetOriginUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000100, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_IsSameCameraName_IsSame) == 0x000188, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_IsSameCameraName_IsSame' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000190, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A0, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B0, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000240, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000248, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000258, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_Spawn_TiamatHead, CallFunc_CalcCameraTransform_ret) == 0x000270, "Member 'BattleCamActorFactory_C_Spawn_TiamatHead::CallFunc_CalcCameraTransform_ret' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_SpawnRailActorPrevBattle
// 0x0080 (0x0080 - 0x0000)
struct BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle final
{
public:
	E_BTL_CAM_TYPE                                CamType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EC[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OriginTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>> UnitList;                                          // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FTransform>                     UnitTrans;                                         // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DevIDOptoin;                                       // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        RetVal;                                            // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_SpawnRailActorPrevBattle_retValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle");
static_assert(sizeof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle) == 0x000080, "Wrong size on BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle");
static_assert(offsetof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle, CamType) == 0x000000, "Member 'BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle::CamType' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle, OriginTransform) == 0x000010, "Member 'BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle::OriginTransform' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle, UnitList) == 0x000040, "Member 'BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle::UnitList' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle, UnitTrans) == 0x000050, "Member 'BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle::UnitTrans' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle, DevIDOptoin) == 0x000060, "Member 'BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle::DevIDOptoin' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle, RetVal) == 0x000070, "Member 'BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle::RetVal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle, CallFunc_SpawnRailActorPrevBattle_retValue) == 0x000078, "Member 'BattleCamActorFactory_C_BI_SpawnRailActorPrevBattle::CallFunc_SpawnRailActorPrevBattle_retValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_GetCurrentCameraSideType
// 0x0018 (0x0018 - 0x0000)
struct BattleCamActorFactory_C_BI_GetCurrentCameraSideType final
{
public:
	E_CAMERA_SIDE_BF_TYPE                         BF_Type;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_LR_TYPE                         LR_Type;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35ED[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RailActor_C*                        CallFunc_GetCurrentActor_retValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CAMERA_SIDE_BF_TYPE                         CallFunc_GetCameraSideType_BF_Type;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMERA_SIDE_LR_TYPE                         CallFunc_GetCameraSideType_LR_Type;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_BI_GetCurrentCameraSideType");
static_assert(sizeof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType) == 0x000018, "Wrong size on BattleCamActorFactory_C_BI_GetCurrentCameraSideType");
static_assert(offsetof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType, BF_Type) == 0x000000, "Member 'BattleCamActorFactory_C_BI_GetCurrentCameraSideType::BF_Type' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType, LR_Type) == 0x000001, "Member 'BattleCamActorFactory_C_BI_GetCurrentCameraSideType::LR_Type' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType, CallFunc_GetCurrentActor_retValue) == 0x000008, "Member 'BattleCamActorFactory_C_BI_GetCurrentCameraSideType::CallFunc_GetCurrentActor_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleCamActorFactory_C_BI_GetCurrentCameraSideType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType, CallFunc_GetCameraSideType_BF_Type) == 0x000011, "Member 'BattleCamActorFactory_C_BI_GetCurrentCameraSideType::CallFunc_GetCameraSideType_BF_Type' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_GetCurrentCameraSideType, CallFunc_GetCameraSideType_LR_Type) == 0x000012, "Member 'BattleCamActorFactory_C_BI_GetCurrentCameraSideType::CallFunc_GetCameraSideType_LR_Type' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_ToOuterCamera
// 0x0430 (0x0430 - 0x0000)
struct BattleCamActorFactory_C_BI_ToOuterCamera final
{
public:
	class ABattleCamera_C*                        Camera;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        Rail;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>> TargetUnits;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FTransform>                     TargetPos;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsBossRoom;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EE[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> Lo_Unit;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EF[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_EnemyPos;                                       // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_SocketName;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_SocketLocation;                                 // 0x0088(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigRailPlayInfo                       CallFunc_GetPlayInfo_m_PlayInfo;                   // 0x009C(0x0034)(NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F0[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_Array_Get_Item;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F1[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CallFunc_BI_GetCapsuleComponent_Param;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BI_GetMeshRelativeScale_Scale;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_BI_GetMeshComponent_MeshComp;             // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F2[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x01B8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F3[0xF];                                     // 0x0281(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F4[0x2];                                     // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F5[0x3];                                     // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamActorFactory_C_BI_ToOuterCamera) == 0x000010, "Wrong alignment on BattleCamActorFactory_C_BI_ToOuterCamera");
static_assert(sizeof(BattleCamActorFactory_C_BI_ToOuterCamera) == 0x000430, "Wrong size on BattleCamActorFactory_C_BI_ToOuterCamera");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Camera) == 0x000000, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Camera' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Rail) == 0x000008, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Rail' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, TargetUnits) == 0x000010, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::TargetUnits' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, TargetPos) == 0x000020, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::TargetPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, IsBossRoom) == 0x000030, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::IsBossRoom' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, NoUse) == 0x000031, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::NoUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Lo_Unit) == 0x000038, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Lo_EnemyPos) == 0x000050, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Lo_EnemyPos' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Lo_SocketName) == 0x000080, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Lo_SocketLocation) == 0x000088, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Lo_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GetPlayInfo_m_PlayInfo) == 0x00009C, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GetPlayInfo_m_PlayInfo' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_SelectInt_ReturnValue) == 0x0000D0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D4, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Clamp_ReturnValue) == 0x0000DC, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E4, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000F4, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Array_Get_Item) == 0x000100, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000110, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BooleanAND_ReturnValue) == 0x000111, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BI_GetCapsuleComponent_Param) == 0x000118, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BI_GetCapsuleComponent_Param' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BI_GetMeshRelativeScale_Scale) == 0x000120, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BI_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue) == 0x000124, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BI_GetMeshComponent_MeshComp) == 0x000128, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BI_GetMeshComponent_MeshComp' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Location) == 0x000130, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Rotation) == 0x00013C, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Scale) == 0x000148, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x000154, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Location_1) == 0x000160, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Rotation_1) == 0x00016C, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Scale_1) == 0x000178, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GetAxes_X) == 0x000184, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GetAxes_Y) == 0x000190, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GetAxes_Z) == 0x00019C, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GetUpVector_ReturnValue) == 0x0001A8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Temp_object_Variable) == 0x0001B8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001C8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001D4, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001EC, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_LineTraceSingle_OutHit) == 0x0001F8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_LineTraceSingle_ReturnValue) == 0x000280, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_GetSocketTransform_ReturnValue) == 0x000290, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Location_2) == 0x0002C0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Rotation_2) == 0x0002CC, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Scale_2) == 0x0002D8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E4, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002E5, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_Time) == 0x0002E8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_Distance) == 0x0002EC, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_Location) == 0x0002F0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_ImpactPoint) == 0x0002FC, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_Normal) == 0x000308, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_ImpactNormal) == 0x000314, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_PhysMat) == 0x000320, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_HitActor) == 0x000328, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_HitComponent) == 0x000330, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_HitBoneName) == 0x000338, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_HitItem) == 0x000340, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_ElementIndex) == 0x000344, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_FaceIndex) == 0x000348, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_TraceStart) == 0x00034C, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakHitResult_TraceEnd) == 0x000358, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakVector_X) == 0x000364, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakVector_Y) == 0x000368, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakVector_Z) == 0x00036C, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000370, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000374, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000380, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x00038C, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000398, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0003A4, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0003B0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0003BC, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0003C8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0003D4, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Location_3) == 0x0003E0, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Rotation_3) == 0x0003EC, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_BreakTransform_Scale_3) == 0x0003F8, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_SelectVector_ReturnValue) == 0x000404, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, Temp_int_Loop_Counter_Variable) == 0x000410, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000414, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000420, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_ToOuterCamera, CallFunc_Add_IntInt_ReturnValue) == 0x000424, "Member 'BattleCamActorFactory_C_BI_ToOuterCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_RetrieveGlobalSocketLocation
// 0x0030 (0x0030 - 0x0000)
struct BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation final
{
public:
	class FName                                   CamCategoryName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GlobalLocation;                                    // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F6[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RetrieveGlobalSocketLocation_GlobalLocation; // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveGlobalSocketLocation_IsValid;     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation) == 0x000004, "Wrong alignment on BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation");
static_assert(sizeof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation) == 0x000030, "Wrong size on BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation");
static_assert(offsetof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation, CamCategoryName) == 0x000000, "Member 'BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation::CamCategoryName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation, SocketName) == 0x000008, "Member 'BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation::SocketName' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation, GlobalLocation) == 0x000010, "Member 'BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation::GlobalLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation, IsValid) == 0x00001C, "Member 'BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation::IsValid' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation, CallFunc_RetrieveGlobalSocketLocation_GlobalLocation) == 0x000020, "Member 'BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation::CallFunc_RetrieveGlobalSocketLocation_GlobalLocation' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation, CallFunc_RetrieveGlobalSocketLocation_IsValid) == 0x00002C, "Member 'BattleCamActorFactory_C_BI_RetrieveGlobalSocketLocation::CallFunc_RetrieveGlobalSocketLocation_IsValid' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_ResetCommandCamInfo
// 0x0001 (0x0001 - 0x0000)
struct BattleCamActorFactory_C_BI_ResetCommandCamInfo final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_BI_ResetCommandCamInfo) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_BI_ResetCommandCamInfo");
static_assert(sizeof(BattleCamActorFactory_C_BI_ResetCommandCamInfo) == 0x000001, "Wrong size on BattleCamActorFactory_C_BI_ResetCommandCamInfo");
static_assert(offsetof(BattleCamActorFactory_C_BI_ResetCommandCamInfo, NoUse) == 0x000000, "Member 'BattleCamActorFactory_C_BI_ResetCommandCamInfo::NoUse' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_SetRailName
// 0x0020 (0x0020 - 0x0000)
struct BattleCamActorFactory_C_BI_SetRailName final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_BI_SetRailName) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_BI_SetRailName");
static_assert(sizeof(BattleCamActorFactory_C_BI_SetRailName) == 0x000020, "Wrong size on BattleCamActorFactory_C_BI_SetRailName");
static_assert(offsetof(BattleCamActorFactory_C_BI_SetRailName, Param_Name) == 0x000000, "Member 'BattleCamActorFactory_C_BI_SetRailName::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SetRailName, NoUse) == 0x000010, "Member 'BattleCamActorFactory_C_BI_SetRailName::NoUse' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SetRailName, CallFunc_Conv_StringToName_ReturnValue) == 0x000014, "Member 'BattleCamActorFactory_C_BI_SetRailName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_SetRailName, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BattleCamActorFactory_C_BI_SetRailName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_RegisterAnimCam
// 0x0010 (0x0010 - 0x0000)
struct BattleCamActorFactory_C_BI_RegisterAnimCam final
{
public:
	class ABattleAnimationCamera_C*               AnimCam;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_BI_RegisterAnimCam) == 0x000008, "Wrong alignment on BattleCamActorFactory_C_BI_RegisterAnimCam");
static_assert(sizeof(BattleCamActorFactory_C_BI_RegisterAnimCam) == 0x000010, "Wrong size on BattleCamActorFactory_C_BI_RegisterAnimCam");
static_assert(offsetof(BattleCamActorFactory_C_BI_RegisterAnimCam, AnimCam) == 0x000000, "Member 'BattleCamActorFactory_C_BI_RegisterAnimCam::AnimCam' has a wrong offset!");
static_assert(offsetof(BattleCamActorFactory_C_BI_RegisterAnimCam, NoUse) == 0x000008, "Member 'BattleCamActorFactory_C_BI_RegisterAnimCam::NoUse' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_UnregisterAnimCam
// 0x0001 (0x0001 - 0x0000)
struct BattleCamActorFactory_C_BI_UnregisterAnimCam final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_BI_UnregisterAnimCam) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_BI_UnregisterAnimCam");
static_assert(sizeof(BattleCamActorFactory_C_BI_UnregisterAnimCam) == 0x000001, "Wrong size on BattleCamActorFactory_C_BI_UnregisterAnimCam");
static_assert(offsetof(BattleCamActorFactory_C_BI_UnregisterAnimCam, NoUse) == 0x000000, "Member 'BattleCamActorFactory_C_BI_UnregisterAnimCam::NoUse' has a wrong offset!");

// Function BattleCamActorFactory.BattleCamActorFactory_C.BI_DestroyCurrentActor
// 0x0001 (0x0001 - 0x0000)
struct BattleCamActorFactory_C_BI_DestroyCurrentActor final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamActorFactory_C_BI_DestroyCurrentActor) == 0x000001, "Wrong alignment on BattleCamActorFactory_C_BI_DestroyCurrentActor");
static_assert(sizeof(BattleCamActorFactory_C_BI_DestroyCurrentActor) == 0x000001, "Wrong size on BattleCamActorFactory_C_BI_DestroyCurrentActor");
static_assert(offsetof(BattleCamActorFactory_C_BI_DestroyCurrentActor, NoUse) == 0x000000, "Member 'BattleCamActorFactory_C_BI_DestroyCurrentActor::NoUse' has a wrong offset!");

}

