#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MinimapRadar

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_MinimapRadar.WB_MinimapRadar_C.ExecuteUbergraph_WB_MinimapRadar
// 0x0004 (0x0004 - 0x0000)
struct WB_MinimapRadar_C_ExecuteUbergraph_WB_MinimapRadar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MinimapRadar_C_ExecuteUbergraph_WB_MinimapRadar) == 0x000004, "Wrong alignment on WB_MinimapRadar_C_ExecuteUbergraph_WB_MinimapRadar");
static_assert(sizeof(WB_MinimapRadar_C_ExecuteUbergraph_WB_MinimapRadar) == 0x000004, "Wrong size on WB_MinimapRadar_C_ExecuteUbergraph_WB_MinimapRadar");
static_assert(offsetof(WB_MinimapRadar_C_ExecuteUbergraph_WB_MinimapRadar, EntryPoint) == 0x000000, "Member 'WB_MinimapRadar_C_ExecuteUbergraph_WB_MinimapRadar::EntryPoint' has a wrong offset!");

// Function WB_MinimapRadar.WB_MinimapRadar_C.CreateData
// 0x0040 (0x0040 - 0x0000)
struct WB_MinimapRadar_C_CreateData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_MinimapRadarIcon_C*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MinimapRadarIcon_C*                 CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MinimapRadar_C_CreateData) == 0x000008, "Wrong alignment on WB_MinimapRadar_C_CreateData");
static_assert(sizeof(WB_MinimapRadar_C_CreateData) == 0x000040, "Wrong size on WB_MinimapRadar_C_CreateData");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_MinimapRadar_C_CreateData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, Temp_int_Variable) == 0x000004, "Member 'WB_MinimapRadar_C_CreateData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WB_MinimapRadar_C_CreateData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_RemoveChild_ReturnValue) == 0x000024, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_AddChildToOverlay_ReturnValue) == 0x000030, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_CreateData, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'WB_MinimapRadar_C_CreateData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WB_MinimapRadar.WB_MinimapRadar_C.SetMinimapMode
// 0x0090 (0x0090 - 0x0000)
struct WB_MinimapRadar_C_SetMinimapMode final
{
public:
	E_MINIMAP_MODE                                MinimapMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            LBrush;                                            // 0x0008(0x0088)(Edit, BlueprintVisible)
};
static_assert(alignof(WB_MinimapRadar_C_SetMinimapMode) == 0x000008, "Wrong alignment on WB_MinimapRadar_C_SetMinimapMode");
static_assert(sizeof(WB_MinimapRadar_C_SetMinimapMode) == 0x000090, "Wrong size on WB_MinimapRadar_C_SetMinimapMode");
static_assert(offsetof(WB_MinimapRadar_C_SetMinimapMode, MinimapMode) == 0x000000, "Member 'WB_MinimapRadar_C_SetMinimapMode::MinimapMode' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_SetMinimapMode, LBrush) == 0x000008, "Member 'WB_MinimapRadar_C_SetMinimapMode::LBrush' has a wrong offset!");

// Function WB_MinimapRadar.WB_MinimapRadar_C.UpdateEntries
// 0x00D8 (0x00D8 - 0x0000)
struct WB_MinimapRadar_C_UpdateEntries final
{
public:
	E_MINIMAP_MODE                                MinimapMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MinimapRadarIcon_C*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MinimapRadarIcon_C*                 CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMinimapRadarEntry>             CallFunc_GetRadarEntries_ReturnValue;              // 0x0038(0x0010)(ReferenceParm)
	struct FMinimapRadarEntry                     CallFunc_Array_Get_Item_2;                         // 0x0048(0x001C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0088(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_CalcScreenToWidgetUV_ReturnValue;         // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MinimapRadar_C_UpdateEntries) == 0x000008, "Wrong alignment on WB_MinimapRadar_C_UpdateEntries");
static_assert(sizeof(WB_MinimapRadar_C_UpdateEntries) == 0x0000D8, "Wrong size on WB_MinimapRadar_C_UpdateEntries");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, MinimapMode) == 0x000000, "Member 'WB_MinimapRadar_C_UpdateEntries::MinimapMode' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_MinimapRadar_C_UpdateEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_MinimapRadar_C_UpdateEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'WB_MinimapRadar_C_UpdateEntries::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_GetMinimapManager_ReturnValue) == 0x000030, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_GetRadarEntries_ReturnValue) == 0x000038, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_GetRadarEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_BreakVector_X) == 0x00006C, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_BreakVector_Y) == 0x000070, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_BreakVector_Z) == 0x000074, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'WB_MinimapRadar_C_UpdateEntries::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'WB_MinimapRadar_C_UpdateEntries::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_GetCachedGeometry_ReturnValue) == 0x000088, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_CalcScreenToWidgetUV_ReturnValue) == 0x0000C4, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_CalcScreenToWidgetUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_UpdateEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'WB_MinimapRadar_C_UpdateEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_MinimapRadar.WB_MinimapRadar_C.Hide
// 0x0020 (0x0020 - 0x0000)
struct WB_MinimapRadar_C_Hide final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_MinimapRadarIcon_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MinimapRadar_C_Hide) == 0x000008, "Wrong alignment on WB_MinimapRadar_C_Hide");
static_assert(sizeof(WB_MinimapRadar_C_Hide) == 0x000020, "Wrong size on WB_MinimapRadar_C_Hide");
static_assert(offsetof(WB_MinimapRadar_C_Hide, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_MinimapRadar_C_Hide::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_Hide, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_MinimapRadar_C_Hide::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_Hide, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_MinimapRadar_C_Hide::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_Hide, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_MinimapRadar_C_Hide::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_Hide, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_MinimapRadar_C_Hide::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MinimapRadar_C_Hide, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_MinimapRadar_C_Hide::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

