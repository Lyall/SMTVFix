#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CharaPanelVNumber

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.ExecuteUbergraph_WB_CharaPanelVNumber
// 0x0004 (0x0004 - 0x0000)
struct WB_CharaPanelVNumber_C_ExecuteUbergraph_WB_CharaPanelVNumber final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CharaPanelVNumber_C_ExecuteUbergraph_WB_CharaPanelVNumber) == 0x000004, "Wrong alignment on WB_CharaPanelVNumber_C_ExecuteUbergraph_WB_CharaPanelVNumber");
static_assert(sizeof(WB_CharaPanelVNumber_C_ExecuteUbergraph_WB_CharaPanelVNumber) == 0x000004, "Wrong size on WB_CharaPanelVNumber_C_ExecuteUbergraph_WB_CharaPanelVNumber");
static_assert(offsetof(WB_CharaPanelVNumber_C_ExecuteUbergraph_WB_CharaPanelVNumber, EntryPoint) == 0x000000, "Member 'WB_CharaPanelVNumber_C_ExecuteUbergraph_WB_CharaPanelVNumber::EntryPoint' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.SetVNumberFadeIn
// 0x0028 (0x0028 - 0x0000)
struct WB_CharaPanelVNumber_C_SetVNumberFadeIn final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InDataType;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InNumber;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRate;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_VariousNumber_C*                    CallFunc_GetVNumberData_OutWidget;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_VariousNumber_C*                    CallFunc_GetVNumberData_OutWidget_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CharaPanelVNumber_C_SetVNumberFadeIn) == 0x000008, "Wrong alignment on WB_CharaPanelVNumber_C_SetVNumberFadeIn");
static_assert(sizeof(WB_CharaPanelVNumber_C_SetVNumberFadeIn) == 0x000028, "Wrong size on WB_CharaPanelVNumber_C_SetVNumberFadeIn");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeIn, InIndex) == 0x000000, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeIn::InIndex' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeIn, InDataType) == 0x000004, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeIn::InDataType' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeIn, InNumber) == 0x000008, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeIn::InNumber' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeIn, InRate) == 0x00000C, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeIn::InRate' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeIn, CallFunc_GetVNumberData_OutWidget) == 0x000010, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeIn::CallFunc_GetVNumberData_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeIn, CallFunc_GetVNumberData_OutWidget_1) == 0x000018, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeIn::CallFunc_GetVNumberData_OutWidget_1' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeIn, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeIn::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.GetVNumberData
// 0x0020 (0x0020 - 0x0000)
struct WB_CharaPanelVNumber_C_GetVNumberData final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5282[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_VariousNumber_C*                    OutWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_VariousNumber_C*                    Outvnumberwidget;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CharaPanelVNumber_C_GetVNumberData) == 0x000008, "Wrong alignment on WB_CharaPanelVNumber_C_GetVNumberData");
static_assert(sizeof(WB_CharaPanelVNumber_C_GetVNumberData) == 0x000020, "Wrong size on WB_CharaPanelVNumber_C_GetVNumberData");
static_assert(offsetof(WB_CharaPanelVNumber_C_GetVNumberData, InIndex) == 0x000000, "Member 'WB_CharaPanelVNumber_C_GetVNumberData::InIndex' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_GetVNumberData, OutWidget) == 0x000008, "Member 'WB_CharaPanelVNumber_C_GetVNumberData::OutWidget' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_GetVNumberData, Outvnumberwidget) == 0x000010, "Member 'WB_CharaPanelVNumber_C_GetVNumberData::Outvnumberwidget' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_GetVNumberData, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WB_CharaPanelVNumber_C_GetVNumberData::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.SetPosition
// 0x0010 (0x0010 - 0x0000)
struct WB_CharaPanelVNumber_C_SetPosition final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CharaPanelVNumber_C_SetPosition) == 0x000008, "Wrong alignment on WB_CharaPanelVNumber_C_SetPosition");
static_assert(sizeof(WB_CharaPanelVNumber_C_SetPosition) == 0x000010, "Wrong size on WB_CharaPanelVNumber_C_SetPosition");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetPosition, InPosition) == 0x000000, "Member 'WB_CharaPanelVNumber_C_SetPosition::InPosition' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WB_CharaPanelVNumber_C_SetPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.SetCenterPosition
// 0x0020 (0x0020 - 0x0000)
struct WB_CharaPanelVNumber_C_SetCenterPosition final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CharaPanelVNumber_C_SetCenterPosition) == 0x000008, "Wrong alignment on WB_CharaPanelVNumber_C_SetCenterPosition");
static_assert(sizeof(WB_CharaPanelVNumber_C_SetCenterPosition) == 0x000020, "Wrong size on WB_CharaPanelVNumber_C_SetCenterPosition");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetCenterPosition, InPosition) == 0x000000, "Member 'WB_CharaPanelVNumber_C_SetCenterPosition::InPosition' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetCenterPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WB_CharaPanelVNumber_C_SetCenterPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetCenterPosition, CallFunc_GetPosition_ReturnValue) == 0x000010, "Member 'WB_CharaPanelVNumber_C_SetCenterPosition::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetCenterPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'WB_CharaPanelVNumber_C_SetCenterPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.SetSignPosition
// 0x0010 (0x0010 - 0x0000)
struct WB_CharaPanelVNumber_C_SetSignPosition final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CharaPanelVNumber_C_SetSignPosition) == 0x000008, "Wrong alignment on WB_CharaPanelVNumber_C_SetSignPosition");
static_assert(sizeof(WB_CharaPanelVNumber_C_SetSignPosition) == 0x000010, "Wrong size on WB_CharaPanelVNumber_C_SetSignPosition");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetSignPosition, InPosition) == 0x000000, "Member 'WB_CharaPanelVNumber_C_SetSignPosition::InPosition' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetSignPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WB_CharaPanelVNumber_C_SetSignPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.SetMovePosition
// 0x0014 (0x0014 - 0x0000)
struct WB_CharaPanelVNumber_C_SetMovePosition final
{
public:
	float                                         InYPosition;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CharaPanelVNumber_C_SetMovePosition) == 0x000004, "Wrong alignment on WB_CharaPanelVNumber_C_SetMovePosition");
static_assert(sizeof(WB_CharaPanelVNumber_C_SetMovePosition) == 0x000014, "Wrong size on WB_CharaPanelVNumber_C_SetMovePosition");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetMovePosition, InYPosition) == 0x000000, "Member 'WB_CharaPanelVNumber_C_SetMovePosition::InYPosition' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetMovePosition, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'WB_CharaPanelVNumber_C_SetMovePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetMovePosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00000C, "Member 'WB_CharaPanelVNumber_C_SetMovePosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.SetVNumberFadeOut
// 0x0020 (0x0020 - 0x0000)
struct WB_CharaPanelVNumber_C_SetVNumberFadeOut final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InDataType;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_VariousNumber_C*                    CallFunc_GetVNumberData_OutWidget;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_VariousNumber_C*                    CallFunc_GetVNumberData_OutWidget_1;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CharaPanelVNumber_C_SetVNumberFadeOut) == 0x000008, "Wrong alignment on WB_CharaPanelVNumber_C_SetVNumberFadeOut");
static_assert(sizeof(WB_CharaPanelVNumber_C_SetVNumberFadeOut) == 0x000020, "Wrong size on WB_CharaPanelVNumber_C_SetVNumberFadeOut");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeOut, InIndex) == 0x000000, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeOut::InIndex' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeOut, InDataType) == 0x000004, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeOut::InDataType' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeOut, CallFunc_GetVNumberData_OutWidget) == 0x000008, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeOut::CallFunc_GetVNumberData_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeOut, CallFunc_GetVNumberData_OutWidget_1) == 0x000010, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeOut::CallFunc_GetVNumberData_OutWidget_1' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_SetVNumberFadeOut, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WB_CharaPanelVNumber_C_SetVNumberFadeOut::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.IsAnimationEnd
// 0x0028 (0x0028 - 0x0000)
struct WB_CharaPanelVNumber_C_IsAnimationEnd final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFinished;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5283[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_VariousNumber_C*                    CallFunc_GetVNumberData_OutWidget;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationEnd_OutFinished;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationEnd_OutFinished_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5284[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_VariousNumber_C*                    CallFunc_GetVNumberData_OutWidget_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationEnd_OutFinished_2;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5285[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CharaPanelVNumber_C_IsAnimationEnd) == 0x000008, "Wrong alignment on WB_CharaPanelVNumber_C_IsAnimationEnd");
static_assert(sizeof(WB_CharaPanelVNumber_C_IsAnimationEnd) == 0x000028, "Wrong size on WB_CharaPanelVNumber_C_IsAnimationEnd");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, OutFinished) == 0x000000, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::OutFinished' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, IsFinished) == 0x000001, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::IsFinished' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, Temp_int_Variable) == 0x000004, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, CallFunc_GetVNumberData_OutWidget) == 0x000008, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::CallFunc_GetVNumberData_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, CallFunc_IsAnimationEnd_OutFinished) == 0x000010, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::CallFunc_IsAnimationEnd_OutFinished' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, CallFunc_IsAnimationEnd_OutFinished_1) == 0x000011, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::CallFunc_IsAnimationEnd_OutFinished_1' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, CallFunc_GetVNumberData_OutWidget_1) == 0x000018, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::CallFunc_GetVNumberData_OutWidget_1' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, CallFunc_IsAnimationEnd_OutFinished_2) == 0x000021, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::CallFunc_IsAnimationEnd_OutFinished_2' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000022, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_IsAnimationEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WB_CharaPanelVNumber_C_IsAnimationEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_CharaPanelVNumber.WB_CharaPanelVNumber_C.CalcAnimeRate
// 0x0008 (0x0008 - 0x0000)
struct WB_CharaPanelVNumber_C_CalcAnimeRate final
{
public:
	float                                         InRate;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CharaPanelVNumber_C_CalcAnimeRate) == 0x000004, "Wrong alignment on WB_CharaPanelVNumber_C_CalcAnimeRate");
static_assert(sizeof(WB_CharaPanelVNumber_C_CalcAnimeRate) == 0x000008, "Wrong size on WB_CharaPanelVNumber_C_CalcAnimeRate");
static_assert(offsetof(WB_CharaPanelVNumber_C_CalcAnimeRate, InRate) == 0x000000, "Member 'WB_CharaPanelVNumber_C_CalcAnimeRate::InRate' has a wrong offset!");
static_assert(offsetof(WB_CharaPanelVNumber_C_CalcAnimeRate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_CharaPanelVNumber_C_CalcAnimeRate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

