#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleSkillActionBase

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "BTL_LIGHT_PLAY_PARAM_structs.hpp"
#include "BadStatusParticles_T_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MaterialAnimSetting_T_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "ST_DevilPostData_structs.hpp"
#include "BTL_ADD_SKILL_LIGHT_TASK_DATA_structs.hpp"
#include "BTL_EFFECT_PLAY_PARAM_structs.hpp"
#include "BattleSkillHitStop_T_structs.hpp"
#include "BattleResidentEffect_structs.hpp"
#include "BattleSkillLight_t_structs.hpp"


namespace SDK::Params
{

// Function BattleSkillActionBase.BattleSkillActionBase_C.Evt_SkillPerformance__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_Evt_SkillPerformance__DelegateSignature final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Evt_SkillPerformance__DelegateSignature) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Evt_SkillPerformance__DelegateSignature");
static_assert(sizeof(BattleSkillActionBase_C_Evt_SkillPerformance__DelegateSignature) == 0x000004, "Wrong size on BattleSkillActionBase_C_Evt_SkillPerformance__DelegateSignature");
static_assert(offsetof(BattleSkillActionBase_C_Evt_SkillPerformance__DelegateSignature, Step) == 0x000000, "Member 'BattleSkillActionBase_C_Evt_SkillPerformance__DelegateSignature::Step' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ExecuteUbergraph_BattleSkillActionBase
// 0x09E0 (0x09E0 - 0x0000)
struct BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C9[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_PartyIndex_2;                   // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_CustomEvent_LightData_2;                    // 0x0050(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_CustomEvent_PartyIndex_1;                   // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_CustomEvent_LightData_1;                    // 0x00C8(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CA[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHitLightData_IsValid;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CB[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleSkillLight_t                    CallFunc_GetHitLightData_LightData;                // 0x0150(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CC[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_GroupID_1;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      K2Node_CustomEvent_Color_1;                        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_Intensity_1;                    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_Radius_1;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CD[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_GroupID;                        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      K2Node_CustomEvent_Color;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_Intensity;                      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_Radius;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkillActionPointLight_C*               CallFunc_AddPointLight_AddedLight;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CE[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_CustomEvent_PartyIndex;                     // 0x0208(0x0010)(ConstParm, ReferenceParm)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_CustomEvent_LightData;                      // 0x0218(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkillActionPointLight_C*               CallFunc_AddPointLight_AddedLight_1;               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item;                           // 0x02A8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CF[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D0[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_AddPointLight_AddedLight_2;               // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D1[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_2;                         // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D2[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_AddPointLight_AddedLight_3;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D3[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_PlayRate_1;                   // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_waitCommandIndex;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_hitEffect;                      // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D4[0x8];                                     // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_RelativeTransform;              // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsWorldRelative;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D5[0x3];                                     // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_LifeSec;                        // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TranslucencyPriority;           // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_RotRandMin;                     // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_RotRandMax;                     // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ApplyBlur;                      // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D6[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_StartBlurAmount;                // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EndBlurAmount;                  // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BlurStartKeepSec;               // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BlurLerpSec;                    // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_CustomEvent_mainWork;                       // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    K2Node_CustomEvent_partySystem;                    // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> K2Node_CustomEvent_taskFactory;                    // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D7[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattlePostProcessCtrl_C> CallFunc_BI_GetPostProcessCtrl_retValue;           // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CounterEnd_noUse;                      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyHit_retValue;                        // 0x03E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExistTaskForPecID_retValue;          // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D8[0x6];                                     // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_SkillMasterEffectTask_ComIndex;           // 0x03F0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D9[0x2];                                     // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkillActionPointLight_C*               CallFunc_AddPointLight_AddedLight_4;               // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_AddReichiPointTask_ComIndex;              // 0x0428(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_AddActorBstTask_ComIndex;                 // 0x0438(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0448(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0458(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0468(0x0010)(ZeroConstructor, NoDestructor)
	TArray<int32>                                 CallFunc_KuishibariInfoMessTask_Ta__ID;            // 0x0478(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsAnyHit_retValue_1;                      // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DA[0x3];                                     // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Skill_Info_Mess_Task_Ta__ID;              // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0490(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_DestroyTaskForPecID_isSuccess;         // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DB[0x3];                                     // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface;  // 0x04A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue;             // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DC[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_OpenTutorialWindowTask_RetPecID;       // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_1; // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_BeginHitStop_RetPecID;                 // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCallWhiteOut_ReturnValue;               // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DD[0x3];                                     // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DE[0x4];                                     // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetNowMotionID_retValue;                  // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistNotifyInMotion_IsExist;            // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DF[0x2];                                     // 0x0502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddDrawPlayerUpliftingGaugeTask_RetPecID; // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0508(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckActorsUniqueSkillExtraEffect_Collect; // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyCritical_retValue;                   // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x051A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E0[0x5];                                     // 0x051B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetCriticalTargetPartyIndex_index;        // 0x0520(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_ReturnTargetTask_RetTaskIDs;              // 0x0538(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E1[0x3];                                     // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0550(0x0010)(ReferenceParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E2[0x2];                                     // 0x0562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0578(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue_1;           // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_ApplyDrain_retComIDs;                     // 0x05A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E3[0x3];                                     // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x05C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_30E4[0x4];                                     // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x05D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E5[0x3];                                     // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_ApplyHit_One_RetComIDs;                   // 0x05F0(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_ApplyHit_One_RetNecessaryWaitComID;       // 0x0600(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E6[0x7];                                     // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0620(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E7[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_ApplyHit_One_RetComIDs_1;                 // 0x0638(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_ApplyHit_One_RetNecessaryWaitComID_1;     // 0x0648(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E8[0x2];                                     // 0x065A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_7;                         // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E9[0x2];                                     // 0x0666(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetReflexInfoLength_length_1;             // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetReflexInfoLength_length_2;             // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30EA[0x2];                                     // 0x0676(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length_1;             // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30EB[0x3];                                     // 0x067D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0680(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_2; // 0x0690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x06A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue_1;           // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30EC[0x3];                                     // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_OpenTutorialWindowTask_RetPecID_1;     // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_3; // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30ED[0x3];                                     // 0x06CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_4; // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue_2;           // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30EE[0x7];                                     // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x06E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Skill_Info_Mess_Task_Ta__ID_1;            // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_OpenTutorialWindowTask_RetPecID_2;     // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EF[0x4];                                     // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_5; // 0x0708(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F0[0x4];                                     // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_6; // 0x0720(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<E_AUTO_SKILL_EXTRA_EFFECT>             K2Node_MakeArray_Array_1;                          // 0x0730(0x0010)(ReferenceParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F1[0x3];                                     // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_8;                         // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Step;                                 // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PartyIndex;                           // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_Event_SkillLightData;                       // 0x0758(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F2[0x7];                                     // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F3[0x3];                                     // 0x07D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F4[0x3];                                     // 0x07E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F5[0x3];                                     // 0x07F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x07F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemID_ID;                             // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0810(0x0100)(ConstParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0912(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0913(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F6[0x3];                                     // 0x0915(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_9;                         // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F7[0x7];                                     // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_AddPointLight_AddedLight_5;               // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0938(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetBattleCameraShake_retValue;         // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F8[0x7];                                     // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_4;              // 0x0950(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item_10;                        // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_DestroyTaskForPecID_isSuccess_1;       // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F9[0x3];                                     // 0x0965(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCallWhiteOut_ReturnValue_1;             // 0x096D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FA[0x2];                                     // 0x096E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0970(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam_1;                 // 0x09A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate_2;                   // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FB[0x4];                                     // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleHitStopCtrl_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeroDeadByReflection_IsDead;            // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FC[0x3];                                     // 0x09C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x09CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x09DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase");
static_assert(sizeof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase) == 0x0009E0, "Wrong size on BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, EntryPoint) == 0x000000, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Loop_Counter_Variable_2) == 0x000030, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Array_Index_Variable_3) == 0x000038, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_PartyIndex_2) == 0x000040, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_PartyIndex_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_LightData_2) == 0x000050, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_LightData_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_PartyIndex_1) == 0x0000B8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_PartyIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_LightData_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_LightData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Conv_StringToName_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000138, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_LastIndex_ReturnValue) == 0x00013C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_1) == 0x000144, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_2) == 0x000148, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetHitLightData_IsValid) == 0x00014C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetHitLightData_IsValid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetHitLightData_LightData) == 0x000150, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetHitLightData_LightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_GroupID_1) == 0x0001AC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_GroupID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_Color_1) == 0x0001B0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_Color_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_Intensity_1) == 0x0001B8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_Intensity_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_Radius_1) == 0x0001C0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_Radius_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetPlaybackPosition_ReturnValue) == 0x0001C8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsPlaying_ReturnValue) == 0x0001CC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001CD, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue) == 0x0001CE, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanOR_ReturnValue) == 0x0001CF, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanAND_ReturnValue) == 0x0001D0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_GroupID) == 0x0001D4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_Color) == 0x0001D8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_Intensity) == 0x0001E0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_Radius) == 0x0001E8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddPointLight_AddedLight) == 0x0001F0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddPointLight_AddedLight' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001FC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_4) == 0x000200, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Loop_Counter_Variable_3) == 0x000204, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_PartyIndex) == 0x000208, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_LightData) == 0x000218, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_LightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000280, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_5) == 0x000288, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Loop_Counter_Variable_4) == 0x00028C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddPointLight_AddedLight_1) == 0x000290, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddPointLight_AddedLight_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_6) == 0x000298, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Variable) == 0x00029C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0002A0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item) == 0x0002A8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_7) == 0x0002D0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_3) == 0x0002D4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002D8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanOR_ReturnValue_1) == 0x0002D9, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetTaskFactory_retValue) == 0x0002E0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_1) == 0x0002F0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0002F8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddPointLight_AddedLight_2) == 0x000300, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddPointLight_AddedLight_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetPlayRate_PlayRate) == 0x000308, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_2) == 0x000310, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000318, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddPointLight_AddedLight_3) == 0x000320, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddPointLight_AddedLight_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000328, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetPlayRate_PlayRate_1) == 0x00032C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetPlayRate_PlayRate_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_waitCommandIndex) == 0x000330, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_waitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_hitEffect) == 0x000334, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_hitEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_RelativeTransform) == 0x000340, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_IsWorldRelative) == 0x000370, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_LifeSec) == 0x000374, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_TranslucencyPriority) == 0x000378, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_RotRandMin) == 0x00037C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_RotRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_RotRandMax) == 0x000380, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_RotRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_ApplyBlur) == 0x000384, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_ApplyBlur' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_StartBlurAmount) == 0x000388, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_StartBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_EndBlurAmount) == 0x00038C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_EndBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_BlurStartKeepSec) == 0x000390, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_BlurStartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_BlurLerpSec) == 0x000394, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_BlurLerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_mainWork) == 0x000398, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_mainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_partySystem) == 0x0003A8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_partySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_taskFactory) == 0x0003B8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_taskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0003C8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_GetPostProcessCtrl_retValue) == 0x0003D0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_GetPostProcessCtrl_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_CounterEnd_noUse) == 0x0003E0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_CounterEnd_noUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003E1, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_2) == 0x0003E2, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsAnyHit_retValue) == 0x0003E3, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsAnyHit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetComandID_retValue) == 0x0003E4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsValidCommandIndex_retValue) == 0x0003E8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_IsExistTaskForPecID_retValue) == 0x0003E9, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_IsExistTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_SkillMasterEffectTask_ComIndex) == 0x0003F0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_SkillMasterEffectTask_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Variable_1) == 0x000400, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_8) == 0x000404, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_3) == 0x000408, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_4) == 0x000409, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Variable_2) == 0x00040C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_9) == 0x000410, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Array_Index_Variable_4) == 0x000414, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Array_Index_Variable_5) == 0x000418, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_3) == 0x00041C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddPointLight_AddedLight_4) == 0x000420, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddPointLight_AddedLight_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddReichiPointTask_ComIndex) == 0x000428, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddReichiPointTask_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddActorBstTask_ComIndex) == 0x000438, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddActorBstTask_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000448, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000458, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x000468, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_KuishibariInfoMessTask_Ta__ID) == 0x000478, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_KuishibariInfoMessTask_Ta__ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsAnyHit_retValue_1) == 0x000488, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsAnyHit_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Skill_Info_Mess_Task_Ta__ID) == 0x00048C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Skill_Info_Mess_Task_Ta__ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x000490, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue) == 0x0004A0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_DestroyTaskForPecID_isSuccess) == 0x0004A4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_DestroyTaskForPecID_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainInterface_AsBPI_Main_Interface) == 0x0004A8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_CheckTutorial_ReturnValue) == 0x0004B8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_CheckTutorial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_OpenTutorialWindowTask_RetPecID) == 0x0004BC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_OpenTutorialWindowTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_1) == 0x0004C0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_1) == 0x0004D0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_BeginHitStop_RetPecID) == 0x0004D4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_BeginHitStop_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsCallWhiteOut_ReturnValue) == 0x0004D8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsCallWhiteOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_2) == 0x0004DC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetActorPartyIndex_index) == 0x0004E0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_FindUnit_Unit) == 0x0004E8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetTaskFactory_retValue_1) == 0x0004F0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetNowMotionID_retValue) == 0x000500, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetNowMotionID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsExistNotifyInMotion_IsExist) == 0x000501, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsExistNotifyInMotion_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_AddDrawPlayerUpliftingGaugeTask_RetPecID) == 0x000504, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_AddDrawPlayerUpliftingGaugeTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x000508, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_CheckActorsUniqueSkillExtraEffect_Collect) == 0x000518, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_CheckActorsUniqueSkillExtraEffect_Collect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsAnyCritical_retValue) == 0x000519, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsAnyCritical_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanAND_ReturnValue_1) == 0x00051A, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetCriticalTargetPartyIndex_index) == 0x000520, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetCriticalTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_4) == 0x000530, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_4) == 0x000534, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_ReturnTargetTask_RetTaskIDs) == 0x000538, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_ReturnTargetTask_RetTaskIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x000548, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Loop_Counter_Variable_5) == 0x00054C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_MakeArray_Array) == 0x000550, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000560, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_2) == 0x000561, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_10) == 0x000564, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetTaskFactory_retValue_2) == 0x000568, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_6) == 0x000578, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetTaskFactory_retValue_3) == 0x000588, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000598, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_3) == 0x00059C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_AddDeltaWaitTask_retValue_1) == 0x0005A0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_AddDeltaWaitTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_4) == 0x0005A4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_ApplyDrain_retComIDs) == 0x0005A8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_ApplyDrain_retComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_5) == 0x0005B8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_5) == 0x0005BC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_3) == 0x0005C0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_7) == 0x0005C4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetTargetInfo_Info) == 0x0005D8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetReflexInfoLength_length) == 0x0005E8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0005EC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_ApplyHit_One_RetComIDs) == 0x0005F0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_ApplyHit_One_RetComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_ApplyHit_One_RetNecessaryWaitComID) == 0x000600, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_ApplyHit_One_RetNecessaryWaitComID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_6) == 0x000610, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_6) == 0x000614, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_4) == 0x000618, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetReflexInfo_Info) == 0x000620, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanAND_ReturnValue_2) == 0x000630, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_ApplyHit_One_RetComIDs_1) == 0x000638, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_ApplyHit_One_RetComIDs_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_ApplyHit_One_RetNecessaryWaitComID_1) == 0x000648, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_ApplyHit_One_RetNecessaryWaitComID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanAND_ReturnValue_3) == 0x000658, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanAND_ReturnValue_4) == 0x000659, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_7) == 0x00065C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_7) == 0x000660, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_5) == 0x000664, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanAND_ReturnValue_5) == 0x000665, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetReflexInfoLength_length_1) == 0x000668, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetReflexInfoLength_length_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetReflexInfoLength_length_2) == 0x00066C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetReflexInfoLength_length_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetTargetInfoLength_length) == 0x000670, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_6) == 0x000674, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_7) == 0x000675, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetTargetInfoLength_length_1) == 0x000678, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetTargetInfoLength_length_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_8) == 0x00067C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_8) == 0x000680, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_2) == 0x000690, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_9) == 0x0006A0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_CheckTutorial_ReturnValue_1) == 0x0006B0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_CheckTutorial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_OpenTutorialWindowTask_RetPecID_1) == 0x0006B4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_OpenTutorialWindowTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_3) == 0x0006B8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_5) == 0x0006C8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_bool_Variable) == 0x0006CC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_4) == 0x0006D0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_CheckTutorial_ReturnValue_2) == 0x0006E0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_CheckTutorial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_Select_Default) == 0x0006E8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Skill_Info_Mess_Task_Ta__ID_1) == 0x0006F8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Skill_Info_Mess_Task_Ta__ID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_6) == 0x0006FC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_OpenTutorialWindowTask_RetPecID_2) == 0x000700, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_OpenTutorialWindowTask_RetPecID_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_5) == 0x000708, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_7) == 0x000718, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_6) == 0x000720, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_MakeArray_Array_1) == 0x000730, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_Event_DeltaSeconds) == 0x000740, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Array_Index_Variable_6) == 0x000744, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_Event_EndPlayReason) == 0x000748, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_8) == 0x00074C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_Event_Step) == 0x000750, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_Event_Step' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_Event_PartyIndex) == 0x000754, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_Event_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_Event_SkillLightData) == 0x000758, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_Event_SkillLightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_5) == 0x0007C0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_object_Variable) == 0x0007C8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_DynamicCast_AsMaterial_Instance) == 0x0007D0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_DynamicCast_bSuccess) == 0x0007D8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Add_ReturnValue_8) == 0x0007DC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Variable_3) == 0x0007E0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Loop_Counter_Variable_6) == 0x0007E4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_9) == 0x0007E8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Add_IntInt_ReturnValue_11) == 0x0007EC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, Temp_int_Variable_4) == 0x0007F0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_10) == 0x0007F4, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_MakeArray_Array_2) == 0x0007F8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetSkillID_ID) == 0x000808, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetItemID_ID) == 0x00080C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetSkillBaseData_ReturnValue) == 0x000810, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000910, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_6) == 0x000911, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000912, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BooleanOR_ReturnValue_2) == 0x000913, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_7) == 0x000914, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CustomEvent_Loaded) == 0x000918, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_9) == 0x000920, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000928, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_AddPointLight_AddedLight_5) == 0x000930, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_AddPointLight_AddedLight_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainWork_NewParam) == 0x000938, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_SetBattleCameraShake_retValue) == 0x000948, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_SetBattleCameraShake_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetTaskFactory_retValue_4) == 0x000950, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetTaskFactory_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Get_Item_10) == 0x000960, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BI_DestroyTaskForPecID_isSuccess_1) == 0x000964, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BI_DestroyTaskForPecID_isSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Array_Length_ReturnValue_8) == 0x000968, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Less_IntInt_ReturnValue_11) == 0x00096C, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsCallWhiteOut_ReturnValue_1) == 0x00096D, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsCallWhiteOut_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_MakeTransform_ReturnValue) == 0x000970, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BIGetMainWork_NewParam_1) == 0x0009A0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BIGetMainWork_NewParam_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0009B0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_GetPlayRate_PlayRate_2) == 0x0009B8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_GetPlayRate_PlayRate_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x0009C0, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_IsHeroDeadByReflection_IsDead) == 0x0009C8, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_IsHeroDeadByReflection_IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, K2Node_CreateDelegate_OutputDelegate_10) == 0x0009CC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase, CallFunc_Not_PreBool_ReturnValue_8) == 0x0009DC, "Member 'BattleSkillActionBase_C_ExecuteUbergraph_BattleSkillActionBase::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BI_AddPointLight_Auto
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_BI_AddPointLight_Auto final
{
public:
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         SkillLightData;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_BI_AddPointLight_Auto) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BI_AddPointLight_Auto");
static_assert(sizeof(BattleSkillActionBase_C_BI_AddPointLight_Auto) == 0x000068, "Wrong size on BattleSkillActionBase_C_BI_AddPointLight_Auto");
static_assert(offsetof(BattleSkillActionBase_C_BI_AddPointLight_Auto, SkillLightData) == 0x000000, "Member 'BattleSkillActionBase_C_BI_AddPointLight_Auto::SkillLightData' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BI_BlinkHitLight
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_BI_BlinkHitLight final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_BI_BlinkHitLight) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_BI_BlinkHitLight");
static_assert(sizeof(BattleSkillActionBase_C_BI_BlinkHitLight) == 0x000004, "Wrong size on BattleSkillActionBase_C_BI_BlinkHitLight");
static_assert(offsetof(BattleSkillActionBase_C_BI_BlinkHitLight, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_BI_BlinkHitLight::PartyIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BI_CallEvt_SkillPerformance
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_BI_CallEvt_SkillPerformance final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_BI_CallEvt_SkillPerformance) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_BI_CallEvt_SkillPerformance");
static_assert(sizeof(BattleSkillActionBase_C_BI_CallEvt_SkillPerformance) == 0x000004, "Wrong size on BattleSkillActionBase_C_BI_CallEvt_SkillPerformance");
static_assert(offsetof(BattleSkillActionBase_C_BI_CallEvt_SkillPerformance, Step) == 0x000000, "Member 'BattleSkillActionBase_C_BI_CallEvt_SkillPerformance::Step' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_ReceiveEndPlay");
static_assert(sizeof(BattleSkillActionBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleSkillActionBase_C_ReceiveEndPlay");
static_assert(offsetof(BattleSkillActionBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleSkillActionBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_ReceiveTick");
static_assert(sizeof(BattleSkillActionBase_C_ReceiveTick) == 0x000004, "Wrong size on BattleSkillActionBase_C_ReceiveTick");
static_assert(offsetof(BattleSkillActionBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleSkillActionBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Evt_ApplyHit
// 0x00A0 (0x00A0 - 0x0000)
struct BattleSkillActionBase_C_Evt_ApplyHit final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitEffect;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FD[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FE[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotRandMin;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotRandMax;                                        // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyBlur;                                         // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FF[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartBlurAmount;                                   // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndBlurAmount;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurStartKeepSec;                                  // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurLerpSec;                                       // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     MainWork;                                          // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Evt_ApplyHit) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Evt_ApplyHit");
static_assert(sizeof(BattleSkillActionBase_C_Evt_ApplyHit) == 0x0000A0, "Wrong size on BattleSkillActionBase_C_Evt_ApplyHit");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, HitEffect) == 0x000004, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::HitEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, RelativeTransform) == 0x000010, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, IsWorldRelative) == 0x000040, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, LifeSec) == 0x000044, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, TranslucencyPriority) == 0x000048, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, RotRandMin) == 0x00004C, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::RotRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, RotRandMax) == 0x000050, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::RotRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, ApplyBlur) == 0x000054, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::ApplyBlur' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, StartBlurAmount) == 0x000058, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::StartBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, EndBlurAmount) == 0x00005C, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::EndBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, BlurStartKeepSec) == 0x000060, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::BlurStartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, BlurLerpSec) == 0x000064, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::BlurLerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, MainWork) == 0x000068, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, PartySystem) == 0x000078, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Evt_ApplyHit, TaskFactory) == 0x000088, "Member 'BattleSkillActionBase_C_Evt_ApplyHit::TaskFactory' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Add Target Party PointLight Impl
// 0x0078 (0x0078 - 0x0000)
struct BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl final
{
public:
	TArray<int32>                                 PartyIndex;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         LightData;                                         // 0x0010(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl");
static_assert(sizeof(BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl) == 0x000078, "Wrong size on BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl");
static_assert(offsetof(BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl, LightData) == 0x000010, "Member 'BattleSkillActionBase_C_Add_Target_Party_PointLight_Impl::LightData' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.TargetPointLightAutoUpdate
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_TargetPointLightAutoUpdate final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3100[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_TargetPointLightAutoUpdate) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_TargetPointLightAutoUpdate");
static_assert(sizeof(BattleSkillActionBase_C_TargetPointLightAutoUpdate) == 0x000020, "Wrong size on BattleSkillActionBase_C_TargetPointLightAutoUpdate");
static_assert(offsetof(BattleSkillActionBase_C_TargetPointLightAutoUpdate, GroupID) == 0x000000, "Member 'BattleSkillActionBase_C_TargetPointLightAutoUpdate::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetPointLightAutoUpdate, Color) == 0x000008, "Member 'BattleSkillActionBase_C_TargetPointLightAutoUpdate::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetPointLightAutoUpdate, Intensity) == 0x000010, "Member 'BattleSkillActionBase_C_TargetPointLightAutoUpdate::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetPointLightAutoUpdate, Radius) == 0x000018, "Member 'BattleSkillActionBase_C_TargetPointLightAutoUpdate::Radius' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ActorPointLightAutoUpdate
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_ActorPointLightAutoUpdate final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3101[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ActorPointLightAutoUpdate) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ActorPointLightAutoUpdate");
static_assert(sizeof(BattleSkillActionBase_C_ActorPointLightAutoUpdate) == 0x000020, "Wrong size on BattleSkillActionBase_C_ActorPointLightAutoUpdate");
static_assert(offsetof(BattleSkillActionBase_C_ActorPointLightAutoUpdate, GroupID) == 0x000000, "Member 'BattleSkillActionBase_C_ActorPointLightAutoUpdate::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ActorPointLightAutoUpdate, Color) == 0x000008, "Member 'BattleSkillActionBase_C_ActorPointLightAutoUpdate::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ActorPointLightAutoUpdate, Intensity) == 0x000010, "Member 'BattleSkillActionBase_C_ActorPointLightAutoUpdate::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ActorPointLightAutoUpdate, Radius) == 0x000018, "Member 'BattleSkillActionBase_C_ActorPointLightAutoUpdate::Radius' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Add Target Point Light Impl
// 0x0078 (0x0078 - 0x0000)
struct BattleSkillActionBase_C_Add_Target_Point_Light_Impl final
{
public:
	TArray<int32>                                 PartyIndex;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         LightData;                                         // 0x0010(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Add_Target_Point_Light_Impl) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Add_Target_Point_Light_Impl");
static_assert(sizeof(BattleSkillActionBase_C_Add_Target_Point_Light_Impl) == 0x000078, "Wrong size on BattleSkillActionBase_C_Add_Target_Point_Light_Impl");
static_assert(offsetof(BattleSkillActionBase_C_Add_Target_Point_Light_Impl, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Add_Target_Point_Light_Impl::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Add_Target_Point_Light_Impl, LightData) == 0x000010, "Member 'BattleSkillActionBase_C_Add_Target_Point_Light_Impl::LightData' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Add Actor Point Light Impl
// 0x0078 (0x0078 - 0x0000)
struct BattleSkillActionBase_C_Add_Actor_Point_Light_Impl final
{
public:
	TArray<int32>                                 PartyIndex;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         LightData;                                         // 0x0010(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Add_Actor_Point_Light_Impl) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Add_Actor_Point_Light_Impl");
static_assert(sizeof(BattleSkillActionBase_C_Add_Actor_Point_Light_Impl) == 0x000078, "Wrong size on BattleSkillActionBase_C_Add_Actor_Point_Light_Impl");
static_assert(offsetof(BattleSkillActionBase_C_Add_Actor_Point_Light_Impl, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Add_Actor_Point_Light_Impl::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Add_Actor_Point_Light_Impl, LightData) == 0x000010, "Member 'BattleSkillActionBase_C_Add_Actor_Point_Light_Impl::LightData' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.OnLoaded_DAB82F5B47E17575A75C0C8219BE5104
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_OnLoaded_DAB82F5B47E17575A75C0C8219BE5104 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_OnLoaded_DAB82F5B47E17575A75C0C8219BE5104) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_OnLoaded_DAB82F5B47E17575A75C0C8219BE5104");
static_assert(sizeof(BattleSkillActionBase_C_OnLoaded_DAB82F5B47E17575A75C0C8219BE5104) == 0x000008, "Wrong size on BattleSkillActionBase_C_OnLoaded_DAB82F5B47E17575A75C0C8219BE5104");
static_assert(offsetof(BattleSkillActionBase_C_OnLoaded_DAB82F5B47E17575A75C0C8219BE5104, Loaded) == 0x000000, "Member 'BattleSkillActionBase_C_OnLoaded_DAB82F5B47E17575A75C0C8219BE5104::Loaded' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UserConstructionScript");
static_assert(sizeof(BattleSkillActionBase_C_UserConstructionScript) == 0x000010, "Wrong size on BattleSkillActionBase_C_UserConstructionScript");
static_assert(offsetof(BattleSkillActionBase_C_UserConstructionScript, CallFunc_GetObjectName_ReturnValue) == 0x000000, "Member 'BattleSkillActionBase_C_UserConstructionScript::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CallEvent
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_CallEvent final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CallEvent) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_CallEvent");
static_assert(sizeof(BattleSkillActionBase_C_CallEvent) == 0x000001, "Wrong size on BattleSkillActionBase_C_CallEvent");
static_assert(offsetof(BattleSkillActionBase_C_CallEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BattleSkillActionBase_C_CallEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ActorSetMotion
// 0x0120 (0x0120 - 0x0000)
struct BattleSkillActionBase_C_Com_ActorSetMotion final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMotionFinished;                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3102[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartPosition;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayOneScale;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3103[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_StartPosition;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3104[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Lo_NotifiyNames;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FCharaMotion                           Lo_MotionData;                                     // 0x0030(0x0018)(Edit, BlueprintVisible, NoDestructor)
	E_CHARA_MOTION_ID                             Lo_MotionID;                                       // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3105[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_RetComIndex;                                    // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3106[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length;     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3107[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3108[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3109[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_CalcAttackMotion_AttackMotion;            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_CalcSkillMotion_MotionID;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_310A[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310B[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistNotifyInMotion_IsExist;            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310C[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310D[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310E[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddBlankExistTask_retValue;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_310F[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue_1;           // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ActorSetMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_ActorSetMotion");
static_assert(sizeof(BattleSkillActionBase_C_Com_ActorSetMotion) == 0x000120, "Wrong size on BattleSkillActionBase_C_Com_ActorSetMotion");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, MotionID) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, WaitMotionFinished) == 0x000005, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::WaitMotionFinished' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, StartPosition) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, IsPlayOneScale) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::IsPlayOneScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Com_Index) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Lo_StartPosition) == 0x000014, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Lo_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Lo_ActorIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Lo_NotifiyNames) == 0x000020, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Lo_NotifiyNames' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Lo_MotionData) == 0x000030, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Lo_MotionData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Lo_MotionID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Lo_MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Lo_RetComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Lo_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Lo_WaitList) == 0x000050, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_GetComandID_retValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_IsValidCommandIndex_retValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000068, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_GetMagatsuhiOtherActorsLength_length) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_GetMagatsuhiOtherActorsLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_GetActorPartyIndex_index) == 0x000084, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BooleanOR_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Array_Get_Item) == 0x000090, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BIGetTaskFactory_retValue) == 0x000098, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BI_AddSetUnitMotion_retValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_IsReflected_IsReflected) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B3, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_CalcAttackMotion_AttackMotion) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_CalcAttackMotion_AttackMotion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_CalcSkillMotion_MotionID) == 0x0000B5, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_CalcSkillMotion_MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_GetPlayRate_PlayRate) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000C5, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_IsExistNotifyInMotion_IsExist) == 0x0000CD, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_IsExistNotifyInMotion_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000CE, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000CF, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000D1, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0000D2, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BooleanOR_ReturnValue_2) == 0x0000D9, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Less_IntInt_ReturnValue) == 0x0000DA, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BooleanOR_ReturnValue_3) == 0x0000DB, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BooleanOR_ReturnValue_4) == 0x0000DC, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BI_AddBlankExistTask_retValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BI_AddBlankExistTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BIGetTaskFactory_retValue_2) == 0x000100, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000110, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_BI_AddSetUnitMotion_retValue_1) == 0x000114, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_BI_AddSetUnitMotion_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorSetMotion, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_Com_ActorSetMotion::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Initialize
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_Initialize final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParticleManager_C> CallFunc_BI_GetPaticleManager_retValue;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BIResetTransrateCache_NoUse;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Initialize) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Initialize");
static_assert(sizeof(BattleSkillActionBase_C_Initialize) == 0x000028, "Wrong size on BattleSkillActionBase_C_Initialize");
static_assert(offsetof(BattleSkillActionBase_C_Initialize, CallFunc_BIGetMainWork_NewParam) == 0x000000, "Member 'BattleSkillActionBase_C_Initialize::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Initialize, CallFunc_BI_GetPaticleManager_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_Initialize::CallFunc_BI_GetPaticleManager_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Initialize, CallFunc_BIResetTransrateCache_NoUse) == 0x000020, "Member 'BattleSkillActionBase_C_Initialize::CallFunc_BIResetTransrateCache_NoUse' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsValidCommandIndex
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_IsValidCommandIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3110[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsValidCommandIndex) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_IsValidCommandIndex");
static_assert(sizeof(BattleSkillActionBase_C_IsValidCommandIndex) == 0x000010, "Wrong size on BattleSkillActionBase_C_IsValidCommandIndex");
static_assert(offsetof(BattleSkillActionBase_C_IsValidCommandIndex, Param_Index) == 0x000000, "Member 'BattleSkillActionBase_C_IsValidCommandIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsValidCommandIndex, RetValue) == 0x000004, "Member 'BattleSkillActionBase_C_IsValidCommandIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsValidCommandIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'BattleSkillActionBase_C_IsValidCommandIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsValidCommandIndex, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsValidCommandIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsValidCommandIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_IsValidCommandIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsValidCommandIndex, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BattleSkillActionBase_C_IsValidCommandIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddComandID
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_AddComandID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddComandID) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_AddComandID");
static_assert(sizeof(BattleSkillActionBase_C_AddComandID) == 0x000008, "Wrong size on BattleSkillActionBase_C_AddComandID");
static_assert(offsetof(BattleSkillActionBase_C_AddComandID, Param_Index) == 0x000000, "Member 'BattleSkillActionBase_C_AddComandID::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddComandID, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_AddComandID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_End
// 0x0018 (0x0018 - 0x0000)
struct BattleSkillActionBase_C_Com_End final
{
public:
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_TaskSort_NoUSe;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_End) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_End");
static_assert(sizeof(BattleSkillActionBase_C_Com_End) == 0x000018, "Wrong size on BattleSkillActionBase_C_Com_End");
static_assert(offsetof(BattleSkillActionBase_C_Com_End, CallFunc_BIGetTaskFactory_retValue) == 0x000000, "Member 'BattleSkillActionBase_C_Com_End::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_End, CallFunc_BI_TaskSort_NoUSe) == 0x000010, "Member 'BattleSkillActionBase_C_Com_End::CallFunc_BI_TaskSort_NoUSe' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetCamActorRelative
// 0x00D0 (0x00D0 - 0x0000)
struct BattleSkillActionBase_C_Com_SetCamActorRelative final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3111[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          WaitHokan;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3112[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_CameraName;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue;              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3113[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3114[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AdjustCameraName_Output;                  // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AdjustCameraName_IsAttack;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3115[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3116[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3117[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3118[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetCamActorRelative) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_SetCamActorRelative");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetCamActorRelative) == 0x0000D0, "Wrong size on BattleSkillActionBase_C_Com_SetCamActorRelative");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, WaitHokan) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::WaitHokan' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, ComIndex) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, Lo_CameraName) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::Lo_CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, Lo_WaitList) == 0x000030, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_GetComandID_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_IsValidCommandIndex_retValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_MatchesWildcard_ReturnValue) == 0x000045, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_MatchesWildcard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000048, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_AdjustCameraName_Output) == 0x000050, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_AdjustCameraName_Output' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_AdjustCameraName_IsAttack) == 0x000060, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_AdjustCameraName_IsAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_GetActorPartyIndex_index) == 0x000064, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_GetActorPartyIndex_index_1) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_FindUnit_Unit) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_BIGetTaskFactory_retValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_Len_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_SelectString_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamActorRelative, CallFunc_Array_Add_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_SetCamActorRelative::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetComandID
// 0x000C (0x000C - 0x0000)
struct BattleSkillActionBase_C_GetComandID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetComandID) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetComandID");
static_assert(sizeof(BattleSkillActionBase_C_GetComandID) == 0x00000C, "Wrong size on BattleSkillActionBase_C_GetComandID");
static_assert(offsetof(BattleSkillActionBase_C_GetComandID, Param_Index) == 0x000000, "Member 'BattleSkillActionBase_C_GetComandID::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetComandID, RetValue) == 0x000004, "Member 'BattleSkillActionBase_C_GetComandID::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetComandID, CallFunc_Array_Get_Item) == 0x000008, "Member 'BattleSkillActionBase_C_GetComandID::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectActor
// 0x01E0 (0x01E0 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectActor final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3119[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311A[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIgnoreSideScale;                                 // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311B[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SE_sync;                                        // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311C[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_ModSocket;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Lo_ModAnim;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lo_ModSkeletal;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_SE;                                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Lo_Particle;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311D[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311E[0xC];                                     // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00F0(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0120(0x0030)()
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311F[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3120[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item;                           // 0x0178(0x0038)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectActor) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectActor");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectActor) == 0x0001E0, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectActor");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, RelativeTransform) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, IsWorldRelative) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, LifeSec) == 0x000054, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, TranslucencyPriority) == 0x000058, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, RotYawRandMin) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, RotYawRandMax) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, IsIgnoreSideScale) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::IsIgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, ComIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_SE_sync) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_SE_sync' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_ModSocket) == 0x000070, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_ModSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_ModAnim) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_ModAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_ModSkeletal) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_ModSkeletal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_SE) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_SE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_Particle) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_Particle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_ActorIndex) == 0x000098, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, Lo_WaitList) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_GetActorPartyIndex_index) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_AddRandomYaw_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, K2Node_MakeStruct_BtlTaskData) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, K2Node_MakeStruct_BtlTaskData_1) == 0x000120, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_IsValidCommandIndex_retValue) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_GetComandID_retValue) == 0x000154, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000158, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_IsReflected_IsReflected) == 0x00015C, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_BooleanAND_ReturnValue) == 0x00015D, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_Not_PreBool_ReturnValue) == 0x00015E, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_IsValid_ReturnValue) == 0x00015F, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_BIGetTaskFactory_retValue) == 0x000160, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x000170, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_Array_Get_Item) == 0x000178, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_BIGetTaskFactory_retValue_1) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_Conv_StringToName_ReturnValue) == 0x0001C4, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_BI_AddPlayEffectTask_retValue) == 0x0001CC, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActor, CallFunc_Array_Add_ReturnValue) == 0x0001D0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectTarget
// 0x0420 (0x0420 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectTarget final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3121[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3122[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideInReflection;                                  // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInAbsorbAndBlock;                              // 0x0065(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsIgnoreSideScale;                                 // 0x0066(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3123[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SE_sync;                                        // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsIgnoreSideScale;                              // 0x006D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3124[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_ModSocket;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Lo_ModAnim;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lo_ModMesh;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideInAbsorbAndBlock;                           // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInReflection;                               // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3125[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndexPool;                                // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_ActorIndex;                                     // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_SE;                                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Lo_Particle;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_RotRandMax;                                     // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_RotRandMin;                                     // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TransPriority;                                  // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_LifeSec;                                        // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsWorldRelative;                                // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3126[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_RelativeTrans;                                  // 0x00D0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FString                                 Lo_SocketName;                                     // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_PlayIndex;                                      // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3127[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0118(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3128[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3129[0x2];                                     // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312A[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0150(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcReflexTarget_IsExist;                 // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312B[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcReflexTarget_ReflexTargetIndex;       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312C[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312D[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312E[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x0224(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x0235(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0237(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312F[0x8];                                     // 0x0238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3130[0x6];                                     // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0278(0x0030)()
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3131[0x6];                                     // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x02B0(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3132[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item_1;                         // 0x02F8(0x0038)()
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3133[0xC];                                     // 0x0334(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_EFFECT_PLAY_PARAM                 K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM;           // 0x0340(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x03F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3134[0x4];                                     // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectTarget) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectTarget");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectTarget) == 0x000420, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectTarget");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, RelativeTransform) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, IsWorldRelative) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, LifeSec) == 0x000054, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, TranslucencyPriority) == 0x000058, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, RotYawRandMin) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, RotYawRandMax) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, HideInReflection) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, HideInAbsorbAndBlock) == 0x000065, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, IsIgnoreSideScale) == 0x000066, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::IsIgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, ComIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_SE_sync) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_SE_sync' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_IsIgnoreSideScale) == 0x00006D, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_IsIgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_ModSocket) == 0x000070, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_ModSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_ModAnim) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_ModAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_ModMesh) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_ModMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_HideInAbsorbAndBlock) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_HideInReflection) == 0x000089, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_TargetIndexPool) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_TargetIndexPool' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_ActorIndex) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_TargetIndex) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_SE) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_SE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_Particle) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_Particle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_RotRandMax) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_RotRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_RotRandMin) == 0x0000BC, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_RotRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_TransPriority) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_TransPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_LifeSec) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_IsWorldRelative) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_RelativeTrans) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_RelativeTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_SocketName) == 0x000100, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_PlayIndex) == 0x000110, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Lo_WaitList) == 0x000118, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_GetComandID_retValue) == 0x000128, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_IsValidCommandIndex_retValue) == 0x00012C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000134, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000135, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_GetTargetInfo_Info) == 0x000138, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_GetActorPartyIndex_index) == 0x000148, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Get_Item) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_CalcReflexTarget_IsExist) == 0x0001EC, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_CalcReflexTarget_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_CalcReflexTarget_ReflexTargetIndex) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_CalcReflexTarget_ReflexTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BIGetTaskFactory_retValue) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x000208, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Map_Find_Value) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Map_Find_ReturnValue) == 0x000210, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Temp_int_Loop_Counter_Variable) == 0x000214, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Add_ReturnValue) == 0x000218, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Less_IntInt_ReturnValue) == 0x00021C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000220, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Temp_byte_Variable) == 0x000224, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Contains_ReturnValue) == 0x000225, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Contains_ReturnValue_1) == 0x000226, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BooleanAND_ReturnValue) == 0x000227, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x000228, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x000229, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BooleanAND_ReturnValue_2) == 0x00022A, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Not_PreBool_ReturnValue_2) == 0x00022B, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_SelectInt_ReturnValue) == 0x00022C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Add_ReturnValue_1) == 0x000230, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_IsValid_ReturnValue) == 0x000234, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, Temp_byte_Variable_1) == 0x000235, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Contains_ReturnValue_2) == 0x000236, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BooleanOR_ReturnValue) == 0x000237, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_AddRandomYaw_ReturnValue) == 0x000240, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BooleanAND_ReturnValue_3) == 0x000270, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Not_PreBool_ReturnValue_3) == 0x000271, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, K2Node_MakeStruct_BtlTaskData) == 0x000278, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BooleanAND_ReturnValue_4) == 0x0002A8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BooleanAND_ReturnValue_5) == 0x0002A9, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, K2Node_MakeStruct_BtlTaskData_1) == 0x0002B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BIGetTaskFactory_retValue_1) == 0x0002E0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x0002F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Get_Item_1) == 0x0002F8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Add_ReturnValue_2) == 0x000330, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM) == 0x000340, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Add_ReturnValue_3) == 0x0003F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Conv_StringToName_ReturnValue) == 0x0003F4, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BIGetTaskFactory_retValue_2) == 0x000400, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000410, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_BI_AddPlayEffectTask_retValue) == 0x000414, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTarget, CallFunc_Array_Add_ReturnValue_4) == 0x000418, "Member 'BattleSkillActionBase_C_Com_PlayEffectTarget::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_WaitTime
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_WaitTime final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3135[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3136[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_WaitTime) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_WaitTime");
static_assert(sizeof(BattleSkillActionBase_C_Com_WaitTime) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_WaitTime");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_WaitTime::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, DeltaTime) == 0x000004, "Member 'BattleSkillActionBase_C_Com_WaitTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, ComIndex) == 0x000008, "Member 'BattleSkillActionBase_C_Com_WaitTime::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_WaitTime::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_WaitTime::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_WaitTime::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, CallFunc_BIGetTaskFactory_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_WaitTime::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_WaitTime::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_WaitTime::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_WaitTime, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_WaitTime::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IdleFunc
// 0x0150 (0x0150 - 0x0000)
struct BattleSkillActionBase_C_IdleFunc final
{
public:
	E_BTL_SKILL_ACTION_STATE                      Lo_PrevStep;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3137[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsDrawInfo_IsDraw;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3138[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDebugBattleTaskInfo                   K2Node_MakeStruct_DebugBattleTaskInfo;             // 0x0050(0x00E0)()
	bool                                          CallFunc_BI_AddDebugTaskInfo_NoUse;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWaitComDone_IsDone;                     // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3139[0x1];                                     // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetParentNameTaskCnt_retCnt;           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IdleFunc) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_IdleFunc");
static_assert(sizeof(BattleSkillActionBase_C_IdleFunc) == 0x000150, "Wrong size on BattleSkillActionBase_C_IdleFunc");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, Lo_PrevStep) == 0x000000, "Member 'BattleSkillActionBase_C_IdleFunc::Lo_PrevStep' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_BIGetTaskFactory_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_BattleDesignDebugIsDrawInfo_IsDraw) == 0x000028, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_BattleDesignDebugIsDrawInfo_IsDraw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, K2Node_MakeStruct_DebugBattleTaskInfo) == 0x000050, "Member 'BattleSkillActionBase_C_IdleFunc::K2Node_MakeStruct_DebugBattleTaskInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_BI_AddDebugTaskInfo_NoUse) == 0x000130, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_BI_AddDebugTaskInfo_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_IsWaitComDone_IsDone) == 0x000131, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_IsWaitComDone_IsDone' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000132, "Member 'BattleSkillActionBase_C_IdleFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_BooleanAND_ReturnValue) == 0x000133, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000134, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000135, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_BooleanNOR_ReturnValue) == 0x000136, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_BIGetTaskFactory_retValue_1) == 0x000138, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_BI_GetParentNameTaskCnt_retCnt) == 0x000148, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_BI_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IdleFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00014C, "Member 'BattleSkillActionBase_C_IdleFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckIntroduction
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_CheckIntroduction final
{
public:
	int32                                         Lo_ActorIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LookAtPos;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CheckIntroduction) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_CheckIntroduction");
static_assert(sizeof(BattleSkillActionBase_C_CheckIntroduction) == 0x000010, "Wrong size on BattleSkillActionBase_C_CheckIntroduction");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntroduction, Lo_ActorIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CheckIntroduction::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntroduction, Lo_LookAtPos) == 0x000004, "Member 'BattleSkillActionBase_C_CheckIntroduction::Lo_LookAtPos' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_CamShake
// 0x0038 (0x0038 - 0x0000)
struct BattleSkillActionBase_C_Com_CamShake final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CamShakeTableIndex;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeScale;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMultiHit;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCheckHit;                                        // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313A[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NumHit;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NumBlockOrAbsorb;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ShakeScale;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Com_CamShake_Impl_ComIndex;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_CamShake) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_CamShake");
static_assert(sizeof(BattleSkillActionBase_C_Com_CamShake) == 0x000038, "Wrong size on BattleSkillActionBase_C_Com_CamShake");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_CamShake::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, CamShakeTableIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_CamShake::CamShakeTableIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, ShakeScale) == 0x000008, "Member 'BattleSkillActionBase_C_Com_CamShake::ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, IsMultiHit) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_CamShake::IsMultiHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, IsCheckHit) == 0x00000D, "Member 'BattleSkillActionBase_C_Com_CamShake::IsCheckHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_CamShake::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, Lo_NumHit) == 0x000014, "Member 'BattleSkillActionBase_C_Com_CamShake::Lo_NumHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, Lo_NumBlockOrAbsorb) == 0x000018, "Member 'BattleSkillActionBase_C_Com_CamShake::Lo_NumBlockOrAbsorb' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, Lo_ShakeScale) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_CamShake::Lo_ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, Lo_WaitList) == 0x000020, "Member 'BattleSkillActionBase_C_Com_CamShake::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake, CallFunc_Com_CamShake_Impl_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_CamShake::CallFunc_Com_CamShake_Impl_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_RadialBlurTarget
// 0x0218 (0x0218 - 0x0000)
struct BattleSkillActionBase_C_Com_RadialBlurTarget final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_313B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageValue;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAmount;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAmount;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartKeepSec;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpSec;                                           // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideInReflection;                                  // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInAbsorbAndBlock;                              // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313C[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 Lo_FirstTargetInfo;                                // 0x0040(0x0098)(Edit, BlueprintVisible)
	bool                                          Lo_HideInAbsorbAndBlock;                           // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInReflection;                               // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313D[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_TargetIndexPool;                                // 0x00E0(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x00F0(0x0010)(Edit, BlueprintVisible)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x0100(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_313E[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313F[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0118(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x01B1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3140[0x6];                                     // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3141[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcReflexTarget_IsExist;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3142[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcReflexTarget_ReflexTargetIndex;       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3143[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3144[0x2];                                     // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3145[0x2];                                     // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddRadialBlurTask_retValue;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_RadialBlurTarget) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_RadialBlurTarget");
static_assert(sizeof(BattleSkillActionBase_C_Com_RadialBlurTarget) == 0x000218, "Wrong size on BattleSkillActionBase_C_Com_RadialBlurTarget");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Offset) == 0x000018, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, DamageValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::DamageValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, StartAmount) == 0x000028, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::StartAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, EndAmount) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::EndAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, StartKeepSec) == 0x000030, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::StartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, LerpSec) == 0x000034, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::LerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, HideInReflection) == 0x000038, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, HideInAbsorbAndBlock) == 0x000039, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, ComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Lo_FirstTargetInfo) == 0x000040, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Lo_FirstTargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Lo_HideInAbsorbAndBlock) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Lo_HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Lo_HideInReflection) == 0x0000D9, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Lo_HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Lo_TargetIndex) == 0x0000DC, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Lo_TargetIndexPool) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Lo_TargetIndexPool' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Lo_WaitList) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Temp_byte_Variable) == 0x000100, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Conv_StringToName_ReturnValue) == 0x000104, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_GetComandID_retValue) == 0x00010C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_IsValidCommandIndex_retValue) == 0x000110, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_GetFirstTargetInfo_Info) == 0x000118, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_GetFirstTargetInfo_valid) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, Temp_byte_Variable_1) == 0x0001B1, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_FindUnit_Unit) == 0x0001B8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Map_Find_Value) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Map_Find_ReturnValue) == 0x0001C4, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Array_Add_ReturnValue) == 0x0001C8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x0001CC, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_CalcReflexTarget_IsExist) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_CalcReflexTarget_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_CalcReflexTarget_ReflexTargetIndex) == 0x0001DC, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_CalcReflexTarget_ReflexTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Array_Contains_ReturnValue) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Array_Contains_ReturnValue_1) == 0x0001E1, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BooleanOR_ReturnValue) == 0x0001E2, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BooleanAND_ReturnValue) == 0x0001E3, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Array_Contains_ReturnValue_2) == 0x0001E4, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Not_PreBool_ReturnValue) == 0x0001E5, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001E6, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E7, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BIGetTaskFactory_retValue) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BooleanAND_ReturnValue_2) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0001FC, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BooleanAND_ReturnValue_3) == 0x000200, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BooleanAND_ReturnValue_4) == 0x000201, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_SelectInt_ReturnValue) == 0x000204, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Not_PreBool_ReturnValue_2) == 0x000208, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BooleanAND_ReturnValue_5) == 0x000209, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_BI_AddRadialBlurTask_retValue) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_BI_AddRadialBlurTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTarget, CallFunc_Array_Add_ReturnValue_1) == 0x000210, "Member 'BattleSkillActionBase_C_Com_RadialBlurTarget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_RadialBlurOff
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_Com_RadialBlurOff final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3146[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddRadialBlurTask_retValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_RadialBlurOff) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_RadialBlurOff");
static_assert(sizeof(BattleSkillActionBase_C_Com_RadialBlurOff) == 0x000040, "Wrong size on BattleSkillActionBase_C_Com_RadialBlurOff");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, Lo_WaitList) == 0x000008, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, CallFunc_GetComandID_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, CallFunc_IsValidCommandIndex_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, CallFunc_BIGetTaskFactory_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, CallFunc_BI_AddRadialBlurTask_retValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::CallFunc_BI_AddRadialBlurTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurOff, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_RadialBlurOff::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetBeforCommandIndex
// 0x000C (0x000C - 0x0000)
struct BattleSkillActionBase_C_GetBeforCommandIndex final
{
public:
	int32                                         RetComIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetBeforCommandIndex) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetBeforCommandIndex");
static_assert(sizeof(BattleSkillActionBase_C_GetBeforCommandIndex) == 0x00000C, "Wrong size on BattleSkillActionBase_C_GetBeforCommandIndex");
static_assert(offsetof(BattleSkillActionBase_C_GetBeforCommandIndex, RetComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_GetBeforCommandIndex::RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBeforCommandIndex, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_GetBeforCommandIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBeforCommandIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_GetBeforCommandIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckHit
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_CheckHit final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattlePostProcessCtrl_C> CallFunc_BI_GetPostProcessCtrl_retValue;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CounterEnd_noUse;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckHit) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckHit");
static_assert(sizeof(BattleSkillActionBase_C_CheckHit) == 0x000028, "Wrong size on BattleSkillActionBase_C_CheckHit");
static_assert(offsetof(BattleSkillActionBase_C_CheckHit, CallFunc_BIGetMainWork_NewParam) == 0x000000, "Member 'BattleSkillActionBase_C_CheckHit::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckHit, CallFunc_BI_GetPostProcessCtrl_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_CheckHit::CallFunc_BI_GetPostProcessCtrl_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckHit, CallFunc_BI_CounterEnd_noUse) == 0x000020, "Member 'BattleSkillActionBase_C_CheckHit::CallFunc_BI_CounterEnd_noUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckHit, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BattleSkillActionBase_C_CheckHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckHit, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BattleSkillActionBase_C_CheckHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_DeadTarget
// 0x0200 (0x0200 - 0x0000)
struct BattleSkillActionBase_C_Com_DeadTarget final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SavedSecondApplyHit;                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3147[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WholeDeadTarget;                                // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_DeadCount;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DEAD_EFFECT                             Lo_DeadEffect;                                     // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3148[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Target;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3149[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_DeadTarget;                                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314A[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314B[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0070(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314C[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314D[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314E[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0140(0x0098)()
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314F[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverrideTargetLocation_IsOverride;      // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3150[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_IsOverrideTargetLocation_OverrideSocket;  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_OverrideCameraTargetSocket_NoUse;      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3151[0x1];                                     // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_DeadTarget) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_DeadTarget");
static_assert(sizeof(BattleSkillActionBase_C_Com_DeadTarget) == 0x000200, "Wrong size on BattleSkillActionBase_C_Com_DeadTarget");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_DeadTarget::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_DeadTarget::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Lo_SavedSecondApplyHit) == 0x000008, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Lo_SavedSecondApplyHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Lo_WholeDeadTarget) == 0x000010, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Lo_WholeDeadTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Lo_DeadCount) == 0x000020, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Lo_DeadCount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Lo_DeadEffect) == 0x000024, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Lo_DeadEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Lo_Target) == 0x000028, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Lo_DeadTarget) == 0x000030, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Lo_DeadTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Lo_WaitList) == 0x000040, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_GetComandID_retValue) == 0x000050, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_IsValidCommandIndex_retValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Array_Get_Item) == 0x000070, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Temp_int_Loop_Counter_Variable_2) == 0x000114, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Add_IntInt_ReturnValue_2) == 0x000118, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Array_Length_ReturnValue_2) == 0x00011C, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Less_IntInt_ReturnValue_2) == 0x000120, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_BIGetMainWork_NewParam) == 0x000128, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Temp_int_Array_Index_Variable_1) == 0x000138, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Temp_int_Array_Index_Variable_2) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, Temp_bool_True_if_break_was_hit_Variable) == 0x0001DC, "Member 'BattleSkillActionBase_C_Com_DeadTarget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Array_Get_Item_2) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_IsOverrideTargetLocation_IsOverride) == 0x0001E4, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_IsOverrideTargetLocation_IsOverride' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_IsOverrideTargetLocation_OverrideSocket) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_IsOverrideTargetLocation_OverrideSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Not_PreBool_ReturnValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_BI_OverrideCameraTargetSocket_NoUse) == 0x0001F1, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_BI_OverrideCameraTargetSocket_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_BooleanAND_ReturnValue) == 0x0001F2, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0001F4, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_DeadTarget, CallFunc_Array_Add_ReturnValue) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_DeadTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsFinished
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_IsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsFinished) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsFinished");
static_assert(sizeof(BattleSkillActionBase_C_IsFinished) == 0x000001, "Wrong size on BattleSkillActionBase_C_IsFinished");
static_assert(offsetof(BattleSkillActionBase_C_IsFinished, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsFinished::RetValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AttackMoveActor
// 0x03A0 (0x03A0 - 0x0000)
struct BattleSkillActionBase_C_Com_AttackMoveActor final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 Lo_FirstTargetInfo;                                // 0x0008(0x0098)(Edit, BlueprintVisible)
	int32                                         Lo_TaskID;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Lo_AttackMotion;                                   // 0x00A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3152[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_TmpTarget;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsActorMoveable;                                // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3153[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_ActorUnit;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3154[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Checked;                                        // 0x00C8(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Value;                                          // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Deg;                                            // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionExtend                     Lo_Extend;                                         // 0x00E0(0x00A8)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0188(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3155[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x01A0(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3156[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcMoveDestLocation_Location;            // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcMoveDestLocation_Ave;                 // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMoveDestLocation_DistFromTarget;      // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_CalcAttackMotion_AttackMotion;            // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3157[0x5];                                     // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThisOneTargetSkill_IsOneTarget;         // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3158[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMeshRelativeScale_Scale_1;             // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3159[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMeshRelativeScale_Scale_2;             // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcAttackMoveSec_Sec;                    // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcAttackMoveSec_Sec_1;                  // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcAttackMoveSec_Sec_2;                  // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315A[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x02E8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetTargetCenter_Pos;                      // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal;                   // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward;                  // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea;              // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaAction_C>    CallFunc_SetAttackAimLocation_self_CastInput;      // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackAimLocation_NoUse;               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315B[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitAttackMoveTask_retValue;        // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315C[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitAttackMoveTask_retValue_1;      // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315D[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitAttackMoveTask_retValue_2;      // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AttackMoveActor) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AttackMoveActor");
static_assert(sizeof(BattleSkillActionBase_C_Com_AttackMoveActor) == 0x0003A0, "Wrong size on BattleSkillActionBase_C_Com_AttackMoveActor");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_FirstTargetInfo) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_FirstTargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_TaskID) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_TaskID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_AttackMotion) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_AttackMotion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_TmpTarget) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_TmpTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_IsActorMoveable) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_IsActorMoveable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_ActorUnit) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_ActorUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_ActorIndex) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_Checked) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_Checked' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_Value) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_Deg) == 0x0000DC, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_Deg' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_Extend) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_Extend' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, Lo_WaitList) == 0x000188, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetComandID_retValue) == 0x000198, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_IsValidCommandIndex_retValue) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetFirstTargetInfo_Info) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetFirstTargetInfo_valid) == 0x000238, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_FindUnit_Unit) == 0x000240, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetActorPartyIndex_index) == 0x000248, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_CalcMoveDestLocation_Location) == 0x00024C, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_CalcMoveDestLocation_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_CalcMoveDestLocation_Ave) == 0x000258, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_CalcMoveDestLocation_Ave' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_CalcMoveDestLocation_DistFromTarget) == 0x000264, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_CalcMoveDestLocation_DistFromTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_CalcAttackMotion_AttackMotion) == 0x000268, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_CalcAttackMotion_AttackMotion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_Not_PreBool_ReturnValue) == 0x000269, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00026A, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BIGetTaskFactory_retValue) == 0x000270, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BI_AddSetUnitMotion_retValue) == 0x000280, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetMeshRelativeScale_Scale) == 0x000284, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000288, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000294, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002A0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_IsThisOneTargetSkill_IsOneTarget) == 0x0002A4, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_IsThisOneTargetSkill_IsOneTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetMeshRelativeScale_Scale_1) == 0x0002A8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetMeshRelativeScale_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002AC, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002B8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BIGetPartySystem_retValue) == 0x0002C0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetMeshRelativeScale_Scale_2) == 0x0002D0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetMeshRelativeScale_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_CalcAttackMoveSec_Sec) == 0x0002D4, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_CalcAttackMoveSec_Sec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002D8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_CalcAttackMoveSec_Sec_1) == 0x0002DC, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_CalcAttackMoveSec_Sec_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_CalcAttackMoveSec_Sec_2) == 0x0002E0, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_CalcAttackMoveSec_Sec_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetTargetPartyIndex_index) == 0x0002E8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetTargetCenter_Pos) == 0x0002F8, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetTargetCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetTargetCenter_Normal) == 0x000304, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetTargetCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetTargetCenter_forward) == 0x000310, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetTargetCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetTargetCenter_DefenseArea) == 0x00031C, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetTargetCenter_DefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_SetAttackAimLocation_self_CastInput) == 0x000320, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_SetAttackAimLocation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_SetAttackAimLocation_NoUse) == 0x000330, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_SetAttackAimLocation_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000334, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BIGetTaskFactory_retValue_1) == 0x000340, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BI_AddUnitAttackMoveTask_retValue) == 0x000350, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BI_AddUnitAttackMoveTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_FindUnit_Unit_1) == 0x000358, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BIGetTaskFactory_retValue_2) == 0x000360, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000370, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BI_AddUnitAttackMoveTask_retValue_1) == 0x000374, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BI_AddUnitAttackMoveTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000378, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BIGetTaskFactory_retValue_3) == 0x000380, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000390, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_BI_AddUnitAttackMoveTask_retValue_2) == 0x000394, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_BI_AddUnitAttackMoveTask_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AttackMoveActor, CallFunc_Array_Add_ReturnValue) == 0x000398, "Member 'BattleSkillActionBase_C_Com_AttackMoveActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetCamTargetRelative
// 0x0158 (0x0158 - 0x0000)
struct BattleSkillActionBase_C_Com_SetCamTargetRelative final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          WaitHokan;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsConsiderActorLocation;                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResetCharaParticle;                                // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315F[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_ResetTargets;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	E_SKILL_TARGET                                Lo_SkillArea;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3160[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0038(0x0010)(Edit, BlueprintVisible)
	E_BTL_SKILL_CAM_TYPE                          Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3161[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AdjustCameraName_Output;                  // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AdjustCameraName_IsAttack;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3162[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          Temp_byte_Variable_1;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          Temp_byte_Variable_2;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Temp_byte_Variable_3;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            CallFunc_GetExtraAction_ExtraAction;               // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill;     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3163[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThisOneTargetCallSkill_IsOneTarget;     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsThisCallSkill_IsCall;                   // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsThisOneTargetSkill_IsOneTarget;         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          K2Node_Select_Default;                             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3164[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0088(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3165[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          K2Node_Select_Default_1;                           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3166[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          K2Node_Select_Default_2;                           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3167[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetCamTargetRelative) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_SetCamTargetRelative");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetCamTargetRelative) == 0x000158, "Wrong size on BattleSkillActionBase_C_Com_SetCamTargetRelative");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, WaitHokan) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::WaitHokan' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, IsConsiderActorLocation) == 0x000019, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::IsConsiderActorLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, ResetCharaParticle) == 0x00001A, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::ResetCharaParticle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, ComIndex) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Lo_ResetTargets) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Lo_ResetTargets' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Lo_SkillArea) == 0x000030, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Lo_SkillArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Lo_WaitList) == 0x000038, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Temp_byte_Variable) == 0x000048, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_AdjustCameraName_Output) == 0x000050, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_AdjustCameraName_Output' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_AdjustCameraName_IsAttack) == 0x000060, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_AdjustCameraName_IsAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetComandID_retValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_IsValidCommandIndex_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Temp_byte_Variable_1) == 0x000069, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Temp_bool_Variable) == 0x00006A, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Temp_bool_Variable_1) == 0x00006B, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Temp_byte_Variable_2) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Temp_byte_Variable_3) == 0x00006D, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetExtraAction_ExtraAction) == 0x00006E, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetExtraAction_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006F, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill) == 0x000071, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetActorPartyIndex_index) == 0x000074, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetPlayRate_PlayRate) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_IsThisOneTargetCallSkill_IsOneTarget) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_IsThisOneTargetCallSkill_IsOneTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007D, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_IsThisCallSkill_IsCall) == 0x00007E, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_IsThisCallSkill_IsCall' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_BooleanAND_ReturnValue_1) == 0x00007F, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_IsThisOneTargetSkill_IsOneTarget) == 0x000081, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_IsThisOneTargetSkill_IsOneTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetSkillArea_ReturnValue) == 0x000082, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, K2Node_Select_Default) == 0x000083, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetFirstTargetInfo_Info) == 0x000088, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetFirstTargetInfo_valid) == 0x000120, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000124, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, Temp_bool_Variable_2) == 0x000128, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, K2Node_Select_Default_1) == 0x000129, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_BIGetTaskFactory_retValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, K2Node_Select_Default_2) == 0x000140, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000144, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_Array_Add_ReturnValue) == 0x000148, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamTargetRelative, CallFunc_Array_Add_ReturnValue_1) == 0x000150, "Member 'BattleSkillActionBase_C_Com_SetCamTargetRelative::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsUnitMotionEndAll
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_IsUnitMotionEndAll final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_NoEnd;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3168[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetPartyLoopMax_retValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3169[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetNowMotionID_retValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_316A[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsUnitMotionEndAll) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsUnitMotionEndAll");
static_assert(sizeof(BattleSkillActionBase_C_IsUnitMotionEndAll) == 0x000040, "Wrong size on BattleSkillActionBase_C_IsUnitMotionEndAll");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, Lo_NoEnd) == 0x000001, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::Lo_NoEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, Temp_bool_Variable) == 0x000002, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_BIGetPartySystem_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_BI_const_GetPartyLoopMax_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_BI_const_GetPartyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_BI_const_GetPartyStart_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, Temp_int_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_FindUnit_Unit) == 0x000028, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_BI_IsExist_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_GetNowMotionID_retValue) == 0x000031, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_GetNowMotionID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUnitMotionEndAll, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BattleSkillActionBase_C_IsUnitMotionEndAll::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_MessageShowSkillName
// 0x02A0 (0x02A0 - 0x0000)
struct BattleSkillActionBase_C_Com_MessageShowSkillName final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ItemID;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SkillId;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ElementNum;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_SkillName;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_316B[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_316C[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_316D[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0058(0x0100)(ConstParm)
	bool                                          CallFunc_SkillBaseDataGetValue_IsEnableShowSkillName_ReturnValue; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_316E[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemIconIdByItemId_ReturnValue;        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue_1;           // 0x0170(0x0100)(ConstParm)
	uint8                                         CallFunc_SkillBaseDataGetValue_Icon_ReturnValue;   // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_316F[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeSkillName_ReturnValue;                // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeSkillName_Aptitude;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemID_ID;                             // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddMessageTask_retValue;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_MessageShowSkillName) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_MessageShowSkillName");
static_assert(sizeof(BattleSkillActionBase_C_Com_MessageShowSkillName) == 0x0002A0, "Wrong size on BattleSkillActionBase_C_Com_MessageShowSkillName");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, Lo_ItemID) == 0x000008, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::Lo_ItemID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, Lo_SkillId) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, Lo_ActorIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, Lo_ElementNum) == 0x000014, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::Lo_ElementNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, Lo_SkillName) == 0x000018, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::Lo_SkillName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, Lo_WaitList) == 0x000028, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetComandID_retValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_IsValidCommandIndex_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetActorPartyIndex_index) == 0x000044, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetPlayRate_PlayRate) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetSkillID_ID) == 0x000050, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetSkillBaseData_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_SkillBaseDataGetValue_IsEnableShowSkillName_ReturnValue) == 0x000158, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_SkillBaseDataGetValue_IsEnableShowSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetItemIconIdByItemId_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetItemIconIdByItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_BIGetTaskFactory_retValue) == 0x000160, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetSkillBaseData_ReturnValue_1) == 0x000170, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetSkillBaseData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_SkillBaseDataGetValue_Icon_ReturnValue) == 0x000270, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_SkillBaseDataGetValue_Icon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_MakeSkillName_ReturnValue) == 0x000278, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_MakeSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_MakeSkillName_Aptitude) == 0x000288, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_MakeSkillName_Aptitude' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00028C, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_GetItemID_ID) == 0x000290, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_SelectInt_ReturnValue) == 0x000294, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_BI_AddMessageTask_retValue) == 0x000298, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_BI_AddMessageTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowSkillName, CallFunc_Array_Add_ReturnValue) == 0x00029C, "Member 'BattleSkillActionBase_C_Com_MessageShowSkillName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_MessageHide
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_MessageHide final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3170[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3171[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3172[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddMessageTask_retValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_MessageHide) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_MessageHide");
static_assert(sizeof(BattleSkillActionBase_C_Com_MessageHide) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_MessageHide");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_MessageHide::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_MessageHide::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, Lo_WaitList) == 0x000008, "Member 'BattleSkillActionBase_C_Com_MessageHide::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_GetComandID_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_IsValidCommandIndex_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_BIGetTaskFactory_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_GetPlayRate_PlayRate) == 0x000040, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_BIGetTaskFactory_retValue_1) == 0x000048, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_BI_AddMessageTask_retValue) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_BI_AddMessageTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageHide, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'BattleSkillActionBase_C_Com_MessageHide::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.FinalizeFunc
// 0x0070 (0x0070 - 0x0000)
struct BattleSkillActionBase_C_FinalizeFunc final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3173[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetAllIsTargetList_List;               // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3174[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3175[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetNotifyDeadTiming_NoUse;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEndActorBeHomePerformance_IsEnd;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3176[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetParentNameTaskCnt_retCnt;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_FinalizeFunc) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_FinalizeFunc");
static_assert(sizeof(BattleSkillActionBase_C_FinalizeFunc) == 0x000070, "Wrong size on BattleSkillActionBase_C_FinalizeFunc");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSkillActionBase_C_FinalizeFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_FinalizeFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BIGetPartySystem_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BI_GetAllIsTargetList_List) == 0x000020, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BI_GetAllIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BI_GetPartyUnit_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BI_SetNotifyDeadTiming_NoUse) == 0x000051, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BI_SetNotifyDeadTiming_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_IsEndActorBeHomePerformance_IsEnd) == 0x000052, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_IsEndActorBeHomePerformance_IsEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BIGetTaskFactory_retValue) == 0x000058, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BI_GetParentNameTaskCnt_retCnt) == 0x000068, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BI_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x00006E, "Member 'BattleSkillActionBase_C_FinalizeFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ApplyHit_One
// 0x0CF0 (0x0CF0 - 0x0000)
struct BattleSkillActionBase_C_ApplyHit_One final
{
public:
	struct FSkillActionTargetInfo                 InTarget;                                          // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         HitEffect;                                         // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3177[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 WaitTaskList;                                      // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FTransform                             RelativeTransform;                                 // 0x00B0(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x00E0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3178[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x00E4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TransPrio;                                         // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotRandMin;                                        // 0x00EC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotRandMax;                                        // 0x00F0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyBlur;                                         // 0x00F4(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3179[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartBlurAmount;                                   // 0x00F8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndBlurAmount;                                     // 0x00FC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurStartKeepSec;                                  // 0x0100(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurLerpSec;                                       // 0x0104(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     MainWork;                                          // 0x0108(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0118(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0128(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsReflection;                                      // 0x0138(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317A[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 WaitTaskList2;                                     // 0x0140(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 RetComIDs;                                         // 0x0150(0x0010)(Parm, OutParm)
	TArray<int32>                                 RetNecessaryWaitComID;                             // 0x0160(0x0010)(Parm, OutParm)
	bool                                          Lo_IsMissed;                                       // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_isCriticalEffect;                               // 0x0171(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_KUISHIBARI_LEVEL                            Lo_Kuishibari;                                     // 0x0172(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_317B[0x5];                                     // 0x0173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Lo_AddCriticalSE;                                  // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DamageNumPosDirection;                          // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_317C[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_DamageNumPos;                                   // 0x0188(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsIgnoreEffect;                                 // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCritical;                                     // 0x0199(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsTetraja;                                      // 0x019A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317D[0x1];                                     // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_HitIndex;                                       // 0x019C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsWeak;                                         // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCombo;                                        // 0x01A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UTIL_ICON_TYPE                          Lo_Icon;                                           // 0x01A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsGuard;                                        // 0x01A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Lo_FromIndex;                                      // 0x01A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReflection;                                   // 0x01A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_ResistDraw;                                     // 0x01A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsResist;                                       // 0x01AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317E[0x1];                                     // 0x01AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ActorIndex;                                     // 0x01AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TransPrio;                                      // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_317F[0xC];                                     // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_RelativeTrans;                                  // 0x01C0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Lo_LifeSec;                                        // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_RotRandMax;                                     // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_RotRandMin;                                     // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsWorldRelative;                                // 0x01FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HaveToDoApplyUnitState;                         // 0x01FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3180[0x2];                                     // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_TargetUnit;                                     // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsNormalAttack;                                 // 0x0208(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3181[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_DamageMotionPecID;                              // 0x0210(0x0010)(Edit, BlueprintVisible)
	TArray<E_BTL_REFLECT_RES_TYPE>                Lo_List;                                           // 0x0220(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Before;                                         // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3182[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     Lo_MainWork;                                       // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_WholeWaitTaskList;                              // 0x0258(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsFirstAttack;                                  // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3183[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_ShakeScale;                                     // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_NumArea;                                        // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DamageReal;                                     // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsHitStamp;                                     // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3184[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_SEName;                                         // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FSkillActionEffect                     Lo_Effect;                                         // 0x0290(0x0038)(Edit, BlueprintVisible)
	float                                         Lo_BlurStartKeepSec;                               // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BlurLerpSec;                                    // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_EndBlurAmount;                                  // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_StartBlurAmount;                                // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsBlur;                                         // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3185[0x3];                                     // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_RecBst;                                         // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           NewLocalVar_0;                                     // 0x02E0(0x0030)(Edit, BlueprintVisible)
	TArray<int32>                                 ComIDs;                                            // 0x0310(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsCounter;                                      // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsDead;                                         // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_ACTION_AID                        Lo_Aid;                                            // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3186[0x1];                                     // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Bst;                                            // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CriticalLevel;                                  // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_RecMP;                                          // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DamageMP;                                       // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Rec;                                            // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Damage;                                         // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         Lo_DamageHit;                                      // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Lo_Value;                                          // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3187[0x6];                                     // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0348(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_HitEffect;                                      // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3188[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 Lo_Target;                                         // 0x0360(0x0098)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal; // 0x0408(0x0038)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3189[0x3];                                     // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318A[0x4];                                     // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvalidData_IsInvalid;                  // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBstOnlySkill_IsBstOnly;                 // 0x048B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBstOnlySkill_IsBstOnly_1;               // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318B[0x2];                                     // 0x048E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeadImmortalBoss_IsDead;                // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318C[0x7];                                     // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_UI_IConTask_retList;                      // 0x04A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318D[0x7];                                     // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetDamageMotionType_DamageMotionIndex;    // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ApplyDamageMotion_retPecID;               // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_UI_IConTask_retList_1;                    // 0x04E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318E[0x7];                                     // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_UI_IConTask_retList_2;                    // 0x04F8(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x0508(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetDeadParam_retValue;                 // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318F[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddUnitActionTask_retValue;            // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3190[0x3];                                     // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3191[0x4];                                     // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_4;              // 0x0530(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_5;              // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_6;              // 0x0550(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_7;              // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_8;              // 0x0570(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_9;              // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_10;             // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_11;             // 0x05A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_12;             // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_13;             // 0x05C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_14;             // 0x05D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_15;             // 0x05E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_16;             // 0x05F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_17;             // 0x0600(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_18;             // 0x0610(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_19;             // 0x0620(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_20;             // 0x0630(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_21;             // 0x0640(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_22;             // 0x0650(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_23;             // 0x0660(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_24;             // 0x0670(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_25;             // 0x0680(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_26;             // 0x0690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x06A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x06A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x06A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x06AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x06AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3192[0x3];                                     // 0x06AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3193[0x4];                                     // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface;  // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3194[0x7];                                     // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_1; // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSummonTsukuyomiTask_RetPecID;       // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckBattleFlag2_ReturnValue;          // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3195[0x3];                                     // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_SetDeadParam_retValue_1;               // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3196[0x3];                                     // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_DelFlag2_ret;                          // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitActionTask_retValue_1;          // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckFlag2_retValue;                   // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x06F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3197[0x2];                                     // 0x06FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetBadStatus_retValue;                 // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_GetBadStatus_ReturnValue;                 // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x070A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x070B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x070C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3198[0x3];                                     // 0x070D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_1;      // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AVOID_DIRECTION                             CallFunc_CalcAvoidDirection_RetVal;                // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3199[0x3];                                     // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddUnitBackStepTask_retValue;          // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319A[0x4];                                     // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_UI_IConTask_retList_3;                    // 0x0728(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsNormalAttack_ReturnValue;               // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319B[0x3];                                     // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_27;             // 0x0740(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcDamagePosOffset_Offset;               // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319C[0x4];                                     // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0760(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0790(0x0030)()
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam_1;                 // 0x07C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1; // 0x07D0(0x0038)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319D[0x3];                                     // 0x0809(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1;    // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x081A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319E[0x1];                                     // 0x081B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0821(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0822(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0823(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0824(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0825(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319F[0x2];                                     // 0x0826(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0828(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         CallFunc_Array_Get_Item_5;                         // 0x084C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A0[0x3];                                     // 0x084D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A1[0x6];                                     // 0x085A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2; // 0x0860(0x0038)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0899(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A2[0x6];                                     // 0x089A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_2;                   // 0x08A0(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_3;                   // 0x08D0(0x0030)()
	struct FTransform                             CallFunc_AddRandomRoll_ReturnValue;                // 0x0900(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue_1;          // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A3[0x4];                                     // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface_2; // 0x0938(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckBattleFlag2_ReturnValue_1;        // 0x094C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleFlag2_ReturnValue_2;        // 0x094D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x094E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x094F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0955(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A4[0x2];                                     // 0x0956(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDamageMotionType_DamageMotionIndex_1;  // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0960(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcDamagePosOffset_Offset_1;             // 0x096C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable;                                // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0979(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A5[0x6];                                     // 0x097A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x0980(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A6[0x4];                                     // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_4;                   // 0x09B8(0x0030)()
	bool                                          CallFunc_BI_IsStock_retValue;                      // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x09EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x09EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBossFlag_IsTrue;                  // 0x09EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x09ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_1;                              // 0x09EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x09EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A7[0x3];                                     // 0x09F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_2;                              // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_9;             // 0x09F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x09FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A8[0x1];                                     // 0x09FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A9[0x2];                                     // 0x0A02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AA[0x3];                                     // 0x0A09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemID_ID;                             // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0A13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AB[0x4];                                     // 0x0A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Dev455_HeadBase_C> K2Node_DynamicCast_AsBPI_Dev_455_Head_Base;        // 0x0A20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AC[0x7];                                     // 0x0A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BI_GetDyingParamName_ParamName;           // 0x0A38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_28;             // 0x0A50(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMaterialAnimSetting_T                 K2Node_MakeStruct_MaterialAnimSetting_T;           // 0x0A60(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         K2Node_MakeArray_Array;                            // 0x0A80(0x0010)(ConstParm, ReferenceParm)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_3;                              // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AD[0x3];                                     // 0x0A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddCtrlCharaMaterialTask_PecID;        // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x0A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0A9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_NUMEFF                                  Temp_byte_Variable_4;                              // 0x0A9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0A9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0A9F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AE[0x7];                                     // 0x0AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_5;                   // 0x0AA8(0x0030)()
	uint8                                         Pad_31AF[0x8];                                     // 0x0AD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x0AE0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B0[0x3];                                     // 0x0B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0B14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0B20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0B2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B1[0x4];                                     // 0x0B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate_1;                   // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0B4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B2[0x3];                                     // 0x0B4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddHitLightTask_RetPecID;              // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_14;                 // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Temp_byte_Variable_5;                              // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B3[0x2];                                     // 0x0B5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetShakeScale_retValue;                   // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Temp_byte_Variable_6;                              // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B4[0x7];                                     // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_AddRandomRoll_ReturnValue_1;              // 0x0B70(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0BA0(0x0030)(IsPlainOldData, NoDestructor)
	struct FSkillActionEffect                     CallFunc_RetrieveHitEffect_SkillEffect;            // 0x0BD0(0x0038)()
	bool                                          CallFunc_RetrieveHitEffect_IsHitStamp;             // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RetrieveHitEffect_IsCritical;             // 0x0C09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RetrieveHitEffect_IsAddCriticalSE;        // 0x0C0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0C0B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0C0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0C0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0C0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B5[0x1];                                     // 0x0C0F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddCallSummonTask_retPecID;            // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_15;                 // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B6[0x3];                                     // 0x0C19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_2;    // 0x0C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_16;                 // 0x0C20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_2;      // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_10;            // 0x0C2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B7[0x3];                                     // 0x0C2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_17;                 // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_11;            // 0x0C34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0C35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0C36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_NUMEFF                                  K2Node_Select_Default;                             // 0x0C37(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  K2Node_Select_Default_1;                           // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Temp_byte_Variable_7;                              // 0x0C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0C3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B8[0x1];                                     // 0x0C3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0C41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B9[0x6];                                     // 0x0C42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_29;             // 0x0C48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31BA[0x3];                                     // 0x0C59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddApplyUnitStateTask_retValue;        // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddApplyUnitStateTask_retValue_1;      // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_18;                 // 0x0C64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_3;      // 0x0C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0C6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31BB[0x3];                                     // 0x0C6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_19;                 // 0x0C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0C74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31BC[0x3];                                     // 0x0C75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue_1;           // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_20;                 // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Temp_byte_Variable_8;                              // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Temp_byte_Variable_9;                              // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0C82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_NUMEFF                                  K2Node_Select_Default_2;                           // 0x0C83(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  K2Node_Select_Default_3;                           // 0x0C84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31BD[0x3];                                     // 0x0C85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0C88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item_6;                         // 0x0C8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0C8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_12;            // 0x0C8E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31BE[0x1];                                     // 0x0C8F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddNumEffectTask_retValue;             // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_21;                 // 0x0C94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_4;      // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0C9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31BF[0x3];                                     // 0x0C9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_22;                 // 0x0CA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0CA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0CA5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C0[0x2];                                     // 0x0CA6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ApplyDamageMotion_retPecID_1;             // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_23;                 // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_24;                 // 0x0CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0CB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0CB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C1[0x2];                                     // 0x0CB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_5;      // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_25;                 // 0x0CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue_2;          // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayCamShake_retValue;              // 0x0CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_26;                 // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_27;                 // 0x0CCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_28;                 // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddRadialBlurTask_retValue;            // 0x0CD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_29;                 // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          Temp_byte_Variable_10;                             // 0x0CDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          K2Node_Select_Default_4;                           // 0x0CDD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          K2Node_Select_Default_5;                           // 0x0CDE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          K2Node_Select_Default_6;                           // 0x0CDF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          K2Node_Select_Default_7;                           // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C2[0x3];                                     // 0x0CE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddNumEffectTask_retValue_1;           // 0x0CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_30;                 // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ApplyHit_One) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_ApplyHit_One");
static_assert(sizeof(BattleSkillActionBase_C_ApplyHit_One) == 0x000CF0, "Wrong size on BattleSkillActionBase_C_ApplyHit_One");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, InTarget) == 0x000000, "Member 'BattleSkillActionBase_C_ApplyHit_One::InTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, HitEffect) == 0x000098, "Member 'BattleSkillActionBase_C_ApplyHit_One::HitEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, WaitTaskList) == 0x0000A0, "Member 'BattleSkillActionBase_C_ApplyHit_One::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, RelativeTransform) == 0x0000B0, "Member 'BattleSkillActionBase_C_ApplyHit_One::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, IsWorldRelative) == 0x0000E0, "Member 'BattleSkillActionBase_C_ApplyHit_One::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, LifeSec) == 0x0000E4, "Member 'BattleSkillActionBase_C_ApplyHit_One::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, TransPrio) == 0x0000E8, "Member 'BattleSkillActionBase_C_ApplyHit_One::TransPrio' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, RotRandMin) == 0x0000EC, "Member 'BattleSkillActionBase_C_ApplyHit_One::RotRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, RotRandMax) == 0x0000F0, "Member 'BattleSkillActionBase_C_ApplyHit_One::RotRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, ApplyBlur) == 0x0000F4, "Member 'BattleSkillActionBase_C_ApplyHit_One::ApplyBlur' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, StartBlurAmount) == 0x0000F8, "Member 'BattleSkillActionBase_C_ApplyHit_One::StartBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, EndBlurAmount) == 0x0000FC, "Member 'BattleSkillActionBase_C_ApplyHit_One::EndBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, BlurStartKeepSec) == 0x000100, "Member 'BattleSkillActionBase_C_ApplyHit_One::BlurStartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, BlurLerpSec) == 0x000104, "Member 'BattleSkillActionBase_C_ApplyHit_One::BlurLerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, MainWork) == 0x000108, "Member 'BattleSkillActionBase_C_ApplyHit_One::MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, PartySystem) == 0x000118, "Member 'BattleSkillActionBase_C_ApplyHit_One::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, TaskFactory) == 0x000128, "Member 'BattleSkillActionBase_C_ApplyHit_One::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, IsReflection) == 0x000138, "Member 'BattleSkillActionBase_C_ApplyHit_One::IsReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, WaitTaskList2) == 0x000140, "Member 'BattleSkillActionBase_C_ApplyHit_One::WaitTaskList2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, RetComIDs) == 0x000150, "Member 'BattleSkillActionBase_C_ApplyHit_One::RetComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, RetNecessaryWaitComID) == 0x000160, "Member 'BattleSkillActionBase_C_ApplyHit_One::RetNecessaryWaitComID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsMissed) == 0x000170, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsMissed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_isCriticalEffect) == 0x000171, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_isCriticalEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Kuishibari) == 0x000172, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Kuishibari' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_AddCriticalSE) == 0x000178, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_AddCriticalSE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_DamageNumPosDirection) == 0x000180, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_DamageNumPosDirection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_DamageNumPos) == 0x000188, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_DamageNumPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsIgnoreEffect) == 0x000198, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsIgnoreEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsCritical) == 0x000199, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsCritical' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsTetraja) == 0x00019A, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsTetraja' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_HitIndex) == 0x00019C, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_HitIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsWeak) == 0x0001A0, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsWeak' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsCombo) == 0x0001A1, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsCombo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Icon) == 0x0001A2, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Icon' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsGuard) == 0x0001A3, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsGuard' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_FromIndex) == 0x0001A4, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_FromIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsReflection) == 0x0001A8, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_ResistDraw) == 0x0001A9, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_ResistDraw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsResist) == 0x0001AA, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsResist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_ActorIndex) == 0x0001AC, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_TransPrio) == 0x0001B0, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_TransPrio' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_RelativeTrans) == 0x0001C0, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_RelativeTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_LifeSec) == 0x0001F0, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_RotRandMax) == 0x0001F4, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_RotRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_RotRandMin) == 0x0001F8, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_RotRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsWorldRelative) == 0x0001FC, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_HaveToDoApplyUnitState) == 0x0001FD, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_HaveToDoApplyUnitState' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_TargetUnit) == 0x000200, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_TargetUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsNormalAttack) == 0x000208, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsNormalAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_DamageMotionPecID) == 0x000210, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_DamageMotionPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_List) == 0x000220, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Before) == 0x000230, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Before' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_MainWork) == 0x000238, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_PartySystem) == 0x000248, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_WholeWaitTaskList) == 0x000258, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_WholeWaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsFirstAttack) == 0x000268, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsFirstAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_ShakeScale) == 0x00026C, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_NumArea) == 0x000270, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_NumArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_DamageReal) == 0x000274, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_DamageReal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsHitStamp) == 0x000278, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsHitStamp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_SEName) == 0x000280, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_SEName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Effect) == 0x000290, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Effect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_BlurStartKeepSec) == 0x0002C8, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_BlurStartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_BlurLerpSec) == 0x0002CC, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_BlurLerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_EndBlurAmount) == 0x0002D0, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_EndBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_StartBlurAmount) == 0x0002D4, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_StartBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsBlur) == 0x0002D8, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsBlur' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_RecBst) == 0x0002DC, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_RecBst' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, NewLocalVar_0) == 0x0002E0, "Member 'BattleSkillActionBase_C_ApplyHit_One::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, ComIDs) == 0x000310, "Member 'BattleSkillActionBase_C_ApplyHit_One::ComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsCounter) == 0x000320, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsCounter' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_IsDead) == 0x000321, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Aid) == 0x000322, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Aid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Bst) == 0x000324, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Bst' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_CriticalLevel) == 0x000328, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_CriticalLevel' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_TargetIndex) == 0x00032C, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_RecMP) == 0x000330, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_RecMP' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_DamageMP) == 0x000334, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_DamageMP' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Rec) == 0x000338, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Rec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Damage) == 0x00033C, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Damage' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_DamageHit) == 0x000340, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_DamageHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Value) == 0x000341, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_WaitTaskList) == 0x000348, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_HitEffect) == 0x000358, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_HitEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Lo_Target) == 0x000360, "Member 'BattleSkillActionBase_C_ApplyHit_One::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetMainWork_NewParam) == 0x0003F8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal) == 0x000408, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue) == 0x000440, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetPartySystem_retValue) == 0x000450, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsValid_ReturnValue) == 0x000460, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x000464, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue) == 0x000468, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_1) == 0x000470, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_int_Loop_Counter_Variable) == 0x000480, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Add_IntInt_ReturnValue) == 0x000484, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue) == 0x000488, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsInvalidData_IsInvalid) == 0x000489, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsInvalidData_IsInvalid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue) == 0x00048A, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsBstOnlySkill_IsBstOnly) == 0x00048B, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsBstOnlySkill_IsBstOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsBstOnlySkill_IsBstOnly_1) == 0x00048C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsBstOnlySkill_IsBstOnly_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue) == 0x00048D, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetPartySystem_retValue_1) == 0x000490, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsDeadImmortalBoss_IsDead) == 0x0004A0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsDeadImmortalBoss_IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_UI_IConTask_retList) == 0x0004A8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_UI_IConTask_retList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004B8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_2) == 0x0004C0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetDamageMotionType_DamageMotionIndex) == 0x0004D0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetDamageMotionType_DamageMotionIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_ApplyDamageMotion_retPecID) == 0x0004D4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_ApplyDamageMotion_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_1) == 0x0004D8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_2) == 0x0004DC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_UI_IConTask_retList_1) == 0x0004E0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_UI_IConTask_retList_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue) == 0x0004F0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_UI_IConTask_retList_2) == 0x0004F8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_UI_IConTask_retList_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_3) == 0x000508, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_SetDeadParam_retValue) == 0x000518, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_SetDeadParam_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddUnitActionTask_retValue) == 0x00051C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddUnitActionTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000520, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_3) == 0x000524, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000528, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_4) == 0x000530, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_5) == 0x000540, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_6) == 0x000550, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_7) == 0x000560, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_8) == 0x000570, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_9) == 0x000580, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_10) == 0x000590, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_11) == 0x0005A0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_12) == 0x0005B0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_12' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_13) == 0x0005C0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_13' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_14) == 0x0005D0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_14' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_15) == 0x0005E0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_15' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_16) == 0x0005F0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_16' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_17) == 0x000600, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_17' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_18) == 0x000610, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_18' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_19) == 0x000620, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_19' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_20) == 0x000630, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_20' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_21) == 0x000640, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_21' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_22) == 0x000650, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_22' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_23) == 0x000660, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_23' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_24) == 0x000670, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_24' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_25) == 0x000680, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_25' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_26) == 0x000690, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_26' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_4) == 0x0006A0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0006A4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0006A5, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0006A6, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_1) == 0x0006A7, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0006A8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0006A9, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0006AA, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_2) == 0x0006AB, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0006AC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0006B0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetMainInterface_AsBPI_Main_Interface) == 0x0006B8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue_1) == 0x0006C8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_1) == 0x0006D0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddSummonTsukuyomiTask_RetPecID) == 0x0006E0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddSummonTsukuyomiTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_CheckBattleFlag2_ReturnValue) == 0x0006E4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_CheckBattleFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_5) == 0x0006E8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_SetDeadParam_retValue_1) == 0x0006EC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_SetDeadParam_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_DelFlag2_ret) == 0x0006F0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_DelFlag2_ret' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddUnitActionTask_retValue_1) == 0x0006F4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddUnitActionTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_CheckFlag2_retValue) == 0x0006F8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_CheckFlag2_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue_2) == 0x0006F9, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x0006FC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_6) == 0x000700, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_GetBadStatus_retValue) == 0x000704, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_GetBadStatus_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetBadStatus_ReturnValue) == 0x000708, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000709, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00070A, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_1) == 0x00070B, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00070C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPartyPanelCtrlTask_retValue_1) == 0x000710, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPartyPanelCtrlTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_7) == 0x000714, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_CalcAvoidDirection_RetVal) == 0x000718, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_CalcAvoidDirection_RetVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddUnitBackStepTask_retValue) == 0x00071C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddUnitBackStepTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_8) == 0x000720, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_UI_IConTask_retList_3) == 0x000728, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_UI_IConTask_retList_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsNormalAttack_ReturnValue) == 0x000738, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsNormalAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_SelectInt_ReturnValue) == 0x00073C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_27) == 0x000740, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_27' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_CalcDamagePosOffset_Offset) == 0x000750, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_CalcDamagePosOffset_Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeStruct_BtlTaskData) == 0x000760, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeStruct_BtlTaskData_1) == 0x000790, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetMainWork_NewParam_1) == 0x0007C0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetMainWork_NewParam_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1) == 0x0007D0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsValid_ReturnValue_1) == 0x000808, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1) == 0x00080C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPlayEffectTask_retValue) == 0x000810, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_9) == 0x000814, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Contains_ReturnValue) == 0x000818, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue_3) == 0x000819, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Contains_ReturnValue_1) == 0x00081A, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_AddUnique_ReturnValue) == 0x00081C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_3) == 0x000820, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000821, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_2) == 0x000822, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000823, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000824, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_3) == 0x000825, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_SelectString_ReturnValue) == 0x000828, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Get_Item) == 0x000838, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Get_Item_1) == 0x00083C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Get_Item_2) == 0x000840, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Get_Item_3) == 0x000844, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Get_Item_4) == 0x000848, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Get_Item_5) == 0x00084C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Length_ReturnValue) == 0x000850, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Length_ReturnValue_1) == 0x000854, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Less_IntInt_ReturnValue) == 0x000858, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000859, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2) == 0x000860, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000898, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_4) == 0x000899, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeStruct_BtlTaskData_2) == 0x0008A0, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeStruct_BtlTaskData_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeStruct_BtlTaskData_3) == 0x0008D0, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeStruct_BtlTaskData_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_AddRandomRoll_ReturnValue) == 0x000900, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_AddRandomRoll_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPlayEffectTask_retValue_1) == 0x000930, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPlayEffectTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetMainInterface_AsBPI_Main_Interface_2) == 0x000938, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetMainInterface_AsBPI_Main_Interface_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_10) == 0x000948, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_CheckBattleFlag2_ReturnValue_1) == 0x00094C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_CheckBattleFlag2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_CheckBattleFlag2_ReturnValue_2) == 0x00094D, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_CheckBattleFlag2_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue_4) == 0x00094E, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_4) == 0x00094F, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Map_Find_Value) == 0x000950, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Map_Find_ReturnValue) == 0x000954, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000955, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_11) == 0x000958, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetDamageMotionType_DamageMotionIndex_1) == 0x00095C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetDamageMotionType_DamageMotionIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_int_Variable) == 0x000960, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_SelectInt_ReturnValue_1) == 0x000964, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_12) == 0x000968, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_CalcDamagePosOffset_Offset_1) == 0x00096C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_CalcDamagePosOffset_Offset_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable) == 0x000978, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable) == 0x000979, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_AddRandomYaw_ReturnValue) == 0x000980, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_SelectFloat_ReturnValue) == 0x0009B0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeStruct_BtlTaskData_4) == 0x0009B8, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeStruct_BtlTaskData_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_IsStock_retValue) == 0x0009E8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_IsStock_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_IsExist_retValue) == 0x0009E9, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue_5) == 0x0009EA, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_5) == 0x0009EB, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_CheckBossFlag_IsTrue) == 0x0009EC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_CheckBossFlag_IsTrue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_8) == 0x0009ED, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_1) == 0x0009EE, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0009EF, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_6) == 0x0009F0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Add_IntInt_ReturnValue_1) == 0x0009F4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_2) == 0x0009F8, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_9) == 0x0009F9, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_7) == 0x0009FA, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetActorPartyIndex_index) == 0x0009FC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_5) == 0x000A00, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable_1) == 0x000A01, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetSkillID_ID) == 0x000A04, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000A08, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetItemID_ID) == 0x000A0C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable_2) == 0x000A10, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000A11, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_8) == 0x000A12, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000A13, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_FindUnit_Unit) == 0x000A18, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_DynamicCast_AsBPI_Dev_455_Head_Base) == 0x000A20, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_DynamicCast_AsBPI_Dev_455_Head_Base' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_DynamicCast_bSuccess) == 0x000A30, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_GetDyingParamName_ParamName) == 0x000A38, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_GetDyingParamName_ParamName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Conv_StringToName_ReturnValue) == 0x000A48, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_28) == 0x000A50, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_28' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeStruct_MaterialAnimSetting_T) == 0x000A60, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeStruct_MaterialAnimSetting_T' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeArray_Array) == 0x000A80, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_3) == 0x000A90, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddCtrlCharaMaterialTask_PecID) == 0x000A94, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddCtrlCharaMaterialTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_13) == 0x000A98, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable_3) == 0x000A9C, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_4) == 0x000A9D, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_6) == 0x000A9E, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_7) == 0x000A9F, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable_4) == 0x000AA0, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_MakeStruct_BtlTaskData_5) == 0x000AA8, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_MakeStruct_BtlTaskData_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetSocketTransform_retValue) == 0x000AE0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetSocketTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsValid_ReturnValue_2) == 0x000B10, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BreakTransform_Location) == 0x000B14, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BreakTransform_Rotation) == 0x000B20, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BreakTransform_Scale) == 0x000B2C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetPlayRate_PlayRate) == 0x000B38, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_FindUnit_Unit_1) == 0x000B40, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetPlayRate_PlayRate_1) == 0x000B48, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetPlayRate_PlayRate_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_8) == 0x000B4C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddHitLightTask_RetPecID) == 0x000B50, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddHitLightTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_14) == 0x000B54, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_5) == 0x000B58, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Contains_ReturnValue_2) == 0x000B59, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GetShakeScale_retValue) == 0x000B5C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GetShakeScale_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_SelectFloat_ReturnValue_1) == 0x000B60, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Multiply_IntInt_ReturnValue) == 0x000B64, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_6) == 0x000B68, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_AddRandomRoll_ReturnValue_1) == 0x000B70, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_AddRandomRoll_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_SelectTransform_ReturnValue) == 0x000BA0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_RetrieveHitEffect_SkillEffect) == 0x000BD0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_RetrieveHitEffect_SkillEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_RetrieveHitEffect_IsHitStamp) == 0x000C08, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_RetrieveHitEffect_IsHitStamp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_RetrieveHitEffect_IsCritical) == 0x000C09, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_RetrieveHitEffect_IsCritical' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_RetrieveHitEffect_IsAddCriticalSE) == 0x000C0A, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_RetrieveHitEffect_IsAddCriticalSE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsValid_ReturnValue_3) == 0x000C0B, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue_6) == 0x000C0C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_IsValid_ReturnValue_4) == 0x000C0D, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_9) == 0x000C0E, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddCallSummonTask_retPecID) == 0x000C10, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddCallSummonTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_15) == 0x000C14, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000C18, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_2) == 0x000C1C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_16) == 0x000C20, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000C24, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPartyPanelCtrlTask_retValue_2) == 0x000C28, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPartyPanelCtrlTask_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_10) == 0x000C2C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_17) == 0x000C30, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_11) == 0x000C34, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable_5) == 0x000C35, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_9) == 0x000C36, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default) == 0x000C37, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default_1) == 0x000C38, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_7) == 0x000C39, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_10) == 0x000C3A, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_int_Variable_1) == 0x000C3C, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Not_PreBool_ReturnValue_7) == 0x000C40, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanAND_ReturnValue_11) == 0x000C41, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BIGetTaskFactory_retValue_29) == 0x000C48, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BIGetTaskFactory_retValue_29' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable_6) == 0x000C58, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddApplyUnitStateTask_retValue) == 0x000C5C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddApplyUnitStateTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddApplyUnitStateTask_retValue_1) == 0x000C60, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddApplyUnitStateTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_18) == 0x000C64, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPartyPanelCtrlTask_retValue_3) == 0x000C68, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPartyPanelCtrlTask_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000C6C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_19) == 0x000C70, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_10) == 0x000C74, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddDeltaWaitTask_retValue_1) == 0x000C78, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddDeltaWaitTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_20) == 0x000C7C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_8) == 0x000C80, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_9) == 0x000C81, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_bool_Variable_7) == 0x000C82, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default_2) == 0x000C83, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default_3) == 0x000C84, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_int_Array_Index_Variable) == 0x000C88, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Get_Item_6) == 0x000C8C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000C8D, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Greater_IntInt_ReturnValue_12) == 0x000C8E, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Greater_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddNumEffectTask_retValue) == 0x000C90, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddNumEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_21) == 0x000C94, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPartyPanelCtrlTask_retValue_4) == 0x000C98, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPartyPanelCtrlTask_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000C9C, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_22) == 0x000CA0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_11) == 0x000CA4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000CA5, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_ApplyDamageMotion_retPecID_1) == 0x000CA8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_ApplyDamageMotion_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_23) == 0x000CAC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_24) == 0x000CB0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000CB4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BooleanOR_ReturnValue_12) == 0x000CB5, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPartyPanelCtrlTask_retValue_5) == 0x000CB8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPartyPanelCtrlTask_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_25) == 0x000CBC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPlayEffectTask_retValue_2) == 0x000CC0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPlayEffectTask_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddPlayCamShake_retValue) == 0x000CC4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddPlayCamShake_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_26) == 0x000CC8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_27) == 0x000CCC, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_28) == 0x000CD0, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddRadialBlurTask_retValue) == 0x000CD4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddRadialBlurTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_29) == 0x000CD8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, Temp_byte_Variable_10) == 0x000CDC, "Member 'BattleSkillActionBase_C_ApplyHit_One::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default_4) == 0x000CDD, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default_5) == 0x000CDE, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default_6) == 0x000CDF, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, K2Node_Select_Default_7) == 0x000CE0, "Member 'BattleSkillActionBase_C_ApplyHit_One::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_BI_AddNumEffectTask_retValue_1) == 0x000CE4, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_BI_AddNumEffectTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyHit_One, CallFunc_Array_Add_ReturnValue_30) == 0x000CE8, "Member 'BattleSkillActionBase_C_ApplyHit_One::CallFunc_Array_Add_ReturnValue_30' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ApplyHit
// 0x0360 (0x0360 - 0x0000)
struct BattleSkillActionBase_C_Com_ApplyHit final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitEffect;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C3[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C4[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyBlur;                                         // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C5[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartBlurAmount;                                   // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndBlurAmount;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurStartKeepSec;                                  // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurLerpSec;                                       // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C6[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     Lo_MainWork;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         NewLocalVar_1;                                     // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C7[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_comIDs;                                         // 0x0098(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_HitEffect;                                      // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Counter;                                        // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Dead;                                           // 0x00AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C8[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x00B0(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C9[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemID_ID;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x00D8(0x0100)(ConstParm)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31CA[0x6];                                     // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     K2Node_MakeStruct_SkillActionEffect;               // 0x01E0(0x0038)()
	bool                                          Temp_bool_Variable;                                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31CB[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_2;       // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionEffect                     K2Node_Select_Default;                             // 0x0220(0x0038)()
	uint8                                         Pad_31CC[0x8];                                     // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_EFFECT_PLAY_PARAM                 K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM;           // 0x0260(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31CD[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddBlankExistTask_retValue;            // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31CE[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ApplyHit) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_ApplyHit");
static_assert(sizeof(BattleSkillActionBase_C_Com_ApplyHit) == 0x000360, "Wrong size on BattleSkillActionBase_C_Com_ApplyHit");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ApplyHit::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, HitEffect) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ApplyHit::HitEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, RelativeTransform) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ApplyHit::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, IsWorldRelative) == 0x000040, "Member 'BattleSkillActionBase_C_Com_ApplyHit::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, LifeSec) == 0x000044, "Member 'BattleSkillActionBase_C_Com_ApplyHit::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, TranslucencyPriority) == 0x000048, "Member 'BattleSkillActionBase_C_Com_ApplyHit::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, RotYawRandMin) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_ApplyHit::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, RotYawRandMax) == 0x000050, "Member 'BattleSkillActionBase_C_Com_ApplyHit::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, ApplyBlur) == 0x000054, "Member 'BattleSkillActionBase_C_Com_ApplyHit::ApplyBlur' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, StartBlurAmount) == 0x000058, "Member 'BattleSkillActionBase_C_Com_ApplyHit::StartBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, EndBlurAmount) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_ApplyHit::EndBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, BlurStartKeepSec) == 0x000060, "Member 'BattleSkillActionBase_C_Com_ApplyHit::BlurStartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, BlurLerpSec) == 0x000064, "Member 'BattleSkillActionBase_C_Com_ApplyHit::BlurLerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, ComIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_ApplyHit::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Lo_PartySystem) == 0x000070, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Lo_MainWork) == 0x000080, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Lo_MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, NewLocalVar_1) == 0x000090, "Member 'BattleSkillActionBase_C_Com_ApplyHit::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Lo_comIDs) == 0x000098, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Lo_comIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Lo_HitEffect) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Lo_HitEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Lo_Counter) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Lo_Counter' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Lo_Dead) == 0x0000AD, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Lo_Dead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Lo_WaitList) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GetItemID_ID) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GetSkillID_ID) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_Max_ReturnValue) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GetSkillBaseData_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GetValidValue_ReturnValue) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D9, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, K2Node_MakeStruct_SkillActionEffect) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_ApplyHit::K2Node_MakeStruct_SkillActionEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, Temp_bool_Variable) == 0x000218, "Member 'BattleSkillActionBase_C_Com_ApplyHit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_GetBeforCommandIndex_RetComIndex_2) == 0x00021C, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_GetBeforCommandIndex_RetComIndex_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, K2Node_Select_Default) == 0x000220, "Member 'BattleSkillActionBase_C_Com_ApplyHit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM) == 0x000260, "Member 'BattleSkillActionBase_C_Com_ApplyHit::K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_Array_Add_ReturnValue) == 0x000310, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_BIGetTaskFactory_retValue) == 0x000318, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_BIGetTaskFactory_retValue_1) == 0x000328, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_BI_AddBlankExistTask_retValue) == 0x000338, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_BI_AddBlankExistTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_BIGetPartySystem_retValue) == 0x000340, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyHit, CallFunc_BIGetMainWork_NewParam) == 0x000350, "Member 'BattleSkillActionBase_C_Com_ApplyHit::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffect
// 0x0270 (0x0270 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffect final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_31CF[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransforn;                                 // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D0[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RorYawRandMax;                                     // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIgnoreSideScale;                                 // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D1[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SE_sync;                                        // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D2[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_ModSocket;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Lo_ModAnm;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lo_ModMesh;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_SE;                                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Lo_Particle;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D3[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00E8(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0118(0x0030)()
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D4[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0150(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D5[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D6[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionEffect                     CallFunc_Array_Get_Item;                           // 0x0218(0x0038)()
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0254(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffect) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffect");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffect) == 0x000270, "Wrong size on BattleSkillActionBase_C_Com_PlayEffect");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffect::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffect::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffect::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, RelativeTransforn) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffect::RelativeTransforn' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, IsWorldRelative) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffect::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, LifeSec) == 0x000054, "Member 'BattleSkillActionBase_C_Com_PlayEffect::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, TranslucencyPriority) == 0x000058, "Member 'BattleSkillActionBase_C_Com_PlayEffect::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, RotYawRandMin) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_PlayEffect::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, RorYawRandMax) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffect::RorYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, IsIgnoreSideScale) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffect::IsIgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, ComIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffect::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_SE_sync) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_SE_sync' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_ModSocket) == 0x000070, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_ModSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_ModAnm) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_ModAnm' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_ModMesh) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_ModMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_SE) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_SE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_Particle) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_Particle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_TargetIndex) == 0x000098, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_ActorIndex) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, Lo_WaitList) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffect::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_AddRandomYaw_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, K2Node_MakeStruct_BtlTaskData) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_PlayEffect::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, K2Node_MakeStruct_BtlTaskData_1) == 0x000118, "Member 'BattleSkillActionBase_C_Com_PlayEffect::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_GetComandID_retValue) == 0x000148, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_IsValidCommandIndex_retValue) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_GetFirstTargetInfo_Info) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_GetFirstTargetInfo_valid) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_GetActorPartyIndex_index) == 0x0001EC, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_BIGetTaskFactory_retValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x000200, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_IsValid_ReturnValue) == 0x000204, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_BIGetTaskFactory_retValue_1) == 0x000208, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_Array_Get_Item) == 0x000218, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000250, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_Conv_StringToName_ReturnValue) == 0x000254, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_BI_AddPlayEffectTask_retValue) == 0x00025C, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffect, CallFunc_Array_Add_ReturnValue) == 0x000260, "Member 'BattleSkillActionBase_C_Com_PlayEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ApplyStateFunc
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_ApplyStateFunc final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBstAny_retValue;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D7[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ApplyStateFunc) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ApplyStateFunc");
static_assert(sizeof(BattleSkillActionBase_C_ApplyStateFunc) == 0x000028, "Wrong size on BattleSkillActionBase_C_ApplyStateFunc");
static_assert(offsetof(BattleSkillActionBase_C_ApplyStateFunc, Lo_WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ApplyStateFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyStateFunc, CallFunc_BIGetTaskFactory_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_ApplyStateFunc::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyStateFunc, CallFunc_IsBstAny_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_ApplyStateFunc::CallFunc_IsBstAny_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyStateFunc, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_ApplyStateFunc::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ApplyUnitState
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_ApplyUnitState final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetPartyLoopMax_retValue;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddApplyUnitStateTask_retValue;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsInField_retValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_ApplyUnitState) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ApplyUnitState");
static_assert(sizeof(BattleSkillActionBase_C_ApplyUnitState) == 0x000048, "Wrong size on BattleSkillActionBase_C_ApplyUnitState");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, Lo_WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ApplyUnitState::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_BIGetTaskFactory_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_BIGetPartySystem_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_BI_const_GetPartyLoopMax_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_BI_const_GetPartyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_BI_const_GetPartyStart_retValue) == 0x000034, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, Temp_int_Variable) == 0x000038, "Member 'BattleSkillActionBase_C_ApplyUnitState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_BI_AddApplyUnitStateTask_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_BI_AddApplyUnitStateTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_BI_IsInField_retValue) == 0x000044, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_BI_IsInField_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyUnitState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000045, "Member 'BattleSkillActionBase_C_ApplyUnitState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.HitPrevFunc
// 0x01E8 (0x01E8 - 0x0000)
struct BattleSkillActionBase_C_HitPrevFunc final
{
public:
	E_BTL_EXTRA_ACTION                            Lo_ExtraAction;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31D8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ActorIndex;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31D9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31DA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0028(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31DB[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_EXTRA_ACTION                            CallFunc_GetExtraAction_ExtraAction;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31DC[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x00D0(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00E0(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31DD[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31DE[0x2];                                     // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side_1;                        // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31DF[0x2];                                     // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitStayDirToTargetTask_retPecID;   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E0[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Skill_Info_Mess_Task_Ta__ID;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_HitPrevFunc) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_HitPrevFunc");
static_assert(sizeof(BattleSkillActionBase_C_HitPrevFunc) == 0x0001E8, "Wrong size on BattleSkillActionBase_C_HitPrevFunc");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, Lo_ExtraAction) == 0x000000, "Member 'BattleSkillActionBase_C_HitPrevFunc::Lo_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, Lo_ActorIndex) == 0x000004, "Member 'BattleSkillActionBase_C_HitPrevFunc::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, Lo_TargetIndex) == 0x000008, "Member 'BattleSkillActionBase_C_HitPrevFunc::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, Lo_WaitTaskList) == 0x000010, "Member 'BattleSkillActionBase_C_HitPrevFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_HitPrevFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_GetFirstTargetInfo_Info) == 0x000028, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_GetFirstTargetInfo_valid) == 0x0000C0, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_GetTargetInfoLength_length) == 0x0000C4, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_GetExtraAction_ExtraAction) == 0x0000C9, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_GetExtraAction_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_GetTargetInfo_Info) == 0x0000D0, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_GetActorPartyIndex_index) == 0x00017C, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, K2Node_MakeArray_Array) == 0x000180, "Member 'BattleSkillActionBase_C_HitPrevFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_BIGetPartySystem_retValue) == 0x000198, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, Temp_int_Loop_Counter_Variable) == 0x0001A8, "Member 'BattleSkillActionBase_C_HitPrevFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_BI_GetSide_side) == 0x0001AC, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_Less_IntInt_ReturnValue) == 0x0001AD, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_BI_GetSide_side_1) == 0x0001B4, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_BI_GetSide_side_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001B5, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_BIGetTaskFactory_retValue) == 0x0001B8, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_BI_AddUnitStayDirToTargetTask_retPecID) == 0x0001C8, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_BI_AddUnitStayDirToTargetTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0001CC, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_BIGetTaskFactory_retValue_1) == 0x0001D0, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_Skill_Info_Mess_Task_Ta__ID) == 0x0001E0, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_Skill_Info_Mess_Task_Ta__ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_HitPrevFunc, CallFunc_Array_Add_ReturnValue) == 0x0001E4, "Member 'BattleSkillActionBase_C_HitPrevFunc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CallApplyHitFunc
// 0x0070 (0x0070 - 0x0000)
struct BattleSkillActionBase_C_CallApplyHitFunc final
{
public:
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_BreakLookAt_retValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E2[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E3[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CallApplyHitFunc) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CallApplyHitFunc");
static_assert(sizeof(BattleSkillActionBase_C_CallApplyHitFunc) == 0x000070, "Wrong size on BattleSkillActionBase_C_CallApplyHitFunc");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_GetActorPartyIndex_index) == 0x000000, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_BIGetPartySystem_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_FindUnit_Unit) == 0x000018, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_BI_BreakLookAt_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_BI_BreakLookAt_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHitFunc, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BattleSkillActionBase_C_CallApplyHitFunc::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ReserveApplyHit
// 0x0058 (0x0058 - 0x0000)
struct BattleSkillActionBase_C_Com_ReserveApplyHit final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_ActorUnit;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidMotion_RetVal;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E6[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E7[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddBlankExistTask_retValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ReserveApplyHit) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_ReserveApplyHit");
static_assert(sizeof(BattleSkillActionBase_C_Com_ReserveApplyHit) == 0x000058, "Wrong size on BattleSkillActionBase_C_Com_ReserveApplyHit");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, Lo_ActorUnit) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::Lo_ActorUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, Lo_WaitTask) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_GetActorPartyIndex_index) == 0x000020, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_FindUnit_Unit) == 0x000028, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_HasValidMotion_RetVal) == 0x000030, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_HasValidMotion_RetVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000038, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_BIGetTaskFactory_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveApplyHit, CallFunc_BI_AddBlankExistTask_retValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_ReserveApplyHit::CallFunc_BI_AddBlankExistTask_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ApplyPartyPanel
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_ApplyPartyPanel final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetPlayerLoopMax_retValue;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsInField_retValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_ApplyPartyPanel) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ApplyPartyPanel");
static_assert(sizeof(BattleSkillActionBase_C_ApplyPartyPanel) == 0x000048, "Wrong size on BattleSkillActionBase_C_ApplyPartyPanel");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, Lo_WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_BIGetTaskFactory_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_BIGetPartySystem_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_BI_const_GetPlayerLoopMax_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_BI_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_BI_const_GetPartyStart_retValue) == 0x000034, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, Temp_int_Variable) == 0x000038, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_BI_IsInField_retValue) == 0x000044, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_BI_IsInField_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyPartyPanel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000045, "Member 'BattleSkillActionBase_C_ApplyPartyPanel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.FindUnit
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_FindUnit final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Unit;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_FindUnit) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_FindUnit");
static_assert(sizeof(BattleSkillActionBase_C_FindUnit) == 0x000040, "Wrong size on BattleSkillActionBase_C_FindUnit");
static_assert(offsetof(BattleSkillActionBase_C_FindUnit, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_FindUnit::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FindUnit, Unit) == 0x000008, "Member 'BattleSkillActionBase_C_FindUnit::Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FindUnit, CallFunc_BIGetPartySystem_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_FindUnit::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FindUnit, CallFunc_BI_GetPartyUnit_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_FindUnit::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FindUnit, K2Node_DynamicCast_AsChara_Base) == 0x000030, "Member 'BattleSkillActionBase_C_FindUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FindUnit, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BattleSkillActionBase_C_FindUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectPair
// 0x0350 (0x0350 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectPair final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeSec;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EFFECT_TYPE                             EfffectType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EFFECT_FORM                             EffectForm;                                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E9[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ActorSocketName;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_31EA[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorSocketRelative;                               // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FString                                 TargetSocketName;                                  // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         BulletSpeed;                                       // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletTangentDeg;                                  // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExtensionDistance;                                 // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideInReflection;                                  // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInAbsorbAndBlock;                              // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KeepBallEffect;                                    // 0x0082(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31EB[0x1];                                     // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0084(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EffectID;                                          // 0x0088(0x0010)(Parm, OutParm)
	uint8                                         Pad_31EC[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_ActorRelative;                                  // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         Lo_ActorIndex;                                     // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideInReflection;                               // 0x00D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInAbsorbAndBlock;                           // 0x00D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31ED[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndexPool;                                // 0x00D8(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ExtensionDist;                                  // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_PecIDs;                                         // 0x00F0(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Gravity;                                        // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BulletSpeed;                                    // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_TargetSocketName;                               // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_ActorSocketName;                                // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_EFFECT_FORM                             Lo_EffectForm;                                     // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31EE[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TransPriority;                                  // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_LifeSec;                                        // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayIndex;                                      // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0138(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31EF[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F0[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F1[0x1];                                     // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x0180(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F2[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31F3[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0198(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x01C8(0x0030)()
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x01F8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31F4[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31F5[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item;                           // 0x0218(0x0038)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31F6[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F7[0x2];                                     // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31F8[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0278(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F9[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcReflexTarget_IsExist;                 // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FA[0x2];                                     // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcReflexTarget_ReflexTargetIndex;       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FB[0x2];                                     // 0x032A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FC[0x2];                                     // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FD[0x1];                                     // 0x033B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FE[0x3];                                     // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FF[0x1];                                     // 0x034B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectPair) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectPair");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectPair) == 0x000350, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectPair");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, LifeSec) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, TranslucencyPriority) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, EfffectType) == 0x000010, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::EfffectType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, EffectForm) == 0x000011, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::EffectForm' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, ActorSocketName) == 0x000018, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::ActorSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, ActorSocketRelative) == 0x000030, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::ActorSocketRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, TargetSocketName) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::TargetSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, BulletSpeed) == 0x000070, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::BulletSpeed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, BulletTangentDeg) == 0x000074, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::BulletTangentDeg' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Gravity) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Gravity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, ExtensionDistance) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::ExtensionDistance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, HideInReflection) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, HideInAbsorbAndBlock) == 0x000081, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, KeepBallEffect) == 0x000082, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::KeepBallEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, ComIndex) == 0x000084, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, EffectID) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::EffectID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_ActorRelative) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_ActorRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_ActorIndex) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_HideInReflection) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_HideInAbsorbAndBlock) == 0x0000D5, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_TargetIndexPool) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_TargetIndexPool' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_TargetIndex) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_ExtensionDist) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_ExtensionDist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_PecIDs) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_PecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_Gravity) == 0x000100, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_Gravity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_BulletSpeed) == 0x000104, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_BulletSpeed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_TargetSocketName) == 0x000108, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_TargetSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_ActorSocketName) == 0x000118, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_ActorSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_EffectForm) == 0x000128, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_EffectForm' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_TransPriority) == 0x00012C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_TransPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_LifeSec) == 0x000130, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_PlayIndex) == 0x000134, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Lo_WaitList) == 0x000138, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_IsValidCommandIndex_retValue) == 0x000148, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_GetComandID_retValue) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Temp_int_Array_Index_Variable) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Temp_int_Loop_Counter_Variable) == 0x000154, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Greater_IntInt_ReturnValue) == 0x000158, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_GetActorPartyIndex_index) == 0x000160, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000164, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_MakeLiteralByte_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Contains_ReturnValue) == 0x000169, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Not_PreBool_ReturnValue) == 0x00016A, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Add_ReturnValue) == 0x00016C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BIGetTaskFactory_retValue) == 0x000170, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Temp_byte_Variable) == 0x000180, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000181, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_SelectFloat_ReturnValue) == 0x000184, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_MakeVector_ReturnValue) == 0x000188, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, K2Node_MakeStruct_BtlTaskData) == 0x000198, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, K2Node_MakeStruct_BtlTaskData_1) == 0x0001C8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, Temp_byte_Variable_1) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BIGetTaskFactory_retValue_1) == 0x000200, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000210, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Get_Item) == 0x000218, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Add_ReturnValue_1) == 0x000250, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BIGetTaskFactory_retValue_2) == 0x000258, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Not_PreBool_ReturnValue_1) == 0x000268, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_IsValid_ReturnValue) == 0x000269, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x00026C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000270, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Get_Item_1) == 0x000278, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Length_ReturnValue) == 0x000310, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Less_IntInt_ReturnValue) == 0x000314, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Map_Find_Value) == 0x000318, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Map_Find_ReturnValue) == 0x00031C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_CalcReflexTarget_IsExist) == 0x00031D, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_CalcReflexTarget_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_CalcReflexTarget_ReflexTargetIndex) == 0x000320, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_CalcReflexTarget_ReflexTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Add_ReturnValue_2) == 0x000324, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BooleanAND_ReturnValue) == 0x000328, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Contains_ReturnValue_1) == 0x000329, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_SelectInt_ReturnValue) == 0x00032C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BooleanAND_ReturnValue_1) == 0x000330, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BooleanAND_ReturnValue_2) == 0x000331, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_SelectInt_ReturnValue_1) == 0x000334, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Not_PreBool_ReturnValue_2) == 0x000338, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Contains_ReturnValue_2) == 0x000339, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BooleanOR_ReturnValue) == 0x00033A, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BI_AddPlayEffectTask_retValue) == 0x00033C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BooleanAND_ReturnValue_3) == 0x000340, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Add_ReturnValue_3) == 0x000344, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Not_PreBool_ReturnValue_3) == 0x000348, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BooleanAND_ReturnValue_4) == 0x000349, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_BooleanAND_ReturnValue_5) == 0x00034A, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPair, CallFunc_Array_Add_ReturnValue_4) == 0x00034C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPair::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetMainWork
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetMainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     NewParam;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetMainWork) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetMainWork");
static_assert(sizeof(BattleSkillActionBase_C_BIGetMainWork) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetMainWork");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainWork, NewParam) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetMainWork::NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainWork, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000018, "Member 'BattleSkillActionBase_C_BIGetMainWork::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainWork, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSkillActionBase_C_BIGetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ApplyDamageMotion
// 0x0128 (0x0128 - 0x0000)
struct BattleSkillActionBase_C_ApplyDamageMotion final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         PartyIndex;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3200[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         MotionType;                                        // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetPecID;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BadStatus;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3201[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_PartyUnit;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTBadStatusInterface> Lo_PartyBadStatusInterface;                        // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PTBPInterface_C>  Lo_PartyUnitInterface;                             // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsResist;                                       // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3202[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_MotionType;                                     // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0088(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_PartyIndex;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3203[0x1];                                     // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTBadStatusInterface> CallFunc_BIGetPTBadStatusInterface_AsBPI_PTBad_Status_Interface; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetBadStatus_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3204[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue_1;           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSetUnitShake_retPecID;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3205[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue_2;           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSetUnitShake_retPecID_1;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ApplyDamageMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ApplyDamageMotion");
static_assert(sizeof(BattleSkillActionBase_C_ApplyDamageMotion) == 0x000128, "Wrong size on BattleSkillActionBase_C_ApplyDamageMotion");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, PartyIndex) == 0x000010, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, PartySystem) == 0x000018, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, TaskFactory) == 0x000028, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, MotionType) == 0x000038, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::MotionType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, RetPecID) == 0x00003C, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_BadStatus) == 0x000040, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_BadStatus' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_PartyUnit) == 0x000048, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_PartyUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_PartyBadStatusInterface) == 0x000050, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_PartyBadStatusInterface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_PartyUnitInterface) == 0x000060, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_PartyUnitInterface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_IsResist) == 0x000070, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_IsResist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_MotionType) == 0x000074, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_MotionType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_PartySystem) == 0x000078, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_WaitTaskList) == 0x000088, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, Lo_PartyIndex) == 0x000098, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00009D, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00009E, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BIGetPTBadStatusInterface_AsBPI_PTBad_Status_Interface) == 0x0000A0, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BIGetPTBadStatusInterface_AsBPI_PTBad_Status_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BI_GetBadStatus_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BI_GetBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface) == 0x0000B8, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_FindUnit_Unit) == 0x0000C8, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BIGetTaskFactory_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BI_AddSetUnitMotion_retValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BI_AddSetUnitMotion_retValue_1) == 0x0000F4, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BI_AddSetUnitMotion_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BI_AddSetUnitShake_retPecID) == 0x0000F8, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BI_AddSetUnitShake_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BIGetTaskFactory_retValue_2) == 0x000100, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BIGetTaskFactory_retValue_3) == 0x000110, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BI_AddSetUnitMotion_retValue_2) == 0x000120, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BI_AddSetUnitMotion_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDamageMotion, CallFunc_BI_AddSetUnitShake_retPecID_1) == 0x000124, "Member 'BattleSkillActionBase_C_ApplyDamageMotion::CallFunc_BI_AddSetUnitShake_retPecID_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ActorAction
// 0x0058 (0x0058 - 0x0000)
struct BattleSkillActionBase_C_Com_ActorAction final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_ACTION_TYPE                           Action;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Option;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3206[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3207[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3208[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3209[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitActionTask_retValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ActorAction) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_ActorAction");
static_assert(sizeof(BattleSkillActionBase_C_Com_ActorAction) == 0x000058, "Wrong size on BattleSkillActionBase_C_Com_ActorAction");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ActorAction::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, Action) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ActorAction::Action' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, Option) == 0x000005, "Member 'BattleSkillActionBase_C_Com_ActorAction::Option' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ActorAction::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ActorAction::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_GetActorPartyIndex_index) == 0x000028, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_IsReflected_IsReflected) == 0x000030, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_BIGetTaskFactory_retValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000048, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_BI_AddUnitActionTask_retValue) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_BI_AddUnitActionTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorAction, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_Com_ActorAction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetCamOriginRelative
// 0x0078 (0x0078 - 0x0000)
struct BattleSkillActionBase_C_Com_SetCamOriginRelative final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          WaitHokan;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_320B[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320C[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AdjustCameraName_Output;                  // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AdjustCameraName_IsAttack;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_320D[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_320E[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetCamOriginRelative) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_SetCamOriginRelative");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetCamOriginRelative) == 0x000078, "Wrong size on BattleSkillActionBase_C_Com_SetCamOriginRelative");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, WaitHokan) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::WaitHokan' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, ComIndex) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, Lo_WaitList) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_GetActorPartyIndex_index) == 0x000030, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_AdjustCameraName_Output) == 0x000038, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_AdjustCameraName_Output' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_AdjustCameraName_IsAttack) == 0x000048, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_AdjustCameraName_IsAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_GetComandID_retValue) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_IsValidCommandIndex_retValue) == 0x000050, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_BIGetTaskFactory_retValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetCamOriginRelative, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'BattleSkillActionBase_C_Com_SetCamOriginRelative::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckAnimNotify
// 0x01C8 (0x01C8 - 0x0000)
struct BattleSkillActionBase_C_CheckAnimNotify final
{
public:
	bool                                          Lo_EnableShake;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsJustBefore;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_320F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Actor;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     Lo_MainWork;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<E_ANIM_NOTIFY_APPLY_HIT_TYPE>          NotifyTypes;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	bool                                          IsNotified;                                        // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3210[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ApplyHit_ComIndex;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsNotSkipWhenWatingDamageTooLong_Enable; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsNotSkipWhenWatingDamageTooLong_Enable_1; // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3211[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BattleDesignDebugGetSkipProcessActivateSec_Enable; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BattleDesignDebugGetSkipProcessForceExecuteSec_Enable; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3212[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3213[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetParentNameTaskCnt_retCnt;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_GetCurrentMotionID_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3214[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetTaskTypeTaskCnt_cnt;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsSkillCheckAutoBattle_Enable; // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_2;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsJustBeforeApplyHitTiming_IsTiming;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3215[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3216[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsTargetContainsActor_ReturnValue;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3217[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AnimNotify_DamageMotion_Com_Index;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3218[0x1];                                     // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3219[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNotifyApplyHit_IsNotified;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321A[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ANIM_NOTIFY_APPLY_HIT_TYPE>          CallFunc_IsNotifyApplyHit_NotifyType;              // 0x0140(0x0010)(ReferenceParm)
	TArray<E_ANIM_NOTIFY_APPLY_HIT_TYPE>          K2Node_MakeArray_Array_1;                          // 0x0150(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ANIM_NOTIFY_APPLY_HIT_TYPE                  CallFunc_Array_Get_Item;                           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321B[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321C[0x2];                                     // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AnimNotify_AvoidTiming_ComIndex;          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyTaskForPecID_isSuccess;         // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321D[0x1];                                     // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AnimNotify_Effect_ComIndex;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_AnimNotify_Effect_WaitPecIDs;             // 0x0198(0x0010)(ReferenceParm)
	int32                                         CallFunc_AnimNotify_Effect_ComIndex_1;             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321E[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_AnimNotify_Effect_WaitPecIDs_1;           // 0x01B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_AnimNotify_DamageMotion_Com_Index_1;      // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CheckAnimNotify) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckAnimNotify");
static_assert(sizeof(BattleSkillActionBase_C_CheckAnimNotify) == 0x0001C8, "Wrong size on BattleSkillActionBase_C_CheckAnimNotify");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, Lo_EnableShake) == 0x000000, "Member 'BattleSkillActionBase_C_CheckAnimNotify::Lo_EnableShake' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, IsJustBefore) == 0x000001, "Member 'BattleSkillActionBase_C_CheckAnimNotify::IsJustBefore' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, Lo_Actor) == 0x000008, "Member 'BattleSkillActionBase_C_CheckAnimNotify::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, Lo_PartySystem) == 0x000010, "Member 'BattleSkillActionBase_C_CheckAnimNotify::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, Lo_MainWork) == 0x000020, "Member 'BattleSkillActionBase_C_CheckAnimNotify::Lo_MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, NotifyTypes) == 0x000030, "Member 'BattleSkillActionBase_C_CheckAnimNotify::NotifyTypes' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, IsNotified) == 0x000040, "Member 'BattleSkillActionBase_C_CheckAnimNotify::IsNotified' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Com_ApplyHit_ComIndex) == 0x000044, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Com_ApplyHit_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BattleDesignDebugIsNotSkipWhenWatingDamageTooLong_Enable) == 0x000048, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BattleDesignDebugIsNotSkipWhenWatingDamageTooLong_Enable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BattleDesignDebugIsNotSkipWhenWatingDamageTooLong_Enable_1) == 0x000049, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BattleDesignDebugIsNotSkipWhenWatingDamageTooLong_Enable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BattleDesignDebugGetSkipProcessActivateSec_Enable) == 0x00004C, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BattleDesignDebugGetSkipProcessActivateSec_Enable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BattleDesignDebugGetSkipProcessForceExecuteSec_Enable) == 0x000050, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BattleDesignDebugGetSkipProcessForceExecuteSec_Enable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000055, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_GetActorPartyIndex_index) == 0x000058, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_FindUnit_Unit) == 0x000060, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BIGetTaskFactory_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BI_GetParentNameTaskCnt_retCnt) == 0x000078, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BI_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_GetCurrentMotionID_ReturnValue) == 0x00007C, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_GetCurrentMotionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BI_GetTaskTypeTaskCnt_cnt) == 0x000080, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BI_GetTaskTypeTaskCnt_cnt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000085, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000086, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BattleDesignDebugIsSkillCheckAutoBattle_Enable) == 0x000087, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BattleDesignDebugIsSkillCheckAutoBattle_Enable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BooleanOR_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BooleanOR_ReturnValue_1) == 0x000089, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BooleanAND_ReturnValue_1) == 0x00008A, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BooleanOR_ReturnValue_2) == 0x00008B, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BattleSkillActionBase_C_CheckAnimNotify::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_GetActorPartyIndex_index_1) == 0x000090, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_GetActorPartyIndex_index_2) == 0x000094, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_GetActorPartyIndex_index_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_IsJustBeforeApplyHitTiming_IsTiming) == 0x000098, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_IsJustBeforeApplyHitTiming_IsTiming' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_FindUnit_Unit_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000D8, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BIGetTaskFactory_retValue_2) == 0x0000F0, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BIGetTaskFactory_retValue_3) == 0x000100, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, K2Node_MakeArray_Array) == 0x000110, "Member 'BattleSkillActionBase_C_CheckAnimNotify::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_IsTargetContainsActor_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_IsTargetContainsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_AnimNotify_DamageMotion_Com_Index) == 0x000124, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_AnimNotify_DamageMotion_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BooleanAND_ReturnValue_2) == 0x000128, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Not_PreBool_ReturnValue_1) == 0x000129, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BooleanAND_ReturnValue_3) == 0x00012A, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'BattleSkillActionBase_C_CheckAnimNotify::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_IsNotifyApplyHit_IsNotified) == 0x000138, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_IsNotifyApplyHit_IsNotified' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_IsNotifyApplyHit_NotifyType) == 0x000140, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_IsNotifyApplyHit_NotifyType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, K2Node_MakeArray_Array_1) == 0x000150, "Member 'BattleSkillActionBase_C_CheckAnimNotify::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BIGetPartySystem_retValue) == 0x000160, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BIGetMainWork_NewParam) == 0x000170, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Array_Get_Item) == 0x000180, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Array_Length_ReturnValue) == 0x000184, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, K2Node_SwitchEnum_CmpSuccess) == 0x000188, "Member 'BattleSkillActionBase_C_CheckAnimNotify::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_Less_IntInt_ReturnValue) == 0x000189, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_AnimNotify_AvoidTiming_ComIndex) == 0x00018C, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_AnimNotify_AvoidTiming_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_BI_DestroyTaskForPecID_isSuccess) == 0x000191, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_BI_DestroyTaskForPecID_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000192, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_AnimNotify_Effect_ComIndex) == 0x000194, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_AnimNotify_Effect_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_AnimNotify_Effect_WaitPecIDs) == 0x000198, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_AnimNotify_Effect_WaitPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_AnimNotify_Effect_ComIndex_1) == 0x0001A8, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_AnimNotify_Effect_ComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_AnimNotify_Effect_WaitPecIDs_1) == 0x0001B0, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_AnimNotify_Effect_WaitPecIDs_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify, CallFunc_AnimNotify_DamageMotion_Com_Index_1) == 0x0001C0, "Member 'BattleSkillActionBase_C_CheckAnimNotify::CallFunc_AnimNotify_DamageMotion_Com_Index_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AnimNotify_DamageMotion
// 0x02E0 (0x02E0 - 0x0000)
struct BattleSkillActionBase_C_AnimNotify_DamageMotion final
{
public:
	int32                                         WaitComIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 EffectWaitPecIDs;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableShake;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3220[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_NoMotion;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3221[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_RandomTable;                                    // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_EffectWaitPecIDs;                               // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_Co_WaitTaskList;                                // 0x0058(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3222[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_AlreadyChecked;                                 // 0x0070(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_isHit;                                          // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3223[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_comIDs;                                         // 0x0088(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0098(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3224[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3225[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x00E0(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00F0(0x0098)()
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0188(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AnimNotify_IsHit_IsHit;                   // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3226[0x1];                                     // 0x0227(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3227[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3228[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3229[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShakeScale_retValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322A[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322B[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_ApplyDamageMotion_retPecID;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322C[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322D[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlayCamShake_retValue;              // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AnimNotify_DamageMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AnimNotify_DamageMotion");
static_assert(sizeof(BattleSkillActionBase_C_AnimNotify_DamageMotion) == 0x0002E0, "Wrong size on BattleSkillActionBase_C_AnimNotify_DamageMotion");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, WaitComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::WaitComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, EffectWaitPecIDs) == 0x000008, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::EffectWaitPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, TaskFactory) == 0x000018, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, EnableShake) == 0x000028, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::EnableShake' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Com_Index) == 0x00002C, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_NoMotion) == 0x000030, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_NoMotion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_RandomTable) == 0x000038, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_RandomTable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_EffectWaitPecIDs) == 0x000048, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_EffectWaitPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_Co_WaitTaskList) == 0x000058, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_Co_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_TargetIndex) == 0x000068, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_AlreadyChecked) == 0x000070, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_AlreadyChecked' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_isHit) == 0x000080, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_isHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_comIDs) == 0x000088, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_comIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Lo_WaitTaskList) == 0x000098, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_GetComandID_retValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Temp_int_Loop_Counter_Variable_1) == 0x0000B8, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Temp_int_Variable) == 0x0000C4, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C8, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Temp_int_Loop_Counter_Variable_2) == 0x0000D0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D4, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, Temp_int_Array_Index_Variable_2) == 0x0000D8, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_GetTargetInfo_Info) == 0x0000E0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Get_Item_1) == 0x000188, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Less_IntInt_ReturnValue) == 0x000224, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_BooleanOR_ReturnValue) == 0x000225, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_AnimNotify_IsHit_IsHit) == 0x000226, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_AnimNotify_IsHit_IsHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Length_ReturnValue_1) == 0x000228, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Less_IntInt_ReturnValue_1) == 0x00022C, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_BIGetTaskFactory_retValue) == 0x000230, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_SelectInt_ReturnValue) == 0x000240, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_AddUnique_ReturnValue) == 0x000244, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_FMin_ReturnValue) == 0x000248, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Length_ReturnValue_2) == 0x00024C, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000250, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000254, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Length_ReturnValue_3) == 0x000258, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Add_ReturnValue) == 0x00025C, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Add_ReturnValue_1) == 0x000260, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Length_ReturnValue_4) == 0x000264, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000268, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_LastIndex_ReturnValue) == 0x00026C, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000270, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000274, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_GetShakeScale_retValue) == 0x000278, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_GetShakeScale_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Contains_ReturnValue) == 0x00027C, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_BIGetPartySystem_retValue) == 0x000280, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Not_PreBool_ReturnValue) == 0x000290, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_BIGetTaskFactory_retValue_1) == 0x000298, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_ApplyDamageMotion_retPecID) == 0x0002A8, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_ApplyDamageMotion_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_BIGetTaskFactory_retValue_2) == 0x0002B0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0002C0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Add_ReturnValue_2) == 0x0002C4, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Get_Item_2) == 0x0002C8, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Add_ReturnValue_3) == 0x0002CC, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Length_ReturnValue_5) == 0x0002D0, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002D4, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_BI_AddPlayCamShake_retValue) == 0x0002D8, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_BI_AddPlayCamShake_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_DamageMotion, CallFunc_Array_Add_ReturnValue_4) == 0x0002DC, "Member 'BattleSkillActionBase_C_AnimNotify_DamageMotion::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AnimNotify_Effect
// 0x04B0 (0x04B0 - 0x0000)
struct BattleSkillActionBase_C_AnimNotify_Effect final
{
public:
	int32                                         WaitComIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayEffectID;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPrio;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     MainWork;                                          // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ComIndex;                                          // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322F[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 WaitPecIDs;                                        // 0x0078(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_EffectWaitPecIDs;                               // 0x0088(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_RandomTable;                                    // 0x0098(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_Co_WaitTaskList;                                // 0x00A8(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_AlreadyChecked;                                 // 0x00B8(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TransPrio;                                      // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EffectID;                                       // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3230[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_OffsetTrans;                                    // 0x00E0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     Lo_MainWork;                                       // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsHitStamp;                                     // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3231[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     Lo_SkillEffect;                                    // 0x0138(0x0038)(Edit, BlueprintVisible)
	class FString                                 Lo_TempName;                                       // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0180(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3232[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x01B0(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x01C0(0x0098)()
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0258(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnimNotify_IsHit_IsHit;                   // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3233[0x3];                                     // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3234[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3235[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x034E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x034F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0350(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x03A0(0x0030)()
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3236[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionEffect                     CallFunc_RetrieveHitEffect_SkillEffect;            // 0x03E0(0x0038)()
	bool                                          CallFunc_RetrieveHitEffect_IsHitStamp;             // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RetrieveHitEffect_IsCritical;             // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RetrieveHitEffect_IsAddCriticalSE;        // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3237[0x5];                                     // 0x041B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_AddRandomRoll_ReturnValue;                // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0450(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BIGetSound_retValue;                      // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundAtomCue*                          CallFunc_BI_GetResidentSEByName_retValue;          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1;    // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AnimNotify_Effect) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_AnimNotify_Effect");
static_assert(sizeof(BattleSkillActionBase_C_AnimNotify_Effect) == 0x0004B0, "Wrong size on BattleSkillActionBase_C_AnimNotify_Effect");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, WaitComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::WaitComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, PlayEffectID) == 0x000004, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::PlayEffectID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, TranslucencyPrio) == 0x000008, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::TranslucencyPrio' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, OffsetTransform) == 0x000010, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::OffsetTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, MainWork) == 0x000040, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, PartySystem) == 0x000050, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, TaskFactory) == 0x000060, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, ComIndex) == 0x000070, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, WaitPecIDs) == 0x000078, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::WaitPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_EffectWaitPecIDs) == 0x000088, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_EffectWaitPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_RandomTable) == 0x000098, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_RandomTable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_Co_WaitTaskList) == 0x0000A8, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_Co_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_AlreadyChecked) == 0x0000B8, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_AlreadyChecked' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_TargetIndex) == 0x0000C8, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_TransPrio) == 0x0000CC, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_TransPrio' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_EffectID) == 0x0000D0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_EffectID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_OffsetTrans) == 0x0000E0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_PartySystem) == 0x000110, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_MainWork) == 0x000120, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_IsHitStamp) == 0x000130, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_IsHitStamp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_SkillEffect) == 0x000138, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_SkillEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_TempName) == 0x000170, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_TempName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Lo_WaitTaskList) == 0x000180, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Greater_IntInt_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_GetComandID_retValue) == 0x000194, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Temp_int_Variable) == 0x000198, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Temp_int_Loop_Counter_Variable) == 0x0001A4, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A8, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Temp_int_Array_Index_Variable_1) == 0x0001AC, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_GetTargetInfo_Info) == 0x0001B0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Get_Item_1) == 0x000258, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Length_ReturnValue) == 0x0002F0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_AnimNotify_IsHit_IsHit) == 0x0002F4, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_AnimNotify_IsHit_IsHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Length_ReturnValue_1) == 0x0002F8, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Less_IntInt_ReturnValue) == 0x0002FC, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_GetActorPartyIndex_index) == 0x000300, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BIGetTaskFactory_retValue) == 0x000308, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BIGetTaskFactory_retValue_1) == 0x000318, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_AddUnique_ReturnValue) == 0x000328, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_FMin_ReturnValue) == 0x00032C, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Length_ReturnValue_2) == 0x000330, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000334, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000338, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x00033C, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Add_ReturnValue) == 0x000340, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Add_ReturnValue_1) == 0x000344, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_LastIndex_ReturnValue) == 0x000348, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00034C, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Contains_ReturnValue) == 0x00034D, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Not_PreBool_ReturnValue) == 0x00034E, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_IsValid_ReturnValue) == 0x00034F, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, K2Node_MakeStruct_BtlTaskData) == 0x000350, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BIGetTaskFactory_retValue_2) == 0x000380, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BIGetTaskFactory_retValue_3) == 0x000390, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, K2Node_MakeStruct_BtlTaskData_1) == 0x0003A0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0003D0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, Temp_int_Loop_Counter_Variable_1) == 0x0003D4, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003D8, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003DC, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_RetrieveHitEffect_SkillEffect) == 0x0003E0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_RetrieveHitEffect_SkillEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_RetrieveHitEffect_IsHitStamp) == 0x000418, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_RetrieveHitEffect_IsHitStamp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_RetrieveHitEffect_IsCritical) == 0x000419, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_RetrieveHitEffect_IsCritical' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_RetrieveHitEffect_IsAddCriticalSE) == 0x00041A, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_RetrieveHitEffect_IsAddCriticalSE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_AddRandomRoll_ReturnValue) == 0x000420, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_AddRandomRoll_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_SelectTransform_ReturnValue) == 0x000450, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BIGetSound_retValue) == 0x000480, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BIGetSound_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BI_GetResidentSEByName_retValue) == 0x000490, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BI_GetResidentSEByName_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_Array_Add_ReturnValue_2) == 0x000498, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1) == 0x00049C, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0004A0, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Effect, CallFunc_BI_AddPlayEffectTask_retValue) == 0x0004A4, "Member 'BattleSkillActionBase_C_AnimNotify_Effect::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AnimNotify_Reset
// 0x0190 (0x0190 - 0x0000)
struct BattleSkillActionBase_C_AnimNotify_Reset final
{
public:
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TYPE                                  Temp_byte_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3238[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3239[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillID_self_CastInput;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillID_NoUse;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0040(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                K2Node_Select_Default;                             // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_323C[0x5];                                     // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillTarget_self_CastInput;    // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillTarget_NoUse;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue; // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TYPE                                  CallFunc_SkillBaseDataGetValue_Type_ReturnValue;   // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ATTRIBUTE_TYPE                              K2Node_Select_Default_1;                           // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TYPE                                  K2Node_Select_Default_2;                           // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_323D[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillAttr_self_CastInput;      // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillAttr_NoUse;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323E[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillType_self_CastInput;      // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillType_NoUse;               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AnimNotify_Reset) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AnimNotify_Reset");
static_assert(sizeof(BattleSkillActionBase_C_AnimNotify_Reset) == 0x000190, "Wrong size on BattleSkillActionBase_C_AnimNotify_Reset");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, Lo_Unit) == 0x000000, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, Temp_bool_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, Temp_byte_Variable) == 0x000009, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, Temp_bool_Variable_1) == 0x00000A, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, Temp_byte_Variable_1) == 0x00000B, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, Temp_bool_Variable_2) == 0x00000C, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, Temp_byte_Variable_2) == 0x00000D, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_GetActorPartyIndex_index) == 0x000010, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_FindUnit_Unit) == 0x000018, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillID_self_CastInput) == 0x000028, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillID_NoUse) == 0x000038, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillID_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_GetSkillBaseData_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_Greater_IntInt_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000141, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, K2Node_Select_Default) == 0x000142, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillTarget_self_CastInput) == 0x000148, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillTarget_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillTarget_NoUse) == 0x000158, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillTarget_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue) == 0x000159, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_SkillBaseDataGetValue_Type_ReturnValue) == 0x00015A, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_SkillBaseDataGetValue_Type_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, K2Node_Select_Default_1) == 0x00015B, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, K2Node_Select_Default_2) == 0x00015C, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillAttr_self_CastInput) == 0x000160, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillAttr_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillAttr_NoUse) == 0x000170, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillAttr_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillType_self_CastInput) == 0x000178, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillType_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_Reset, CallFunc_BI_SetVoiceSkillType_NoUse) == 0x000188, "Member 'BattleSkillActionBase_C_AnimNotify_Reset::CallFunc_BI_SetVoiceSkillType_NoUse' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AnimNotify_IsHit
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_AnimNotify_IsHit final
{
public:
	TArray<E_BTL_REFLECT_RES_TYPE>                NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsHit;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3240[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AnimNotify_IsHit) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AnimNotify_IsHit");
static_assert(sizeof(BattleSkillActionBase_C_AnimNotify_IsHit) == 0x000028, "Wrong size on BattleSkillActionBase_C_AnimNotify_IsHit");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, NewParam) == 0x000000, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, IsHit) == 0x000010, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::IsHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, CallFunc_Less_IntInt_ReturnValue) == 0x000022, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_IsHit, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BattleSkillActionBase_C_AnimNotify_IsHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetAnimNotifyEffect
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_Com_SetAnimNotifyEffect final
{
public:
	int32                                         EffectID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPrio;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetAnimNotifyEffect) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_SetAnimNotifyEffect");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetAnimNotifyEffect) == 0x000008, "Wrong size on BattleSkillActionBase_C_Com_SetAnimNotifyEffect");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimNotifyEffect, EffectID) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetAnimNotifyEffect::EffectID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimNotifyEffect, TranslucencyPrio) == 0x000004, "Member 'BattleSkillActionBase_C_Com_SetAnimNotifyEffect::TranslucencyPrio' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetBiAttackWaitTime
// 0x0014 (0x0014 - 0x0000)
struct BattleSkillActionBase_C_Com_SetBiAttackWaitTime final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleTempo_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetBiAttackWaitTime) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_SetBiAttackWaitTime");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetBiAttackWaitTime) == 0x000014, "Wrong size on BattleSkillActionBase_C_Com_SetBiAttackWaitTime");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetBiAttackWaitTime, DeltaTime) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetBiAttackWaitTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetBiAttackWaitTime, CallFunc_GetBattleTempo_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_Com_SetBiAttackWaitTime::CallFunc_GetBattleTempo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetBiAttackWaitTime, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetBiAttackWaitTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetBiAttackWaitTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_SetBiAttackWaitTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetBiAttackWaitTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_Com_SetBiAttackWaitTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetTaskFactory
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetTaskFactory final
{
public:
	TScriptInterface<class IBPI_BattleTaskFactory_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetTaskFactory) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetTaskFactory");
static_assert(sizeof(BattleSkillActionBase_C_BIGetTaskFactory) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetTaskFactory");
static_assert(offsetof(BattleSkillActionBase_C_BIGetTaskFactory, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetTaskFactory::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetTaskFactory, CallFunc_BIGetMainWork_NewParam) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetTaskFactory::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetTaskFactory, CallFunc_BI_GetTaskFactory_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_BIGetTaskFactory::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetPartySystem
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetPartySystem final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetPartySystem) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetPartySystem");
static_assert(sizeof(BattleSkillActionBase_C_BIGetPartySystem) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetPartySystem");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPartySystem, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetPartySystem::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPartySystem, CallFunc_BIGetMainWork_NewParam) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetPartySystem::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPartySystem, CallFunc_BI_GetPartySystem_ret) == 0x000020, "Member 'BattleSkillActionBase_C_BIGetPartySystem::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddActorPointLight
// 0x00B8 (0x00B8 - 0x0000)
struct BattleSkillActionBase_C_Com_AddActorPointLight final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharaOnly;                                       // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3241[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3242[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0048(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddActorPointLight) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddActorPointLight");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddActorPointLight) == 0x0000B8, "Wrong size on BattleSkillActionBase_C_Com_AddActorPointLight");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, SocketName) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, OffsetPos) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, LightFuncMaterialIndex) == 0x000014, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, GroupID) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, IsCastShadow) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, IsFollowSokect) == 0x00001D, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, IsCharaOnly) == 0x00001E, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, Lo_PartyIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, CallFunc_GetActorPartyIndex_index) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_UpdateActorPointLight
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_Com_UpdateActorPointLight final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightFalloffExponent;                              // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_UpdateActorPointLight) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_UpdateActorPointLight");
static_assert(sizeof(BattleSkillActionBase_C_Com_UpdateActorPointLight) == 0x000020, "Wrong size on BattleSkillActionBase_C_Com_UpdateActorPointLight");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateActorPointLight, GroupID) == 0x000000, "Member 'BattleSkillActionBase_C_Com_UpdateActorPointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateActorPointLight, Color) == 0x000004, "Member 'BattleSkillActionBase_C_Com_UpdateActorPointLight::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateActorPointLight, Intensity) == 0x000014, "Member 'BattleSkillActionBase_C_Com_UpdateActorPointLight::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateActorPointLight, AttenuationRadius) == 0x000018, "Member 'BattleSkillActionBase_C_Com_UpdateActorPointLight::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateActorPointLight, LightFalloffExponent) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_UpdateActorPointLight::LightFalloffExponent' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddTargetPointLight
// 0x01A8 (0x01A8 - 0x0000)
struct BattleSkillActionBase_C_Com_AddTargetPointLight final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSocket;                                    // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInReflection;                                  // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInAbsorbAndBlock;                              // 0x001F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharaOnly;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInAbsorbAndBlock;                           // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInReflection;                               // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3243[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndexPool;                                // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3244[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0040(0x0010)(Edit, BlueprintVisible)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3245[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x006C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3246[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3247[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0078(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3248[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3249[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0098)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcReflexTarget_IsExist;                 // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_324A[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcReflexTarget_ReflexTargetIndex;       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_324B[0x1];                                     // 0x019F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddTargetPointLight) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddTargetPointLight");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddTargetPointLight) == 0x0001A8, "Wrong size on BattleSkillActionBase_C_Com_AddTargetPointLight");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, SocketName) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, OffsetPos) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, LightFuncMaterialIndex) == 0x000014, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, GroupID) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, IsCastShadow) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, IsFollowSocket) == 0x00001D, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::IsFollowSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, HideInReflection) == 0x00001E, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, HideInAbsorbAndBlock) == 0x00001F, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, IsCharaOnly) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Lo_HideInAbsorbAndBlock) == 0x000021, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Lo_HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Lo_HideInReflection) == 0x000022, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Lo_HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Lo_TargetIndexPool) == 0x000028, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Lo_TargetIndexPool' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Lo_TargetIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Lo_PartyIndex) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Temp_byte_Variable) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Temp_byte_Variable_1) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Array_Contains_ReturnValue) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Not_PreBool_ReturnValue) == 0x0000E5, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Array_Add_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Array_Add_ReturnValue_1) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_CalcReflexTarget_IsExist) == 0x000191, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_CalcReflexTarget_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_CalcReflexTarget_ReflexTargetIndex) == 0x000194, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_CalcReflexTarget_ReflexTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Array_Contains_ReturnValue_1) == 0x000198, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_BooleanAND_ReturnValue) == 0x000199, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Array_Contains_ReturnValue_2) == 0x00019A, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_BooleanAND_ReturnValue_1) == 0x00019B, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_BooleanOR_ReturnValue) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Not_PreBool_ReturnValue_1) == 0x00019D, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_BooleanAND_ReturnValue_2) == 0x00019E, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_SelectInt_ReturnValue) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001A4, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_BooleanAND_ReturnValue_3) == 0x0001A5, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight, CallFunc_BooleanAND_ReturnValue_4) == 0x0001A6, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_UpdateTargetPointLight
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_Com_UpdateTargetPointLight final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightFalloutExponent;                              // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_UpdateTargetPointLight) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_UpdateTargetPointLight");
static_assert(sizeof(BattleSkillActionBase_C_Com_UpdateTargetPointLight) == 0x000020, "Wrong size on BattleSkillActionBase_C_Com_UpdateTargetPointLight");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateTargetPointLight, GroupID) == 0x000000, "Member 'BattleSkillActionBase_C_Com_UpdateTargetPointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateTargetPointLight, Color) == 0x000004, "Member 'BattleSkillActionBase_C_Com_UpdateTargetPointLight::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateTargetPointLight, Intensity) == 0x000014, "Member 'BattleSkillActionBase_C_Com_UpdateTargetPointLight::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateTargetPointLight, AttenuationRadius) == 0x000018, "Member 'BattleSkillActionBase_C_Com_UpdateTargetPointLight::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_UpdateTargetPointLight, LightFalloutExponent) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_UpdateTargetPointLight::LightFalloutExponent' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.InitPointLight
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_InitPointLight final
{
public:
	TArray<class ASkillActionPointLight_C*>       PointLights;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_324D[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_InitPointLight) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_InitPointLight");
static_assert(sizeof(BattleSkillActionBase_C_InitPointLight) == 0x000030, "Wrong size on BattleSkillActionBase_C_InitPointLight");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, PointLights) == 0x000000, "Member 'BattleSkillActionBase_C_InitPointLight::PointLights' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_InitPointLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BattleSkillActionBase_C_InitPointLight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BattleSkillActionBase_C_InitPointLight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleSkillActionBase_C_InitPointLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_InitPointLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BattleSkillActionBase_C_InitPointLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitPointLight, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_InitPointLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UpdatePointLight
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_UpdatePointLight final
{
public:
	TArray<class ASkillActionPointLight_C*>       LightArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLinearColor                           NewLightColor;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewIntensity;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewRadius;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLightFalloffExponent;                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324E[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcLightScale_RetVal;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGroupID_GroupID;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_324F[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_UpdatePointLight) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UpdatePointLight");
static_assert(sizeof(BattleSkillActionBase_C_UpdatePointLight) == 0x000060, "Wrong size on BattleSkillActionBase_C_UpdatePointLight");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, LightArray) == 0x000000, "Member 'BattleSkillActionBase_C_UpdatePointLight::LightArray' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, NewLightColor) == 0x000010, "Member 'BattleSkillActionBase_C_UpdatePointLight::NewLightColor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, NewIntensity) == 0x000020, "Member 'BattleSkillActionBase_C_UpdatePointLight::NewIntensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, NewRadius) == 0x000024, "Member 'BattleSkillActionBase_C_UpdatePointLight::NewRadius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, NewLightFalloffExponent) == 0x000028, "Member 'BattleSkillActionBase_C_UpdatePointLight::NewLightFalloffExponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, GroupID) == 0x00002C, "Member 'BattleSkillActionBase_C_UpdatePointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BattleSkillActionBase_C_UpdatePointLight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattleSkillActionBase_C_UpdatePointLight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_CalcLightScale_RetVal) == 0x000048, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_CalcLightScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_GetGroupID_GroupID) == 0x000050, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_GetGroupID_GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000055, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_Less_IntInt_ReturnValue) == 0x000056, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePointLight, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_UpdatePointLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddPointLight
// 0x0250 (0x0250 - 0x0000)
struct BattleSkillActionBase_C_AddPointLight final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3250[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASkillActionPointLight_C*>       TargetArray;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMaterialInterface*                     LightFuncMaterial;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3251[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OffsetPos;                                         // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFollowSocket;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3252[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GroupID;                                           // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLightForBlink;                                   // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPartyCentor;                                     // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsMagatsuhi;                                       // 0x0042(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckSocketExist;                                  // 0x0043(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3253[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               AddedLight;                                        // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ActorScale;                                     // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LightBaseLoc;                                   // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Lo_LightRot;                                       // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_LightScale;                                     // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsPartyCentor;                                  // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsLightBlink;                                   // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsFollowSocket;                                 // 0x007A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCastShadow;                                   // 0x007B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3254[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_TargetUnit;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_GroupID;                                        // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_Offset;                                         // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Lo_LightFunc;                                      // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyIndex;                                     // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_SocketName;                                     // 0x00A4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3255[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               Lo_PL;                                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3256[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3257[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3258[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3259[0xB];                                     // 0x0155(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkillActionPointLight_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkillActionPointLightForBlink_C*       CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325A[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325B[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_Pos;              // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_Normal;           // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_forward;          // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPartyRotation_Rotation;                // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddPointLight) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_AddPointLight");
static_assert(sizeof(BattleSkillActionBase_C_AddPointLight) == 0x000250, "Wrong size on BattleSkillActionBase_C_AddPointLight");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, SocketName) == 0x000000, "Member 'BattleSkillActionBase_C_AddPointLight::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, PartyIndex) == 0x000008, "Member 'BattleSkillActionBase_C_AddPointLight::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, TargetArray) == 0x000010, "Member 'BattleSkillActionBase_C_AddPointLight::TargetArray' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, LightFuncMaterial) == 0x000020, "Member 'BattleSkillActionBase_C_AddPointLight::LightFuncMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, IsCastShadow) == 0x000028, "Member 'BattleSkillActionBase_C_AddPointLight::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, OffsetPos) == 0x00002C, "Member 'BattleSkillActionBase_C_AddPointLight::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, IsFollowSocket) == 0x000038, "Member 'BattleSkillActionBase_C_AddPointLight::IsFollowSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, GroupID) == 0x00003C, "Member 'BattleSkillActionBase_C_AddPointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, IsLightForBlink) == 0x000040, "Member 'BattleSkillActionBase_C_AddPointLight::IsLightForBlink' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, IsPartyCentor) == 0x000041, "Member 'BattleSkillActionBase_C_AddPointLight::IsPartyCentor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, IsMagatsuhi) == 0x000042, "Member 'BattleSkillActionBase_C_AddPointLight::IsMagatsuhi' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CheckSocketExist) == 0x000043, "Member 'BattleSkillActionBase_C_AddPointLight::CheckSocketExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, AddedLight) == 0x000048, "Member 'BattleSkillActionBase_C_AddPointLight::AddedLight' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_ActorScale) == 0x000050, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_ActorScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_LightBaseLoc) == 0x000054, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_LightBaseLoc' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_LightRot) == 0x000060, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_LightRot' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_LightScale) == 0x00006C, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_LightScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_IsPartyCentor) == 0x000078, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_IsPartyCentor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_IsLightBlink) == 0x000079, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_IsLightBlink' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_IsFollowSocket) == 0x00007A, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_IsFollowSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_IsCastShadow) == 0x00007B, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_TargetUnit) == 0x000080, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_TargetUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_GroupID) == 0x000088, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_Offset) == 0x00008C, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_LightFunc) == 0x000098, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_LightFunc' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_PartyIndex) == 0x0000A0, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_SocketName) == 0x0000A4, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, Lo_PL) == 0x0000B0, "Member 'BattleSkillActionBase_C_AddPointLight::Lo_PL' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_DoesSocketExist_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetPlayRate_PlayRate) == 0x0000D4, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_Not_PreBool_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BreakVector_X) == 0x0000DC, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BreakVector_Z) == 0x0000E4, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_FMax_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_FMax_ReturnValue_1) == 0x0000EC, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetSocketTransform_retValue) == 0x000100, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetSocketTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BreakTransform_Location) == 0x000130, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BreakTransform_Rotation) == 0x00013C, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BreakTransform_Scale) == 0x000148, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_IsValid_ReturnValue) == 0x000154, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000198, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001A0, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0001A8, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BIGetPartySystem_retValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetMeshRelativeScale_Scale) == 0x0001C0, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_SelectFloat_ReturnValue) == 0x0001C4, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_BooleanAND_ReturnValue) == 0x0001C8, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_IsValid_ReturnValue_1) == 0x0001C9, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x0001D0, "Member 'BattleSkillActionBase_C_AddPointLight::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'BattleSkillActionBase_C_AddPointLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetMagatsuhiPartyCenter_Pos) == 0x0001E4, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetMagatsuhiPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetMagatsuhiPartyCenter_Normal) == 0x0001F0, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetMagatsuhiPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetMagatsuhiPartyCenter_forward) == 0x0001FC, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetMagatsuhiPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_FindUnit_Unit) == 0x000208, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetPartyRotation_Rotation) == 0x000210, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetPartyRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetPartyCenter_Pos) == 0x00021C, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetPartyCenter_Normal) == 0x000228, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_GetPartyCenter_forward) == 0x000234, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_SelectVector_ReturnValue) == 0x000240, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLight, CallFunc_Array_Add_ReturnValue) == 0x00024C, "Member 'BattleSkillActionBase_C_AddPointLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.PutOnRadialForce
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_PutOnRadialForce final
{
public:
	float                                         Lo_Dist;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialForceComponent*                  Lo_BtlRadialForce;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_AveLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_PutOnRadialForce) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_PutOnRadialForce");
static_assert(sizeof(BattleSkillActionBase_C_PutOnRadialForce) == 0x000020, "Wrong size on BattleSkillActionBase_C_PutOnRadialForce");
static_assert(offsetof(BattleSkillActionBase_C_PutOnRadialForce, Lo_Dist) == 0x000000, "Member 'BattleSkillActionBase_C_PutOnRadialForce::Lo_Dist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PutOnRadialForce, Lo_BtlRadialForce) == 0x000008, "Member 'BattleSkillActionBase_C_PutOnRadialForce::Lo_BtlRadialForce' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PutOnRadialForce, Lo_AveLocation) == 0x000010, "Member 'BattleSkillActionBase_C_PutOnRadialForce::Lo_AveLocation' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ApplyDrain
// 0x00F8 (0x00F8 - 0x0000)
struct BattleSkillActionBase_C_ApplyDrain final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 WaitTaskList2;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 RetComIDs;                                         // 0x0020(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_comIDs;                                         // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DrainMP;                                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_DrainHP;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0050(0x0010)(Edit, BlueprintVisible)
	E_BTL_NUMEFF                                  Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_NUMEFF                                  Temp_byte_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325E[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325F[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Temp_byte_Variable_2;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_NUMEFF                                  K2Node_Select_Default;                             // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  K2Node_Select_Default_1;                           // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddNumEffectTask_retValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3260[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3261[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionDrainInfo                  CallFunc_GetDrainInfo_m_DrainInfo;                 // 0x00E8(0x0008)()
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_1;      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ApplyDrain) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ApplyDrain");
static_assert(sizeof(BattleSkillActionBase_C_ApplyDrain) == 0x0000F8, "Wrong size on BattleSkillActionBase_C_ApplyDrain");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ApplyDrain::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, WaitTaskList2) == 0x000010, "Member 'BattleSkillActionBase_C_ApplyDrain::WaitTaskList2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, RetComIDs) == 0x000020, "Member 'BattleSkillActionBase_C_ApplyDrain::RetComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Lo_comIDs) == 0x000030, "Member 'BattleSkillActionBase_C_ApplyDrain::Lo_comIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Lo_Index) == 0x000040, "Member 'BattleSkillActionBase_C_ApplyDrain::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Lo_DrainMP) == 0x000044, "Member 'BattleSkillActionBase_C_ApplyDrain::Lo_DrainMP' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Lo_DrainHP) == 0x000048, "Member 'BattleSkillActionBase_C_ApplyDrain::Lo_DrainHP' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Lo_WaitTaskList) == 0x000050, "Member 'BattleSkillActionBase_C_ApplyDrain::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Temp_byte_Variable) == 0x000060, "Member 'BattleSkillActionBase_C_ApplyDrain::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Temp_bool_Variable) == 0x000061, "Member 'BattleSkillActionBase_C_ApplyDrain::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Temp_byte_Variable_1) == 0x000062, "Member 'BattleSkillActionBase_C_ApplyDrain::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Greater_IntInt_ReturnValue) == 0x000063, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000064, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BooleanOR_ReturnValue) == 0x000065, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000066, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BIGetTaskFactory_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BIGetTaskFactory_retValue_1) == 0x000080, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Array_Add_ReturnValue_1) == 0x000094, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Temp_byte_Variable_2) == 0x000098, "Member 'BattleSkillActionBase_C_ApplyDrain::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, Temp_bool_Variable_1) == 0x000099, "Member 'BattleSkillActionBase_C_ApplyDrain::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00009A, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00009B, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x00009C, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BooleanAND_ReturnValue) == 0x00009D, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, K2Node_Select_Default) == 0x00009E, "Member 'BattleSkillActionBase_C_ApplyDrain::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, K2Node_Select_Default_1) == 0x00009F, "Member 'BattleSkillActionBase_C_ApplyDrain::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GetPlayRate_PlayRate) == 0x0000A0, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GetActorPartyIndex_index) == 0x0000A4, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BI_AddNumEffectTask_retValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BI_AddNumEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Array_Add_ReturnValue_2) == 0x0000AC, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0000B0, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BIGetTaskFactory_retValue_2) == 0x0000B8, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Array_Add_ReturnValue_3) == 0x0000CC, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x0000D0, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BIGetTaskFactory_retValue_3) == 0x0000D8, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_GetDrainInfo_m_DrainInfo) == 0x0000E8, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_GetDrainInfo_m_DrainInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_BI_AddPartyPanelCtrlTask_retValue_1) == 0x0000F0, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_BI_AddPartyPanelCtrlTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDrain, CallFunc_Array_Add_ReturnValue_4) == 0x0000F4, "Member 'BattleSkillActionBase_C_ApplyDrain::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Skill Info Mess Task
// 0x0540 (0x0540 - 0x0000)
struct BattleSkillActionBase_C_Skill_Info_Mess_Task final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_SKILL_INFO_MESS_TIMING                      Timing;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3262[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHandleAllSkills;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3263[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TaSKID;                                            // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_InformedUniqueSkill;                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_UniqueSkills;                                   // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_UniqueSkillID;                                  // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_RetTaskID;                                      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SkillId;                                        // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Actor;                                          // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Target;                                         // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3264[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0068(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3265[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3266[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3267[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x00B0(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3268[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3269[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillInfoMess                         CallFunc_GetSkillInfoMessData_ReturnValue;         // 0x0168(0x001C)(ConstParm, NoDestructor)
	uint8                                         Pad_326A[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetActListAll_retValue;                // 0x0188(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUniqueSkillEfficacy_Efficacy;        // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326B[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326C[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326D[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_326E[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddInfoMessTask_retValue;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_326F[0xC];                                     // 0x01E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x01F0(0x0320)()
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllTargetDead_IsDead;                   // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3270[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_END                                     CallFunc_BI_CheckBattleEnd_EndType;                // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0532(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0533(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayRate_PlayRate_1;                   // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleSkillActionIsSkillMasterExec_ReturnValue; // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3271[0x3];                                     // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddInfoMessTask_retValue_1;            // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Skill_Info_Mess_Task) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Skill_Info_Mess_Task");
static_assert(sizeof(BattleSkillActionBase_C_Skill_Info_Mess_Task) == 0x000540, "Wrong size on BattleSkillActionBase_C_Skill_Info_Mess_Task");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Timing) == 0x000010, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Timing' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, TaskFactory) == 0x000018, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, IsHandleAllSkills) == 0x000028, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::IsHandleAllSkills' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, TaSKID) == 0x00002C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::TaSKID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_InformedUniqueSkill) == 0x000030, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_InformedUniqueSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_UniqueSkills) == 0x000040, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_UniqueSkills' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_UniqueSkillID) == 0x000050, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_UniqueSkillID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_RetTaskID) == 0x000054, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_RetTaskID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_SkillId) == 0x000058, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_Actor) == 0x00005C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_Target) == 0x000060, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Lo_WaitTaskList) == 0x000068, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Temp_int_Array_Index_Variable_2) == 0x000090, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Contains_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Get_Item) == 0x00009C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetTargetInfoLength_length) == 0x0000A8, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Greater_IntInt_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetFirstTargetInfo_Info) == 0x0000B0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetFirstTargetInfo_valid) == 0x000148, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetSkillID_ID) == 0x00014C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000150, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BIGetPartySystem_retValue) == 0x000158, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetSkillInfoMessData_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetSkillInfoMessData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BI_GetActListAll_retValue) == 0x000188, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BI_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00019C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_CheckUniqueSkillEfficacy_Efficacy) == 0x00019D, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_CheckUniqueSkillEfficacy_Efficacy' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00019E, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BooleanAND_ReturnValue) == 0x00019F, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Get_Item_2) == 0x0001A0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BooleanAND_ReturnValue_1) == 0x0001A4, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Length_ReturnValue_1) == 0x0001A8, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Length_ReturnValue_2) == 0x0001AC, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Add_ReturnValue_1) == 0x0001B4, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, Temp_int_Loop_Counter_Variable_2) == 0x0001B8, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001BC, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_Add_ReturnValue_2) == 0x0001C4, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetPlayRate_PlayRate) == 0x0001C8, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BIGetPartySystem_retValue_1) == 0x0001D0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BI_AddInfoMessTask_retValue) == 0x0001E0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BI_AddInfoMessTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BI_GetPartyData_retValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetActorPartyIndex_index) == 0x000510, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_Array_AddUnique_ReturnValue) == 0x000514, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000518, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_IsAllTargetDead_IsDead) == 0x00051C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_IsAllTargetDead_IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BIGetMainWork_NewParam) == 0x000520, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BI_CheckBattleEnd_EndType) == 0x000530, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BI_CheckBattleEnd_EndType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000531, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BooleanOR_ReturnValue) == 0x000532, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BooleanOR_ReturnValue_1) == 0x000533, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_GetPlayRate_PlayRate_1) == 0x000534, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_GetPlayRate_PlayRate_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BattleSkillActionIsSkillMasterExec_ReturnValue) == 0x000538, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BattleSkillActionIsSkillMasterExec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Skill_Info_Mess_Task, CallFunc_BI_AddInfoMessTask_retValue_1) == 0x00053C, "Member 'BattleSkillActionBase_C_Skill_Info_Mess_Task::CallFunc_BI_AddInfoMessTask_retValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SkillMasterEffectTask
// 0x0280 (0x0280 - 0x0000)
struct BattleSkillActionBase_C_SkillMasterEffectTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 ComIndex;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_EftName;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0058(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0088(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3272[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_2;                   // 0x00D8(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_3;                   // 0x0118(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0160(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3273[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BattleSkillActionGetSkillMasterEffectID_effectID; // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_MASTER_TARGET                         CallFunc_BattleSkillActionGetSkillMasterEffectID_target; // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3274[0x1];                                     // 0x0217(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_BI_EffectManagerGetResidentAssetByName_retValue; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3275[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue_1;          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_SkillMasterEffectTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_SkillMasterEffectTask");
static_assert(sizeof(BattleSkillActionBase_C_SkillMasterEffectTask) == 0x000280, "Wrong size on BattleSkillActionBase_C_SkillMasterEffectTask");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, Lo_RetTaskList) == 0x000020, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, Lo_WaitTaskList) == 0x000030, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, Lo_EftName) == 0x000040, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::Lo_EftName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_GetActorPartyIndex_index) == 0x000054, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, K2Node_MakeStruct_BtlTaskData) == 0x000058, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, K2Node_MakeStruct_BtlTaskData_1) == 0x000088, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BIGetTaskFactory_retValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Array_Add_ReturnValue_1) == 0x0000D0, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, K2Node_MakeStruct_BtlTaskData_2) == 0x0000D8, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::K2Node_MakeStruct_BtlTaskData_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BIGetTaskFactory_retValue_1) == 0x000108, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, K2Node_MakeStruct_BtlTaskData_3) == 0x000118, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::K2Node_MakeStruct_BtlTaskData_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BIGetTaskFactory_retValue_2) == 0x000148, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, Temp_int_Loop_Counter_Variable) == 0x000158, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Array_Get_Item) == 0x000160, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Array_Length_ReturnValue) == 0x0001F8, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Less_IntInt_ReturnValue) == 0x0001FC, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BIGetMainWork_NewParam) == 0x000200, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BattleSkillActionGetSkillMasterEffectID_effectID) == 0x000210, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BattleSkillActionGetSkillMasterEffectID_effectID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BattleSkillActionGetSkillMasterEffectID_target) == 0x000214, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BattleSkillActionGetSkillMasterEffectID_target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Greater_IntInt_ReturnValue) == 0x000215, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000216, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Conv_IntToString_ReturnValue) == 0x000218, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Concat_StrStr_ReturnValue) == 0x000228, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Right_ReturnValue) == 0x000238, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000248, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Conv_StringToName_ReturnValue) == 0x000258, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BI_EffectManagerGetResidentAssetByName_retValue) == 0x000260, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BI_EffectManagerGetResidentAssetByName_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_IsValid_ReturnValue) == 0x000268, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BI_AddPlayEffectTask_retValue) == 0x00026C, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Array_Add_ReturnValue_2) == 0x000270, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_BI_AddPlayEffectTask_retValue_1) == 0x000274, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_BI_AddPlayEffectTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SkillMasterEffectTask, CallFunc_Array_Add_ReturnValue_3) == 0x000278, "Member 'BattleSkillActionBase_C_SkillMasterEffectTask::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ReservePerform_OnApplyHitFunc
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_ReservePerform_OnApplyHitFunc final
{
public:
	TArray<int32>                                 WaitCommandList;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattleSkillActionBase_C_ReservePerform_OnApplyHitFunc) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ReservePerform_OnApplyHitFunc");
static_assert(sizeof(BattleSkillActionBase_C_ReservePerform_OnApplyHitFunc) == 0x000010, "Wrong size on BattleSkillActionBase_C_ReservePerform_OnApplyHitFunc");
static_assert(offsetof(BattleSkillActionBase_C_ReservePerform_OnApplyHitFunc, WaitCommandList) == 0x000000, "Member 'BattleSkillActionBase_C_ReservePerform_OnApplyHitFunc::WaitCommandList' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Supervise_OnApplyHitFunc
// 0x0038 (0x0038 - 0x0000)
struct BattleSkillActionBase_C_Supervise_OnApplyHitFunc final
{
public:
	bool                                          Lo_IsTaskExist;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3276[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyHit_retValue;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3277[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExistTaskForPecID_retValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3278[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Supervise_OnApplyHitFunc");
static_assert(sizeof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc) == 0x000038, "Wrong size on BattleSkillActionBase_C_Supervise_OnApplyHitFunc");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, Lo_IsTaskExist) == 0x000000, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::Lo_IsTaskExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, CallFunc_IsAnyHit_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::CallFunc_IsAnyHit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, CallFunc_BIGetTaskFactory_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, CallFunc_BI_IsExistTaskForPecID_retValue) == 0x00002C, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::CallFunc_BI_IsExistTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Supervise_OnApplyHitFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Supervise_OnApplyHitFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CallMainAction
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_CallMainAction final
{
public:
	bool                                          CallFunc_IsLightFuncMaterialLoaded_Done;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsModelLoaded_Done;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3279[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CallMainAction) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CallMainAction");
static_assert(sizeof(BattleSkillActionBase_C_CallMainAction) == 0x000020, "Wrong size on BattleSkillActionBase_C_CallMainAction");
static_assert(offsetof(BattleSkillActionBase_C_CallMainAction, CallFunc_IsLightFuncMaterialLoaded_Done) == 0x000000, "Member 'BattleSkillActionBase_C_CallMainAction::CallFunc_IsLightFuncMaterialLoaded_Done' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallMainAction, CallFunc_IsModelLoaded_Done) == 0x000001, "Member 'BattleSkillActionBase_C_CallMainAction::CallFunc_IsModelLoaded_Done' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallMainAction, K2Node_MakeArray_Array) == 0x000008, "Member 'BattleSkillActionBase_C_CallMainAction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallMainAction, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_CallMainAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallMainAction, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BattleSkillActionBase_C_CallMainAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcAvoidDirection
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_CalcAvoidDirection final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AVOID_DIRECTION                             RetVal;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Target;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosTarget;                                      // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToAve;                                          // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetRightVec;                                 // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_End;                                            // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Begin;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosAve;                                         // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerEnd;                                      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerBegin;                                    // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyEnd;                                       // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyBegin;                                     // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327B[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327C[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327D[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327E[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327F[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3280[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3281[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_const_GetPlayerLoopMax_retValue;       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3282[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyLoopMax_retValue;        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcAvoidDirection) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcAvoidDirection");
static_assert(sizeof(BattleSkillActionBase_C_CalcAvoidDirection) == 0x000110, "Wrong size on BattleSkillActionBase_C_CalcAvoidDirection");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, TargetIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, RetVal) == 0x000004, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::RetVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_Target) == 0x000008, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_PosTarget) == 0x000010, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_PosTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_ToAve) == 0x00001C, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_ToAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_TargetRightVec) == 0x000028, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_TargetRightVec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_End) == 0x000034, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_Begin) == 0x000038, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_Begin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_PartyNum) == 0x00003C, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_PosAve) == 0x000040, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_PosAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_PlayerEnd) == 0x00004C, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_PlayerEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_PlayerBegin) == 0x000050, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_PlayerBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_EnemyEnd) == 0x000054, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_EnemyEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Lo_EnemyBegin) == 0x000058, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Lo_EnemyBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_MakeLiteralByte_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_FindUnit_Unit) == 0x000060, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Temp_int_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_GetActorRightVector_ReturnValue) == 0x000078, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, Temp_int_Variable_1) == 0x000084, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_FindUnit_Unit_1) == 0x000088, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000094, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Dot_VectorVector_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BC, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BD, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_BIGetPartySystem_retValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_BI_const_GetPlayerLoopMax_retValue) == 0x0000FC, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_BI_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_BI_const_GetPartyStart_retValue) == 0x000104, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_BI_const_GetEnemyLoopMax_retValue) == 0x000108, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_BI_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAvoidDirection, CallFunc_BI_const_GetEnemyStart_retValue) == 0x00010C, "Member 'BattleSkillActionBase_C_CalcAvoidDirection::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsAnyHit
// 0x01F0 (0x01F0 - 0x0000)
struct BattleSkillActionBase_C_IsAnyHit final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3283[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_PosTarget;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToAve;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetRightVec;                                 // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_End;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Begin;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosAve;                                         // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerEnd;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerBegin;                                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyEnd;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyBegin;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0080(0x0010)(ReferenceParm)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0090(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0098)()
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0098)()
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item_2;                         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item_3;                         // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3284[0x2];                                     // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsAnyHit) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsAnyHit");
static_assert(sizeof(BattleSkillActionBase_C_IsAnyHit) == 0x0001F0, "Wrong size on BattleSkillActionBase_C_IsAnyHit");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsAnyHit::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_PosTarget) == 0x000004, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_PosTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_ToAve) == 0x000010, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_ToAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_TargetRightVec) == 0x00001C, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_TargetRightVec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_End) == 0x000028, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_Begin) == 0x00002C, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_Begin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_PartyNum) == 0x000030, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_PosAve) == 0x000034, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_PosAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_PlayerEnd) == 0x000040, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_PlayerEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_PlayerBegin) == 0x000044, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_PlayerBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_EnemyEnd) == 0x000048, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_EnemyEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Lo_EnemyBegin) == 0x00004C, "Member 'BattleSkillActionBase_C_IsAnyHit::Lo_EnemyBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Loop_Counter_Variable_2) == 0x000060, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Loop_Counter_Variable_3) == 0x000074, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Add_IntInt_ReturnValue_3) == 0x000078, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, Temp_int_Array_Index_Variable_3) == 0x00007C, "Member 'BattleSkillActionBase_C_IsAnyHit::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_GetReflexInfo_Info) == 0x000080, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_GetTargetInfo_Info) == 0x000090, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Get_Item_2) == 0x0001D0, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Get_Item_3) == 0x0001D1, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D2, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001D3, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Length_ReturnValue) == 0x0001D4, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Length_ReturnValue_1) == 0x0001D8, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Less_IntInt_ReturnValue) == 0x0001DC, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001DD, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Length_ReturnValue_2) == 0x0001E0, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Array_Length_ReturnValue_3) == 0x0001E4, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001E8, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyHit, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001E9, "Member 'BattleSkillActionBase_C_IsAnyHit::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetSound
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetSound final
{
public:
	TScriptInterface<class IBPI_BattleSoundManager_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_GetBattleSoundManager_retValue;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetSound) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetSound");
static_assert(sizeof(BattleSkillActionBase_C_BIGetSound) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetSound");
static_assert(offsetof(BattleSkillActionBase_C_BIGetSound, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetSound::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetSound, CallFunc_BIGetMainWork_NewParam) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetSound::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetSound, CallFunc_BI_GetBattleSoundManager_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_BIGetSound::CallFunc_BI_GetBattleSoundManager_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsBstAny
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_IsBstAny final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3285[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_PosTarget;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToAve;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetRightVec;                                 // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_End;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Begin;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosAve;                                         // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerEnd;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerBegin;                                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyEnd;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyBegin;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3286[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0060(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0070(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsBstAny) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsBstAny");
static_assert(sizeof(BattleSkillActionBase_C_IsBstAny) == 0x000110, "Wrong size on BattleSkillActionBase_C_IsBstAny");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsBstAny::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_PosTarget) == 0x000004, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_PosTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_ToAve) == 0x000010, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_ToAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_TargetRightVec) == 0x00001C, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_TargetRightVec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_End) == 0x000028, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_Begin) == 0x00002C, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_Begin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_PartyNum) == 0x000030, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_PosAve) == 0x000034, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_PosAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_PlayerEnd) == 0x000040, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_PlayerEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_PlayerBegin) == 0x000044, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_PlayerBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_EnemyEnd) == 0x000048, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_EnemyEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Lo_EnemyBegin) == 0x00004C, "Member 'BattleSkillActionBase_C_IsBstAny::Lo_EnemyBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BattleSkillActionBase_C_IsBstAny::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BattleSkillActionBase_C_IsBstAny::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_GetTargetInfo_Info) == 0x000060, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_Array_Get_Item) == 0x000070, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_Greater_IntInt_ReturnValue) == 0x00010D, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00010E, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstAny, CallFunc_BooleanOR_ReturnValue) == 0x00010F, "Member 'BattleSkillActionBase_C_IsBstAny::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetAnimCamActorRelative
// 0x0220 (0x0220 - 0x0000)
struct BattleSkillActionBase_C_Com_SetAnimCamActorRelative final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3287[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  Asset;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideOtherActor;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllActor;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOtherTarget;                                   // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllTarget;                                     // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   OriginTransSocket;                                 // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3288[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTrans;                                       // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          HaveToCleanUp;                                     // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayOneScale;                                    // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResetCharaParticle;                                // 0x0062(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3289[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsParty;                                        // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_CleanUp;                                        // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328A[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Target;                                         // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideAllTarget;                                  // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideAllActor;                                   // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328B[0xE];                                     // 0x0082(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Offset;                                         // 0x0090(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_SocketName;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideOtherTareget;                               // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideOtherActor;                                 // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328C[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_BlendOut;                                       // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BlendIn;                                        // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328D[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  Lo_Camera;                                         // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x00E0(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328E[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328F[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex; // 0x0100(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex; // 0x0110(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3290[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0140(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3291[0x2];                                     // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3292[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3293[0x2];                                     // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3294[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddAnimationCameraTask_retPecID;       // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_SetAnimCamActorRelative");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative) == 0x000220, "Wrong size on BattleSkillActionBase_C_Com_SetAnimCamActorRelative");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Asset) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Asset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, BlendInTime) == 0x000010, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, BlendOutTime) == 0x000014, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, HideOtherActor) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, HideAllActor) == 0x000019, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, HideOtherTarget) == 0x00001A, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, HideAllTarget) == 0x00001B, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, OriginTransSocket) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::OriginTransSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, OffsetTrans) == 0x000030, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, HaveToCleanUp) == 0x000060, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::HaveToCleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, IsPlayOneScale) == 0x000061, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::IsPlayOneScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, ResetCharaParticle) == 0x000062, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::ResetCharaParticle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, ComIndex) == 0x000064, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_IsParty) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_IsParty' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_CleanUp) == 0x000069, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_CleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_Target) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_ActorIndex) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_TargetIndex) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_HideAllTarget) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_HideAllActor) == 0x000081, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_Offset) == 0x000090, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_SocketName) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_HideOtherTareget) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_HideOtherTareget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_HideOtherActor) == 0x0000C9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_BlendOut) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_BlendOut' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_BlendIn) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_BlendIn' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_Camera) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, Lo_WaitList) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_GetComandID_retValue) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_IsValidCommandIndex_retValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex) == 0x000100, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex) == 0x000110, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_Conv_NameToString_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000130, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_GetActorPartyIndex_index) == 0x000134, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_GetFirstTargetInfo_Info) == 0x000140, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_GetFirstTargetInfo_valid) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_BooleanOR_ReturnValue) == 0x0001D9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_SelectInt_ReturnValue) == 0x0001DC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_BooleanOR_ReturnValue_1) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_SelectInt_ReturnValue_1) == 0x0001E4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_IsReflected_IsReflected) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_BooleanAND_ReturnValue) == 0x0001E9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_GetTargetInfoLength_length) == 0x0001EC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_BIGetTaskFactory_retValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_Greater_IntInt_ReturnValue) == 0x000200, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000204, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_BI_AddAnimationCameraTask_retPecID) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_BI_AddAnimationCameraTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_Array_Add_ReturnValue_1) == 0x000210, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative, CallFunc_Array_Add_ReturnValue_2) == 0x000214, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetAnimCamTargetRelative
// 0x0220 (0x0220 - 0x0000)
struct BattleSkillActionBase_C_Com_SetAnimCamTargetRelative final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3295[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  Asset;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideOtherActor;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllActor;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOtherTarget;                                   // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllTarget;                                     // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   OriginTransSocket;                                 // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3296[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTrans;                                       // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          HaveToCleanUp;                                     // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResetCharaParticle;                                // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3297[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsParty;                                        // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_CleanUp;                                        // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3298[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_TempActor;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideAllTarget;                                  // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideAllActor;                                   // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3299[0xE];                                     // 0x0082(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Offset;                                         // 0x0090(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_SocketName;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideTarget;                                     // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideActor;                                      // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329A[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_BlendOut;                                       // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BlendIn;                                        // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329B[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  Lo_Camera;                                         // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x00E0(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329C[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329D[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex; // 0x0110(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex; // 0x0120(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329E[0x2];                                     // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329F[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length_1;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A0[0x2];                                     // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0150(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A1[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddAnimationCameraTask_retPecID;       // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_SetAnimCamTargetRelative");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative) == 0x000220, "Wrong size on BattleSkillActionBase_C_Com_SetAnimCamTargetRelative");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Asset) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Asset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, BlendInTime) == 0x000010, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, BlendOutTime) == 0x000014, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, HideOtherActor) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, HideAllActor) == 0x000019, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, HideOtherTarget) == 0x00001A, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, HideAllTarget) == 0x00001B, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, OriginTransSocket) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::OriginTransSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, OffsetTrans) == 0x000030, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, HaveToCleanUp) == 0x000060, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::HaveToCleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, ResetCharaParticle) == 0x000061, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::ResetCharaParticle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, ComIndex) == 0x000064, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_IsParty) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_IsParty' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_CleanUp) == 0x000069, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_CleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_TempActor) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_TempActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_TargetIndex) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_ActorIndex) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_HideAllTarget) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_HideAllActor) == 0x000081, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_Offset) == 0x000090, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_SocketName) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_HideTarget) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_HideTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_HideActor) == 0x0000C9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_HideActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_BlendOut) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_BlendOut' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_BlendIn) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_BlendIn' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_Camera) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, Lo_WaitList) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetComandID_retValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_IsValidCommandIndex_retValue) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_Conv_NameToString_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetSkillArea_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000109, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex) == 0x000110, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex) == 0x000120, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_BooleanOR_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_BooleanOR_ReturnValue_1) == 0x000131, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_SelectInt_ReturnValue) == 0x000134, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_SelectInt_ReturnValue_1) == 0x000138, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetActorPartyIndex_index) == 0x00013C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetTargetInfoLength_length) == 0x000140, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_Greater_IntInt_ReturnValue) == 0x000144, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetTargetInfoLength_length_1) == 0x000148, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetTargetInfoLength_length_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_BooleanOR_ReturnValue_2) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00014D, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetFirstTargetInfo_Info) == 0x000150, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetFirstTargetInfo_valid) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_BIGetTaskFactory_retValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000200, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_Array_Add_ReturnValue) == 0x000204, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_BI_AddAnimationCameraTask_retPecID) == 0x000208, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_BI_AddAnimationCameraTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_Array_Add_ReturnValue_1) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative, CallFunc_Array_Add_ReturnValue_2) == 0x000210, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetAnimCamOriginRelative
// 0x0200 (0x0200 - 0x0000)
struct BattleSkillActionBase_C_Com_SetAnimCamOriginRelative final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  Asset;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A3[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTrans;                                       // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          HideOtherActor;                                    // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllActor;                                      // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOtherTarget;                                   // 0x0052(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllTarget;                                     // 0x0053(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HaveToCleanUp;                                     // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayOneScale;                                    // 0x0055(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A4[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CleanUp;                                        // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A5[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideAllTarget;                                  // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideTarget;                                     // 0x0065(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideAllActor;                                   // 0x0066(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideActor;                                      // 0x0067(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0068(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A6[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex; // 0x0080(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex; // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A7[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A8[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x00B0(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A9[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32AA[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32AB[0x8];                                     // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32AC[0xC];                                     // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddAnimationCameraTask_retPecID;       // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_SetAnimCamOriginRelative");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative) == 0x000200, "Wrong size on BattleSkillActionBase_C_Com_SetAnimCamOriginRelative");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Asset) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Asset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, BlendInTime) == 0x000010, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, BlendOutTime) == 0x000014, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, OffsetTrans) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, HideOtherActor) == 0x000050, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, HideAllActor) == 0x000051, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, HideOtherTarget) == 0x000052, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, HideAllTarget) == 0x000053, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, HaveToCleanUp) == 0x000054, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::HaveToCleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, IsPlayOneScale) == 0x000055, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::IsPlayOneScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Lo_CleanUp) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Lo_CleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Lo_TargetIndex) == 0x000060, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Lo_HideAllTarget) == 0x000064, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Lo_HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Lo_HideTarget) == 0x000065, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Lo_HideTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Lo_HideAllActor) == 0x000066, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Lo_HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Lo_HideActor) == 0x000067, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Lo_HideActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, Lo_WaitList) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_GetComandID_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_IsValidCommandIndex_retValue) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex) == 0x000090, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A1, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_SelectInt_ReturnValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_GetTargetInfoLength_length) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_Not_PreBool_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_Greater_IntInt_ReturnValue) == 0x0000AD, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_GetFirstTargetInfo_Info) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_GetFirstTargetInfo_valid) == 0x000148, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_GetActorPartyIndex_index) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_SelectInt_ReturnValue_1) == 0x000150, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_BIGetMainWork_NewParam) == 0x000158, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_BIGetTaskFactory_retValue) == 0x000168, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_BI_GetOriginTransform_retValue) == 0x000180, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_ComposeTransforms_ReturnValue) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_Array_Add_ReturnValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_BI_AddAnimationCameraTask_retPecID) == 0x0001F4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_BI_AddAnimationCameraTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_Array_Add_ReturnValue_1) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative, CallFunc_Array_Add_ReturnValue_2) == 0x0001FC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.RetrieveHitEffect
// 0x0490 (0x0490 - 0x0000)
struct BattleSkillActionBase_C_RetrieveHitEffect final
{
public:
	E_BTL_DAMAGE_HIT_TYPE                         DamageType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32AD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EffectIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CriticalLevel;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAnimNotify;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaySkillEffect;                                 // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32AE[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     MainWork;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsReflection;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32AF[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     SkillEffect;                                       // 0x0038(0x0038)(Parm, OutParm)
	bool                                          IsHitStamp;                                        // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCritical;                                        // 0x0071(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAddCriticalSE;                                   // 0x0072(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsAddCriticalSE;                                // 0x0073(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B0[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     Lo_MainWork;                                       // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_HIT_STAMP_TYPE                        CallFunc_GetSkillHitStampType_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B1[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal; // 0x00A8(0x0038)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B2[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1; // 0x00E8(0x0038)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B3[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0128(0x0100)(ConstParm)
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2; // 0x0228(0x0038)()
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B4[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_3; // 0x0268(0x0038)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B5[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_4; // 0x02A8(0x0038)()
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_5; // 0x02E0(0x0038)()
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_6; // 0x0318(0x0038)()
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_7; // 0x0350(0x0038)()
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_8; // 0x0388(0x0038)()
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_9; // 0x03C0(0x0038)()
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_10; // 0x03F8(0x0038)()
	bool                                          Temp_bool_Variable;                                // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B6[0x6];                                     // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     K2Node_MakeStruct_SkillActionEffect;               // 0x0438(0x0038)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0473(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B7[0x3];                                     // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B8[0x4];                                     // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_HIT_STAMP_TYPE                        K2Node_Select_Default;                             // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_RetrieveHitEffect) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_RetrieveHitEffect");
static_assert(sizeof(BattleSkillActionBase_C_RetrieveHitEffect) == 0x000490, "Wrong size on BattleSkillActionBase_C_RetrieveHitEffect");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, DamageType) == 0x000000, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::DamageType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, EffectIndex) == 0x000004, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::EffectIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CriticalLevel) == 0x000008, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CriticalLevel' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, IsAnimNotify) == 0x00000C, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::IsAnimNotify' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, IsPlaySkillEffect) == 0x00000D, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::IsPlaySkillEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, MainWork) == 0x000010, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, PartySystem) == 0x000020, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, IsReflection) == 0x000030, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::IsReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, SkillEffect) == 0x000038, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::SkillEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, IsHitStamp) == 0x000070, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::IsHitStamp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, IsCritical) == 0x000071, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::IsCritical' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, IsAddCriticalSE) == 0x000072, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::IsAddCriticalSE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, Lo_IsAddCriticalSE) == 0x000073, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::Lo_IsAddCriticalSE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, Lo_PartySystem) == 0x000078, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, Lo_MainWork) == 0x000088, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::Lo_MainWork' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_MakeLiteralByte_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009A, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00009B, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, K2Node_SwitchEnum_CmpSuccess) == 0x00009D, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, K2Node_SwitchEnum_CmpSuccess_1) == 0x00009E, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, K2Node_SwitchEnum_CmpSuccess_2) == 0x00009F, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_GetSkillHitStampType_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_GetSkillHitStampType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal) == 0x0000A8, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1) == 0x0000E8, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_SelectInt_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_GetSkillBaseData_ReturnValue) == 0x000128, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2) == 0x000228, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_GetValidValue_ReturnValue) == 0x000260, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_3) == 0x000268, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002A0, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_4) == 0x0002A8, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_5) == 0x0002E0, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_6) == 0x000318, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_7) == 0x000350, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_8) == 0x000388, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_9) == 0x0003C0, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_10) == 0x0003F8, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, Temp_bool_Variable) == 0x000430, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000431, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, K2Node_MakeStruct_SkillActionEffect) == 0x000438, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::K2Node_MakeStruct_SkillActionEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000470, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BooleanAND_ReturnValue) == 0x000471, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BooleanOR_ReturnValue) == 0x000472, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BooleanOR_ReturnValue_1) == 0x000473, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_BooleanOR_ReturnValue_2) == 0x000474, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_GetActorPartyIndex_index) == 0x000478, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, CallFunc_FindUnit_Unit) == 0x000480, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, K2Node_Select_Default) == 0x000488, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveHitEffect, K2Node_SwitchEnum_CmpSuccess_3) == 0x000489, "Member 'BattleSkillActionBase_C_RetrieveHitEffect::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddRandomRoll
// 0x00F0 (0x00F0 - 0x0000)
struct BattleSkillActionBase_C_AddRandomRoll final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                         Min;                                               // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B9[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0040(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32BA[0xC];                                     // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AddRandomRoll) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_AddRandomRoll");
static_assert(sizeof(BattleSkillActionBase_C_AddRandomRoll) == 0x0000F0, "Wrong size on BattleSkillActionBase_C_AddRandomRoll");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, InTransform) == 0x000000, "Member 'BattleSkillActionBase_C_AddRandomRoll::InTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, Min) == 0x000030, "Member 'BattleSkillActionBase_C_AddRandomRoll::Min' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, Max) == 0x000034, "Member 'BattleSkillActionBase_C_AddRandomRoll::Max' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_AddRandomRoll::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_RandomFloatInRange_ReturnValue) == 0x000094, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_MakeRotator_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomRoll, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_AddRandomRoll::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectActorParty
// 0x0210 (0x0210 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectActorParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_32BB[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32BC[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SE_sync;                                        // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32BD[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_ModSocket;                                      // 0x006C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32BE[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Lo_ModAnim;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lo_ModMesh;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_SE;                                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Lo_Effect;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32BF[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32C0[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00E8(0x0030)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32C1[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C2[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32C3[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0168(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C4[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item;                           // 0x01B0(0x0038)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectActorParty) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectActorParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectActorParty) == 0x000210, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectActorParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, RelativeTransform) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, IsWorldRelative) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, LifeSec) == 0x000054, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, TranslucencyPriority) == 0x000058, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, RotYawRandMin) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, RotYawRandMax) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, ComIndex) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_SE_sync) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_SE_sync' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_ModSocket) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_ModSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_ModAnim) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_ModAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_ModMesh) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_ModMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_SE) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_SE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_Effect) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_Effect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_ActorIndex) == 0x000098, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, Lo_WaitList) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_AddRandomYaw_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, K2Node_MakeStruct_BtlTaskData) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_Conv_StringToName_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_IsValidCommandIndex_retValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_GetComandID_retValue) == 0x000124, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_GetActorPartyIndex_index) == 0x000128, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_BIGetPartySystem_retValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_GetPartyCenter_Pos) == 0x000144, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_GetPartyCenter_Normal) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_GetPartyCenter_forward) == 0x00015C, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, K2Node_MakeStruct_BtlTaskData_1) == 0x000168, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_BIGetTaskFactory_retValue) == 0x000198, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0001A8, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_BIGetTaskFactory_retValue_1) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0001FC, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_BI_AddPlayEffectTask_retValue) == 0x000204, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectActorParty, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BattleSkillActionBase_C_Com_PlayEffectActorParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetPartyCenter
// 0x00F8 (0x00F8 - 0x0000)
struct BattleSkillActionBase_C_GetPartyCenter final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Pos;                                               // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x002C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C6[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0058(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Lo_LastUp;                                         // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastForward;                                    // 0x0074(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastPos;                                        // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosSum;                                         // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Max;                                            // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C7[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C8[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x00C0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetTargetCenter_Pos;                      // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal;                   // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetPartyCenter) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetPartyCenter");
static_assert(sizeof(BattleSkillActionBase_C_GetPartyCenter) == 0x0000F8, "Wrong size on BattleSkillActionBase_C_GetPartyCenter");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_GetPartyCenter::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_GetPartyCenter::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, PartySystem) == 0x000010, "Member 'BattleSkillActionBase_C_GetPartyCenter::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Pos) == 0x000020, "Member 'BattleSkillActionBase_C_GetPartyCenter::Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Normal) == 0x00002C, "Member 'BattleSkillActionBase_C_GetPartyCenter::Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Forward) == 0x000038, "Member 'BattleSkillActionBase_C_GetPartyCenter::Forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_PartySystem) == 0x000048, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_PartyIndex) == 0x000058, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_LastUp) == 0x000068, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_LastUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_LastForward) == 0x000074, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_LastForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_LastPos) == 0x000080, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_LastPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_PosSum) == 0x00008C, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_PosSum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_PartyNum) == 0x000098, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_Max) == 0x00009C, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_Max' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, Lo_Start) == 0x0000A0, "Member 'BattleSkillActionBase_C_GetPartyCenter::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, CallFunc_BIGetPartySystem_retValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_GetPartyCenter::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, CallFunc_BI_GetSide_side) == 0x0000B8, "Member 'BattleSkillActionBase_C_GetPartyCenter::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, CallFunc_BI_GetSideIsTargetList_List) == 0x0000C0, "Member 'BattleSkillActionBase_C_GetPartyCenter::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, CallFunc_GetTargetCenter_Pos) == 0x0000D0, "Member 'BattleSkillActionBase_C_GetPartyCenter::CallFunc_GetTargetCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, CallFunc_GetTargetCenter_Normal) == 0x0000DC, "Member 'BattleSkillActionBase_C_GetPartyCenter::CallFunc_GetTargetCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, CallFunc_GetTargetCenter_forward) == 0x0000E8, "Member 'BattleSkillActionBase_C_GetPartyCenter::CallFunc_GetTargetCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyCenter, CallFunc_GetTargetCenter_DefenseArea) == 0x0000F4, "Member 'BattleSkillActionBase_C_GetPartyCenter::CallFunc_GetTargetCenter_DefenseArea' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectTargetParty
// 0x02B0 (0x02B0 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectTargetParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_32C9[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32CA[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SE_sync;                                        // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32CB[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_ModSocket;                                      // 0x006C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32CC[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Lo_ModAnim;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lo_ModMesh;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_SE;                                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Lo_Particle;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32CD[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32CE[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00E8(0x0030)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32CF[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0128(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D0[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D1[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D2[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item;                           // 0x0218(0x0038)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0250(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectTargetParty) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectTargetParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectTargetParty) == 0x0002B0, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectTargetParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, RelativeTransform) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, IsWorldRelative) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, LifeSec) == 0x000054, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, TranslucencyPriority) == 0x000058, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, RotYawRandMin) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, RotYawRandMax) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, ComIndex) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_SE_sync) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_SE_sync' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_ModSocket) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_ModSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_ModAnim) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_ModAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_ModMesh) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_ModMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_SE) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_SE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_Particle) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_Particle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_TargetIndex) == 0x000098, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, Lo_WaitList) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_AddRandomYaw_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, K2Node_MakeStruct_BtlTaskData) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_Conv_StringToName_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_GetComandID_retValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_IsValidCommandIndex_retValue) == 0x000124, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_GetFirstTargetInfo_Info) == 0x000128, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_GetFirstTargetInfo_valid) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_BIGetPartySystem_retValue) == 0x0001C8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_BIGetTaskFactory_retValue) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_IsValid_ReturnValue) == 0x0001EC, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_GetPartyCenter_Pos) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_GetPartyCenter_Normal) == 0x0001FC, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_GetPartyCenter_forward) == 0x000208, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_Array_Get_Item) == 0x000218, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, K2Node_MakeStruct_BtlTaskData_1) == 0x000250, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_BIGetTaskFactory_retValue_1) == 0x000280, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000290, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000298, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_BI_AddPlayEffectTask_retValue) == 0x00029C, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectTargetParty, CallFunc_Array_Add_ReturnValue) == 0x0002A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectTargetParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_CallSkillPerformance
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_CallSkillPerformance final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PerformanceStep;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainSec;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D3[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddCallSkillEventTask_RetPecID;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_CallSkillPerformance) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_CallSkillPerformance");
static_assert(sizeof(BattleSkillActionBase_C_Com_CallSkillPerformance) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_CallSkillPerformance");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, PerformanceStep) == 0x000004, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::PerformanceStep' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, RemainSec) == 0x000008, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::RemainSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, ComIndex) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, CallFunc_BIGetTaskFactory_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CallSkillPerformance, CallFunc_BI_AddCallSkillEventTask_RetPecID) == 0x000040, "Member 'BattleSkillActionBase_C_Com_CallSkillPerformance::CallFunc_BI_AddCallSkillEventTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetTargetPartyIndex
// 0x0108 (0x0108 - 0x0000)
struct BattleSkillActionBase_C_GetTargetPartyIndex final
{
public:
	TArray<int32>                                 Param_Index;                                       // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSkillActionTargetInfo>         Lo_TargetInfo;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	E_BTL_SIDE                                    Lo_TargetSide;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsAllRandom;                                    // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Lo_CorrectSide;                                    // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Lo_ActorSide;                                      // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Lo_SkillTarget;                                    // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D4[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Index;                                          // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D5[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D6[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0060(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_GetTargetPartyIndex) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetTargetPartyIndex");
static_assert(sizeof(BattleSkillActionBase_C_GetTargetPartyIndex) == 0x000108, "Wrong size on BattleSkillActionBase_C_GetTargetPartyIndex");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Param_Index) == 0x000000, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Lo_TargetInfo) == 0x000010, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Lo_TargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Lo_TargetSide) == 0x000020, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Lo_TargetSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Lo_IsAllRandom) == 0x000021, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Lo_IsAllRandom' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Lo_CorrectSide) == 0x000022, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Lo_CorrectSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Lo_ActorSide) == 0x000023, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Lo_ActorSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Lo_SkillTarget) == 0x000024, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Lo_SkillTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Lo_Index) == 0x000028, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_GetTargetInfo_Info) == 0x000040, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_GetTargetInfoLength_length) == 0x000058, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_Array_AddUnique_ReturnValue) == 0x0000FC, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetPartyIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BattleSkillActionBase_C_GetTargetPartyIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetTargetCenter
// 0x02C8 (0x02C8 - 0x0000)
struct BattleSkillActionBase_C_GetTargetCenter final
{
public:
	TArray<int32>                                 PartyIndex;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   SocketName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForMagatsuhiSkill;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos;                                               // 0x002C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0044(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefenseArea;                                       // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_DefenceArea;                                    // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Target;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_FlagCheckRes;                                   // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D8[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_SocketName;                                     // 0x0064(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsIgnoreFlagCheck;                              // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_PARTY_STAT2                             Lo_CheckFlag;                                      // 0x006D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D9[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_Checked;                                        // 0x0080(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Lo_LastUp;                                         // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastForward;                                    // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastPos;                                        // 0x00A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosSum;                                         // 0x00B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Max;                                            // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DA[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DB[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x00F8(0x0100)(ConstParm)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsInField_retValue;                    // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckFlag2_retValue;                   // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DC[0x2];                                     // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DD[0x1];                                     // 0x0227(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DE[0x2];                                     // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root;              // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation;    // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate;            // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid;             // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DF[0x2];                                     // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue;                // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E0[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetTargetCenter) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetTargetCenter");
static_assert(sizeof(BattleSkillActionBase_C_GetTargetCenter) == 0x0002C8, "Wrong size on BattleSkillActionBase_C_GetTargetCenter");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_GetTargetCenter::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, SocketName) == 0x000010, "Member 'BattleSkillActionBase_C_GetTargetCenter::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, PartySystem) == 0x000018, "Member 'BattleSkillActionBase_C_GetTargetCenter::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, ForMagatsuhiSkill) == 0x000028, "Member 'BattleSkillActionBase_C_GetTargetCenter::ForMagatsuhiSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Pos) == 0x00002C, "Member 'BattleSkillActionBase_C_GetTargetCenter::Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Normal) == 0x000038, "Member 'BattleSkillActionBase_C_GetTargetCenter::Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Forward) == 0x000044, "Member 'BattleSkillActionBase_C_GetTargetCenter::Forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, DefenseArea) == 0x000050, "Member 'BattleSkillActionBase_C_GetTargetCenter::DefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_DefenceArea) == 0x000054, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_DefenceArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_Target) == 0x000058, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_FlagCheckRes) == 0x000060, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_FlagCheckRes' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_SocketName) == 0x000064, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_IsIgnoreFlagCheck) == 0x00006C, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_IsIgnoreFlagCheck' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_CheckFlag) == 0x00006D, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_CheckFlag' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_PartySystem) == 0x000070, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_Checked) == 0x000080, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_Checked' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_LastUp) == 0x000090, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_LastUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_LastForward) == 0x00009C, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_LastForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_LastPos) == 0x0000A8, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_LastPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_PosSum) == 0x0000B4, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_PosSum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_PartyNum) == 0x0000C0, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_Max) == 0x0000C4, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_Max' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Lo_Start) == 0x0000C8, "Member 'BattleSkillActionBase_C_GetTargetCenter::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Temp_bool_Variable) == 0x0000CC, "Member 'BattleSkillActionBase_C_GetTargetCenter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BattleSkillActionBase_C_GetTargetCenter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Temp_int_Array_Index_Variable) == 0x0000E0, "Member 'BattleSkillActionBase_C_GetTargetCenter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Array_Get_Item) == 0x0000E4, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_FindUnit_Unit) == 0x0000E8, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Temp_int_Variable) == 0x0000F0, "Member 'BattleSkillActionBase_C_GetTargetCenter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_GetSkillID_ID) == 0x0000F4, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_GetSkillBaseData_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x0001F8, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001F9, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BooleanOR_ReturnValue) == 0x0001FA, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BooleanOR_ReturnValue_1) == 0x0001FB, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BI_IsInField_retValue) == 0x0001FC, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BI_IsInField_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BI_IsExist_retValue) == 0x0001FD, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BI_CheckFlag2_retValue) == 0x0001FE, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BI_CheckFlag2_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BooleanAND_ReturnValue) == 0x0001FF, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BooleanOR_ReturnValue_2) == 0x000200, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_BooleanOR_ReturnValue_3) == 0x000201, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_GetUpVector_ReturnValue) == 0x000204, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_GetActorForwardVector_ReturnValue) == 0x000210, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_GetMeshRelativeScale_Scale) == 0x00021C, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000220, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Temp_bool_Variable_1) == 0x000224, "Member 'BattleSkillActionBase_C_GetTargetCenter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000225, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, Temp_bool_Variable_2) == 0x000226, "Member 'BattleSkillActionBase_C_GetTargetCenter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Array_Add_ReturnValue) == 0x000228, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, K2Node_Select_Default) == 0x00022C, "Member 'BattleSkillActionBase_C_GetTargetCenter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Array_Contains_ReturnValue) == 0x00022D, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_CalcUnitSocketLocation_Root) == 0x000230, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_CalcUnitSocketLocation_Root' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_CalcUnitSocketLocation_SocketLocation) == 0x00023C, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_CalcUnitSocketLocation_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_CalcUnitSocketLocation_Rotate) == 0x000248, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_CalcUnitSocketLocation_Rotate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_CalcUnitSocketLocation_Valid) == 0x000254, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_CalcUnitSocketLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Greater_IntInt_ReturnValue) == 0x000255, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Divide_VectorInt_ReturnValue) == 0x000258, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000264, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_MakeRotFromXY_ReturnValue) == 0x000270, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_MakeRotFromXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00027C, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_GetUpVector_ReturnValue_1) == 0x000280, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00028C, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Dot_VectorVector_ReturnValue) == 0x000298, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00029C, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_Add_VectorVector_ReturnValue) == 0x0002A0, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_SelectVector_ReturnValue) == 0x0002AC, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetCenter, CallFunc_SelectVector_ReturnValue_1) == 0x0002B8, "Member 'BattleSkillActionBase_C_GetTargetCenter::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayerEscape
// 0x0190 (0x0190 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayerEscape final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMoveFinish;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E1[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Player;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorLoc;                                       // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_CheckDot;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MostFarDist;                                    // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_EnemyAve;                                       // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Lo_EnemyDefAreaRange;                              // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Lo_EnemyLocs;                                      // 0x0050(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Value;                                          // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Deg;                                            // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionExtend                     Lo_Extend;                                         // 0x0068(0x00A8)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0110(0x0010)(Edit, BlueprintVisible)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E3[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitMoveTask_retPecID;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayerEscape) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_PlayerEscape");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayerEscape) == 0x000190, "Wrong size on BattleSkillActionBase_C_Com_PlayerEscape");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Length) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, MoveTime) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::MoveTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, WaitMoveFinish) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::WaitMoveFinish' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_Player) == 0x000018, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_Player' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_ActorLoc) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_ActorLoc' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_CheckDot) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_CheckDot' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_MostFarDist) == 0x000030, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_MostFarDist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_EnemyAve) == 0x000034, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_EnemyAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_EnemyDefAreaRange) == 0x000040, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_EnemyDefAreaRange' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_EnemyLocs) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_EnemyLocs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_Value) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_Deg) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_Deg' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_Extend) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_Extend' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, Lo_WaitList) == 0x000110, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_GetComandID_retValue) == 0x000124, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_IsValidCommandIndex_retValue) == 0x000128, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_FindUnit_Unit) == 0x000130, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000138, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00013C, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_GetActorForwardVector_ReturnValue) == 0x000148, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_Add_VectorVector_ReturnValue) == 0x000154, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000160, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00016C, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_BIGetTaskFactory_retValue) == 0x000178, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_BI_AddUnitMoveTask_retPecID) == 0x000188, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_BI_AddUnitMoveTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayerEscape, CallFunc_Array_Add_ReturnValue) == 0x00018C, "Member 'BattleSkillActionBase_C_Com_PlayerEscape::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_MemberAction
// 0x00A0 (0x00A0 - 0x0000)
struct BattleSkillActionBase_C_Com_MemberAction final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_ACTION_TYPE                           Action;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Option;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E4[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E6[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E8[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPlayerLoopMax_retValue;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E9[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitActionTask_retValue;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_MemberAction) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_MemberAction");
static_assert(sizeof(BattleSkillActionBase_C_Com_MemberAction) == 0x0000A0, "Wrong size on BattleSkillActionBase_C_Com_MemberAction");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_MemberAction::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, Action) == 0x000004, "Member 'BattleSkillActionBase_C_Com_MemberAction::Action' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, Option) == 0x000005, "Member 'BattleSkillActionBase_C_Com_MemberAction::Option' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_Com_MemberAction::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_MemberAction::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_GetHeroIndex_Index) == 0x000028, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BIGetPartySystem_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BIGetTaskFactory_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BIGetPartySystem_retValue_1) == 0x000058, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BI_const_GetPlayerLoopMax_retValue) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BI_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_Array_Add_ReturnValue_1) == 0x000070, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, Temp_int_Variable) == 0x000074, "Member 'BattleSkillActionBase_C_Com_MemberAction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000078, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BI_IsExist_retValue) == 0x00007D, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BooleanAND_ReturnValue) == 0x00007E, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007F, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BIGetTaskFactory_retValue_1) == 0x000088, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberAction, CallFunc_BI_AddUnitActionTask_retValue) == 0x000098, "Member 'BattleSkillActionBase_C_Com_MemberAction::CallFunc_BI_AddUnitActionTask_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_MessageShowCommonMessage
// 0x0050 (0x0050 - 0x0000)
struct BattleSkillActionBase_C_Com_MessageShowCommonMessage final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CommonMsgID;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EB[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddInfoMessTask_retValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_MessageShowCommonMessage) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_MessageShowCommonMessage");
static_assert(sizeof(BattleSkillActionBase_C_Com_MessageShowCommonMessage) == 0x000050, "Wrong size on BattleSkillActionBase_C_Com_MessageShowCommonMessage");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CommonMsgID) == 0x000004, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CommonMsgID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, ComIndex) == 0x000008, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CallFunc_GetPlayRate_PlayRate) == 0x000028, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CallFunc_BIGetTaskFactory_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000040, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CallFunc_BI_AddInfoMessTask_retValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CallFunc_BI_AddInfoMessTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MessageShowCommonMessage, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_MessageShowCommonMessage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_IgnoreCounterStop
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_Com_IgnoreCounterStop final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattlePostProcessCtrl_C> CallFunc_BIGetPostProcess_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CounterActorStopEnd2_RetVal;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_IgnoreCounterStop) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_IgnoreCounterStop");
static_assert(sizeof(BattleSkillActionBase_C_Com_IgnoreCounterStop) == 0x000020, "Wrong size on BattleSkillActionBase_C_Com_IgnoreCounterStop");
static_assert(offsetof(BattleSkillActionBase_C_Com_IgnoreCounterStop, Actor) == 0x000000, "Member 'BattleSkillActionBase_C_Com_IgnoreCounterStop::Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_IgnoreCounterStop, CallFunc_BIGetPostProcess_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_Com_IgnoreCounterStop::CallFunc_BIGetPostProcess_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_IgnoreCounterStop, CallFunc_BI_CounterActorStopEnd2_RetVal) == 0x000018, "Member 'BattleSkillActionBase_C_Com_IgnoreCounterStop::CallFunc_BI_CounterActorStopEnd2_RetVal' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetPostProcess
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetPostProcess final
{
public:
	TScriptInterface<class IBPI_BattlePostProcessCtrl_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattlePostProcessCtrl_C> CallFunc_BI_GetPostProcessCtrl_retValue;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetPostProcess) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetPostProcess");
static_assert(sizeof(BattleSkillActionBase_C_BIGetPostProcess) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetPostProcess");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPostProcess, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetPostProcess::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPostProcess, CallFunc_BIGetMainWork_NewParam) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetPostProcess::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPostProcess, CallFunc_BI_GetPostProcessCtrl_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_BIGetPostProcess::CallFunc_BI_GetPostProcessCtrl_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ActorMoveToTarget
// 0x0450 (0x0450 - 0x0000)
struct BattleSkillActionBase_C_Com_ActorMoveToTarget final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromTarget;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMoveFinish;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckTargetDefenseArea;                            // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckActorAttackReach;                             // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ConsiderActorScale;                                // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreCharaCollision;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32ED[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_TargetIndex;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	uint8                                         Pad_32EE[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Trans;                                          // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         Lo_LookSpeed;                                      // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_HugeBattleDistanceScale;                        // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsHugeBattle;                                   // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_CheckAttackReach;                               // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsWaitFinish;                                   // 0x006A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EF[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_CenterDefenseArea;                              // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CenterNormal;                                   // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CenterPos;                                      // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MoveTIme;                                       // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Distance;                                       // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CheckDefenseArea;                               // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F0[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Actor;                                          // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_CheckDot;                                       // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MostFarDist;                                    // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_EnemyAve;                                       // 0x00A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F1[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Lo_EnemyDefAreaRange;                              // 0x00B8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Lo_EnemyLocs;                                      // 0x00C8(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Value;                                          // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Deg;                                            // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionExtend                     Lo_Extend;                                         // 0x00E0(0x00A8)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0188(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F2[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill;     // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill;     // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F3[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x01C0(0x0010)(ReferenceParm)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F4[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length;     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F5[0x6];                                     // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x01E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F6[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_2;               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitMoveTask_retPecID;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsHugeBattle_retValue;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F7[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_IsHugeBattle_DevID;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcActorLocation_ActorLocation;          // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F8[0x2];                                     // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F9[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32FA[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FB[0x3];                                     // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_2;       // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetOnlyActor_ReturnValue;            // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FC[0x1];                                     // 0x0317(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_3;       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue_1;     // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FD[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x03A0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FE[0x3];                                     // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_4;       // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetTargetCenter_Pos;                      // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal;                   // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward;                  // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea;              // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitMoveTask_retPecID_1;            // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Pos_1;                    // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal_1;                 // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward_1;                // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea_1;            // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32FF[0x4];                                     // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaAction_C>    CallFunc_SetAttackAimLocation_self_CastInput;      // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackAimLocation_NoUse;               // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3300[0x3];                                     // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ActorMoveToTarget) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_ActorMoveToTarget");
static_assert(sizeof(BattleSkillActionBase_C_Com_ActorMoveToTarget) == 0x000450, "Wrong size on BattleSkillActionBase_C_Com_ActorMoveToTarget");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, DistanceFromTarget) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::DistanceFromTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, MoveTime) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::MoveTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, WaitMoveFinish) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::WaitMoveFinish' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CheckTargetDefenseArea) == 0x00000D, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CheckTargetDefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CheckActorAttackReach) == 0x00000E, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CheckActorAttackReach' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, ConsiderActorScale) == 0x00000F, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::ConsiderActorScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, IgnoreCharaCollision) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::IgnoreCharaCollision' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, ComIndex) == 0x000014, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_TargetIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_Trans) == 0x000030, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_Trans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_LookSpeed) == 0x000060, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_LookSpeed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_HugeBattleDistanceScale) == 0x000064, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_HugeBattleDistanceScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_IsHugeBattle) == 0x000068, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_IsHugeBattle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_CheckAttackReach) == 0x000069, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_CheckAttackReach' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_IsWaitFinish) == 0x00006A, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_IsWaitFinish' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_CenterDefenseArea) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_CenterDefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_CenterNormal) == 0x000070, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_CenterNormal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_CenterPos) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_CenterPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_MoveTIme) == 0x000088, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_MoveTIme' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_Distance) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_CheckDefenseArea) == 0x000090, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_CheckDefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_Actor) == 0x000098, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_CheckDot) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_CheckDot' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_MostFarDist) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_MostFarDist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_EnemyAve) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_EnemyAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_EnemyDefAreaRange) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_EnemyDefAreaRange' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_EnemyLocs) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_EnemyLocs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_Value) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_Deg) == 0x0000DC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_Deg' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_Extend) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_Extend' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Lo_WaitList) == 0x000188, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetComandID_retValue) == 0x000198, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_IsValidCommandIndex_retValue) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill) == 0x0001A4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill) == 0x0001A5, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Not_PreBool_ReturnValue) == 0x0001A6, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BooleanAND_ReturnValue) == 0x0001A7, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BIGetPartySystem_retValue) == 0x0001A8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BI_GetSide_side) == 0x0001B8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BI_GetSideIsTargetList_List) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetSkillArea_ReturnValue) == 0x0001D0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetMagatsuhiOtherActorsLength_length) == 0x0001D4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetMagatsuhiOtherActorsLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x0001D9, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetMagatsuhiOtherActors_actors) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Array_Get_Item) == 0x0001F4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Array_Length_ReturnValue) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0001FC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetActorPartyIndex_index) == 0x000200, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_FindUnit_Unit) == 0x000208, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetActorPartyIndex_index_1) == 0x000210, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetActorScale3D_ReturnValue) == 0x000214, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000220, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetActorPartyIndex_index_2) == 0x000224, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetActorPartyIndex_index_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_FindUnit_Unit_1) == 0x000228, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SelectFloat_ReturnValue) == 0x000230, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_MakeVector_ReturnValue) == 0x000234, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BIGetTaskFactory_retValue) == 0x000240, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BI_AddUnitMoveTask_retPecID) == 0x000250, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BI_AddUnitMoveTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SelectFloat_ReturnValue_1) == 0x000254, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BIGetMainWork_NewParam) == 0x000258, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BI_IsHugeBattle_retValue) == 0x000268, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BI_IsHugeBattle_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BI_IsHugeBattle_DevID) == 0x00026C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BI_IsHugeBattle_DevID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_CalcActorLocation_ActorLocation) == 0x000270, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_CalcActorLocation_ActorLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00027C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x00027D, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000280, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Vector_Up_ReturnValue) == 0x00028C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000298, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_MakeRotFromZX_ReturnValue) == 0x0002A4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_TraceGround_Hit) == 0x0002B0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_TraceGround_Location) == 0x0002B4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_TraceGround_Normal) == 0x0002C0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_TraceGround_Surface) == 0x0002CC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002D0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002DC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_MakeTransform_ReturnValue) == 0x0002E0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetBeforCommandIndex_RetComIndex_2) == 0x000310, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetBeforCommandIndex_RetComIndex_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_IsReflected_IsReflected) == 0x000314, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BooleanAND_ReturnValue_2) == 0x000315, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_IsTargetOnlyActor_ReturnValue) == 0x000316, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_IsTargetOnlyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000318, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_VSize_ReturnValue) == 0x000324, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetBeforCommandIndex_RetComIndex_3) == 0x000328, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetBeforCommandIndex_RetComIndex_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00032C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Normal_ReturnValue) == 0x000338, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SelectFloat_ReturnValue_2) == 0x000344, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetMeshRelativeScale_Scale) == 0x000348, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SelectFloat_ReturnValue_3) == 0x00034C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000350, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000354, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SelectFloat_ReturnValue_4) == 0x000358, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetScaledCapsuleRadius_ReturnValue_1) == 0x00035C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetScaledCapsuleRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Add_FloatFloat_ReturnValue) == 0x000360, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000364, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000370, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000374, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000380, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00038C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000398, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SelectFloat_ReturnValue_5) == 0x00039C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetPartyIndex_index) == 0x0003A0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, Temp_int_Loop_Counter_Variable) == 0x0003B0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0003B4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Add_IntInt_ReturnValue) == 0x0003B8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetBeforCommandIndex_RetComIndex_4) == 0x0003BC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetBeforCommandIndex_RetComIndex_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BIGetPartySystem_retValue_1) == 0x0003C0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BIGetTaskFactory_retValue_1) == 0x0003D0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_Pos) == 0x0003E0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_Normal) == 0x0003EC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_forward) == 0x0003F8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_DefenseArea) == 0x000404, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_DefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_BI_AddUnitMoveTask_retPecID_1) == 0x000408, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_BI_AddUnitMoveTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_Pos_1) == 0x00040C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_Pos_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_Normal_1) == 0x000418, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_Normal_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_forward_1) == 0x000424, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_forward_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_GetTargetCenter_DefenseArea_1) == 0x000430, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_GetTargetCenter_DefenseArea_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SetAttackAimLocation_self_CastInput) == 0x000438, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SetAttackAimLocation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_SetAttackAimLocation_NoUse) == 0x000448, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_SetAttackAimLocation_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTarget, CallFunc_Array_Add_ReturnValue) == 0x00044C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetShakeScale
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_GetShakeScale final
{
public:
	int32                                         TargetPartyIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3301[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3302[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetShakeScale) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetShakeScale");
static_assert(sizeof(BattleSkillActionBase_C_GetShakeScale) == 0x000030, "Wrong size on BattleSkillActionBase_C_GetShakeScale");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, TargetPartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_GetShakeScale::TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, RetValue) == 0x000004, "Member 'BattleSkillActionBase_C_GetShakeScale::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, Temp_byte_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_GetShakeScale::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, Temp_float_Variable) == 0x00000C, "Member 'BattleSkillActionBase_C_GetShakeScale::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, Temp_float_Variable_1) == 0x000010, "Member 'BattleSkillActionBase_C_GetShakeScale::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, Temp_float_Variable_2) == 0x000014, "Member 'BattleSkillActionBase_C_GetShakeScale::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, CallFunc_BIGetPartySystem_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_GetShakeScale::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, CallFunc_BI_GetSide_side) == 0x000028, "Member 'BattleSkillActionBase_C_GetShakeScale::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetShakeScale, K2Node_Select_Default) == 0x00002C, "Member 'BattleSkillActionBase_C_GetShakeScale::K2Node_Select_Default' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AnimNotify_AvoidTiming
// 0x0198 (0x0198 - 0x0000)
struct BattleSkillActionBase_C_AnimNotify_AvoidTiming final
{
public:
	int32                                         WaitComIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsHitStamp;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3303[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     Lo_SkillEffect;                                    // 0x0010(0x0038)(Edit, BlueprintVisible)
	class FString                                 Lo_TempName;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0058(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3304[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3305[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3306[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00C8(0x0098)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AVOID_DIRECTION                             CallFunc_CalcAvoidDirection_RetVal;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3307[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_UI_IConTask_retList;                      // 0x0168(0x0010)(ReferenceParm)
	int32                                         CallFunc_BI_AddUnitBackStepTask_retValue;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item_2;                         // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3308[0x1];                                     // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AnimNotify_AvoidTiming) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AnimNotify_AvoidTiming");
static_assert(sizeof(BattleSkillActionBase_C_AnimNotify_AvoidTiming) == 0x000198, "Wrong size on BattleSkillActionBase_C_AnimNotify_AvoidTiming");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, WaitComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::WaitComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Lo_IsHitStamp) == 0x000008, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Lo_IsHitStamp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Lo_SkillEffect) == 0x000010, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Lo_SkillEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Lo_TempName) == 0x000048, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Lo_TempName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Lo_WaitTaskList) == 0x000058, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_GetComandID_retValue) == 0x000074, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Temp_int_Array_Index_Variable_2) == 0x000088, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_BIGetTaskFactory_retValue) == 0x000090, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000A0, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, Temp_int_Loop_Counter_Variable_2) == 0x0000B0, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B4, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000B8, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_CalcAvoidDirection_RetVal) == 0x000161, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_CalcAvoidDirection_RetVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_UI_IConTask_retList) == 0x000168, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_UI_IConTask_retList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_BI_AddUnitBackStepTask_retValue) == 0x000178, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_BI_AddUnitBackStepTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Get_Item_1) == 0x00017C, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Add_ReturnValue_1) == 0x000184, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Less_IntInt_ReturnValue_1) == 0x000188, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Get_Item_2) == 0x000189, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00018A, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Array_Length_ReturnValue_2) == 0x00018C, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotify_AvoidTiming, CallFunc_Less_IntInt_ReturnValue_2) == 0x000190, "Member 'BattleSkillActionBase_C_AnimNotify_AvoidTiming::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CallApplyHit_OnPlayEffectFunc
// 0x0050 (0x0050 - 0x0000)
struct BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc final
{
public:
	bool                                          CallFunc_IsAnyHit_retValue;                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3309[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc");
static_assert(sizeof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc) == 0x000050, "Wrong size on BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc, CallFunc_IsAnyHit_retValue) == 0x000000, "Member 'BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc::CallFunc_IsAnyHit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000040, "Member 'BattleSkillActionBase_C_CallApplyHit_OnPlayEffectFunc::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_FadeOut
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_FadeOut final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWhite;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationSec;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330C[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDisplayFadeTask_RetPecID;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_FadeOut) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_FadeOut");
static_assert(sizeof(BattleSkillActionBase_C_Com_FadeOut) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_FadeOut");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_FadeOut::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, IsWhite) == 0x000004, "Member 'BattleSkillActionBase_C_Com_FadeOut::IsWhite' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, DurationSec) == 0x000008, "Member 'BattleSkillActionBase_C_Com_FadeOut::DurationSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, ComIndex) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_FadeOut::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_FadeOut::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_FadeOut::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_FadeOut::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, CallFunc_IsValidCommandIndex_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_FadeOut::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_FadeOut::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, CallFunc_BIGetTaskFactory_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_FadeOut::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, CallFunc_BI_AddDisplayFadeTask_RetPecID) == 0x000040, "Member 'BattleSkillActionBase_C_Com_FadeOut::CallFunc_BI_AddDisplayFadeTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeOut, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_FadeOut::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_FadeIn
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_FadeIn final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWhite;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationSec;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDisplayFadeTask_RetPecID;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_FadeIn) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_FadeIn");
static_assert(sizeof(BattleSkillActionBase_C_Com_FadeIn) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_FadeIn");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_FadeIn::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, IsWhite) == 0x000004, "Member 'BattleSkillActionBase_C_Com_FadeIn::IsWhite' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, DurationSec) == 0x000008, "Member 'BattleSkillActionBase_C_Com_FadeIn::DurationSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, ComIndex) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_FadeIn::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_FadeIn::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_FadeIn::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_FadeIn::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_FadeIn::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, CallFunc_BIGetTaskFactory_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_FadeIn::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, CallFunc_BI_AddDisplayFadeTask_RetPecID) == 0x000040, "Member 'BattleSkillActionBase_C_Com_FadeIn::CallFunc_BI_AddDisplayFadeTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_FadeIn, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_FadeIn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsWaitComDone
// 0x0058 (0x0058 - 0x0000)
struct BattleSkillActionBase_C_IsWaitComDone final
{
public:
	TArray<int32>                                 WaitComIDs;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsDone;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3310[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> Lo_TaskFac;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3311[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExistTaskForPecID_retValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3312[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsWaitComDone) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsWaitComDone");
static_assert(sizeof(BattleSkillActionBase_C_IsWaitComDone) == 0x000058, "Wrong size on BattleSkillActionBase_C_IsWaitComDone");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, WaitComIDs) == 0x000000, "Member 'BattleSkillActionBase_C_IsWaitComDone::WaitComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, IsDone) == 0x000010, "Member 'BattleSkillActionBase_C_IsWaitComDone::IsDone' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, Lo_TaskFac) == 0x000018, "Member 'BattleSkillActionBase_C_IsWaitComDone::Lo_TaskFac' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_IsWaitComDone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BattleSkillActionBase_C_IsWaitComDone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BattleSkillActionBase_C_IsWaitComDone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattleSkillActionBase_C_IsWaitComDone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_IsWaitComDone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_IsWaitComDone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, CallFunc_BI_IsExistTaskForPecID_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_IsWaitComDone::CallFunc_BI_IsExistTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWaitComDone, CallFunc_BIGetTaskFactory_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_IsWaitComDone::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddDecalActor
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_Com_AddDecalActor final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3313[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideLifeSec;                                   // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachLocation                               LocationType;                                      // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3314[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0048(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsolutelyNoRotation;                              // 0x005C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x005D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3315[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3316[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0068(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3317[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3318[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3319[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331A[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDecalTask2_RetPecID;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddDecalActor) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_AddDecalActor");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddDecalActor) == 0x000110, "Wrong size on BattleSkillActionBase_C_Com_AddDecalActor");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, DecalMaterial) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, MaterialAnimSetting) == 0x000010, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, DecalSize) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, OffsetLocation) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, AttachPointName) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, OverrideLifeSec) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::OverrideLifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, LocationType) == 0x000044, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::LocationType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, Rotation) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, RotationRandMin) == 0x000054, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, RotationRandMax) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, AbsolutelyNoRotation) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CastOnlyStaticMesh) == 0x00005D, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, ComIndex) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, Lo_WaitTaskList) == 0x000068, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_GetActorPartyIndex_index) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_GetComandID_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_IsValidCommandIndex_retValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_MakeRotator_ReturnValue) == 0x000094, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_IsReflected_IsReflected) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_BooleanAND_ReturnValue) == 0x0000A5, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_BIGetTaskFactory_retValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActor, CallFunc_BI_AddDecalTask2_RetPecID) == 0x000108, "Member 'BattleSkillActionBase_C_Com_AddDecalActor::CallFunc_BI_AddDecalTask2_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddDecalTarget
// 0x0220 (0x0220 - 0x0000)
struct BattleSkillActionBase_C_Com_AddDecalTarget final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideLifeSec;                                   // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachLocation                               LocationType;                                      // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331C[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0048(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideInReflection;                                  // 0x005C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInAbsorbAndBlock;                              // 0x005D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AbsolutelyNoRotation;                              // 0x005E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x005F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RetPecID;                                          // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CastOnlyStaticMesh;                             // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInAbsorbAndBlock;                           // 0x0065(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInReflection;                               // 0x0066(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331D[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331E[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndexPool;                                // 0x0070(0x0010)(Edit, BlueprintVisible)
	float                                         Ssfgsdfg;                                          // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LastPecID;                                      // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0088(0x0010)(Edit, BlueprintVisible)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331F[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x00C1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x00C2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3320[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3321[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3322[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0128(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3323[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcReflexTarget_IsExist;                 // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3324[0x2];                                     // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcReflexTarget_ReflexTargetIndex;       // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3325[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3326[0x1];                                     // 0x01E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3327[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3328[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDecalTask2_RetPecID;                // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddDecalTarget) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_AddDecalTarget");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddDecalTarget) == 0x000220, "Wrong size on BattleSkillActionBase_C_Com_AddDecalTarget");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, DecalMaterial) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, MaterialAnimSetting) == 0x000010, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, DecalSize) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, OffsetLocation) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, AttachPointName) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, OverrideLifeSec) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::OverrideLifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, LocationType) == 0x000044, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::LocationType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Rotation) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, RotationRandMin) == 0x000054, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, RotationRandMax) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, HideInReflection) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, HideInAbsorbAndBlock) == 0x00005D, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, AbsolutelyNoRotation) == 0x00005E, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CastOnlyStaticMesh) == 0x00005F, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, RetPecID) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Lo_CastOnlyStaticMesh) == 0x000064, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Lo_CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Lo_HideInAbsorbAndBlock) == 0x000065, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Lo_HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Lo_HideInReflection) == 0x000066, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Lo_HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Lo_TargetIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Lo_TargetIndexPool) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Lo_TargetIndexPool' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Ssfgsdfg) == 0x000080, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Ssfgsdfg' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Lo_LastPecID) == 0x000084, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Lo_LastPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Lo_WaitTaskList) == 0x000088, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_IsValidCommandIndex_retValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_MakeRotator_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_GetComandID_retValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Temp_byte_Variable) == 0x0000C1, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Temp_byte_Variable_1) == 0x0000C2, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Contains_ReturnValue) == 0x0000C3, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Not_PreBool_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BIGetTaskFactory_retValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Add_ReturnValue_1) == 0x000124, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Get_Item) == 0x000128, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Map_Find_Value) == 0x0001C8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Map_Find_ReturnValue) == 0x0001CC, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_CalcReflexTarget_IsExist) == 0x0001CD, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_CalcReflexTarget_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_CalcReflexTarget_ReflexTargetIndex) == 0x0001D0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_CalcReflexTarget_ReflexTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Add_ReturnValue_2) == 0x0001D4, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BooleanAND_ReturnValue) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Contains_ReturnValue_1) == 0x0001D9, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x0001DA, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BooleanAND_ReturnValue_2) == 0x0001DB, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001DC, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_SelectInt_ReturnValue) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Contains_ReturnValue_2) == 0x0001E4, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BooleanOR_ReturnValue) == 0x0001E5, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BooleanAND_ReturnValue_3) == 0x0001E6, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Array_Add_ReturnValue_3) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001EC, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BIGetTaskFactory_retValue_1) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BooleanAND_ReturnValue_4) == 0x000200, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput) == 0x000208, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BI_AddDecalTask2_RetPecID) == 0x000218, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BI_AddDecalTask2_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTarget, CallFunc_BooleanAND_ReturnValue_5) == 0x00021C, "Member 'BattleSkillActionBase_C_Com_AddDecalTarget::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddDecalActorParty
// 0x0140 (0x0140 - 0x0000)
struct BattleSkillActionBase_C_Com_AddDecalActorParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3329[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsolutelyNoRotation;                              // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x0055(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332A[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332C[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332D[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332E[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332F[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDecalTask2_RetPecID;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddDecalActorParty) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_AddDecalActorParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddDecalActorParty) == 0x000140, "Wrong size on BattleSkillActionBase_C_Com_AddDecalActorParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, DecalMaterial) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, MaterialAnimSetting) == 0x000010, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, DecalSize) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, OffsetLocation) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, AttachPointName) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, Rotation) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, RotationRandMin) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, RotationRandMax) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, AbsolutelyNoRotation) == 0x000054, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CastOnlyStaticMesh) == 0x000055, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, Lo_WaitTaskList) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_GetActorPartyIndex_index) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_RandomFloatInRange_ReturnValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_GetComandID_retValue) == 0x000084, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_IsValidCommandIndex_retValue) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_BIGetPartySystem_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_GetActorPartyIndex_index_1) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_GetPartyCenter_Pos) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_GetPartyCenter_Normal) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_GetPartyCenter_forward) == 0x000100, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_BIGetTaskFactory_retValue) == 0x000110, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput) == 0x000128, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalActorParty, CallFunc_BI_AddDecalTask2_RetPecID) == 0x000138, "Member 'BattleSkillActionBase_C_Com_AddDecalActorParty::CallFunc_BI_AddDecalTask2_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddDecalTargetParty
// 0x0140 (0x0140 - 0x0000)
struct BattleSkillActionBase_C_Com_AddDecalTargetParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3330[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsolutelyNoRotation;                              // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x0055(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3331[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3332[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3333[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3334[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3335[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleSkillActionBase_C> CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDecalTask2_RetPecID;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddDecalTargetParty) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_AddDecalTargetParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddDecalTargetParty) == 0x000140, "Wrong size on BattleSkillActionBase_C_Com_AddDecalTargetParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, DecalMaterial) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, MaterialAnimSetting) == 0x000010, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, DecalSize) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, OffsetLocation) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, AttachPointName) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, Rotation) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, RotationRandMin) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, RotationRandMax) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, AbsolutelyNoRotation) == 0x000054, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CastOnlyStaticMesh) == 0x000055, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, Lo_WaitTaskList) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_RandomFloatInRange_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_GetComandID_retValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_IsValidCommandIndex_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_MakeRotator_ReturnValue) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_BIGetPartySystem_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_GetPartyCenter_Pos) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_GetPartyCenter_Normal) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_GetPartyCenter_forward) == 0x000100, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_BIGetTaskFactory_retValue) == 0x000110, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput) == 0x000120, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalTargetParty, CallFunc_BI_AddDecalTask2_RetPecID) == 0x000130, "Member 'BattleSkillActionBase_C_Com_AddDecalTargetParty::CallFunc_BI_AddDecalTask2_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BlinkHitLight
// 0x01F0 (0x01F0 - 0x0000)
struct BattleSkillActionBase_C_BlinkHitLight final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3336[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleSkillLight_t                    Lo_LightData;                                      // 0x0008(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Lo_PartyIndex;                                     // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_ExistHitLight;                                  // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3337[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3338[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASkillActionPointLight_C*               CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3339[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGroupID_GroupID;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHitLightData_IsValid;                  // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333A[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleSkillLight_t                    CallFunc_GetHitLightData_LightData;                // 0x00D0(0x0058)(HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0128(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333B[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_AddPointLight_AddedLight;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_DAMAGE_HIT_TYPE                         CallFunc_Array_Get_Item_2;                         // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkillActionPointLight_C*               CallFunc_Array_Get_Item_3;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333C[0x2];                                     // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGroupID_GroupID_1;                     // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BlinkHitLight) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BlinkHitLight");
static_assert(sizeof(BattleSkillActionBase_C_BlinkHitLight) == 0x0001F0, "Wrong size on BattleSkillActionBase_C_BlinkHitLight");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_BlinkHitLight::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Lo_LightData) == 0x000008, "Member 'BattleSkillActionBase_C_BlinkHitLight::Lo_LightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Lo_PartyIndex) == 0x000060, "Member 'BattleSkillActionBase_C_BlinkHitLight::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Lo_ExistHitLight) == 0x000064, "Member 'BattleSkillActionBase_C_BlinkHitLight::Lo_ExistHitLight' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_BlinkHitLight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BattleSkillActionBase_C_BlinkHitLight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BattleSkillActionBase_C_BlinkHitLight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BattleSkillActionBase_C_BlinkHitLight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'BattleSkillActionBase_C_BlinkHitLight::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'BattleSkillActionBase_C_BlinkHitLight::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_SelectString_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Conv_StringToName_ReturnValue) == 0x0000BC, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_GetGroupID_GroupID) == 0x0000C4, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_GetGroupID_GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Less_IntInt_ReturnValue) == 0x0000CD, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_GetHitLightData_IsValid) == 0x0000CE, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_GetHitLightData_IsValid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_GetHitLightData_LightData) == 0x0000D0, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_GetHitLightData_LightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C4, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_AddPointLight_AddedLight) == 0x0001C8, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_AddPointLight_AddedLight' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001D0, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Array_Get_Item_2) == 0x0001D1, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001D2, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_BooleanAND_ReturnValue) == 0x0001D3, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Array_Length_ReturnValue_2) == 0x0001D4, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Array_Get_Item_3) == 0x0001D8, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001E0, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_IsValid_ReturnValue_1) == 0x0001E1, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_GetGroupID_GroupID_1) == 0x0001E4, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_GetGroupID_GroupID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BlinkHitLight, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0001E8, "Member 'BattleSkillActionBase_C_BlinkHitLight::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetHitLightData
// 0x0230 (0x0230 - 0x0000)
struct BattleSkillActionBase_C_GetHitLightData final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleSkillLight_t                    LightData;                                         // 0x0008(0x0058)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleSkillLight_t                    K2Node_MakeStruct_BattleSkillLight_t;              // 0x0068(0x0058)(HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x00C8(0x0100)(ConstParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_HIT_STAMP_TYPE                        K2Node_Select_Default;                             // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333F[0x5];                                     // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleSkillLight_t                    CallFunc_Map_Find_Value;                           // 0x01D0(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_GetHitLightData) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetHitLightData");
static_assert(sizeof(BattleSkillActionBase_C_GetHitLightData) == 0x000230, "Wrong size on BattleSkillActionBase_C_GetHitLightData");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, IsValid) == 0x000000, "Member 'BattleSkillActionBase_C_GetHitLightData::IsValid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, LightData) == 0x000008, "Member 'BattleSkillActionBase_C_GetHitLightData::LightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, Temp_bool_Variable) == 0x000060, "Member 'BattleSkillActionBase_C_GetHitLightData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, CallFunc_GetActorPartyIndex_index) == 0x000064, "Member 'BattleSkillActionBase_C_GetHitLightData::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, K2Node_MakeStruct_BattleSkillLight_t) == 0x000068, "Member 'BattleSkillActionBase_C_GetHitLightData::K2Node_MakeStruct_BattleSkillLight_t' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, CallFunc_FindUnit_Unit) == 0x0000C0, "Member 'BattleSkillActionBase_C_GetHitLightData::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, CallFunc_GetSkillBaseData_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_GetHitLightData::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C8, "Member 'BattleSkillActionBase_C_GetHitLightData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, CallFunc_GetValidValue_ReturnValue) == 0x0001C9, "Member 'BattleSkillActionBase_C_GetHitLightData::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, K2Node_Select_Default) == 0x0001CA, "Member 'BattleSkillActionBase_C_GetHitLightData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, CallFunc_Map_Find_Value) == 0x0001D0, "Member 'BattleSkillActionBase_C_GetHitLightData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHitLightData, CallFunc_Map_Find_ReturnValue) == 0x000228, "Member 'BattleSkillActionBase_C_GetHitLightData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.LoadBattleSkillLightList
// 0x0090 (0x0090 - 0x0000)
struct BattleSkillActionBase_C_LoadBattleSkillLightList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3340[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3341[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleSkillLight_t                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_LoadBattleSkillLightList) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_LoadBattleSkillLightList");
static_assert(sizeof(BattleSkillActionBase_C_LoadBattleSkillLightList) == 0x000090, "Wrong size on BattleSkillActionBase_C_LoadBattleSkillLightList");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, CallFunc_Array_Get_Item) == 0x000024, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadBattleSkillLightList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_LoadBattleSkillLightList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SetPlayRate
// 0x0088 (0x0088 - 0x0000)
struct BattleSkillActionBase_C_SetPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3342[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3343[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActionPointLight_C*               CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3344[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTimelineComponent*>             CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ASkillActionPointLight_C*               CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimelineComponent*                     CallFunc_Array_Get_Item_3;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3345[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SetPlayRate) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_SetPlayRate");
static_assert(sizeof(BattleSkillActionBase_C_SetPlayRate) == 0x000088, "Wrong size on BattleSkillActionBase_C_SetPlayRate");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, PlayRate) == 0x000000, "Member 'BattleSkillActionBase_C_SetPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Loop_Counter_Variable_3) == 0x000028, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, Temp_int_Array_Index_Variable_3) == 0x000030, "Member 'BattleSkillActionBase_C_SetPlayRate::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Less_IntInt_ReturnValue_1) == 0x000055, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Length_ReturnValue_2) == 0x00007C, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Array_Length_ReturnValue_3) == 0x000080, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Less_IntInt_ReturnValue_2) == 0x000084, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetPlayRate, CallFunc_Less_IntInt_ReturnValue_3) == 0x000085, "Member 'BattleSkillActionBase_C_SetPlayRate::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetPlayRate
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_GetPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetPlayRate) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetPlayRate");
static_assert(sizeof(BattleSkillActionBase_C_GetPlayRate) == 0x000004, "Wrong size on BattleSkillActionBase_C_GetPlayRate");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayRate, PlayRate) == 0x000000, "Member 'BattleSkillActionBase_C_GetPlayRate::PlayRate' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_CamShakeByRowName
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_CamShakeByRowName final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3346[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TableRowName;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         ShakeScale;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMultiHit;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCheckHit;                                        // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3347[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NumBlockOrAbsorb;                               // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ShakeScale;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3348[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Com_CamShake_Impl_ComIndex;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_CamShakeByRowName) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_CamShakeByRowName");
static_assert(sizeof(BattleSkillActionBase_C_Com_CamShakeByRowName) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_CamShakeByRowName");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, TableRowName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::TableRowName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, ShakeScale) == 0x000018, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, IsMultiHit) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::IsMultiHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, IsCheckHit) == 0x00001D, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::IsCheckHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, Lo_NumBlockOrAbsorb) == 0x000024, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::Lo_NumBlockOrAbsorb' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, Lo_ShakeScale) == 0x000028, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::Lo_ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, Lo_WaitList) == 0x000030, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByRowName, CallFunc_Com_CamShake_Impl_ComIndex) == 0x000040, "Member 'BattleSkillActionBase_C_Com_CamShakeByRowName::CallFunc_Com_CamShake_Impl_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddActorPointLight_Auto
// 0x0100 (0x0100 - 0x0000)
struct BattleSkillActionBase_C_Com_AddActorPointLight_Auto final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3349[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightFalloffExponent;                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharaOnly;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334B[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0078(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSkillLightTask_RetPecID;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddActorPointLight_Auto");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto) == 0x000100, "Wrong size on BattleSkillActionBase_C_Com_AddActorPointLight_Auto");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, OffsetPos) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, LightFuncMaterialIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, GroupID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, IsCastShadow) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, IsFollowSokect) == 0x000021, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, Color) == 0x000028, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, Intensity) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, Radius) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::Radius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, LightFalloffExponent) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::LightFalloffExponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, IsCharaOnly) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, Lo_WaitList) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_GetComandID_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_IsValidCommandIndex_retValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_IsReflected_IsReflected) == 0x000075, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_BIGetTaskFactory_retValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPointLight_Auto, CallFunc_BI_AddSkillLightTask_RetPecID) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_AddActorPointLight_Auto::CallFunc_BI_AddSkillLightTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.InitLightUpdaterTimeline
// 0x0050 (0x0050 - 0x0000)
struct BattleSkillActionBase_C_InitLightUpdaterTimeline final
{
public:
	class UTimelineComponent*                     Timeline;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      ColorCurve;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            IntensityCurve;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RadiusCurve;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_2;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_InitLightUpdaterTimeline) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_InitLightUpdaterTimeline");
static_assert(sizeof(BattleSkillActionBase_C_InitLightUpdaterTimeline) == 0x000050, "Wrong size on BattleSkillActionBase_C_InitLightUpdaterTimeline");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, Timeline) == 0x000000, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::Timeline' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, ColorCurve) == 0x000008, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::ColorCurve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, IntensityCurve) == 0x000010, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::IntensityCurve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, RadiusCurve) == 0x000018, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::RadiusCurve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_GetTimeRange_MinTime) == 0x000020, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_GetTimeRange_MaxTime) == 0x000024, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_GetTimeRange_MinTime_1) == 0x000028, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_GetTimeRange_MaxTime_1) == 0x00002C, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_GetTimeRange_MinTime_2) == 0x000030, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_GetTimeRange_MinTime_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_GetTimeRange_MaxTime_2) == 0x000034, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_GetTimeRange_MaxTime_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, K2Node_MakeArray_Array) == 0x000038, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000048, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitLightUpdaterTimeline, CallFunc_MaxOfFloatArray_MaxValue) == 0x00004C, "Member 'BattleSkillActionBase_C_InitLightUpdaterTimeline::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddActorPointLight_Auto_Impl
// 0x0098 (0x0098 - 0x0000)
struct BattleSkillActionBase_C_AddActorPointLight_Auto_Impl final
{
public:
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         SkillLightData;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334C[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddActorPointLight_Auto_Impl");
static_assert(sizeof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl) == 0x000098, "Wrong size on BattleSkillActionBase_C_AddActorPointLight_Auto_Impl");
static_assert(offsetof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl, SkillLightData) == 0x000000, "Member 'BattleSkillActionBase_C_AddActorPointLight_Auto_Impl::SkillLightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl, Lo_PartyIndex) == 0x000068, "Member 'BattleSkillActionBase_C_AddActorPointLight_Auto_Impl::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000078, "Member 'BattleSkillActionBase_C_AddActorPointLight_Auto_Impl::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl, CallFunc_GetActorPartyIndex_index) == 0x000088, "Member 'BattleSkillActionBase_C_AddActorPointLight_Auto_Impl::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl, CallFunc_Not_PreBool_ReturnValue) == 0x00008C, "Member 'BattleSkillActionBase_C_AddActorPointLight_Auto_Impl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl, CallFunc_BooleanAND_ReturnValue) == 0x00008D, "Member 'BattleSkillActionBase_C_AddActorPointLight_Auto_Impl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorPointLight_Auto_Impl, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_AddActorPointLight_Auto_Impl::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddTargetPointLight_Auto_Impl
// 0x0168 (0x0168 - 0x0000)
struct BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl final
{
public:
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         SkillLightData;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_HideInAbsorbAndBlock;                           // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInReflection;                               // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334D[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_TargetIndexPool;                                // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x0095(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334E[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x00A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334F[0x1];                                     // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0098)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcReflexTarget_IsExist;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3350[0x2];                                     // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcReflexTarget_ReflexTargetIndex;       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3351[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl");
static_assert(sizeof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl) == 0x000168, "Wrong size on BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, SkillLightData) == 0x000000, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::SkillLightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Lo_HideInAbsorbAndBlock) == 0x000068, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Lo_HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Lo_HideInReflection) == 0x000069, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Lo_HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Lo_TargetIndex) == 0x00006C, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Lo_TargetIndexPool) == 0x000070, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Lo_TargetIndexPool' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Lo_PartyIndex) == 0x000080, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Not_PreBool_ReturnValue) == 0x000094, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Temp_byte_Variable) == 0x000095, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, Temp_byte_Variable_1) == 0x0000A0, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Array_Contains_ReturnValue) == 0x0000A1, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A2, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Array_Add_ReturnValue_1) == 0x0000A8, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_CalcReflexTarget_IsExist) == 0x000149, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_CalcReflexTarget_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_CalcReflexTarget_ReflexTargetIndex) == 0x00014C, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_CalcReflexTarget_ReflexTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Array_Contains_ReturnValue_1) == 0x000150, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_BooleanAND_ReturnValue) == 0x000151, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Array_Contains_ReturnValue_2) == 0x000152, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_BooleanAND_ReturnValue_1) == 0x000153, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_BooleanOR_ReturnValue) == 0x000154, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_BooleanAND_ReturnValue_2) == 0x000155, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_BooleanAND_ReturnValue_3) == 0x000156, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Not_PreBool_ReturnValue_2) == 0x000157, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_Not_PreBool_ReturnValue_3) == 0x000158, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_SelectInt_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_BooleanAND_ReturnValue_4) == 0x000160, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl, CallFunc_BooleanAND_ReturnValue_5) == 0x000161, "Member 'BattleSkillActionBase_C_AddTargetPointLight_Auto_Impl::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddTargetPointLight_Auto
// 0x01F0 (0x01F0 - 0x0000)
struct BattleSkillActionBase_C_Com_AddTargetPointLight_Auto final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3352[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightFalloffExponent;                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideInReflection;                                  // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInAbsorbAndBlock;                              // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharaOnly;                                       // 0x004A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3353[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Lo_LightFunc;                                      // 0x0050(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0078(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0088(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3354[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3355[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3356[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_LIGHT_PLAY_PARAM                  K2Node_MakeStruct_BTL_LIGHT_PLAY_PARAM;            // 0x00C0(0x0078)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3357[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item;                           // 0x0140(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3358[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0170(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSkillLightTask_RetPecID;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddTargetPointLight_Auto");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto) == 0x0001F0, "Wrong size on BattleSkillActionBase_C_Com_AddTargetPointLight_Auto");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, OffsetPos) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, LightFuncMaterialIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, GroupID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, IsCastShadow) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, IsFollowSokect) == 0x000021, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, Color) == 0x000028, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, Intensity) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, Radius) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::Radius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, LightFalloffExponent) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::LightFalloffExponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, HideInReflection) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, HideInAbsorbAndBlock) == 0x000049, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, IsCharaOnly) == 0x00004A, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, Lo_LightFunc) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::Lo_LightFunc' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, Lo_WaitList) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_GetTargetPartyIndex_index) == 0x000088, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_IsValidCommandIndex_retValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_GetComandID_retValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Map_Find_ReturnValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_BooleanAND_ReturnValue) == 0x0000B5, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, K2Node_MakeStruct_BTL_LIGHT_PLAY_PARAM) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::K2Node_MakeStruct_BTL_LIGHT_PLAY_PARAM' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Array_Add_ReturnValue_1) == 0x000138, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Array_Get_Item) == 0x000140, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000170, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_BIGetTaskFactory_retValue) == 0x0001D8, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_Array_Add_ReturnValue_2) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPointLight_Auto, CallFunc_BI_AddSkillLightTask_RetPecID) == 0x0001EC, "Member 'BattleSkillActionBase_C_Com_AddTargetPointLight_Auto::CallFunc_BI_AddSkillLightTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_CamShakeByClass
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_Com_CamShakeByClass final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3359[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CamShakeClass;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeScale;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMultiHit;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCheckHit;                                        // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335A[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NumBlockOrAbsorb;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ShakeScale;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Com_CamShake_Impl_ComIndex;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_CamShakeByClass) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_CamShakeByClass");
static_assert(sizeof(BattleSkillActionBase_C_Com_CamShakeByClass) == 0x000040, "Wrong size on BattleSkillActionBase_C_Com_CamShakeByClass");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, CamShakeClass) == 0x000008, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::CamShakeClass' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, ShakeScale) == 0x000010, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, IsMultiHit) == 0x000014, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::IsMultiHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, IsCheckHit) == 0x000015, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::IsCheckHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, Lo_NumBlockOrAbsorb) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::Lo_NumBlockOrAbsorb' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, Lo_ShakeScale) == 0x000020, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::Lo_ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, Lo_WaitList) == 0x000028, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShakeByClass, CallFunc_Com_CamShake_Impl_ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_CamShakeByClass::CallFunc_Com_CamShake_Impl_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_RadialBlurActor
// 0x00C0 (0x00C0 - 0x0000)
struct BattleSkillActionBase_C_Com_RadialBlurActor final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageValue;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAmount;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAmount;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartKeepSec;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpSec;                                           // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSideScale;                                   // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335D[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335E[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcEffectScale_RetVal;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335F[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3360[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddRadialBlurTask_retValue;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_RadialBlurActor) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_RadialBlurActor");
static_assert(sizeof(BattleSkillActionBase_C_Com_RadialBlurActor) == 0x0000C0, "Wrong size on BattleSkillActionBase_C_Com_RadialBlurActor");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, Offset) == 0x000018, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, DamageValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::DamageValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, StartAmount) == 0x000028, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::StartAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, EndAmount) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::EndAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, StartKeepSec) == 0x000030, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::StartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, LerpSec) == 0x000034, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::LerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, IgnoreSideScale) == 0x000038, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::IgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, ComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, Lo_WaitList) == 0x000040, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_GetActorPartyIndex_index) == 0x000050, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_Conv_StringToName_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_FindUnit_Unit) == 0x000060, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_GetComandID_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_GetMeshRelativeScale_Scale) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_CalcEffectScale_RetVal) == 0x000070, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_CalcEffectScale_RetVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_SelectFloat_ReturnValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_GetSocketLocation_ReturnValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_IsValidCommandIndex_retValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000094, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_IsReflected_IsReflected) == 0x000098, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_GetActorPartyIndex_index_1) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_BIGetTaskFactory_retValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_BI_AddRadialBlurTask_retValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_BI_AddRadialBlurTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActor, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_RadialBlurActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_RadialBlurTargetParty
// 0x01D8 (0x01D8 - 0x0000)
struct BattleSkillActionBase_C_Com_RadialBlurTargetParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3361[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageValue;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAmount;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAmount;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartKeepSec;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpSec;                                           // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3362[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Target;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3363[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3364[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00E8(0x0098)()
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddRadialBlurTask_retValue;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_RadialBlurTargetParty) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_RadialBlurTargetParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_RadialBlurTargetParty) == 0x0001D8, "Wrong size on BattleSkillActionBase_C_Com_RadialBlurTargetParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, Offset) == 0x000018, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, DamageValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::DamageValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, StartAmount) == 0x000028, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::StartAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, EndAmount) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::EndAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, StartKeepSec) == 0x000030, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::StartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, LerpSec) == 0x000034, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::LerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, Lo_Target) == 0x000040, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, Lo_WaitList) == 0x000048, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_BreakVector_X) == 0x000058, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_BreakVector_Z) == 0x000060, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Conv_StringToName_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetComandID_retValue) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_IsValidCommandIndex_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_BIGetPartySystem_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_BIGetTaskFactory_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000098, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetAxes_X) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetAxes_Y) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetAxes_Z) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000180, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Add_VectorVector_ReturnValue) == 0x00018C, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_FindUnit_Unit) == 0x000198, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetPartyCenter_Pos) == 0x0001AC, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetPartyCenter_Normal) == 0x0001B8, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_GetPartyCenter_forward) == 0x0001C4, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_BI_AddRadialBlurTask_retValue) == 0x0001D0, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_BI_AddRadialBlurTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurTargetParty, CallFunc_Array_Add_ReturnValue) == 0x0001D4, "Member 'BattleSkillActionBase_C_Com_RadialBlurTargetParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_RadialBlurActorParty
// 0x0148 (0x0148 - 0x0000)
struct BattleSkillActionBase_C_Com_RadialBlurActorParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3365[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageValue;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAmount;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAmount;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartKeepSec;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpSec;                                           // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3366[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Actor;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3367[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3368[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddRadialBlurTask_retValue;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_RadialBlurActorParty) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_RadialBlurActorParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_RadialBlurActorParty) == 0x000148, "Wrong size on BattleSkillActionBase_C_Com_RadialBlurActorParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, Offset) == 0x000018, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, DamageValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::DamageValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, StartAmount) == 0x000028, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::StartAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, EndAmount) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::EndAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, StartKeepSec) == 0x000030, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::StartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, LerpSec) == 0x000034, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::LerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, Lo_Actor) == 0x000040, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, Lo_WaitList) == 0x000048, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetActorPartyIndex_index) == 0x000058, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_BreakVector_X) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_BreakVector_Y) == 0x000060, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_BreakVector_Z) == 0x000064, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_FindUnit_Unit) == 0x000068, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_Conv_StringToName_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetComandID_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_IsValidCommandIndex_retValue) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_BIGetPartySystem_retValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetPartyCenter_Pos) == 0x000090, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetPartyCenter_Normal) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetPartyCenter_forward) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_BIGetTaskFactory_retValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetAxes_X) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetAxes_Y) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetAxes_Z) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000FC, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000108, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000114, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_GetActorPartyIndex_index_1) == 0x000120, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_Add_VectorVector_ReturnValue) == 0x000124, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000130, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_BI_AddRadialBlurTask_retValue) == 0x00013C, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_BI_AddRadialBlurTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_RadialBlurActorParty, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_Com_RadialBlurActorParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddActorPartyPointLight
// 0x00B8 (0x00B8 - 0x0000)
struct BattleSkillActionBase_C_Com_AddActorPartyPointLight final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharaOnly;                                       // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3369[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336A[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0048(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddActorPartyPointLight) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddActorPartyPointLight");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddActorPartyPointLight) == 0x0000B8, "Wrong size on BattleSkillActionBase_C_Com_AddActorPartyPointLight");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, SocketName) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, OffsetPos) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, LightFuncMaterialIndex) == 0x000014, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, GroupID) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, IsCastShadow) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, IsFollowSokect) == 0x00001D, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, IsCharaOnly) == 0x00001E, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, Lo_PartyIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, CallFunc_GetActorPartyIndex_index) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddTargetPartyPointLight
// 0x00B0 (0x00B0 - 0x0000)
struct BattleSkillActionBase_C_Com_AddTargetPartyPointLight final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSocket;                                    // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharaOnly;                                       // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336B[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0040(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddTargetPartyPointLight");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight) == 0x0000B0, "Wrong size on BattleSkillActionBase_C_Com_AddTargetPartyPointLight");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, SocketName) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, OffsetPos) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, LightFuncMaterialIndex) == 0x000014, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, GroupID) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, IsCastShadow) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, IsFollowSocket) == 0x00001D, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::IsFollowSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, IsCharaOnly) == 0x00001E, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, Lo_PartyIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddActorPartyPointLight_Auto
// 0x00F8 (0x00F8 - 0x0000)
struct BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336C[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightFalloutExponent;                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharaOnly;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336D[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336E[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0078(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSkillLightTask_RetPecID;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto) == 0x0000F8, "Wrong size on BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, OffsetPos) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, LightFuncMaterialIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, GroupID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, IsCastShadow) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, IsFollowSokect) == 0x000021, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, Color) == 0x000028, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, Intensity) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, Radius) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::Radius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, LightFalloutExponent) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::LightFalloutExponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, IsCharaOnly) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, Lo_WaitList) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, CallFunc_GetComandID_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, CallFunc_IsValidCommandIndex_retValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, CallFunc_BIGetTaskFactory_retValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto, CallFunc_BI_AddSkillLightTask_RetPecID) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_AddActorPartyPointLight_Auto::CallFunc_BI_AddSkillLightTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddTargetPartyPointLight_Auto
// 0x0100 (0x0100 - 0x0000)
struct BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336F[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightFalloffExponent;                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharaOnly;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3370[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3371[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0078(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3372[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSkillLightTask_RetPecID;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto) == 0x000100, "Wrong size on BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, OffsetPos) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, LightFuncMaterialIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, GroupID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, IsCastShadow) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, IsFollowSokect) == 0x000021, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, Color) == 0x000028, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, Intensity) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, Radius) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::Radius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, LightFalloffExponent) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::LightFalloffExponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, IsCharaOnly) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, Lo_WaitList) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, CallFunc_GetComandID_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, CallFunc_IsValidCommandIndex_retValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, CallFunc_BIGetTaskFactory_retValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto, CallFunc_BI_AddSkillLightTask_RetPecID) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_AddTargetPartyPointLight_Auto::CallFunc_BI_AddSkillLightTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ActivatePointLightUpdate
// 0x0078 (0x0078 - 0x0000)
struct BattleSkillActionBase_C_ActivatePointLightUpdate final
{
public:
	class ASkillActionPointLight_C*               PointLight;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         LightData;                                         // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_ActivatePointLightUpdate) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ActivatePointLightUpdate");
static_assert(sizeof(BattleSkillActionBase_C_ActivatePointLightUpdate) == 0x000078, "Wrong size on BattleSkillActionBase_C_ActivatePointLightUpdate");
static_assert(offsetof(BattleSkillActionBase_C_ActivatePointLightUpdate, PointLight) == 0x000000, "Member 'BattleSkillActionBase_C_ActivatePointLightUpdate::PointLight' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ActivatePointLightUpdate, LightData) == 0x000008, "Member 'BattleSkillActionBase_C_ActivatePointLightUpdate::LightData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ActivatePointLightUpdate, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_ActivatePointLightUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddDecalToEffect
// 0x00B0 (0x00B0 - 0x0000)
struct BattleSkillActionBase_C_Com_AddDecalToEffect final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3373[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 EffectID;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         LoopTimes;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CycleSec;                                          // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x004C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsolutelyNoRotation;                              // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3374[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x005C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3375[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3376[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3377[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> CallFunc_BI_AddDecalToEffectTask_SkillActionBase_CastInput; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDecalToEffectTask_RetPecID;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddDecalToEffect) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddDecalToEffect");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddDecalToEffect) == 0x0000B0, "Wrong size on BattleSkillActionBase_C_Com_AddDecalToEffect");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, EffectID) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::EffectID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, DecalMaterial) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, MaterialAnimSetting) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, LoopTimes) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::LoopTimes' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CycleSec) == 0x000034, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CycleSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, Rotation) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, RotationRandMin) == 0x000044, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, RotationRandMax) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, Size) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::Size' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, AbsolutelyNoRotation) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CastOnlyStaticMesh) == 0x000059, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, Lo_WaitTaskList) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CallFunc_GetComandID_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CallFunc_IsValidCommandIndex_retValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CallFunc_BIGetTaskFactory_retValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CallFunc_BI_AddDecalToEffectTask_SkillActionBase_CastInput) == 0x000098, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CallFunc_BI_AddDecalToEffectTask_SkillActionBase_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalToEffect, CallFunc_BI_AddDecalToEffectTask_RetPecID) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_AddDecalToEffect::CallFunc_BI_AddDecalToEffectTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsExistNotifyInMotion
// 0x00C0 (0x00C0 - 0x0000)
struct BattleSkillActionBase_C_IsExistNotifyInMotion final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3378[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NotifyName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3379[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Lo_NotifyTiming;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FCharaMotion                           Lo_Motion;                                         // 0x0030(0x0018)(Edit, BlueprintVisible, NoDestructor)
	TArray<class FString>                         Lo_NotifiyNames;                                   // 0x0048(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337B[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaMotion                           CallFunc_Map_Find_Value;                           // 0x0080(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337C[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_RetrieveNotifyNames_ReturnValue;          // 0x00A0(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_RetrieveNotifyNames_ReturnValue_1;        // 0x00B0(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleSkillActionBase_C_IsExistNotifyInMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsExistNotifyInMotion");
static_assert(sizeof(BattleSkillActionBase_C_IsExistNotifyInMotion) == 0x0000C0, "Wrong size on BattleSkillActionBase_C_IsExistNotifyInMotion");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, ActorIndex) == 0x000000, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, MotionID) == 0x000004, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, NotifyName) == 0x000008, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::NotifyName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, IsExist) == 0x000018, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, Lo_NotifyTiming) == 0x000020, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::Lo_NotifyTiming' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, Lo_Motion) == 0x000030, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::Lo_Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, Lo_NotifiyNames) == 0x000048, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::Lo_NotifiyNames' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_Array_Contains_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_FindUnit_Unit) == 0x000070, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_Array_Contains_ReturnValue_1) == 0x000078, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_BooleanOR_ReturnValue) == 0x000079, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_Map_Find_Value) == 0x000080, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_IsValid_ReturnValue_1) == 0x00009A, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_RetrieveNotifyNames_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_RetrieveNotifyNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsExistNotifyInMotion, CallFunc_RetrieveNotifyNames_ReturnValue_1) == 0x0000B0, "Member 'BattleSkillActionBase_C_IsExistNotifyInMotion::CallFunc_RetrieveNotifyNames_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckIntorAnimNotify
// 0x0090 (0x0090 - 0x0000)
struct BattleSkillActionBase_C_CheckIntorAnimNotify final
{
public:
	class ACharaBase_C*                           Lo_ActorUnit;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyTaskForPecID_isSuccess;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337E[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337F[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3380[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyTaskForPecID_isSuccess_1;       // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3381[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNotifySkillFire_IsNotified;             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckIntorAnimNotify) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckIntorAnimNotify");
static_assert(sizeof(BattleSkillActionBase_C_CheckIntorAnimNotify) == 0x000090, "Wrong size on BattleSkillActionBase_C_CheckIntorAnimNotify");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, Lo_ActorUnit) == 0x000000, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::Lo_ActorUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Map_Length_ReturnValue) == 0x00001C, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_BIGetTaskFactory_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Array_Get_Item_1) == 0x00004C, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Map_Remove_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_BI_DestroyTaskForPecID_isSuccess) == 0x000051, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_BI_DestroyTaskForPecID_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_FindUnit_Unit) == 0x000058, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_BIGetTaskFactory_retValue_1) == 0x000070, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Map_Find_Value) == 0x000080, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Map_Find_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_BI_DestroyTaskForPecID_isSuccess_1) == 0x000085, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_BI_DestroyTaskForPecID_isSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Map_Length_ReturnValue_1) == 0x000088, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_IsNotifySkillFire_IsNotified) == 0x00008D, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_IsNotifySkillFire_IsNotified' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckIntorAnimNotify, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008E, "Member 'BattleSkillActionBase_C_CheckIntorAnimNotify::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddIntroForceBreakTask
// 0x000C (0x000C - 0x0000)
struct BattleSkillActionBase_C_AddIntroForceBreakTask final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AddIntroForceBreakTask) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_AddIntroForceBreakTask");
static_assert(sizeof(BattleSkillActionBase_C_AddIntroForceBreakTask) == 0x00000C, "Wrong size on BattleSkillActionBase_C_AddIntroForceBreakTask");
static_assert(offsetof(BattleSkillActionBase_C_AddIntroForceBreakTask, PecID) == 0x000000, "Member 'BattleSkillActionBase_C_AddIntroForceBreakTask::PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddIntroForceBreakTask, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_AddIntroForceBreakTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddIntroForceBreakTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_AddIntroForceBreakTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddRandomYaw
// 0x00F0 (0x00F0 - 0x0000)
struct BattleSkillActionBase_C_AddRandomYaw final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                         Min;                                               // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3382[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0040(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3383[0xC];                                     // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AddRandomYaw) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_AddRandomYaw");
static_assert(sizeof(BattleSkillActionBase_C_AddRandomYaw) == 0x0000F0, "Wrong size on BattleSkillActionBase_C_AddRandomYaw");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, InTransform) == 0x000000, "Member 'BattleSkillActionBase_C_AddRandomYaw::InTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, Min) == 0x000030, "Member 'BattleSkillActionBase_C_AddRandomYaw::Min' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, Max) == 0x000034, "Member 'BattleSkillActionBase_C_AddRandomYaw::Max' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_AddRandomYaw::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_RandomFloatInRange_ReturnValue) == 0x000094, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_MakeRotator_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddRandomYaw, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_AddRandomYaw::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.PrepareReflexCam
// 0x01E0 (0x01E0 - 0x0000)
struct BattleSkillActionBase_C_PrepareReflexCam final
{
public:
	bool                                          Lo_IsMulti;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3384[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_CamName;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_IsClose;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3385[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ReflectFrom;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SkillUser;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ReflectActor;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Lo_SkillCamType;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3386[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ReflectTarget;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SKILL_CAM_TYPE                          Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_NAHOBINO_SKILL_MOTION                       CallFunc_GetNahobinoMotion_ReturnValue;            // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3387[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3388[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3389[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTFlagInterface>  CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PTFlagInterface>  CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface_1; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckFlag_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckFlag_ReturnValue_1;               // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338A[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338B[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338C[0x1];                                     // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          K2Node_Select_Default;                             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338D[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_GetFirstReflexInfo_Info;                  // 0x0108(0x0098)()
	bool                                          CallFunc_GetFirstReflexInfo_valid;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338E[0x1];                                     // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338F[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyTaskForPecID_isSuccess;         // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3390[0x6];                                     // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_PrepareReflexCam) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_PrepareReflexCam");
static_assert(sizeof(BattleSkillActionBase_C_PrepareReflexCam) == 0x0001E0, "Wrong size on BattleSkillActionBase_C_PrepareReflexCam");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_IsMulti) == 0x000000, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_IsMulti' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_CamName) == 0x000008, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_CamName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_IsClose) == 0x000018, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_IsClose' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_ReflectFrom) == 0x00001C, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_ReflectFrom' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_SkillUser) == 0x000020, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_SkillUser' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_ReflectActor) == 0x000024, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_ReflectActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_SkillCamType) == 0x000028, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_SkillCamType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Lo_ReflectTarget) == 0x00002C, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Lo_ReflectTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Temp_bool_Variable) == 0x000030, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Temp_byte_Variable) == 0x000031, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Temp_byte_Variable_1) == 0x000032, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Temp_bool_Variable_1) == 0x000033, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetReflexInfoLength_length) == 0x000034, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetSkillID_ID) == 0x000038, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003D, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetNahobinoMotion_ReturnValue) == 0x00003E, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetNahobinoMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003F, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000040, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000041, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetTargetInfoLength_length) == 0x000044, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000049, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BooleanOR_ReturnValue_1) == 0x00004A, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_SelectString_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_SelectString_ReturnValue_1) == 0x000060, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface) == 0x000078, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface_1) == 0x000088, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BI_CheckFlag_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BI_CheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BI_CheckFlag_ReturnValue_1) == 0x00009A, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BI_CheckFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_SelectString_ReturnValue_2) == 0x0000A0, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D8, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E8, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E9, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BooleanAND_ReturnValue_3) == 0x0000EA, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'BattleSkillActionBase_C_PrepareReflexCam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, K2Node_Select_Default) == 0x0000F4, "Member 'BattleSkillActionBase_C_PrepareReflexCam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetActorPartyIndex_index) == 0x0000F8, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetActorPartyIndex_index_1) == 0x0000FC, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_FindUnit_Unit) == 0x000100, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetFirstReflexInfo_Info) == 0x000108, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetFirstReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_GetFirstReflexInfo_valid) == 0x0001A0, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_GetFirstReflexInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001A1, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, K2Node_Select_Default_1) == 0x0001A2, "Member 'BattleSkillActionBase_C_PrepareReflexCam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Array_Get_Item) == 0x0001A4, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BIGetTaskFactory_retValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_Less_IntInt_ReturnValue) == 0x0001C0, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BI_DestroyTaskForPecID_isSuccess) == 0x0001C1, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BI_DestroyTaskForPecID_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BIGetTaskFactory_retValue_1) == 0x0001C8, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareReflexCam, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x0001D8, "Member 'BattleSkillActionBase_C_PrepareReflexCam::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddTargetDeadTask
// 0x00F8 (0x00F8 - 0x0000)
struct BattleSkillActionBase_C_AddTargetDeadTask final
{
public:
	TArray<int32>                                 WaitList;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 DeadTarget;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FSkillActionTargetInfo                 SkillActionTargetInfo;                             // 0x0020(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Lo_DeadTarget;                                     // 0x00B8(0x0010)(Edit, BlueprintVisible)
	E_BTL_DEAD_EFFECT                             Lo_DeadEffect;                                     // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3391[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Target;                                         // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsDead;                                         // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3392[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3393[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3394[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_MakeDeadTask_retValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddTargetDeadTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddTargetDeadTask");
static_assert(sizeof(BattleSkillActionBase_C_AddTargetDeadTask) == 0x0000F8, "Wrong size on BattleSkillActionBase_C_AddTargetDeadTask");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, WaitList) == 0x000000, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, DeadTarget) == 0x000010, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::DeadTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, SkillActionTargetInfo) == 0x000020, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::SkillActionTargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, Lo_DeadTarget) == 0x0000B8, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::Lo_DeadTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, Lo_DeadEffect) == 0x0000C8, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::Lo_DeadEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, Lo_Target) == 0x0000CC, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, Lo_IsDead) == 0x0000D0, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::Lo_IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, CallFunc_Array_Contains_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, CallFunc_BIGetTaskFactory_retValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, CallFunc_BooleanAND_ReturnValue) == 0x0000F1, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddTargetDeadTask, CallFunc_BI_MakeDeadTask_retValue) == 0x0000F4, "Member 'BattleSkillActionBase_C_AddTargetDeadTask::CallFunc_BI_MakeDeadTask_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcReflexTarget
// 0x00C8 (0x00C8 - 0x0000)
struct BattleSkillActionBase_C_CalcReflexTarget final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3395[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReflexTargetIndex;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3396[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0020(0x0098)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3397[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CalcReflexTarget) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcReflexTarget");
static_assert(sizeof(BattleSkillActionBase_C_CalcReflexTarget) == 0x0000C8, "Wrong size on BattleSkillActionBase_C_CalcReflexTarget");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, TargetIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CalcReflexTarget::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, IsExist) == 0x000004, "Member 'BattleSkillActionBase_C_CalcReflexTarget::IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, ReflexTargetIndex) == 0x000008, "Member 'BattleSkillActionBase_C_CalcReflexTarget::ReflexTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BattleSkillActionBase_C_CalcReflexTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BattleSkillActionBase_C_CalcReflexTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattleSkillActionBase_C_CalcReflexTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_CalcReflexTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleSkillActionBase_C_CalcReflexTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_CalcReflexTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000B9, "Member 'BattleSkillActionBase_C_CalcReflexTarget::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BattleSkillActionBase_C_CalcReflexTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcReflexTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_CalcReflexTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetDamageMotionType
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_GetDamageMotionType final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         DamageHitType;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3398[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         bst;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3399[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsResist;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGuard;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsWeak;                                            // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339A[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DamageMotionIndex;                                 // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsHero_retValue;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsDown_IsDown;                         // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BI_GetHPRatio_retValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339B[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_GetDamageMotionType) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetDamageMotionType");
static_assert(sizeof(BattleSkillActionBase_C_GetDamageMotionType) == 0x000048, "Wrong size on BattleSkillActionBase_C_GetDamageMotionType");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_GetDamageMotionType::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, DamageHitType) == 0x000004, "Member 'BattleSkillActionBase_C_GetDamageMotionType::DamageHitType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, IsDead) == 0x000005, "Member 'BattleSkillActionBase_C_GetDamageMotionType::IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, bst) == 0x000008, "Member 'BattleSkillActionBase_C_GetDamageMotionType::bst' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, PartySystem) == 0x000010, "Member 'BattleSkillActionBase_C_GetDamageMotionType::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, IsResist) == 0x000020, "Member 'BattleSkillActionBase_C_GetDamageMotionType::IsResist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, IsGuard) == 0x000021, "Member 'BattleSkillActionBase_C_GetDamageMotionType::IsGuard' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, IsWeak) == 0x000022, "Member 'BattleSkillActionBase_C_GetDamageMotionType::IsWeak' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, DamageMotionIndex) == 0x000024, "Member 'BattleSkillActionBase_C_GetDamageMotionType::DamageMotionIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BI_IsHero_retValue) == 0x000029, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BI_IsHero_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BI_IsDown_IsDown) == 0x00002B, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BI_IsDown_IsDown' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BI_GetHPRatio_retValue) == 0x00002C, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BI_GetHPRatio_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_FindUnit_Unit) == 0x000038, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BooleanOR_ReturnValue_1) == 0x000040, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_GetDefaultIdleMotion_Idle) == 0x000041, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_GetDefaultIdleMotion_Idle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BooleanOR_ReturnValue_2) == 0x000042, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000043, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetDamageMotionType, CallFunc_BooleanAND_ReturnValue_1) == 0x000044, "Member 'BattleSkillActionBase_C_GetDamageMotionType::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetBstSEArray
// 0x00A8 (0x00A8 - 0x0000)
struct BattleSkillActionBase_C_GetBstSEArray final
{
public:
	int32                                         BadStatus;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_BAD_STATUS_APPEAR                     Appear;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USoundAtomCue*>                  RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<class USoundAtomCue*>                  Lo_RetArray;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          NewLocalVar_0;                                     // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          CallFunc_MakeBadStatusArray_BadStatusArray;        // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339F[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBattleResidentEffect                  CallFunc_BI_EffectManagerGetResidentBstEffect_retValue; // 0x0068(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetBstSEArray) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetBstSEArray");
static_assert(sizeof(BattleSkillActionBase_C_GetBstSEArray) == 0x0000A8, "Wrong size on BattleSkillActionBase_C_GetBstSEArray");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, BadStatus) == 0x000000, "Member 'BattleSkillActionBase_C_GetBstSEArray::BadStatus' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, Appear) == 0x000004, "Member 'BattleSkillActionBase_C_GetBstSEArray::Appear' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, RetValue) == 0x000008, "Member 'BattleSkillActionBase_C_GetBstSEArray::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, Lo_RetArray) == 0x000018, "Member 'BattleSkillActionBase_C_GetBstSEArray::Lo_RetArray' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, NewLocalVar_0) == 0x000028, "Member 'BattleSkillActionBase_C_GetBstSEArray::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_MakeBadStatusArray_BadStatusArray) == 0x000030, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_MakeBadStatusArray_BadStatusArray' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BattleSkillActionBase_C_GetBstSEArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BattleSkillActionBase_C_GetBstSEArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_BIGetMainWork_NewParam) == 0x000058, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_BI_EffectManagerGetResidentBstEffect_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_BI_EffectManagerGetResidentBstEffect_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetBstSEArray, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_GetBstSEArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddPointLightAuto_Impl
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_AddPointLightAuto_Impl final
{
public:
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         SkillLightData;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddPointLightAuto_Impl) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddPointLightAuto_Impl");
static_assert(sizeof(BattleSkillActionBase_C_AddPointLightAuto_Impl) == 0x000068, "Wrong size on BattleSkillActionBase_C_AddPointLightAuto_Impl");
static_assert(offsetof(BattleSkillActionBase_C_AddPointLightAuto_Impl, SkillLightData) == 0x000000, "Member 'BattleSkillActionBase_C_AddPointLightAuto_Impl::SkillLightData' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddBarrierReactionTask
// 0x02F8 (0x02F8 - 0x0000)
struct BattleSkillActionBase_C_AddBarrierReactionTask final
{
public:
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 WaitTaskList;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Reaction;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A0[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitSec;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetPecIDs;                                         // 0x0030(0x0010)(Parm, OutParm)
	float                                         Lo_WaitSec;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_comIDs;                                         // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A3[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	E_BTL_REFLECT_RES_TYPE                        Lo_Value;                                          // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A4[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00A0(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x00D0(0x0030)()
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal; // 0x0110(0x0038)()
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A5[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_2;                   // 0x0168(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_3;                   // 0x0198(0x0030)()
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam_1;                 // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1; // 0x01D8(0x0038)()
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1;    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue_1;          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A6[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_UI_IConTask_retList;                      // 0x0230(0x0010)(ReferenceParm)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_4;                   // 0x0240(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_5;                   // 0x0270(0x0030)()
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam_2;                 // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionEffect                     CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2; // 0x02B0(0x0038)()
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_2;    // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue_2;          // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AddBarrierReactionTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddBarrierReactionTask");
static_assert(sizeof(BattleSkillActionBase_C_AddBarrierReactionTask) == 0x0002F8, "Wrong size on BattleSkillActionBase_C_AddBarrierReactionTask");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, TaskFactory) == 0x000000, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, WaitTaskList) == 0x000010, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, TargetIndex) == 0x000020, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, Reaction) == 0x000024, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::Reaction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, WaitSec) == 0x000028, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::WaitSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, RetPecIDs) == 0x000030, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::RetPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, Lo_WaitSec) == 0x000040, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::Lo_WaitSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, Lo_comIDs) == 0x000048, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::Lo_comIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, Lo_TargetIndex) == 0x000058, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, Lo_WaitTaskList) == 0x000060, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, Lo_Value) == 0x000070, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BIGetTaskFactory_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BIGetTaskFactory_retValue_1) == 0x000090, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, K2Node_MakeStruct_BtlTaskData) == 0x0000A0, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0000D0, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BIGetMainWork_NewParam) == 0x000100, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal) == 0x000110, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x000148, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_AddPlayEffectTask_retValue) == 0x00014C, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BIGetTaskFactory_retValue_2) == 0x000150, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000160, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, K2Node_MakeStruct_BtlTaskData_2) == 0x000168, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::K2Node_MakeStruct_BtlTaskData_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, K2Node_MakeStruct_BtlTaskData_3) == 0x000198, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::K2Node_MakeStruct_BtlTaskData_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BIGetMainWork_NewParam_1) == 0x0001C8, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BIGetMainWork_NewParam_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1) == 0x0001D8, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1) == 0x000210, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_AddPlayEffectTask_retValue_1) == 0x000214, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_AddPlayEffectTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BIGetTaskFactory_retValue_3) == 0x000218, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000228, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_UI_IConTask_retList) == 0x000230, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_UI_IConTask_retList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, K2Node_MakeStruct_BtlTaskData_4) == 0x000240, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::K2Node_MakeStruct_BtlTaskData_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, K2Node_MakeStruct_BtlTaskData_5) == 0x000270, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::K2Node_MakeStruct_BtlTaskData_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BIGetMainWork_NewParam_2) == 0x0002A0, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BIGetMainWork_NewParam_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2) == 0x0002B0, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_EffectManagerGetResidentSkillActionEffectByName_retVal_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_2) == 0x0002E8, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_BI_AddPlayEffectTask_retValue_2) == 0x0002EC, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_BI_AddPlayEffectTask_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddBarrierReactionTask, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002F0, "Member 'BattleSkillActionBase_C_AddBarrierReactionTask::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_OverrideBarrierTiming
// 0x0118 (0x0118 - 0x0000)
struct BattleSkillActionBase_C_Com_OverrideBarrierTiming final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A8[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A9[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AA[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AB[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0060(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AC[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_AddBarrierReactionTask_RetPecIDs;         // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_OverrideBarrierTiming) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_OverrideBarrierTiming");
static_assert(sizeof(BattleSkillActionBase_C_Com_OverrideBarrierTiming) == 0x000118, "Wrong size on BattleSkillActionBase_C_Com_OverrideBarrierTiming");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, Lo_WaitTask) == 0x000008, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_IsValidCommandIndex_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_BIGetTaskFactory_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_BIGetTaskFactory_retValue_1) == 0x000048, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_AddBarrierReactionTask_RetPecIDs) == 0x000100, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_AddBarrierReactionTask_RetPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OverrideBarrierTiming, CallFunc_Greater_IntInt_ReturnValue) == 0x000114, "Member 'BattleSkillActionBase_C_Com_OverrideBarrierTiming::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcAttackMoveSec
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_CalcAttackMoveSec final
{
public:
	class ACharaBase_C*                           Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDefenseArea;                                 // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sec;                                               // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetrieveNotifyTiming_Timing;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveNotifyTiming_IsExist;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AD[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcAttackMoveSec) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcAttackMoveSec");
static_assert(sizeof(BattleSkillActionBase_C_CalcAttackMoveSec) == 0x000060, "Wrong size on BattleSkillActionBase_C_CalcAttackMoveSec");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, Attacker) == 0x000000, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::Attacker' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, TargetLocation) == 0x000008, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::TargetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, TargetDefenseArea) == 0x000014, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::TargetDefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, Sec) == 0x000018, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::Sec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_RetrieveNotifyTiming_Timing) == 0x000020, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_RetrieveNotifyTiming_Timing' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_RetrieveNotifyTiming_IsExist) == 0x000024, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_RetrieveNotifyTiming_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_SelectVector_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMoveSec, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_CalcAttackMoveSec::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ApplyDrain
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_Com_ApplyDrain final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_comIDs;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_ApplyDrain_retComIDs;                     // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ApplyDrain) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_ApplyDrain");
static_assert(sizeof(BattleSkillActionBase_C_Com_ApplyDrain) == 0x000060, "Wrong size on BattleSkillActionBase_C_Com_ApplyDrain");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, Lo_comIDs) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::Lo_comIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_GetComandID_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_IsValidCommandIndex_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, K2Node_MakeArray_Array) == 0x000028, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_ApplyDrain_retComIDs) == 0x000040, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_ApplyDrain_retComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ApplyDrain, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_ApplyDrain::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetMainInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetMainInterface final
{
public:
	TScriptInterface<class IBPI_MainInterface>    AsBPI_Main_Interface;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    K2Node_DynamicCast_AsBPI_Main_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetMainInterface) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetMainInterface");
static_assert(sizeof(BattleSkillActionBase_C_BIGetMainInterface) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetMainInterface");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainInterface, AsBPI_Main_Interface) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetMainInterface::AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetMainInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainInterface, K2Node_DynamicCast_AsBPI_Main_Interface) == 0x000018, "Member 'BattleSkillActionBase_C_BIGetMainInterface::K2Node_DynamicCast_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetMainInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSkillActionBase_C_BIGetMainInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.PartyUtil
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_PartyUtil final
{
public:
	TScriptInterface<class IBPI_PTUtilInterface>  Param_PartyUtil;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_BI_GetPartyUtilInterface_retValue;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_PartyUtil) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_PartyUtil");
static_assert(sizeof(BattleSkillActionBase_C_PartyUtil) == 0x000030, "Wrong size on BattleSkillActionBase_C_PartyUtil");
static_assert(offsetof(BattleSkillActionBase_C_PartyUtil, Param_PartyUtil) == 0x000000, "Member 'BattleSkillActionBase_C_PartyUtil::Param_PartyUtil' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PartyUtil, CallFunc_BIGetMainWork_NewParam) == 0x000010, "Member 'BattleSkillActionBase_C_PartyUtil::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PartyUtil, CallFunc_BI_GetPartyUtilInterface_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_PartyUtil::CallFunc_BI_GetPartyUtilInterface_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetPTUnitInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetPTUnitInterface final
{
public:
	TScriptInterface<class IBPI_PTBPInterface_C>  AsBPI_PTBPInterface;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTBPInterface_C>  K2Node_DynamicCast_AsBPI_PTBPInterface;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetPTUnitInterface) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetPTUnitInterface");
static_assert(sizeof(BattleSkillActionBase_C_BIGetPTUnitInterface) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetPTUnitInterface");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTUnitInterface, AsBPI_PTBPInterface) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetPTUnitInterface::AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTUnitInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetPTUnitInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTUnitInterface, K2Node_DynamicCast_AsBPI_PTBPInterface) == 0x000018, "Member 'BattleSkillActionBase_C_BIGetPTUnitInterface::K2Node_DynamicCast_AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTUnitInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSkillActionBase_C_BIGetPTUnitInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetPTBadStatusInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetPTBadStatusInterface final
{
public:
	TScriptInterface<class IBPI_PTBadStatusInterface> AsBPI_PTBad_Status_Interface;                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTBadStatusInterface> K2Node_DynamicCast_AsBPI_PTBad_Status_Interface;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetPTBadStatusInterface) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetPTBadStatusInterface");
static_assert(sizeof(BattleSkillActionBase_C_BIGetPTBadStatusInterface) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetPTBadStatusInterface");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTBadStatusInterface, AsBPI_PTBad_Status_Interface) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetPTBadStatusInterface::AsBPI_PTBad_Status_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTBadStatusInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetPTBadStatusInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTBadStatusInterface, K2Node_DynamicCast_AsBPI_PTBad_Status_Interface) == 0x000018, "Member 'BattleSkillActionBase_C_BIGetPTBadStatusInterface::K2Node_DynamicCast_AsBPI_PTBad_Status_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTBadStatusInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSkillActionBase_C_BIGetPTBadStatusInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddMagGaugeTask
// 0x0128 (0x0128 - 0x0000)
struct BattleSkillActionBase_C_AddMagGaugeTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 ComIndex;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_EftName;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0050(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AF[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B0[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAddMagGauge_AddMagGauge;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B1[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_MakeAddMagGaugeTask_retPecID;          // 0x0110(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddMagGaugeTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddMagGaugeTask");
static_assert(sizeof(BattleSkillActionBase_C_AddMagGaugeTask) == 0x000128, "Wrong size on BattleSkillActionBase_C_AddMagGaugeTask");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, Lo_RetTaskList) == 0x000020, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, Lo_WaitTaskList) == 0x000030, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, Lo_EftName) == 0x000040, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::Lo_EftName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_GetFirstTargetInfo_Info) == 0x000050, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_GetFirstTargetInfo_valid) == 0x0000E8, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_GetTargetInfoLength_length) == 0x0000EC, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_GetAddMagGauge_AddMagGauge) == 0x0000F4, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_GetAddMagGauge_AddMagGauge' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_BIGetTaskFactory_retValue) == 0x000100, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_BI_MakeAddMagGaugeTask_retPecID) == 0x000110, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_BI_MakeAddMagGaugeTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddMagGaugeTask, CallFunc_Array_LastIndex_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_AddMagGaugeTask::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ActorLookTarget
// 0x01C8 (0x01C8 - 0x0000)
struct BattleSkillActionBase_C_Com_ActorLookTarget final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookSpeed;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitLookFinish;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndexes;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Lo_ActorLoc;                                       // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_CheckDot;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MostFarDist;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_EnemyAve;                                       // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Lo_EnemyDefAreaRange;                              // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Lo_EnemyLocs;                                      // 0x0058(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Value;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Deg;                                            // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionExtend                     Lo_Extend;                                         // 0x0070(0x00A8)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0118(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B4[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B5[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B6[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B7[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B8[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B9[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Pos;                      // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal;                   // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BA[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitStayDirToTargetTask_retPecID;   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ActorLookTarget) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_ActorLookTarget");
static_assert(sizeof(BattleSkillActionBase_C_Com_ActorLookTarget) == 0x0001C8, "Wrong size on BattleSkillActionBase_C_Com_ActorLookTarget");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, LookSpeed) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::LookSpeed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, WaitLookFinish) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::WaitLookFinish' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, ComIndex) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_ActorIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_TargetIndexes) == 0x000018, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_TargetIndexes' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_ActorLoc) == 0x000028, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_ActorLoc' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_CheckDot) == 0x000034, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_CheckDot' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_MostFarDist) == 0x000038, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_MostFarDist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_EnemyAve) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_EnemyAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_EnemyDefAreaRange) == 0x000048, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_EnemyDefAreaRange' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_EnemyLocs) == 0x000058, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_EnemyLocs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_Value) == 0x000068, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_Deg) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_Deg' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_Extend) == 0x000070, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_Extend' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, Lo_WaitList) == 0x000118, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000128, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetComandID_retValue) == 0x00012C, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_SelectFloat_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_IsValidCommandIndex_retValue) == 0x000134, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000138, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00013C, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_IsReflected_IsReflected) == 0x000140, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_BooleanAND_ReturnValue) == 0x000141, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000144, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_Array_RemoveItem_ReturnValue) == 0x000148, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetTargetPartyIndex_index) == 0x000150, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000164, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetActorPartyIndex_index) == 0x000168, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_BIGetPartySystem_retValue) == 0x000170, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000180, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetTargetCenter_Pos) == 0x000184, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetTargetCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetTargetCenter_Normal) == 0x000190, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetTargetCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetTargetCenter_forward) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetTargetCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_GetTargetCenter_DefenseArea) == 0x0001A8, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_GetTargetCenter_DefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_BIGetTaskFactory_retValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_BI_AddUnitStayDirToTargetTask_retPecID) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_BI_AddUnitStayDirToTargetTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorLookTarget, CallFunc_Array_Add_ReturnValue) == 0x0001C4, "Member 'BattleSkillActionBase_C_Com_ActorLookTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AdjustCameraName
// 0x0150 (0x0150 - 0x0000)
struct BattleSkillActionBase_C_AdjustCameraName final
{
public:
	class FString                                 Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Output;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsAttack;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsAttack;                                       // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsOverrideShortRangeAttack;                     // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsEnemyCamera;                                  // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_Input;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BC[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_1;            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_2;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BD[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_3;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BE[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BF[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaParamComponent*                   CallFunc_BI_GetCharaParamComponent_Comp;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C0[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_4;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C1[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C2[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_5;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C3[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_6;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C4[0x5];                                     // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_5;               // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_2;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C5[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_4;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_7;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_8;          // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_9;          // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AdjustCameraName) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AdjustCameraName");
static_assert(sizeof(BattleSkillActionBase_C_AdjustCameraName) == 0x000150, "Wrong size on BattleSkillActionBase_C_AdjustCameraName");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, Input) == 0x000000, "Member 'BattleSkillActionBase_C_AdjustCameraName::Input' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, Output) == 0x000010, "Member 'BattleSkillActionBase_C_AdjustCameraName::Output' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, IsAttack) == 0x000020, "Member 'BattleSkillActionBase_C_AdjustCameraName::IsAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, Lo_IsAttack) == 0x000021, "Member 'BattleSkillActionBase_C_AdjustCameraName::Lo_IsAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, Lo_IsOverrideShortRangeAttack) == 0x000022, "Member 'BattleSkillActionBase_C_AdjustCameraName::Lo_IsOverrideShortRangeAttack' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, Lo_IsEnemyCamera) == 0x000023, "Member 'BattleSkillActionBase_C_AdjustCameraName::Lo_IsEnemyCamera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, Lo_Input) == 0x000028, "Member 'BattleSkillActionBase_C_AdjustCameraName::Lo_Input' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_MatchesWildcard_ReturnValue) == 0x000039, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_MatchesWildcard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_GetActorPartyIndex_index) == 0x00003C, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanAND_ReturnValue_1) == 0x000041, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000042, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_MatchesWildcard_ReturnValue_1) == 0x000043, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_MatchesWildcard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanOR_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanOR_ReturnValue_1) == 0x000045, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000046, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_Not_PreBool_ReturnValue_1) == 0x000047, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000048, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_MatchesWildcard_ReturnValue_2) == 0x000049, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_MatchesWildcard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanAND_ReturnValue_2) == 0x00004A, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanOR_ReturnValue_2) == 0x00004B, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanAND_ReturnValue_3) == 0x00004C, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanOR_ReturnValue_3) == 0x00004D, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanAND_ReturnValue_4) == 0x00004E, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_SelectString_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BIGetPartySystem_retValue) == 0x000060, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_MatchesWildcard_ReturnValue_3) == 0x000070, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_MatchesWildcard_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BI_GetPartyUnit_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanAND_ReturnValue_5) == 0x000088, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BI_GetCharaParamComponent_Comp) == 0x000090, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BI_GetCharaParamComponent_Comp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_GetActorPartyIndex_index_1) == 0x000098, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BI_GetSide_side) == 0x00009C, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009D, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_SelectString_ReturnValue_1) == 0x0000A0, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x0000B0, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_4) == 0x0000B1, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_SelectString_ReturnValue_2) == 0x0000B8, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_RandomBool_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_SelectString_ReturnValue_3) == 0x0000D0, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_SelectString_ReturnValue_4) == 0x0000E0, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_5) == 0x0000F0, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_6) == 0x000108, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_RandomBool_ReturnValue_1) == 0x000109, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanOR_ReturnValue_4) == 0x00010A, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_SelectString_ReturnValue_5) == 0x000110, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_SelectString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_RandomBool_ReturnValue_2) == 0x000120, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_RandomBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000128, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000138, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_MatchesWildcard_ReturnValue_4) == 0x000148, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_MatchesWildcard_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanAND_ReturnValue_6) == 0x000149, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_7) == 0x00014A, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_8) == 0x00014B, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x00014C, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_EqualEqual_StrStr_ReturnValue_9) == 0x00014D, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_EqualEqual_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AdjustCameraName, CallFunc_BooleanOR_ReturnValue_5) == 0x00014E, "Member 'BattleSkillActionBase_C_AdjustCameraName::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_100_Series
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_100_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_100_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_100_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_100_Series) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_Introduction_100_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_100_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_100_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_200_Series
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_200_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_200_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_200_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_200_Series) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_Introduction_200_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_200_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_200_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_300_Series
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_300_Series final
{
public:
	int32                                         WaitCommanIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_300_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_300_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_300_Series) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_Introduction_300_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, WaitCommanIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::WaitCommanIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_300_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_300_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_400_Series
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_400_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_400_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_400_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_400_Series) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_Introduction_400_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_400_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_400_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_500_Series
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_500_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_500_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_500_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_500_Series) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_Introduction_500_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_500_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_500_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_600_Series
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_600_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_600_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_600_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_600_Series) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_Introduction_600_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_600_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_600_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_700_Series
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_700_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_700_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_700_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_700_Series) == 0x000048, "Wrong size on BattleSkillActionBase_C_Com_Introduction_700_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_700_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_700_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_800_Series
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_800_Series final
{
public:
	int32                                         WaitCommandIindex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_800_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_800_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_800_Series) == 0x000040, "Wrong size on BattleSkillActionBase_C_Com_Introduction_800_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, WaitCommandIindex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::WaitCommandIindex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_800_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_800_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_900_Series
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_900_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_900_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_900_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_900_Series) == 0x000040, "Wrong size on BattleSkillActionBase_C_Com_Introduction_900_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, ComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_900_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_900_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddReichiPointTask
// 0x0070 (0x0070 - 0x0000)
struct BattleSkillActionBase_C_AddReichiPointTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 ComIndex;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_EftName;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAddReichi_AddReichi;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CF[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddReichiPointTask_retPecID;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddReichiPointTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddReichiPointTask");
static_assert(sizeof(BattleSkillActionBase_C_AddReichiPointTask) == 0x000070, "Wrong size on BattleSkillActionBase_C_AddReichiPointTask");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_AddReichiPointTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_AddReichiPointTask::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, Lo_RetTaskList) == 0x000020, "Member 'BattleSkillActionBase_C_AddReichiPointTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, Lo_WaitTaskList) == 0x000030, "Member 'BattleSkillActionBase_C_AddReichiPointTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, Lo_EftName) == 0x000040, "Member 'BattleSkillActionBase_C_AddReichiPointTask::Lo_EftName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, CallFunc_GetAddReichi_AddReichi) == 0x000050, "Member 'BattleSkillActionBase_C_AddReichiPointTask::CallFunc_GetAddReichi_AddReichi' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_AddReichiPointTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, CallFunc_BIGetTaskFactory_retValue) == 0x000058, "Member 'BattleSkillActionBase_C_AddReichiPointTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, CallFunc_BI_AddReichiPointTask_retPecID) == 0x000068, "Member 'BattleSkillActionBase_C_AddReichiPointTask::CallFunc_BI_AddReichiPointTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddReichiPointTask, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_AddReichiPointTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddActorBstTask
// 0x0188 (0x0188 - 0x0000)
struct BattleSkillActionBase_C_AddActorBstTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 ComIndex;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_EftName;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D0[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0058(0x0100)(ConstParm)
	int32                                         CallFunc_GetActorBst_Bst;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D1[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D2[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddApplyUnitStateTask_retValue;        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddActorBstTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddActorBstTask");
static_assert(sizeof(BattleSkillActionBase_C_AddActorBstTask) == 0x000188, "Wrong size on BattleSkillActionBase_C_AddActorBstTask");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_AddActorBstTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_AddActorBstTask::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, Lo_RetTaskList) == 0x000020, "Member 'BattleSkillActionBase_C_AddActorBstTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, Lo_WaitTaskList) == 0x000030, "Member 'BattleSkillActionBase_C_AddActorBstTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, Lo_EftName) == 0x000040, "Member 'BattleSkillActionBase_C_AddActorBstTask::Lo_EftName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_GetSkillID_ID) == 0x000050, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_GetSkillBaseData_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_GetActorBst_Bst) == 0x000158, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_GetActorBst_Bst' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_Greater_IntInt_ReturnValue) == 0x00015D, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_GetActorPartyIndex_index) == 0x000160, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_BIGetTaskFactory_retValue) == 0x000168, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_BI_AddApplyUnitStateTask_retValue) == 0x000178, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_BI_AddApplyUnitStateTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_Array_Add_ReturnValue) == 0x00017C, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddActorBstTask, CallFunc_Array_Add_ReturnValue_1) == 0x000180, "Member 'BattleSkillActionBase_C_AddActorBstTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsTargetHitStan
// 0x00B8 (0x00B8 - 0x0000)
struct BattleSkillActionBase_C_IsTargetHitStan final
{
public:
	bool                                          IsStan;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D4[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0018(0x0098)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BIT_AND_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsTargetHitStan) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsTargetHitStan");
static_assert(sizeof(BattleSkillActionBase_C_IsTargetHitStan) == 0x0000B8, "Wrong size on BattleSkillActionBase_C_IsTargetHitStan");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, IsStan) == 0x000000, "Member 'BattleSkillActionBase_C_IsTargetHitStan::IsStan' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_IsTargetHitStan::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_IsTargetHitStan::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_IsTargetHitStan::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_IsTargetHitStan::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BattleSkillActionBase_C_IsTargetHitStan::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleSkillActionBase_C_IsTargetHitStan::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_IsTargetHitStan::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetHitStan, CallFunc_BIT_AND_ReturnValue) == 0x0000B1, "Member 'BattleSkillActionBase_C_IsTargetHitStan::CallFunc_BIT_AND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.StartLookAt
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_StartLookAt final
{
public:
	class FName                                   Socket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_TempChara;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsValidActorLook;                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_Socket;                                         // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LookAtPos;                                      // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_StartLookAt) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_StartLookAt");
static_assert(sizeof(BattleSkillActionBase_C_StartLookAt) == 0x000030, "Wrong size on BattleSkillActionBase_C_StartLookAt");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt, Socket) == 0x000000, "Member 'BattleSkillActionBase_C_StartLookAt::Socket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt, Lo_TempChara) == 0x000008, "Member 'BattleSkillActionBase_C_StartLookAt::Lo_TempChara' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt, Lo_IsValidActorLook) == 0x000010, "Member 'BattleSkillActionBase_C_StartLookAt::Lo_IsValidActorLook' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt, Lo_Socket) == 0x000014, "Member 'BattleSkillActionBase_C_StartLookAt::Lo_Socket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt, Lo_ActorIndex) == 0x00001C, "Member 'BattleSkillActionBase_C_StartLookAt::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt, Lo_LookAtPos) == 0x000020, "Member 'BattleSkillActionBase_C_StartLookAt::Lo_LookAtPos' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.StopLookAt
// 0x00E0 (0x00E0 - 0x0000)
struct BattleSkillActionBase_C_StopLookAt final
{
public:
	class ACharaBase_C*                           Lo_TempChara;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0018(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0028(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D7[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D8[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_StopLookAt) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_StopLookAt");
static_assert(sizeof(BattleSkillActionBase_C_StopLookAt) == 0x0000E0, "Wrong size on BattleSkillActionBase_C_StopLookAt");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, Lo_TempChara) == 0x000000, "Member 'BattleSkillActionBase_C_StopLookAt::Lo_TempChara' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_StopLookAt::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattleSkillActionBase_C_StopLookAt::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_GetTargetInfo_Info) == 0x000018, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_FindUnit_Unit) == 0x0000C8, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_GetActorPartyIndex_index) == 0x0000D0, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt, CallFunc_FindUnit_Unit_1) == 0x0000D8, "Member 'BattleSkillActionBase_C_StopLookAt::CallFunc_FindUnit_Unit_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.StartLookAt_OnlyTarget
// 0x01A0 (0x01A0 - 0x0000)
struct BattleSkillActionBase_C_StartLookAt_OnlyTarget final
{
public:
	class FName                                   Socket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Target;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_Socket;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LookAtPos;                                      // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D9[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DA[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0050(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DB[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DC[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BattleSkillActionBase_C_StartLookAt_OnlyTarget) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_StartLookAt_OnlyTarget");
static_assert(sizeof(BattleSkillActionBase_C_StartLookAt_OnlyTarget) == 0x0001A0, "Wrong size on BattleSkillActionBase_C_StartLookAt_OnlyTarget");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, Socket) == 0x000000, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::Socket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, Lo_Target) == 0x000008, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, Lo_Socket) == 0x000010, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::Lo_Socket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, Lo_ActorIndex) == 0x000018, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, Lo_LookAtPos) == 0x00001C, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::Lo_LookAtPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_GetTargetInfo_Info) == 0x000038, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_GetActorPartyIndex_index) == 0x000048, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_FindUnit_Unit) == 0x0000F0, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F9, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_FindUnit_Unit_1) == 0x000100, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StartLookAt_OnlyTarget, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000114, "Member 'BattleSkillActionBase_C_StartLookAt_OnlyTarget::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.StopLookAt_OnlyTarget
// 0x00D0 (0x00D0 - 0x0000)
struct BattleSkillActionBase_C_StopLookAt_OnlyTarget final
{
public:
	class ACharaBase_C*                           Lo_Target;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0018(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0028(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DE[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_StopLookAt_OnlyTarget) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_StopLookAt_OnlyTarget");
static_assert(sizeof(BattleSkillActionBase_C_StopLookAt_OnlyTarget) == 0x0000D0, "Wrong size on BattleSkillActionBase_C_StopLookAt_OnlyTarget");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, Lo_Target) == 0x000000, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, CallFunc_GetTargetInfo_Info) == 0x000018, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopLookAt_OnlyTarget, CallFunc_FindUnit_Unit) == 0x0000C8, "Member 'BattleSkillActionBase_C_StopLookAt_OnlyTarget::CallFunc_FindUnit_Unit' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsOverrideTargetLocation
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_IsOverrideTargetLocation final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOverride;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OverrideSocket;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsOverrideTargetLocation) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsOverrideTargetLocation");
static_assert(sizeof(BattleSkillActionBase_C_IsOverrideTargetLocation) == 0x000020, "Wrong size on BattleSkillActionBase_C_IsOverrideTargetLocation");
static_assert(offsetof(BattleSkillActionBase_C_IsOverrideTargetLocation, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_IsOverrideTargetLocation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsOverrideTargetLocation, IsOverride) == 0x000004, "Member 'BattleSkillActionBase_C_IsOverrideTargetLocation::IsOverride' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsOverrideTargetLocation, OverrideSocket) == 0x000008, "Member 'BattleSkillActionBase_C_IsOverrideTargetLocation::OverrideSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsOverrideTargetLocation, CallFunc_FindUnit_Unit) == 0x000010, "Member 'BattleSkillActionBase_C_IsOverrideTargetLocation::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsOverrideTargetLocation, CallFunc_ActorHasTag_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_IsOverrideTargetLocation::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectAbsorption
// 0x0238 (0x0238 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectAbsorption final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AbsorptionPointSocket;                             // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AbsorptionPointOffset;                             // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           AbsorptionParam;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReverse;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E0[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsReverse;                                      // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E1[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Lo_Curve;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PointOffset;                                    // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_PointSocket;                                    // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E2[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E3[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E4[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E5[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E6[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E7[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlayAbsorptionEffectTask_RetPecID;  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E8[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0190(0x0098)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E9[0x2];                                     // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlayAbsorptionEffectTask_RetPecID_1; // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectAbsorption) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectAbsorption");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectAbsorption) == 0x000238, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectAbsorption");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, AbsorptionPointSocket) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::AbsorptionPointSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, AbsorptionPointOffset) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::AbsorptionPointOffset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, AbsorptionParam) == 0x000018, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::AbsorptionParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, IsReverse) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::IsReverse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Lo_IsReverse) == 0x000028, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Lo_IsReverse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Lo_Curve) == 0x000030, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Lo_Curve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Lo_PointOffset) == 0x000038, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Lo_PointOffset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Lo_PointSocket) == 0x000044, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Lo_PointSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Lo_ActorIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Lo_WaitList) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_IsValidCommandIndex_retValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_GetComandID_retValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_GetReflexInfo_Info) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_GetTargetInfo_Info) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_GetActorPartyIndex_index) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Not_PreBool_ReturnValue) == 0x000144, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Less_IntInt_ReturnValue) == 0x000145, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Greater_IntInt_ReturnValue) == 0x000146, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000147, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_BooleanAND_ReturnValue) == 0x000148, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_BIGetTaskFactory_retValue) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Temp_int_Loop_Counter_Variable_1) == 0x000160, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000164, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Less_IntInt_ReturnValue_1) == 0x000168, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Add_IntInt_ReturnValue_1) == 0x00016C, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_BIGetTaskFactory_retValue_1) == 0x000170, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_BI_AddPlayAbsorptionEffectTask_RetPecID) == 0x000180, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_BI_AddPlayAbsorptionEffectTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Array_Add_ReturnValue) == 0x000184, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, Temp_int_Array_Index_Variable_1) == 0x000188, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000228, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Not_PreBool_ReturnValue_1) == 0x000229, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_BI_AddPlayAbsorptionEffectTask_RetPecID_1) == 0x00022C, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_BI_AddPlayAbsorptionEffectTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_BooleanAND_ReturnValue_1) == 0x000230, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectAbsorption, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000231, "Member 'BattleSkillActionBase_C_Com_PlayEffectAbsorption::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsEndActorBeHomePerformance
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_IsEndActorBeHomePerformance final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsEndActorBeHomePerformance) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsEndActorBeHomePerformance");
static_assert(sizeof(BattleSkillActionBase_C_IsEndActorBeHomePerformance) == 0x000001, "Wrong size on BattleSkillActionBase_C_IsEndActorBeHomePerformance");
static_assert(offsetof(BattleSkillActionBase_C_IsEndActorBeHomePerformance, IsEnd) == 0x000000, "Member 'BattleSkillActionBase_C_IsEndActorBeHomePerformance::IsEnd' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ActorAppearPerformance
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_ActorAppearPerformance final
{
public:
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ActorAppearPerformance) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ActorAppearPerformance");
static_assert(sizeof(BattleSkillActionBase_C_ActorAppearPerformance) == 0x000010, "Wrong size on BattleSkillActionBase_C_ActorAppearPerformance");
static_assert(offsetof(BattleSkillActionBase_C_ActorAppearPerformance, CallFunc_GetActorPartyIndex_index) == 0x000000, "Member 'BattleSkillActionBase_C_ActorAppearPerformance::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ActorAppearPerformance, CallFunc_FindUnit_Unit) == 0x000008, "Member 'BattleSkillActionBase_C_ActorAppearPerformance::CallFunc_FindUnit_Unit' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckAnimNotify_RapidReturn
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_CheckAnimNotify_RapidReturn final
{
public:
	class ACharaBase_C*                           Lo_Actor;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNotifyRapidReturnTiming_IsNotified;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckAnimNotify_RapidReturn");
static_assert(sizeof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn) == 0x000020, "Wrong size on BattleSkillActionBase_C_CheckAnimNotify_RapidReturn");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, Lo_Actor) == 0x000000, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, CallFunc_GetActorPartyIndex_index) == 0x000008, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, CallFunc_FindUnit_Unit) == 0x000010, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, CallFunc_IsNotifyRapidReturnTiming_IsNotified) == 0x000018, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::CallFunc_IsNotifyRapidReturnTiming_IsNotified' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001A, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckAnimNotify_RapidReturn, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BattleSkillActionBase_C_CheckAnimNotify_RapidReturn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_EnemyAction
// 0x0080 (0x0080 - 0x0000)
struct BattleSkillActionBase_C_Com_EnemyAction final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_ACTION_TYPE                           Action;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Option;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EC[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33ED[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyLoopMax_retValue;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EF[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitActionTask_retValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_EnemyAction) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_EnemyAction");
static_assert(sizeof(BattleSkillActionBase_C_Com_EnemyAction) == 0x000080, "Wrong size on BattleSkillActionBase_C_Com_EnemyAction");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_EnemyAction::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, Action) == 0x000004, "Member 'BattleSkillActionBase_C_Com_EnemyAction::Action' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, Option) == 0x000005, "Member 'BattleSkillActionBase_C_Com_EnemyAction::Option' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_Com_EnemyAction::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_EnemyAction::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BIGetTaskFactory_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BIGetPartySystem_retValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BI_const_GetEnemyLoopMax_retValue) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BI_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BI_const_GetEnemyStart_retValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, Temp_int_Variable) == 0x000058, "Member 'BattleSkillActionBase_C_Com_EnemyAction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BI_IsExist_retValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000061, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BIGetTaskFactory_retValue_1) == 0x000068, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_BI_AddUnitActionTask_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_BI_AddUnitActionTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyAction, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_EnemyAction::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_EnemyMotion
// 0x00D8 (0x00D8 - 0x0000)
struct BattleSkillActionBase_C_Com_EnemyMotion final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Motion;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          IgnoreBst;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Com_Index;                                         // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BstInt;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F1[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetBadStatus_retValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F3[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F4[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F5[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F6[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BIT_SHIFT_L_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F7[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyLoopMax_retValue;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F8[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_EnemyMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_EnemyMotion");
static_assert(sizeof(BattleSkillActionBase_C_Com_EnemyMotion) == 0x0000D8, "Wrong size on BattleSkillActionBase_C_Com_EnemyMotion");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, Motion) == 0x000004, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, IgnoreBst) == 0x000008, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::IgnoreBst' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, Com_Index) == 0x000018, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, Lo_BstInt) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::Lo_BstInt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, Lo_WaitList) == 0x000020, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_GetComandID_retValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_IsValidCommandIndex_retValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, Temp_int_Variable) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BIGetPartySystem_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BI_GetBadStatus_retValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BI_GetBadStatus_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BI_IsExist_retValue) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_And_IntInt_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Array_Get_Item) == 0x000074, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BIT_SHIFT_L_ReturnValue) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BIT_SHIFT_L_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Or_IntInt_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BIGetTaskFactory_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BIGetPartySystem_retValue_1) == 0x000098, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BI_const_GetEnemyLoopMax_retValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BI_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BI_const_GetEnemyStart_retValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000BC, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_BI_AddSetUnitMotion_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_EnemyMotion, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_EnemyMotion::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsTargetDead
// 0x0180 (0x0180 - 0x0000)
struct BattleSkillActionBase_C_IsTargetDead final
{
public:
	bool                                          IsDead;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0028(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0038(0x0098)()
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FB[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FC[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_IsTargetDead) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsTargetDead");
static_assert(sizeof(BattleSkillActionBase_C_IsTargetDead) == 0x000180, "Wrong size on BattleSkillActionBase_C_IsTargetDead");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, IsDead) == 0x000000, "Member 'BattleSkillActionBase_C_IsTargetDead::IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_IsTargetDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BattleSkillActionBase_C_IsTargetDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BattleSkillActionBase_C_IsTargetDead::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_GetReflexInfo_Info) == 0x000018, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_GetTargetInfo_Info) == 0x000028, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, Temp_int_Loop_Counter_Variable_1) == 0x000174, "Member 'BattleSkillActionBase_C_IsTargetDead::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Less_IntInt_ReturnValue_1) == 0x000178, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetDead, CallFunc_Add_IntInt_ReturnValue_1) == 0x00017C, "Member 'BattleSkillActionBase_C_IsTargetDead::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsJustBeforeApplyHitTiming
// 0x0058 (0x0058 - 0x0000)
struct BattleSkillActionBase_C_IsJustBeforeApplyHitTiming final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTiming;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExistTaskForPecID_retValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetCurrentMotionID_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FE[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetrieveNotifyTiming_Timing;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveNotifyTiming_IsExist;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FF[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsJustBeforeApplyHitTiming");
static_assert(sizeof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming) == 0x000058, "Wrong size on BattleSkillActionBase_C_IsJustBeforeApplyHitTiming");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, IsTiming) == 0x000004, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::IsTiming' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, Lo_Unit) == 0x000008, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_FindUnit_Unit) == 0x000010, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_BIGetTaskFactory_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_BI_IsExistTaskForPecID_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_BI_IsExistTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_GetCurrentMotionID_ReturnValue) == 0x000029, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_GetCurrentMotionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_RetrieveNotifyTiming_Timing) == 0x000038, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_RetrieveNotifyTiming_Timing' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_RetrieveNotifyTiming_IsExist) == 0x00003C, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_RetrieveNotifyTiming_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_Montage_GetPosition_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_Less_FloatFloat_ReturnValue) == 0x000051, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000052, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsJustBeforeApplyHitTiming, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'BattleSkillActionBase_C_IsJustBeforeApplyHitTiming::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.RetrieveNotifyTiming
// 0x0158 (0x0158 - 0x0000)
struct BattleSkillActionBase_C_RetrieveNotifyTiming final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3400[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NotifyName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsReverseSearch;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3401[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timing;                                            // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3402[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_NotifyName;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<float>                                 Lo_NotifyTiming;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FCharaMotion                           Lo_Motion;                                         // 0x0048(0x0018)(Edit, BlueprintVisible, NoDestructor)
	TArray<class FString>                         Lo_NotifiyNames;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3403[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaMotion                           CallFunc_Map_Find_Value;                           // 0x0088(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3404[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3405[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3406[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3407[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3408[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3409[0x1];                                     // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_RetrieveNotifyTiming_ReturnValue;         // 0x0118(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_RetrieveNotifyNames_ReturnValue;          // 0x0128(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_RetrieveNotifyTiming_ReturnValue_1;       // 0x0138(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_RetrieveNotifyNames_ReturnValue_1;        // 0x0148(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleSkillActionBase_C_RetrieveNotifyTiming) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_RetrieveNotifyTiming");
static_assert(sizeof(BattleSkillActionBase_C_RetrieveNotifyTiming) == 0x000158, "Wrong size on BattleSkillActionBase_C_RetrieveNotifyTiming");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, ActorIndex) == 0x000000, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, MotionID) == 0x000004, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, NotifyName) == 0x000008, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::NotifyName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, IsReverseSearch) == 0x000018, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::IsReverseSearch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Timing) == 0x00001C, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Timing' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, IsExist) == 0x000020, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Lo_NotifyName) == 0x000028, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Lo_NotifyName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Lo_NotifyTiming) == 0x000038, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Lo_NotifyTiming' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Lo_Motion) == 0x000048, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Lo_Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Lo_NotifiyNames) == 0x000060, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Lo_NotifiyNames' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_FindUnit_Unit) == 0x000078, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Map_Find_Value) == 0x000088, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000D9, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_BooleanOR_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0000F1, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x0000F2, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_BooleanOR_ReturnValue_1) == 0x0000F8, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000FC, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Max_ReturnValue) == 0x000100, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Array_Length_ReturnValue_1) == 0x000104, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, Temp_int_Loop_Counter_Variable_1) == 0x00010C, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000110, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000114, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_IsValid_ReturnValue) == 0x000115, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_IsValid_ReturnValue_1) == 0x000116, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_RetrieveNotifyTiming_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_RetrieveNotifyTiming_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_RetrieveNotifyNames_ReturnValue) == 0x000128, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_RetrieveNotifyNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_RetrieveNotifyTiming_ReturnValue_1) == 0x000138, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_RetrieveNotifyTiming_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RetrieveNotifyTiming, CallFunc_RetrieveNotifyNames_ReturnValue_1) == 0x000148, "Member 'BattleSkillActionBase_C_RetrieveNotifyTiming::CallFunc_RetrieveNotifyNames_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ReserveJustBeforeApplyHit
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit final
{
public:
	float                                         JustBeforeSec;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDefaultTiming;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit");
static_assert(sizeof(BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit) == 0x000008, "Wrong size on BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit, JustBeforeSec) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit::JustBeforeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit, IsDefaultTiming) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ReserveJustBeforeApplyHit::IsDefaultTiming' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_MemberMotion
// 0x00B0 (0x00B0 - 0x0000)
struct BattleSkillActionBase_C_Com_MemberMotion final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Motion;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          IgnoreBst;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Com_Index;                                         // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BstInt;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340B[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340C[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BIT_SHIFT_L_ReturnValue;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340D[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340E[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340F[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetBadStatus_retValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPlayerLoopMax_retValue;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3410[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3411[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_MemberMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_MemberMotion");
static_assert(sizeof(BattleSkillActionBase_C_Com_MemberMotion) == 0x0000B0, "Wrong size on BattleSkillActionBase_C_Com_MemberMotion");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_MemberMotion::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, Motion) == 0x000004, "Member 'BattleSkillActionBase_C_Com_MemberMotion::Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, IgnoreBst) == 0x000008, "Member 'BattleSkillActionBase_C_Com_MemberMotion::IgnoreBst' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, Com_Index) == 0x000018, "Member 'BattleSkillActionBase_C_Com_MemberMotion::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, Lo_BstInt) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_MemberMotion::Lo_BstInt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, Lo_WaitList) == 0x000020, "Member 'BattleSkillActionBase_C_Com_MemberMotion::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BattleSkillActionBase_C_Com_MemberMotion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_GetComandID_retValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_IsValidCommandIndex_retValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, Temp_int_Variable) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_MemberMotion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_Array_Get_Item) == 0x000044, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BIT_SHIFT_L_ReturnValue) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BIT_SHIFT_L_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_GetHeroIndex_Index) == 0x000050, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_Or_IntInt_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_MemberMotion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BIGetPartySystem_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000080, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BI_GetBadStatus_retValue) == 0x000084, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BI_GetBadStatus_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_And_IntInt_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BI_const_GetPlayerLoopMax_retValue) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BI_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000091, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BI_IsExist_retValue) == 0x000092, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BIGetTaskFactory_retValue) == 0x000098, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MemberMotion, CallFunc_BI_AddSetUnitMotion_retValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_MemberMotion::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SetHitStopParameter
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_SetHitStopParameter final
{
public:
	struct FBattleSkillHitStop_T                  Parameter;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SetHitStopParameter) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_SetHitStopParameter");
static_assert(sizeof(BattleSkillActionBase_C_SetHitStopParameter) == 0x000040, "Wrong size on BattleSkillActionBase_C_SetHitStopParameter");
static_assert(offsetof(BattleSkillActionBase_C_SetHitStopParameter, Parameter) == 0x000000, "Member 'BattleSkillActionBase_C_SetHitStopParameter::Parameter' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetHitStopParameter, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_SetHitStopParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_BeginSkillHitStop
// 0x0040 (0x0040 - 0x0000)
struct BattleSkillActionBase_C_Com_BeginSkillHitStop final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIindex;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3412[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3413[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_BeginHitStop_RetPecID;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_BeginSkillHitStop) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_BeginSkillHitStop");
static_assert(sizeof(BattleSkillActionBase_C_Com_BeginSkillHitStop) == 0x000040, "Wrong size on BattleSkillActionBase_C_Com_BeginSkillHitStop");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, ComIindex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::ComIindex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, Lo_WaitList) == 0x000008, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, CallFunc_GetComandID_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, CallFunc_IsValidCommandIndex_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, CallFunc_BIGetTaskFactory_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, CallFunc_BI_BeginHitStop_RetPecID) == 0x000038, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::CallFunc_BI_BeginHitStop_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_BeginSkillHitStop, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_BeginSkillHitStop::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UI_IConTask
// 0x0130 (0x0130 - 0x0000)
struct BattleSkillActionBase_C_UI_IConTask final
{
public:
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 WaitTaskList;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         TargetIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Resist;                                            // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Guard;                                             // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo;                                             // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Weak;                                              // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Miss;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLock;                                             // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3414[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RetList;                                           // 0x0030(0x0010)(Parm, OutParm)
	bool                                          Lo_Block;                                          // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Miss;                                           // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Weak;                                           // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3415[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Ret;                                            // 0x0048(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_Combo;                                          // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Guard;                                          // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Resist;                                         // 0x005A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3416[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_TaskList;                                       // 0x0060(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_4;              // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_5;              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUtilIconTask_retPecID;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUtilIconTask_retPecID_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate_2;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUtilIconTask_retPecID_2;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate_3;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUtilIconTask_retPecID_3;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate_4;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUtilIconTask_retPecID_4;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate_5;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUtilIconTask_retPecID_5;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_UI_IConTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UI_IConTask");
static_assert(sizeof(BattleSkillActionBase_C_UI_IConTask) == 0x000130, "Wrong size on BattleSkillActionBase_C_UI_IConTask");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, TaskFactory) == 0x000000, "Member 'BattleSkillActionBase_C_UI_IConTask::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, WaitTaskList) == 0x000010, "Member 'BattleSkillActionBase_C_UI_IConTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, TargetIndex) == 0x000020, "Member 'BattleSkillActionBase_C_UI_IConTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Resist) == 0x000024, "Member 'BattleSkillActionBase_C_UI_IConTask::Resist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Guard) == 0x000025, "Member 'BattleSkillActionBase_C_UI_IConTask::Guard' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Combo) == 0x000026, "Member 'BattleSkillActionBase_C_UI_IConTask::Combo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Weak) == 0x000027, "Member 'BattleSkillActionBase_C_UI_IConTask::Weak' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Miss) == 0x000028, "Member 'BattleSkillActionBase_C_UI_IConTask::Miss' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, bLock) == 0x000029, "Member 'BattleSkillActionBase_C_UI_IConTask::bLock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, RetList) == 0x000030, "Member 'BattleSkillActionBase_C_UI_IConTask::RetList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_Block) == 0x000040, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_Block' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_Miss) == 0x000041, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_Miss' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_Weak) == 0x000042, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_Weak' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_Ret) == 0x000048, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_Ret' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_Combo) == 0x000058, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_Combo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_Guard) == 0x000059, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_Guard' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_Resist) == 0x00005A, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_Resist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_TargetIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, Lo_TaskList) == 0x000060, "Member 'BattleSkillActionBase_C_UI_IConTask::Lo_TaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BIGetTaskFactory_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BIGetTaskFactory_retValue_1) == 0x000080, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BIGetTaskFactory_retValue_2) == 0x000090, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BIGetTaskFactory_retValue_3) == 0x0000A0, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BIGetTaskFactory_retValue_4) == 0x0000B0, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BIGetTaskFactory_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BIGetTaskFactory_retValue_5) == 0x0000C0, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BIGetTaskFactory_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_GetPlayRate_PlayRate) == 0x0000D0, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BI_AddUtilIconTask_retPecID) == 0x0000D4, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BI_AddUtilIconTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_1) == 0x0000DC, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_GetPlayRate_PlayRate_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_GetPlayRate_PlayRate_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BI_AddUtilIconTask_retPecID_1) == 0x0000E4, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BI_AddUtilIconTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_2) == 0x0000E8, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_3) == 0x0000EC, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_GetPlayRate_PlayRate_2) == 0x0000F0, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_GetPlayRate_PlayRate_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BI_AddUtilIconTask_retPecID_2) == 0x0000F4, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BI_AddUtilIconTask_retPecID_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_4) == 0x0000F8, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_5) == 0x0000FC, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_GetPlayRate_PlayRate_3) == 0x000100, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_GetPlayRate_PlayRate_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BI_AddUtilIconTask_retPecID_3) == 0x000104, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BI_AddUtilIconTask_retPecID_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_6) == 0x000108, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_7) == 0x00010C, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_GetPlayRate_PlayRate_4) == 0x000110, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_GetPlayRate_PlayRate_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BI_AddUtilIconTask_retPecID_4) == 0x000114, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BI_AddUtilIconTask_retPecID_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_8) == 0x000118, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_9) == 0x00011C, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_GetPlayRate_PlayRate_5) == 0x000120, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_GetPlayRate_PlayRate_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_BI_AddUtilIconTask_retPecID_5) == 0x000124, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_BI_AddUtilIconTask_retPecID_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_10) == 0x000128, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UI_IConTask, CallFunc_Array_Add_ReturnValue_11) == 0x00012C, "Member 'BattleSkillActionBase_C_UI_IConTask::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcUnitSocketLocation
// 0x02F0 (0x02F0 - 0x0000)
struct BattleSkillActionBase_C_CalcUnitSocketLocation final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3417[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    BPI_BattleParty;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForTarget;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3418[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Root;                                              // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SocketLocation;                                    // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotate;                                            // 0x003C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3419[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_PartyIndex;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_LahmuTentalcleID;                               // 0x0050(0x0010)(Edit, BlueprintVisible)
	class ACharaBase_C*                           Lo_Chara;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341A[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetPartyTransform_retValue;            // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341B[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341C[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341D[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetEnemyLeaderIndex_PartyIndex;        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetCharaID_retValue;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341E[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341F[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3420[0x8];                                     // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3421[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcUnitSocketLocation) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_CalcUnitSocketLocation");
static_assert(sizeof(BattleSkillActionBase_C_CalcUnitSocketLocation) == 0x0002F0, "Wrong size on BattleSkillActionBase_C_CalcUnitSocketLocation");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, BPI_BattleParty) == 0x000010, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::BPI_BattleParty' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, ForTarget) == 0x000020, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::ForTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, Root) == 0x000024, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::Root' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, SocketLocation) == 0x000030, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, Rotate) == 0x00003C, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::Rotate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, Valid) == 0x000048, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::Valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, Lo_PartyIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, Lo_LahmuTentalcleID) == 0x000050, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::Lo_LahmuTentalcleID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, Lo_Chara) == 0x000060, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::Lo_Chara' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BI_GetPartyTransform_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BI_GetPartyTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location) == 0x0000A4, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale) == 0x0000BC, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_1) == 0x0000D4, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_2) == 0x0000EC, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_2) == 0x0000F8, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_2) == 0x000104, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_GetUpVector_ReturnValue) == 0x000110, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_GetAxes_X) == 0x00011C, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_GetAxes_Y) == 0x000128, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_GetAxes_Z) == 0x000134, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_FindUnit_Unit) == 0x000150, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000158, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BIGetPartySystem_retValue) == 0x000168, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BI_GetEnemyLeaderIndex_PartyIndex) == 0x000178, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BI_GetEnemyLeaderIndex_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BI_GetCharaID_retValue) == 0x00017C, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BI_GetCharaID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_Array_Contains_ReturnValue) == 0x000180, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BooleanAND_ReturnValue) == 0x000181, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, K2Node_MakeArray_Array) == 0x000188, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00019C, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_MakeTransform_ReturnValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_GetSocketTransform_ReturnValue) == 0x0001E0, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_ComposeTransforms_ReturnValue) == 0x000210, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakVector_X) == 0x000240, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakVector_Y) == 0x000244, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakVector_Z) == 0x000248, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_3) == 0x00024C, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_3) == 0x000258, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_3) == 0x000264, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000270, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000280, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002B0, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Location_4) == 0x0002BC, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Rotation_4) == 0x0002C8, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_BreakTransform_Scale_4) == 0x0002D4, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitSocketLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'BattleSkillActionBase_C_CalcUnitSocketLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetSkillArea
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_GetSkillArea final
{
public:
	E_SKILL_TARGET                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3422[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0008(0x0100)(ConstParm)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetSkillArea) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetSkillArea");
static_assert(sizeof(BattleSkillActionBase_C_GetSkillArea) == 0x000110, "Wrong size on BattleSkillActionBase_C_GetSkillArea");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillArea, ReturnValue) == 0x000000, "Member 'BattleSkillActionBase_C_GetSkillArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillArea, CallFunc_GetSkillID_ID) == 0x000004, "Member 'BattleSkillActionBase_C_GetSkillArea::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillArea, CallFunc_GetSkillBaseData_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_GetSkillArea::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillArea, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_GetSkillArea::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsThisOneTargetSkill
// 0x000C (0x000C - 0x0000)
struct BattleSkillActionBase_C_IsThisOneTargetSkill final
{
public:
	bool                                          IsOneTarget;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Lo_SkillArea;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsThisOneTargetSkill) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsThisOneTargetSkill");
static_assert(sizeof(BattleSkillActionBase_C_IsThisOneTargetSkill) == 0x00000C, "Wrong size on BattleSkillActionBase_C_IsThisOneTargetSkill");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, IsOneTarget) == 0x000000, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::IsOneTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, Lo_SkillArea) == 0x000001, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::Lo_SkillArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_GetSkillArea_ReturnValue) == 0x000002, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000006, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000007, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_BooleanOR_ReturnValue_1) == 0x000009, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_BooleanOR_ReturnValue_2) == 0x00000A, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetSkill, CallFunc_BooleanOR_ReturnValue_3) == 0x00000B, "Member 'BattleSkillActionBase_C_IsThisOneTargetSkill::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetAnimCamActorRelative_BySize
// 0x0250 (0x0250 - 0x0000)
struct BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3423[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCameraAnimationAsset*>          Asset;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCurveFloat*                            LarpAlpha;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideOtherActor;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllActor;                                      // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOtherTarget;                                   // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllTarget;                                     // 0x002B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   OriginTransSocket;                                 // 0x002C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3424[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTrans;                                       // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          HaveToCleanUp;                                     // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayOneScale;                                    // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResetCharaParticle;                                // 0x0072(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3425[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0074(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CleanUp;                                        // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3426[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Lo_LerpAlpha;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCameraAnimationAsset*>          Lo_Cameras;                                        // 0x0088(0x0010)(Edit, BlueprintVisible)
	class ACharaBase_C*                           Lo_Target;                                         // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideAllTarget;                                  // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideAllActor;                                   // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3427[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Offset;                                         // 0x00B0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_SocketName;                                     // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideOtherTareget;                               // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideOtherActor;                                 // 0x00E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3428[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_BlendOut;                                       // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BlendIn;                                        // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3429[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x00F8(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342A[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex; // 0x0110(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex; // 0x0120(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342B[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  CallFunc_CalcTargetCamAnim_CameraAnim;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CallFunc_CalcTargetCamAnim_CameraAnim2nd;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcTargetCamAnim_LerpAlpha;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342C[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0160(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342D[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342E[0x1];                                     // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342F[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3430[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3431[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_2;       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddAnimationCameraTask_retPecID;       // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize) == 0x000250, "Wrong size on BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Asset) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Asset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, LarpAlpha) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::LarpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, BlendInTime) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, BlendOutTime) == 0x000024, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, HideOtherActor) == 0x000028, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, HideAllActor) == 0x000029, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, HideOtherTarget) == 0x00002A, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, HideAllTarget) == 0x00002B, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, OriginTransSocket) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::OriginTransSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, OffsetTrans) == 0x000040, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, HaveToCleanUp) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::HaveToCleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, IsPlayOneScale) == 0x000071, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::IsPlayOneScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, ResetCharaParticle) == 0x000072, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::ResetCharaParticle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, ComIndex) == 0x000074, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_CleanUp) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_CleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_LerpAlpha) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_Cameras) == 0x000088, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_Cameras' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_Target) == 0x000098, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_ActorIndex) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_TargetIndex) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_HideAllTarget) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_HideAllActor) == 0x0000A9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_Offset) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_SocketName) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_HideOtherTareget) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_HideOtherTareget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_HideOtherActor) == 0x0000E9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_BlendOut) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_BlendOut' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_BlendIn) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_BlendIn' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, Lo_WaitList) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetComandID_retValue) == 0x000108, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_IsValidCommandIndex_retValue) == 0x00010C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex) == 0x000110, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex) == 0x000120, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_Conv_NameToString_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_CalcTargetCamAnim_CameraAnim) == 0x000148, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_CalcTargetCamAnim_CameraAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_CalcTargetCamAnim_CameraAnim2nd) == 0x000150, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_CalcTargetCamAnim_CameraAnim2nd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_CalcTargetCamAnim_LerpAlpha) == 0x000158, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_CalcTargetCamAnim_LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetFirstTargetInfo_Info) == 0x000160, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetFirstTargetInfo_valid) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0001FC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetActorPartyIndex_index) == 0x000200, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_Not_PreBool_ReturnValue) == 0x000204, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_BooleanOR_ReturnValue) == 0x000205, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_BooleanOR_ReturnValue_1) == 0x000206, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_SelectInt_ReturnValue) == 0x000208, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_SelectInt_ReturnValue_1) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_IsReflected_IsReflected) == 0x000210, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000214, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_BooleanAND_ReturnValue) == 0x000218, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetTargetInfoLength_length) == 0x00021C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_BIGetTaskFactory_retValue) == 0x000220, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_Greater_IntInt_ReturnValue) == 0x000230, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_GetBeforCommandIndex_RetComIndex_2) == 0x000234, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_GetBeforCommandIndex_RetComIndex_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_Array_Add_ReturnValue) == 0x000238, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_BI_AddAnimationCameraTask_retPecID) == 0x00023C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_BI_AddAnimationCameraTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_Array_Add_ReturnValue_1) == 0x000240, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize, CallFunc_Array_Add_ReturnValue_2) == 0x000244, "Member 'BattleSkillActionBase_C_Com_SetAnimCamActorRelative_BySize::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcTargetCamAnim
// 0x01D0 (0x01D0 - 0x0000)
struct BattleSkillActionBase_C_CalcTargetCamAnim final
{
public:
	TArray<class UCameraAnimationAsset*>          CameraAnims;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCurveFloat*                            LeapAlpha;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CameraAnim;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CameraAnim2nd;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpAlpha;                                         // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3432[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndex;                                    // 0x0030(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Value;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Degree;                                         // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MaxSize;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Val;                                               // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Dev;                                               // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Origin;                                            // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3433[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CallFunc_Array_Get_Item_3;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3434[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3435[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  CallFunc_Array_Get_Item_4;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3436[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_1;                       // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3437[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3438[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalcUnitTall_Tall;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0180(0x0010)(ReferenceParm)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3439[0x2];                                     // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x01A0(0x0010)(ReferenceParm)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343A[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcUnitTall_Tall_1;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343B[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CalcTargetCamAnim) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcTargetCamAnim");
static_assert(sizeof(BattleSkillActionBase_C_CalcTargetCamAnim) == 0x0001D0, "Wrong size on BattleSkillActionBase_C_CalcTargetCamAnim");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CameraAnims) == 0x000000, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CameraAnims' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, LeapAlpha) == 0x000010, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::LeapAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CameraAnim) == 0x000018, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CameraAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CameraAnim2nd) == 0x000020, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CameraAnim2nd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, LerpAlpha) == 0x000028, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Lo_TargetIndex) == 0x000030, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Lo_Value) == 0x000040, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Lo_Degree) == 0x000044, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Lo_Degree' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Lo_MaxSize) == 0x000048, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Lo_MaxSize' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Val) == 0x00004C, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Val' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Dev) == 0x000050, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Dev' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Origin) == 0x000054, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Origin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_GetObjectName_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Get_Item_3) == 0x0000A8, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, K2Node_SwitchInteger_CmpSuccess) == 0x0000B4, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_LastIndex_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Get_Item_4) == 0x0000C0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Left_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000100, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000110, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Left_ReturnValue_1) == 0x000120, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Left_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000130, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Temp_int_Array_Index_Variable) == 0x000140, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000148, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_FClamp_ReturnValue) == 0x000158, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_GetActorPartyIndex_index) == 0x000160, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_BIGetPartySystem_retValue) == 0x000168, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_CalcUnitTall_Tall) == 0x000178, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_CalcUnitTall_Tall' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00017C, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_GetTargetPartyIndex_index) == 0x000180, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_DegAtan2_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_GetFloatValue_ReturnValue) == 0x000194, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Get_Item_5) == 0x000198, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00019C, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_BI_GetSide_side) == 0x00019D, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_BI_GetSideIsTargetList_List) == 0x0001A0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_GetSkillArea_ReturnValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B1, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Get_Item_6) == 0x0001B4, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Array_Length_ReturnValue_1) == 0x0001B8, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_CalcUnitTall_Tall_1) == 0x0001BC, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_CalcUnitTall_Tall_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, Temp_int_Loop_Counter_Variable) == 0x0001C0, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcTargetCamAnim, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001CC, "Member 'BattleSkillActionBase_C_CalcTargetCamAnim::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetAnimCamTargetRelative_BySize
// 0x0250 (0x0250 - 0x0000)
struct BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCameraAnimationAsset*>          Asset;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCurveFloat*                            LerpAlpha;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideOtherActor;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllActor;                                      // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOtherTarget;                                   // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllTarget;                                     // 0x002B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   OriginTransSocket;                                 // 0x002C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343D[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTrans;                                       // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          HaveToCleanUp;                                     // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResetCharaParticle;                                // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343E[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0074(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsParty;                                        // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_CleanUp;                                        // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343F[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Lo_Curve;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_TempActor;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideAllTarget;                                  // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideAllActor;                                   // 0x0099(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3440[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_Offset;                                         // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Lo_SocketName;                                     // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideTarget;                                     // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideActor;                                      // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3441[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_BlendOut;                                       // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BlendIn;                                        // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3442[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCameraAnimationAsset*>          Lo_Camera;                                         // 0x00E8(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x00F8(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3443[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3444[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex; // 0x0128(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex; // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3445[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  CallFunc_CalcTargetCamAnim_CameraAnim;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CallFunc_CalcTargetCamAnim_CameraAnim2nd;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcTargetCamAnim_LerpAlpha;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3446[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3447[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0178(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3448[0x2];                                     // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length_1;             // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3449[0x2];                                     // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344A[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344B[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddAnimationCameraTask_retPecID;       // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize) == 0x000250, "Wrong size on BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Asset) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Asset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, LerpAlpha) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, BlendInTime) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, BlendOutTime) == 0x000024, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, HideOtherActor) == 0x000028, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, HideAllActor) == 0x000029, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, HideOtherTarget) == 0x00002A, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, HideAllTarget) == 0x00002B, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, OriginTransSocket) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::OriginTransSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, OffsetTrans) == 0x000040, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, HaveToCleanUp) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::HaveToCleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, ResetCharaParticle) == 0x000071, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::ResetCharaParticle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, ComIndex) == 0x000074, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_IsParty) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_IsParty' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_CleanUp) == 0x000079, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_CleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_Curve) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_Curve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_TempActor) == 0x000088, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_TempActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_TargetIndex) == 0x000090, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_ActorIndex) == 0x000094, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_HideAllTarget) == 0x000098, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_HideAllActor) == 0x000099, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_Offset) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_SocketName) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_HideTarget) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_HideTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_HideActor) == 0x0000D9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_HideActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_BlendOut) == 0x0000DC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_BlendOut' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_BlendIn) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_BlendIn' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_Camera) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, Lo_WaitList) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetComandID_retValue) == 0x000108, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_IsValidCommandIndex_retValue) == 0x00010C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_Conv_NameToString_ReturnValue) == 0x000110, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000124, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex) == 0x000128, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex) == 0x000138, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetActorPartyIndex_index) == 0x000148, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_CalcTargetCamAnim_CameraAnim) == 0x000150, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_CalcTargetCamAnim_CameraAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_CalcTargetCamAnim_CameraAnim2nd) == 0x000158, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_CalcTargetCamAnim_CameraAnim2nd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_CalcTargetCamAnim_LerpAlpha) == 0x000160, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_CalcTargetCamAnim_LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_BooleanOR_ReturnValue) == 0x000164, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_SelectInt_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_BooleanOR_ReturnValue_1) == 0x00016C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_SelectInt_ReturnValue_1) == 0x000170, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetTargetInfoLength_length) == 0x000174, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetFirstTargetInfo_Info) == 0x000178, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetFirstTargetInfo_valid) == 0x000210, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_Greater_IntInt_ReturnValue) == 0x000211, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetTargetInfoLength_length_1) == 0x000214, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetTargetInfoLength_length_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000218, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00021C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetSkillArea_ReturnValue) == 0x00021D, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_BIGetTaskFactory_retValue) == 0x000220, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000230, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000234, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_BooleanOR_ReturnValue_2) == 0x000238, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_Array_Add_ReturnValue) == 0x00023C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_BI_AddAnimationCameraTask_retPecID) == 0x000240, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_BI_AddAnimationCameraTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_Array_Add_ReturnValue_1) == 0x000244, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize, CallFunc_Array_Add_ReturnValue_2) == 0x000248, "Member 'BattleSkillActionBase_C_Com_SetAnimCamTargetRelative_BySize::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetAnimCamOriginRelative_BySize
// 0x0240 (0x0240 - 0x0000)
struct BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCameraAnimationAsset*>          Asset;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCurveFloat*                            LerpAlpha;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344D[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTrans;                                       // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          HideOtherActor;                                    // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllActor;                                      // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOtherTarget;                                   // 0x0062(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllTarget;                                     // 0x0063(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HaveToCleanUp;                                     // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayOneScale;                                    // 0x0065(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344E[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CleanUp;                                        // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344F[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Lo_Curve;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCameraAnimationAsset*>          Lo_Cameras;                                        // 0x0078(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideAllTarget;                                  // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideTarget;                                     // 0x008D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideAllActor;                                   // 0x008E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideActor;                                      // 0x008F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3450[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex; // 0x00A8(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex; // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3451[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationAsset*                  CallFunc_CalcTargetCamAnim_CameraAnim;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationAsset*                  CallFunc_CalcTargetCamAnim_CameraAnim2nd;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcTargetCamAnim_LerpAlpha;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3452[0x1];                                     // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3453[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x00F8(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3454[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3455[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddAnimationCameraTask_retPecID;       // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize) == 0x000240, "Wrong size on BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Asset) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Asset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, LerpAlpha) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, BlendInTime) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::BlendInTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, BlendOutTime) == 0x000024, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::BlendOutTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, OffsetTrans) == 0x000030, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::OffsetTrans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, HideOtherActor) == 0x000060, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, HideAllActor) == 0x000061, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, HideOtherTarget) == 0x000062, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, HideAllTarget) == 0x000063, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, HaveToCleanUp) == 0x000064, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::HaveToCleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, IsPlayOneScale) == 0x000065, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::IsPlayOneScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, ComIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_CleanUp) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_CleanUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_Curve) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_Curve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_Cameras) == 0x000078, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_Cameras' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_TargetIndex) == 0x000088, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_HideAllTarget) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_HideTarget) == 0x00008D, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_HideTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_HideAllActor) == 0x00008E, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_HideActor) == 0x00008F, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_HideActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, Lo_WaitList) == 0x000090, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_GetComandID_retValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_IsValidCommandIndex_retValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_CalcPartyVisibilitySituation_VisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_CalcPartyVisibilitySituation_InvisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_GetActorPartyIndex_index) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_CalcTargetCamAnim_CameraAnim) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_CalcTargetCamAnim_CameraAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_CalcTargetCamAnim_CameraAnim2nd) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_CalcTargetCamAnim_CameraAnim2nd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_CalcTargetCamAnim_LerpAlpha) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_CalcTargetCamAnim_LerpAlpha' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_BooleanOR_ReturnValue) == 0x0000E9, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_BooleanOR_ReturnValue_1) == 0x0000EA, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_SelectInt_ReturnValue) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_SelectInt_ReturnValue_1) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_GetFirstTargetInfo_Info) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_GetFirstTargetInfo_valid) == 0x000190, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_Not_PreBool_ReturnValue) == 0x000191, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000194, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_GetTargetInfoLength_length) == 0x000198, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_Greater_IntInt_ReturnValue) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_BIGetMainWork_NewParam) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_BI_GetOriginTransform_retValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_BIGetTaskFactory_retValue) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_ComposeTransforms_ReturnValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000220, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_Array_Add_ReturnValue) == 0x000224, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_BI_AddAnimationCameraTask_retPecID) == 0x000228, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_BI_AddAnimationCameraTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_Array_Add_ReturnValue_1) == 0x00022C, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize, CallFunc_Array_Add_ReturnValue_2) == 0x000230, "Member 'BattleSkillActionBase_C_Com_SetAnimCamOriginRelative_BySize::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_CamDepthOfField
// 0x0050 (0x0050 - 0x0000)
struct BattleSkillActionBase_C_Com_CamDepthOfField final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FocalDistance;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DurationSec;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3456[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3457[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddCameraDOFTask_RetPecID;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_CamDepthOfField) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_CamDepthOfField");
static_assert(sizeof(BattleSkillActionBase_C_Com_CamDepthOfField) == 0x000050, "Wrong size on BattleSkillActionBase_C_Com_CamDepthOfField");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, FocalDistance) == 0x000004, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::FocalDistance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, Scale) == 0x000008, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, DurationSec) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::DurationSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, Lo_WaitList) == 0x000018, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, CallFunc_GetComandID_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, CallFunc_IsValidCommandIndex_retValue) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, CallFunc_BIGetTaskFactory_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000040, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, CallFunc_BI_AddCameraDOFTask_RetPecID) == 0x000044, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::CallFunc_BI_AddCameraDOFTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamDepthOfField, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_CamDepthOfField::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Item
// 0x00A8 (0x00A8 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Item final
{
public:
	int32                                         ComIndex;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsAid;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsHero;                                         // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             Temp_byte_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3458[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3459[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             K2Node_Select_Default_1;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345A[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemID_ID;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0040(0x005C)(ConstParm, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Item) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Item");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Item) == 0x0000A8, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Item");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, ComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, Lo_IsAid) == 0x000004, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::Lo_IsAid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, Lo_IsHero) == 0x000005, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::Lo_IsHero' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, Temp_bool_Variable) == 0x000006, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, Temp_byte_Variable) == 0x000007, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, Temp_byte_Variable_1) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_MakeLiteralByte_ReturnValue) == 0x000009, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, Temp_bool_Variable_1) == 0x00000A, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, Temp_byte_Variable_2) == 0x00000B, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_SelectString_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, K2Node_Select_Default) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_GetHeroIndex_Index) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, K2Node_Select_Default_1) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_GetItemID_ID) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_GetUseItemData_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Item, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_Introduction_Item::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IntroductionItemFunc
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_IntroductionItemFunc final
{
public:
	int32                                         CallFunc_Com_Introduction_Item_ComIndex;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_IntroductionItemFunc) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_IntroductionItemFunc");
static_assert(sizeof(BattleSkillActionBase_C_IntroductionItemFunc) == 0x000004, "Wrong size on BattleSkillActionBase_C_IntroductionItemFunc");
static_assert(offsetof(BattleSkillActionBase_C_IntroductionItemFunc, CallFunc_Com_Introduction_Item_ComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_IntroductionItemFunc::CallFunc_Com_Introduction_Item_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetActorPartyIndex
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_GetActorPartyIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Index;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetActorPartyIndex) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetActorPartyIndex");
static_assert(sizeof(BattleSkillActionBase_C_GetActorPartyIndex) == 0x000020, "Wrong size on BattleSkillActionBase_C_GetActorPartyIndex");
static_assert(offsetof(BattleSkillActionBase_C_GetActorPartyIndex, Param_Index) == 0x000000, "Member 'BattleSkillActionBase_C_GetActorPartyIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetActorPartyIndex, Lo_Index) == 0x000008, "Member 'BattleSkillActionBase_C_GetActorPartyIndex::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetActorPartyIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_GetActorPartyIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetActorPartyIndex, CallFunc_SelectInt_ReturnValue) == 0x00001C, "Member 'BattleSkillActionBase_C_GetActorPartyIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_TargetMotion
// 0x00D0 (0x00D0 - 0x0000)
struct BattleSkillActionBase_C_Com_TargetMotion final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Motion;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomTiming;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Lo_Motion;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsRandom;                                       // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345E[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Target;                                         // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345F[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_AnimNotify_DamageMotion_Com_Index;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3460[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3461[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0070(0x0010)(ReferenceParm)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3462[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3463[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_TargetMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_TargetMotion");
static_assert(sizeof(BattleSkillActionBase_C_Com_TargetMotion) == 0x0000D0, "Wrong size on BattleSkillActionBase_C_Com_TargetMotion");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_TargetMotion::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Motion) == 0x000004, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, RandomTiming) == 0x000005, "Member 'BattleSkillActionBase_C_Com_TargetMotion::RandomTiming' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Lo_Motion) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Lo_Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Lo_IsRandom) == 0x00000D, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Lo_IsRandom' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Lo_Target) == 0x000010, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Lo_WaitList) == 0x000020, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_GetComandID_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_IsValidCommandIndex_retValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattleSkillActionBase_C_Com_TargetMotion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, K2Node_MakeArray_Array) == 0x000048, "Member 'BattleSkillActionBase_C_Com_TargetMotion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_AnimNotify_DamageMotion_Com_Index) == 0x000058, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_AnimNotify_DamageMotion_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00005D, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_BooleanOR_ReturnValue) == 0x00005E, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_RandomFloatInRange_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_GetTargetPartyIndex_index) == 0x000070, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_BIGetTaskFactory_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_BIGetPartySystem_retValue) == 0x000098, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_BI_IsExist_retValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_BI_AddSetUnitMotion_retValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_TargetMotion, CallFunc_Array_Add_ReturnValue_1) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_TargetMotion::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.TargetLookToActor
// 0x0340 (0x0340 - 0x0000)
struct BattleSkillActionBase_C_TargetLookToActor final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Lo_Target;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Actor;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_GetFirstReflexInfo_Info;                  // 0x0038(0x0098)()
	bool                                          CallFunc_GetFirstReflexInfo_valid;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3464[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x00D8(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3465[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0178(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3466[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0190(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetReflexInfoLength_length_1;             // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0230(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3467[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0248(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3468[0x2];                                     // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitStayDirToTargetTask_retPecID;   // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3469[0x3];                                     // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346A[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side_1;                        // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346B[0x5];                                     // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitStayDirToTargetTask_retPecID_1; // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_TargetLookToActor) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_TargetLookToActor");
static_assert(sizeof(BattleSkillActionBase_C_TargetLookToActor) == 0x000340, "Wrong size on BattleSkillActionBase_C_TargetLookToActor");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_TargetLookToActor::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, Lo_Target) == 0x000010, "Member 'BattleSkillActionBase_C_TargetLookToActor::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, Lo_Actor) == 0x000014, "Member 'BattleSkillActionBase_C_TargetLookToActor::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, Lo_WaitList) == 0x000018, "Member 'BattleSkillActionBase_C_TargetLookToActor::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattleSkillActionBase_C_TargetLookToActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BattleSkillActionBase_C_TargetLookToActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BattleSkillActionBase_C_TargetLookToActor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetFirstReflexInfo_Info) == 0x000038, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetFirstReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetFirstReflexInfo_valid) == 0x0000D0, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetFirstReflexInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetReflexInfoLength_length) == 0x0000D4, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetFirstTargetInfo_Info) == 0x0000D8, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetFirstTargetInfo_valid) == 0x000170, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000171, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetTargetInfoLength_length) == 0x000174, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetReflexInfo_Info) == 0x000178, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000188, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Array_Get_Item) == 0x000190, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Array_Length_ReturnValue) == 0x000228, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetReflexInfoLength_length_1) == 0x00022C, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetReflexInfoLength_length_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_GetTargetInfo_Info) == 0x000230, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000240, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Array_Get_Item_1) == 0x000248, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Array_Length_ReturnValue_1) == 0x0002E0, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Less_IntInt_ReturnValue) == 0x0002E4, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002E5, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_BIGetTaskFactory_retValue) == 0x0002E8, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, Temp_int_Loop_Counter_Variable_1) == 0x0002F8, "Member 'BattleSkillActionBase_C_TargetLookToActor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_BI_AddUnitStayDirToTargetTask_retPecID) == 0x0002FC, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_BI_AddUnitStayDirToTargetTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Less_IntInt_ReturnValue_1) == 0x000300, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000304, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000308, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_BIGetPartySystem_retValue) == 0x000310, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_BI_GetSide_side) == 0x000320, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_BI_GetSide_side_1) == 0x000321, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_BI_GetSide_side_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000322, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_BIGetTaskFactory_retValue_1) == 0x000328, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TargetLookToActor, CallFunc_BI_AddUnitStayDirToTargetTask_retPecID_1) == 0x000338, "Member 'BattleSkillActionBase_C_TargetLookToActor::CallFunc_BI_AddUnitStayDirToTargetTask_retPecID_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.isHitTarget
// 0x00F0 (0x00F0 - 0x0000)
struct BattleSkillActionBase_C_IsHitTarget final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHit;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HitCount;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0020(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0030(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item_1;                         // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346D[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346E[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346F[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3470[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_IsHitTarget) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsHitTarget");
static_assert(sizeof(BattleSkillActionBase_C_IsHitTarget) == 0x0000F0, "Wrong size on BattleSkillActionBase_C_IsHitTarget");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, TargetIndex) == 0x000000, "Member 'BattleSkillActionBase_C_IsHitTarget::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, IsHit) == 0x000004, "Member 'BattleSkillActionBase_C_IsHitTarget::IsHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, HitCount) == 0x000008, "Member 'BattleSkillActionBase_C_IsHitTarget::HitCount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BattleSkillActionBase_C_IsHitTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, Temp_int_Variable) == 0x000010, "Member 'BattleSkillActionBase_C_IsHitTarget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleSkillActionBase_C_IsHitTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BattleSkillActionBase_C_IsHitTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_GetTargetInfo_Info) == 0x000020, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Array_Get_Item) == 0x000030, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CD, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Array_Get_Item_1) == 0x0000CE, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D4, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'BattleSkillActionBase_C_IsHitTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHitTarget, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000EC, "Member 'BattleSkillActionBase_C_IsHitTarget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetSequencerCamTargetRelative
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Lo_SkillArea;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3471[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative) == 0x000028, "Wrong size on BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative, Lo_SkillArea) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative::Lo_SkillArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetSequencerCamTargetRelative::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Melee
// 0x003C (0x003C - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Melee final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeleeStartDistance;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            CallFunc_GetExtraAction_ExtraAction;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWarpAtIntroductionMelee_m_IsWarpAtIntroductionMelee; // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3472[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcMoveDestLocation_Location;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcMoveDestLocation_Ave;                 // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMoveDestLocation_DistFromTarget;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTargetLocation_ComIndex;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Melee) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Melee");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Melee) == 0x00003C, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Melee");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, MeleeStartDistance) == 0x000004, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::MeleeStartDistance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, ComIndex) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_GetExtraAction_ExtraAction) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_GetExtraAction_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000D, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_IsWarpAtIntroductionMelee_m_IsWarpAtIntroductionMelee) == 0x00000F, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_IsWarpAtIntroductionMelee_m_IsWarpAtIntroductionMelee' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_CalcMoveDestLocation_Location) == 0x000014, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_CalcMoveDestLocation_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_CalcMoveDestLocation_Ave) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_CalcMoveDestLocation_Ave' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_CalcMoveDestLocation_DistFromTarget) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_CalcMoveDestLocation_DistFromTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_Com_ActorMoveToTargetLocation_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_Com_ActorMoveToTargetLocation_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_SelectFloat_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Melee, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Melee::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcMotionStartPosition
// 0x0098 (0x0098 - 0x0000)
struct BattleSkillActionBase_C_CalcMotionStartPosition final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3473[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NotifyName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         OffsetPosition;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartPosition;                                     // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MotionLength;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3474[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaMotion                           Lo_Motion;                                         // 0x0028(0x0018)(Edit, BlueprintVisible, NoDestructor)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetrieveNotifyTiming_Timing;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RetrieveNotifyTiming_IsExist;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3475[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3476[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3477[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaMotion                           CallFunc_Map_Find_Value;                           // 0x0068(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3478[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3479[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue_1;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CalcMotionStartPosition) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcMotionStartPosition");
static_assert(sizeof(BattleSkillActionBase_C_CalcMotionStartPosition) == 0x000098, "Wrong size on BattleSkillActionBase_C_CalcMotionStartPosition");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, MotionID) == 0x000004, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, NotifyName) == 0x000008, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::NotifyName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, OffsetPosition) == 0x000018, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::OffsetPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, StartPosition) == 0x00001C, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, Lo_MotionLength) == 0x000020, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::Lo_MotionLength' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, Lo_Motion) == 0x000028, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::Lo_Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, Lo_Unit) == 0x000040, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_RetrieveNotifyTiming_Timing) == 0x000048, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_RetrieveNotifyTiming_Timing' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_RetrieveNotifyTiming_IsExist) == 0x00004C, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_RetrieveNotifyTiming_IsExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_FindUnit_Unit) == 0x000058, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_Map_Find_Value) == 0x000068, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000081, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_GetPlayLength_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000089, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_GetPlayLength_ReturnValue_1) == 0x00008C, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_GetPlayLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000090, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMotionStartPosition, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BattleSkillActionBase_C_CalcMotionStartPosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ApplyDebugParam
// 0x00E0 (0x00E0 - 0x0000)
struct BattleSkillActionBase_C_ApplyDebugParam final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugGetActorDitherAtSkillHit_Allowed; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0008(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0018(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347B[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsNkmBoxOn_IsAdjust;     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347C[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BattleDesignDebugGetMeleeStartDistance_Distance; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCreateDebugMenuData_ReturnValue;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_ApplyDebugParam) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ApplyDebugParam");
static_assert(sizeof(BattleSkillActionBase_C_ApplyDebugParam) == 0x0000E0, "Wrong size on BattleSkillActionBase_C_ApplyDebugParam");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSkillActionBase_C_ApplyDebugParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_BattleDesignDebugGetActorDitherAtSkillHit_Allowed) == 0x000004, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_BattleDesignDebugGetActorDitherAtSkillHit_Allowed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_GetTargetInfo_Info) == 0x000008, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_GetActorPartyIndex_index) == 0x0000B4, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_FindUnit_Unit) == 0x0000B8, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_FindUnit_Unit_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BattleSkillActionBase_C_ApplyDebugParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_BattleDesignDebugIsNkmBoxOn_IsAdjust) == 0x0000D0, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_BattleDesignDebugIsNkmBoxOn_IsAdjust' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_Not_PreBool_ReturnValue) == 0x0000D1, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_Less_IntInt_ReturnValue) == 0x0000D2, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_BattleDesignDebugGetMeleeStartDistance_Distance) == 0x0000D8, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_BattleDesignDebugGetMeleeStartDistance_Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ApplyDebugParam, CallFunc_IsCreateDebugMenuData_ReturnValue) == 0x0000DC, "Member 'BattleSkillActionBase_C_ApplyDebugParam::CallFunc_IsCreateDebugMenuData_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsTargetOnlyActor
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_IsTargetOnlyActor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsTargetOnlyActor) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsTargetOnlyActor");
static_assert(sizeof(BattleSkillActionBase_C_IsTargetOnlyActor) == 0x000020, "Wrong size on BattleSkillActionBase_C_IsTargetOnlyActor");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetOnlyActor, ReturnValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsTargetOnlyActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetOnlyActor, CallFunc_GetActorPartyIndex_index) == 0x000004, "Member 'BattleSkillActionBase_C_IsTargetOnlyActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetOnlyActor, CallFunc_GetTargetPartyIndex_index) == 0x000008, "Member 'BattleSkillActionBase_C_IsTargetOnlyActor::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetOnlyActor, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_IsTargetOnlyActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetOnlyActor, CallFunc_Array_Contains_ReturnValue) == 0x00001C, "Member 'BattleSkillActionBase_C_IsTargetOnlyActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetOnlyActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001D, "Member 'BattleSkillActionBase_C_IsTargetOnlyActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetOnlyActor, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'BattleSkillActionBase_C_IsTargetOnlyActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsTargetContainsActor
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_IsTargetContainsActor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsTargetContainsActor) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsTargetContainsActor");
static_assert(sizeof(BattleSkillActionBase_C_IsTargetContainsActor) == 0x000020, "Wrong size on BattleSkillActionBase_C_IsTargetContainsActor");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetContainsActor, ReturnValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsTargetContainsActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetContainsActor, CallFunc_GetActorPartyIndex_index) == 0x000004, "Member 'BattleSkillActionBase_C_IsTargetContainsActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetContainsActor, CallFunc_GetTargetPartyIndex_index) == 0x000008, "Member 'BattleSkillActionBase_C_IsTargetContainsActor::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsTargetContainsActor, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_IsTargetContainsActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcUnitTall
// 0x0160 (0x0160 - 0x0000)
struct BattleSkillActionBase_C_CalcUnitTall final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tall;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Lo_UnitMesh;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_TallSocketName;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_UnitTall;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MeshScale;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347F[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_DevilPostData                      CallFunc_GetDevilPostData_PostData;                // 0x00F8(0x0020)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3480[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3481[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CalcUnitTall) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_CalcUnitTall");
static_assert(sizeof(BattleSkillActionBase_C_CalcUnitTall) == 0x000160, "Wrong size on BattleSkillActionBase_C_CalcUnitTall");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CalcUnitTall::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, Tall) == 0x000004, "Member 'BattleSkillActionBase_C_CalcUnitTall::Tall' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, Lo_UnitMesh) == 0x000008, "Member 'BattleSkillActionBase_C_CalcUnitTall::Lo_UnitMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, Lo_TallSocketName) == 0x000010, "Member 'BattleSkillActionBase_C_CalcUnitTall::Lo_TallSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, Lo_UnitTall) == 0x000018, "Member 'BattleSkillActionBase_C_CalcUnitTall::Lo_UnitTall' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, Lo_MeshScale) == 0x00001C, "Member 'BattleSkillActionBase_C_CalcUnitTall::Lo_MeshScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, Lo_Unit) == 0x000020, "Member 'BattleSkillActionBase_C_CalcUnitTall::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_FindUnit_Unit) == 0x000028, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000060, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakTransform_Location_1) == 0x0000B4, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakTransform_Rotation_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakTransform_Scale_1) == 0x0000CC, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakVector_X) == 0x0000D8, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakVector_Y) == 0x0000DC, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakVector_X_1) == 0x0000E4, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_BreakVector_Z_1) == 0x0000EC, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000F1, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_GetDevilPostData_PostData) == 0x0000F8, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_GetDevilPostData_PostData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00011C, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000124, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_GetMeshRelativeScale_Scale) == 0x000128, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_GetObjectName_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_GetHeroIndex_Index) == 0x000140, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_Concat_StrStr_ReturnValue) == 0x000148, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcUnitTall, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000158, "Member 'BattleSkillActionBase_C_CalcUnitTall::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UndoDebugParam
// 0x00E0 (0x00E0 - 0x0000)
struct BattleSkillActionBase_C_UndoDebugParam final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3482[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0008(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0018(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3483[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCreateDebugMenuData_ReturnValue;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3484[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_UndoDebugParam) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UndoDebugParam");
static_assert(sizeof(BattleSkillActionBase_C_UndoDebugParam) == 0x0000E0, "Wrong size on BattleSkillActionBase_C_UndoDebugParam");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSkillActionBase_C_UndoDebugParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_GetTargetInfo_Info) == 0x000008, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BattleSkillActionBase_C_UndoDebugParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_FindUnit_Unit) == 0x0000B8, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_GetActorPartyIndex_index) == 0x0000C8, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_IsCreateDebugMenuData_ReturnValue) == 0x0000CC, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_IsCreateDebugMenuData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_FindUnit_Unit_1) == 0x0000D0, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UndoDebugParam, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'BattleSkillActionBase_C_UndoDebugParam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcPartyVisibilitySituation
// 0x0488 (0x0488 - 0x0000)
struct BattleSkillActionBase_C_CalcPartyVisibilitySituation final
{
public:
	bool                                          HideOtherActor;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllActor;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOtherTarget;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAllTarget;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3485[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 VisiblePartyIndex;                                 // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 InvisiblePartyIndex;                               // 0x0018(0x0010)(Parm, OutParm)
	bool                                          Lo_IsRandomTarget;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3486[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndexs;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_HideAllTarget;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideOtherTarget;                                // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideAllActor;                                   // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideOtherActor;                                 // 0x0043(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Lo_TargetLast;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetStart;                                    // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorLast;                                      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorStart;                                     // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TargetIndex;                                    // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3487[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_Invisible;                                      // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_Visible;                                        // 0x0080(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3488[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3489[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348A[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348B[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348C[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x00E0(0x0010)(ReferenceParm)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x00F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348D[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0108(0x0098)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348E[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348F[0x6];                                     // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors_1;         // 0x01B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3490[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x01C8(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3491[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3492[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0270(0x0100)(ConstParm)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0373(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3493[0x4];                                     // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetActListAll_retValue;                // 0x03A8(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetAllIsTargetList_List;               // 0x03B8(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x03C8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3494[0x1];                                     // 0x03DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3495[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0400(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue_1;             // 0x0410(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_CheckFlag_retValue;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3496[0x1];                                     // 0x0423(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x042E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x042F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0436(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0437(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3497[0x3];                                     // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3498[0x3];                                     // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3499[0x2];                                     // 0x045A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyLoopMax_retValue;        // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_4;            // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPlayerLoopMax_retValue;       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349A[0x2];                                     // 0x0476(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_5;            // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_6;            // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcPartyVisibilitySituation) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcPartyVisibilitySituation");
static_assert(sizeof(BattleSkillActionBase_C_CalcPartyVisibilitySituation) == 0x000488, "Wrong size on BattleSkillActionBase_C_CalcPartyVisibilitySituation");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, HideOtherActor) == 0x000000, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, HideAllActor) == 0x000001, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, HideOtherTarget) == 0x000002, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, HideAllTarget) == 0x000003, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, VisiblePartyIndex) == 0x000008, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::VisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, InvisiblePartyIndex) == 0x000018, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::InvisiblePartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_IsRandomTarget) == 0x000028, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_IsRandomTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_TargetIndexs) == 0x000030, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_TargetIndexs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_HideAllTarget) == 0x000040, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_HideAllTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_HideOtherTarget) == 0x000041, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_HideOtherTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_HideAllActor) == 0x000042, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_HideAllActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_HideOtherActor) == 0x000043, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_HideOtherActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_TargetLast) == 0x000044, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_TargetLast' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_TargetStart) == 0x000048, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_TargetStart' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_ActorLast) == 0x00004C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_ActorLast' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_ActorStart) == 0x000050, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_ActorStart' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_TargetIndex) == 0x000054, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_ActorIndex) == 0x000058, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_PartySystem) == 0x000060, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_Invisible) == 0x000070, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_Invisible' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Lo_Visible) == 0x000080, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Lo_Visible' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_bool_Variable) == 0x000090, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Variable) == 0x000094, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_FindUnit_Unit) == 0x000098, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetOwner_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Variable_1) == 0x0000B4, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Array_Index_Variable) == 0x0000C4, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Array_Index_Variable_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetHeroIndex_Index) == 0x0000CC, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Loop_Counter_Variable_1) == 0x0000D4, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetMagatsuhiOtherActors_actors) == 0x0000E0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetTargetInfo_Info) == 0x0000F0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Get_Item) == 0x000108, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Less_IntInt_ReturnValue) == 0x0001A0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Length_ReturnValue_1) == 0x0001A4, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Contains_ReturnValue) == 0x0001A8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A9, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetMagatsuhiOtherActors_actors_1) == 0x0001B0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetMagatsuhiOtherActors_actors_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Length_ReturnValue_2) == 0x0001C0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetFirstTargetInfo_Info) == 0x0001C8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetFirstTargetInfo_valid) == 0x000260, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetSkillID_ID) == 0x000264, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000268, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetSkillBaseData_ReturnValue) == 0x000270, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000370, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000371, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Contains_ReturnValue_1) == 0x000372, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanAND_ReturnValue) == 0x000373, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Loop_Counter_Variable_2) == 0x000374, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Add_IntInt_ReturnValue_4) == 0x000378, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Array_Index_Variable_2) == 0x00037C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetActorPartyIndex_index) == 0x000380, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Get_Item_1) == 0x000384, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GetActorPartyIndex_index_1) == 0x000388, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_AddUnique_ReturnValue) == 0x00038C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BIGetPartySystem_retValue) == 0x000390, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0003A0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_GetActListAll_retValue) == 0x0003A8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_GetAllIsTargetList_List) == 0x0003B8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_GetAllIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, K2Node_Select_Default) == 0x0003C8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Contains_ReturnValue_2) == 0x0003D8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Contains_ReturnValue_3) == 0x0003D9, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Not_PreBool_ReturnValue) == 0x0003DA, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Get_Item_2) == 0x0003DC, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0003E0, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Length_ReturnValue_3) == 0x0003E4, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BIGetPartySystem_retValue_1) == 0x0003E8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003F8, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_GetSideActList_retValue) == 0x000400, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_GetSideActList_retValue_1) == 0x000410, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_GetSideActList_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_CheckFlag_retValue) == 0x000420, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_CheckFlag_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanOR_ReturnValue) == 0x000421, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanOR_ReturnValue_1) == 0x000422, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000424, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Add_ReturnValue) == 0x000428, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00042C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00042D, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanOR_ReturnValue_2) == 0x00042E, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanAND_ReturnValue_1) == 0x00042F, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanOR_ReturnValue_3) == 0x000430, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanAND_ReturnValue_2) == 0x000431, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000432, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanOR_ReturnValue_4) == 0x000433, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000434, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000435, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanOR_ReturnValue_5) == 0x000436, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanAND_ReturnValue_3) == 0x000437, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BooleanOR_ReturnValue_6) == 0x000438, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Loop_Counter_Variable_3) == 0x00043C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Less_IntInt_ReturnValue_3) == 0x000440, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Add_IntInt_ReturnValue_5) == 0x000444, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BIGetPartySystem_retValue_2) == 0x000448, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000458, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000459, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, Temp_int_Array_Index_Variable_3) == 0x00045C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_const_GetEnemyLoopMax_retValue) == 0x000460, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_Get_Item_3) == 0x000464, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_AddUnique_ReturnValue_4) == 0x000468, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_AddUnique_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_const_GetEnemyStart_retValue) == 0x00046C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_const_GetPlayerLoopMax_retValue) == 0x000470, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Less_IntInt_ReturnValue_4) == 0x000474, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Less_IntInt_ReturnValue_5) == 0x000475, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_BI_const_GetPartyStart_retValue) == 0x000478, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_AddUnique_ReturnValue_5) == 0x00047C, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_AddUnique_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcPartyVisibilitySituation, CallFunc_Array_AddUnique_ReturnValue_6) == 0x000480, "Member 'BattleSkillActionBase_C_CalcPartyVisibilitySituation::CallFunc_Array_AddUnique_ReturnValue_6' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsNormalAttack
// 0x0150 (0x0150 - 0x0000)
struct BattleSkillActionBase_C_IsNormalAttack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSkillEffectName_ReturnValue;           // 0x0028(0x0018)(ConstParm)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0048(0x0100)(ConstParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsNormalAttack) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsNormalAttack");
static_assert(sizeof(BattleSkillActionBase_C_IsNormalAttack) == 0x000150, "Wrong size on BattleSkillActionBase_C_IsNormalAttack");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, ReturnValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsNormalAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_GetSkillID_ID) == 0x000020, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_GetSkillEffectName_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_GetSkillEffectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_GetSkillBaseData_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000148, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000149, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsNormalAttack, CallFunc_BooleanAND_ReturnValue) == 0x00014A, "Member 'BattleSkillActionBase_C_IsNormalAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetPlayParam
// 0x0140 (0x0140 - 0x0000)
struct BattleSkillActionBase_C_GetPlayParam final
{
public:
	TArray<struct FBTL_EFFECT_PLAY_PARAM>         OutEffectPlayParam;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBTL_LIGHT_PLAY_PARAM>          OutLightPlayParam;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         TrashActor;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UActorComponent*>                TrashComponent;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     K2Node_MakeStruct_SkillActionEffect;               // 0x0048(0x0038)()
	struct FBTL_EFFECT_PLAY_PARAM                 K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM;           // 0x0080(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_GetPlayParam) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_GetPlayParam");
static_assert(sizeof(BattleSkillActionBase_C_GetPlayParam) == 0x000140, "Wrong size on BattleSkillActionBase_C_GetPlayParam");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, OutEffectPlayParam) == 0x000000, "Member 'BattleSkillActionBase_C_GetPlayParam::OutEffectPlayParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, OutLightPlayParam) == 0x000010, "Member 'BattleSkillActionBase_C_GetPlayParam::OutLightPlayParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, TrashActor) == 0x000020, "Member 'BattleSkillActionBase_C_GetPlayParam::TrashActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, TrashComponent) == 0x000030, "Member 'BattleSkillActionBase_C_GetPlayParam::TrashComponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_GetPlayParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, K2Node_MakeStruct_SkillActionEffect) == 0x000048, "Member 'BattleSkillActionBase_C_GetPlayParam::K2Node_MakeStruct_SkillActionEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM) == 0x000080, "Member 'BattleSkillActionBase_C_GetPlayParam::K2Node_MakeStruct_BTL_EFFECT_PLAY_PARAM' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, CallFunc_Array_Add_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_GetPlayParam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPlayParam, CallFunc_Greater_IntInt_ReturnValue) == 0x000134, "Member 'BattleSkillActionBase_C_GetPlayParam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsSkippable
// 0x0128 (0x0128 - 0x0000)
struct BattleSkillActionBase_C_IsSkippable final
{
public:
	bool                                          IsSkipable;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0010(0x0100)(ConstParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SkillBaseDataGetValue_IsEnableSkip_ReturnValue; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExistTaskForPecID_retValue;          // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsSkippable) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsSkippable");
static_assert(sizeof(BattleSkillActionBase_C_IsSkippable) == 0x000128, "Wrong size on BattleSkillActionBase_C_IsSkippable");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, IsSkipable) == 0x000000, "Member 'BattleSkillActionBase_C_IsSkippable::IsSkipable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_GetSkillID_ID) == 0x000004, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_GetSkillBaseData_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_BIGetTaskFactory_retValue) == 0x000110, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_SkillBaseDataGetValue_IsEnableSkip_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_SkillBaseDataGetValue_IsEnableSkip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000121, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_BI_IsExistTaskForPecID_retValue) == 0x000122, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_BI_IsExistTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_BooleanOR_ReturnValue) == 0x000123, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkippable, CallFunc_BooleanAND_ReturnValue_1) == 0x000125, "Member 'BattleSkillActionBase_C_IsSkippable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsReflected
// 0x000C (0x000C - 0x0000)
struct BattleSkillActionBase_C_IsReflected final
{
public:
	bool                                          Param_IsReflected;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsReflected) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_IsReflected");
static_assert(sizeof(BattleSkillActionBase_C_IsReflected) == 0x00000C, "Wrong size on BattleSkillActionBase_C_IsReflected");
static_assert(offsetof(BattleSkillActionBase_C_IsReflected, Param_IsReflected) == 0x000000, "Member 'BattleSkillActionBase_C_IsReflected::Param_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsReflected, CallFunc_GetReflexInfoLength_length) == 0x000004, "Member 'BattleSkillActionBase_C_IsReflected::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsReflected, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsReflected::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectPairTargetParty
// 0x0290 (0x0290 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectPairTargetParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeSec;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EFFECT_TYPE                             EfffectType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EFFECT_FORM                             EffectForm;                                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A2[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ActorSocketName;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_34A3[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorSocketRelative;                               // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FString                                 TargetSocketName;                                  // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         BulletSpeed;                                       // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletTangentDeg;                                  // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExtensionDistance;                                 // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideInReflection;                                  // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideInAbsorbAndBlock;                              // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A4[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0084(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EffectID;                                          // 0x0088(0x0010)(Parm, OutParm)
	uint8                                         Pad_34A5[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_ActorRelative;                                  // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         Lo_ActorIndex;                                     // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HideInReflection;                               // 0x00D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_HideInAbsorbAndBlock;                           // 0x00D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A6[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetIndexPool;                                // 0x00D8(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ExtensionDist;                                  // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_PecIDs;                                         // 0x00F0(0x0010)(Edit, BlueprintVisible)
	float                                         Lo_Gravity;                                        // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_BulletSpeed;                                    // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_TargetSocketName;                               // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_ActorSocketName;                                // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_EFFECT_FORM                             Lo_EffectForm;                                     // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A7[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TransPriority;                                  // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_LifeSec;                                        // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayIndex;                                      // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0138(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A8[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A9[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Pos;                       // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_Normal;                    // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPartyCenter_forward;                   // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AA[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AB[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AC[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x01C0(0x0030)()
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AD[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item;                           // 0x01F8(0x0038)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0230(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AE[0x2];                                     // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectPairTargetParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty) == 0x000290, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectPairTargetParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, LifeSec) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, TranslucencyPriority) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, EfffectType) == 0x000010, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::EfffectType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, EffectForm) == 0x000011, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::EffectForm' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, ActorSocketName) == 0x000018, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::ActorSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, ActorSocketRelative) == 0x000030, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::ActorSocketRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, TargetSocketName) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::TargetSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, BulletSpeed) == 0x000070, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::BulletSpeed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, BulletTangentDeg) == 0x000074, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::BulletTangentDeg' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Gravity) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Gravity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, ExtensionDistance) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::ExtensionDistance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, HideInReflection) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, HideInAbsorbAndBlock) == 0x000081, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, ComIndex) == 0x000084, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, EffectID) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::EffectID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_ActorRelative) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_ActorRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_ActorIndex) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_HideInReflection) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_HideInReflection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_HideInAbsorbAndBlock) == 0x0000D5, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_HideInAbsorbAndBlock' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_TargetIndexPool) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_TargetIndexPool' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_TargetIndex) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_ExtensionDist) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_ExtensionDist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_PecIDs) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_PecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_Gravity) == 0x000100, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_Gravity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_BulletSpeed) == 0x000104, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_BulletSpeed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_TargetSocketName) == 0x000108, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_TargetSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_ActorSocketName) == 0x000118, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_ActorSocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_EffectForm) == 0x000128, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_EffectForm' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_TransPriority) == 0x00012C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_TransPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_LifeSec) == 0x000130, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_PlayIndex) == 0x000134, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, Lo_WaitList) == 0x000138, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_IsValidCommandIndex_retValue) == 0x000148, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_GetComandID_retValue) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_GetActorPartyIndex_index) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_BIGetPartySystem_retValue) == 0x000158, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_Conv_StringToName_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_GetPartyCenter_Pos) == 0x000170, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_GetPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_GetPartyCenter_Normal) == 0x00017C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_GetPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_GetPartyCenter_forward) == 0x000188, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_GetPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_BIGetTaskFactory_retValue) == 0x000198, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001A8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_SelectFloat_ReturnValue) == 0x0001AC, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_MakeVector_ReturnValue) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, K2Node_MakeStruct_BtlTaskData) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_MakeLiteralByte_ReturnValue) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, K2Node_MakeStruct_BtlTaskData_1) == 0x000230, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_BIGetTaskFactory_retValue_1) == 0x000260, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_Not_PreBool_ReturnValue) == 0x000270, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_IsValid_ReturnValue) == 0x000271, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x000274, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000278, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_BI_AddPlayEffectTask_retValue) == 0x00027C, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_Array_Add_ReturnValue) == 0x000280, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectPairTargetParty, CallFunc_Array_Add_ReturnValue_1) == 0x000284, "Member 'BattleSkillActionBase_C_Com_PlayEffectPairTargetParty::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Update
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_Update final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Update) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Update");
static_assert(sizeof(BattleSkillActionBase_C_Update) == 0x000010, "Wrong size on BattleSkillActionBase_C_Update");
static_assert(offsetof(BattleSkillActionBase_C_Update, DeltaSec) == 0x000000, "Member 'BattleSkillActionBase_C_Update::DeltaSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Update, Temp_int_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_Update::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.OutOfBattleSetting
// 0x02E8 (0x02E8 - 0x0000)
struct BattleSkillActionBase_C_OutOfBattleSetting final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         Lo_TargetInfo;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionTargetInfo>         Lo_ReflectInfo;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B0[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B1[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	TArray<E_BTL_DAMAGE_HIT_TYPE>                 K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ReferenceParm)
	TArray<E_BTL_REFLECT_RES_TYPE>                K2Node_MakeArray_Array_2;                          // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_3;                          // 0x0080(0x0010)(ReferenceParm)
	TArray<E_BTL_DAMAGE_HIT_TYPE>                 K2Node_MakeArray_Array_4;                          // 0x0090(0x0010)(ReferenceParm)
	TArray<E_BTL_REFLECT_RES_TYPE>                K2Node_MakeArray_Array_5;                          // 0x00A0(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FSkillActionExtend>             K2Node_MakeArray_Array_6;                          // 0x00C0(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x00D0(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetActListAll_retValue;                // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 K2Node_MakeStruct_SkillActionTargetInfo;           // 0x00F8(0x0098)()
	struct FSkillActionTargetInfo                 K2Node_MakeStruct_SkillActionTargetInfo_1;         // 0x0190(0x0098)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B2[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_7;                          // 0x0240(0x0010)(ReferenceParm)
	struct FSkillActionDrainInfo                  K2Node_MakeStruct_SkillActionDrainInfo;            // 0x0250(0x0008)()
	struct FSkillActionDesc                       K2Node_MakeStruct_SkillActionDesc;                 // 0x0258(0x0090)()
};
static_assert(alignof(BattleSkillActionBase_C_OutOfBattleSetting) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_OutOfBattleSetting");
static_assert(sizeof(BattleSkillActionBase_C_OutOfBattleSetting) == 0x0002E8, "Wrong size on BattleSkillActionBase_C_OutOfBattleSetting");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, ActorIndex) == 0x000000, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, Lo_TargetInfo) == 0x000008, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::Lo_TargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, Lo_ReflectInfo) == 0x000018, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::Lo_ReflectInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_GetHeroIndex_Index) == 0x000038, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_SelectInt_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array) == 0x000048, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array_1) == 0x000058, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array_2) == 0x000068, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array_3) == 0x000080, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array_4) == 0x000090, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array_5) == 0x0000A0, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_BIGetPartySystem_retValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array_6) == 0x0000C0, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_BI_GetSideActList_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_BI_GetActListAll_retValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_BI_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Array_Get_Item_1) == 0x0000F4, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeStruct_SkillActionTargetInfo) == 0x0000F8, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeStruct_SkillActionTargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeStruct_SkillActionTargetInfo_1) == 0x000190, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeStruct_SkillActionTargetInfo_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Array_Add_ReturnValue) == 0x000228, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Array_Add_ReturnValue_1) == 0x00022C, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Array_Length_ReturnValue) == 0x000230, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Array_Length_ReturnValue_1) == 0x000234, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, CallFunc_Less_IntInt_ReturnValue_1) == 0x000239, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeArray_Array_7) == 0x000240, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeStruct_SkillActionDrainInfo) == 0x000250, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeStruct_SkillActionDrainInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OutOfBattleSetting, K2Node_MakeStruct_SkillActionDesc) == 0x000258, "Member 'BattleSkillActionBase_C_OutOfBattleSetting::K2Node_MakeStruct_SkillActionDesc' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.FirstSetting
// 0x07B0 (0x07B0 - 0x0000)
struct BattleSkillActionBase_C_FirstSetting final
{
public:
	int32                                         Lo_ActorIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_OtherShowChara;                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_PartyIndex;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Actor;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_TargetIndex;                                    // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_RoomBoss;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B5[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B6[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B7[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0070(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors_1;         // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length_1;   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B8[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length_2;   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B9[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BA[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00C0(0x0098)()
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0158(0x0100)(ConstParm)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BB[0x2];                                     // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BC[0x1];                                     // 0x0263(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemID_ID;                             // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BD[0x2];                                     // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0270(0x005C)(ConstParm, NoDestructor)
	int32                                         CallFunc_GetSkillID_ID_1;                          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_1;           // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_2;           // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BE[0x2];                                     // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue_1;           // 0x02D8(0x0100)(ConstParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x03DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x03E0(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetResType_IsTheSameResType;      // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BF[0x3];                                     // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info_1;                // 0x0480(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid_1;               // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C0[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length_1;             // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C1[0x3];                                     // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface; // 0x0530(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C2[0x3];                                     // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index_1;                     // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x054D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x054E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C3[0x1];                                     // 0x054F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C4[0x7];                                     // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaAnimation_C> CallFunc_UpdateAnimation_self_CastInput;           // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle;                // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayMotion_IsPlay;                      // 0x0573(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C5[0x3];                                     // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0578(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue;          // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C6[0x4];                                     // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x059D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C7[0x2];                                     // 0x059E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C8[0x4];                                     // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C9[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_1; // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x05C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_const_GetEnemyStart_retValue_1;        // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue;            // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CA[0x3];                                     // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_2;                          // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_3;                          // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CB[0x7];                                     // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle_1;              // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CC[0x6];                                     // 0x0602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0608(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CD[0x3];                                     // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0620(0x0098)()
	TScriptInterface<class IBPI_PTFlagInterface>  CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface; // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckFlag_ReturnValue;                 // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckFlag_ReturnValue_1;               // 0x06CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x06CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x06CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CE[0x7];                                     // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTFlagInterface>  CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface_1; // 0x06D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x06E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CF[0x6];                                     // 0x06EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_2; // 0x06F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BeHome_retValue;                       // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue_1;          // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D0[0x6];                                     // 0x0702(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0708(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_3; // 0x0718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0728(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BeHome_retValue_1;                     // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D1[0x7];                                     // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0740(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue_1;             // 0x0750(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_CheckFlag_retValue;                    // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D2[0x7];                                     // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_4; // 0x0768(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UnitSetVisibilityAll_retValue;         // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D3[0x3];                                     // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x078D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D4[0x2];                                     // 0x078E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D5[0x4];                                     // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_4;                          // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue_2;          // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle_2;              // 0x07AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x07AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x07AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_FirstSetting) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_FirstSetting");
static_assert(sizeof(BattleSkillActionBase_C_FirstSetting) == 0x0007B0, "Wrong size on BattleSkillActionBase_C_FirstSetting");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Lo_ActorIndex) == 0x000000, "Member 'BattleSkillActionBase_C_FirstSetting::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Lo_OtherShowChara) == 0x000008, "Member 'BattleSkillActionBase_C_FirstSetting::Lo_OtherShowChara' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Lo_PartyIndex) == 0x000018, "Member 'BattleSkillActionBase_C_FirstSetting::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Lo_Actor) == 0x000020, "Member 'BattleSkillActionBase_C_FirstSetting::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Lo_TargetIndex) == 0x000028, "Member 'BattleSkillActionBase_C_FirstSetting::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Lo_RoomBoss) == 0x000038, "Member 'BattleSkillActionBase_C_FirstSetting::Lo_RoomBoss' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetReflexInfo_Info) == 0x000050, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetReflexInfoLength_length) == 0x000060, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000070, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetMagatsuhiOtherActors_actors_1) == 0x000080, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetMagatsuhiOtherActors_actors_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetMagatsuhiOtherActorsLength_length) == 0x000090, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetMagatsuhiOtherActorsLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetMagatsuhiOtherActorsLength_length_1) == 0x000094, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetMagatsuhiOtherActorsLength_length_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000098, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000099, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetTargetInfoLength_length) == 0x00009C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetMagatsuhiOtherActorsLength_length_2) == 0x0000A0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetMagatsuhiOtherActorsLength_length_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000A4, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A5, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetTargetInfo_Info) == 0x0000A8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetSkillID_ID) == 0x0000B8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetSkillBaseData_ReturnValue) == 0x000158, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000258, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000259, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Length_ReturnValue_1) == 0x00025C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000260, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000261, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanAND_ReturnValue) == 0x000262, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Length_ReturnValue_2) == 0x000264, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetItemID_ID) == 0x000268, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Less_IntInt_ReturnValue) == 0x00026C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00026D, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetUseItemData_ReturnValue) == 0x000270, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetSkillID_ID_1) == 0x0002CC, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetSkillID_ID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0002D0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_ByteByte_ReturnValue) == 0x0002D1, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_ByteByte_ReturnValue_1) == 0x0002D2, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_ByteByte_ReturnValue_2) == 0x0002D3, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0002D4, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue_6) == 0x0002D5, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetSkillBaseData_ReturnValue_1) == 0x0002D8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetSkillBaseData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue) == 0x0003D8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue_1) == 0x0003D9, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetValidValue_ReturnValue) == 0x0003DA, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue_2) == 0x0003DB, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue_3) == 0x0003DC, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003DD, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanAND_ReturnValue_1) == 0x0003DE, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0003DF, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetFirstTargetInfo_Info) == 0x0003E0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetFirstTargetInfo_valid) == 0x000478, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue_4) == 0x000479, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_CheckTargetResType_IsTheSameResType) == 0x00047A, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_CheckTargetResType_IsTheSameResType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanAND_ReturnValue_2) == 0x00047B, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue_5) == 0x00047C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetFirstTargetInfo_Info_1) == 0x000480, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetFirstTargetInfo_Info_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetFirstTargetInfo_valid_1) == 0x000518, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetFirstTargetInfo_valid_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetTargetInfoLength_length_1) == 0x00051C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetTargetInfoLength_length_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000520, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Loop_Counter_Variable_1) == 0x000524, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Add_IntInt_ReturnValue_1) == 0x000528, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Length_ReturnValue_3) == 0x00052C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface) == 0x000530, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetHeroIndex_Index) == 0x000540, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000544, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetHeroIndex_Index_1) == 0x000548, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetHeroIndex_Index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00054C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Contains_ReturnValue) == 0x00054D, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00054E, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_FindUnit_Unit) == 0x000550, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue_6) == 0x000558, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_UpdateAnimation_self_CastInput) == 0x000560, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_UpdateAnimation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanAND_ReturnValue_3) == 0x000570, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Not_PreBool_ReturnValue) == 0x000571, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetDefaultIdleMotion_Idle) == 0x000572, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetDefaultIdleMotion_Idle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_IsPlayMotion_IsPlay) == 0x000573, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_IsPlayMotion_IsPlay' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_IsValid_ReturnValue) == 0x000574, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPartySystem_retValue) == 0x000578, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_const_GetEnemyStart_retValue) == 0x000588, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_FindUnit_Unit_1) == 0x000590, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Loop_Counter_Variable_2) == 0x000598, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_IsValid_ReturnValue_1) == 0x00059C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Less_IntInt_ReturnValue_1) == 0x00059D, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Add_IntInt_ReturnValue_2) == 0x0005A0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetOwner_ReturnValue) == 0x0005A8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_IsValid_ReturnValue_2) == 0x0005B0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_1) == 0x0005B8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPartySystem_retValue_1) == 0x0005C8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_const_GetEnemyStart_retValue_1) == 0x0005D8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_const_GetEnemyStart_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_UnitSetVisibility_retValue) == 0x0005DC, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_UnitSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_FindUnit_Unit_2) == 0x0005E0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_FindUnit_Unit_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_FindUnit_Unit_3) == 0x0005E8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_FindUnit_Unit_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_IsValid_ReturnValue_3) == 0x0005F0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetOwner_ReturnValue_1) == 0x0005F8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_IsValid_ReturnValue_4) == 0x000600, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetDefaultIdleMotion_Idle_1) == 0x000601, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetDefaultIdleMotion_Idle_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetTargetPartyIndex_index) == 0x000608, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanOR_ReturnValue_7) == 0x000618, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Array_Index_Variable_2) == 0x00061C, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Get_Item_1) == 0x000620, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface) == 0x0006B8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Add_ReturnValue) == 0x0006C8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_CheckFlag_ReturnValue) == 0x0006CC, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_CheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_CheckFlag_ReturnValue_1) == 0x0006CD, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_CheckFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Not_PreBool_ReturnValue_1) == 0x0006CE, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Not_PreBool_ReturnValue_2) == 0x0006CF, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanAND_ReturnValue_4) == 0x0006D0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface_1) == 0x0006D8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPTFlagInterface_AsBPI_PTFlag_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanAND_ReturnValue_5) == 0x0006E8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BooleanAND_ReturnValue_6) == 0x0006E9, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_2) == 0x0006F0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_BeHome_retValue) == 0x000700, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_BeHome_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_UnitSetVisibility_retValue_1) == 0x000701, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_UnitSetVisibility_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetMainWork_NewParam) == 0x000708, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_3) == 0x000718, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_GetPartySystem_ret) == 0x000728, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_BeHome_retValue_1) == 0x000738, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_BeHome_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_GetSideActList_retValue) == 0x000740, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_GetSideActList_retValue_1) == 0x000750, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_GetSideActList_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_CheckFlag_retValue) == 0x000760, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_CheckFlag_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_4) == 0x000768, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_UnitSetVisibilityAll_retValue) == 0x000778, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_UnitSetVisibilityAll_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Get_Item_2) == 0x00077C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Add_ReturnValue_1) == 0x000780, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Length_ReturnValue_4) == 0x000784, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Loop_Counter_Variable_3) == 0x000788, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Less_IntInt_ReturnValue_2) == 0x00078C, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Less_IntInt_ReturnValue_3) == 0x00078D, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Add_IntInt_ReturnValue_3) == 0x000790, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, Temp_int_Array_Index_Variable_3) == 0x000794, "Member 'BattleSkillActionBase_C_FirstSetting::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_Array_Get_Item_3) == 0x000798, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_FindUnit_Unit_4) == 0x0007A0, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_FindUnit_Unit_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_BI_UnitSetVisibility_retValue_2) == 0x0007A8, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_BI_UnitSetVisibility_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_IsValid_ReturnValue_5) == 0x0007A9, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_GetDefaultIdleMotion_Idle_2) == 0x0007AA, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_GetDefaultIdleMotion_Idle_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_MakeLiteralByte_ReturnValue) == 0x0007AB, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FirstSetting, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0007AC, "Member 'BattleSkillActionBase_C_FirstSetting::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetPTFlagInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetPTFlagInterface final
{
public:
	TScriptInterface<class IBPI_PTFlagInterface>  AsBPI_PTFlag_Interface;                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTFlagInterface>  K2Node_DynamicCast_AsBPI_PTFlag_Interface;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetPTFlagInterface) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetPTFlagInterface");
static_assert(sizeof(BattleSkillActionBase_C_BIGetPTFlagInterface) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetPTFlagInterface");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTFlagInterface, AsBPI_PTFlag_Interface) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetPTFlagInterface::AsBPI_PTFlag_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTFlagInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetPTFlagInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTFlagInterface, K2Node_DynamicCast_AsBPI_PTFlag_Interface) == 0x000018, "Member 'BattleSkillActionBase_C_BIGetPTFlagInterface::K2Node_DynamicCast_AsBPI_PTFlag_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTFlagInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSkillActionBase_C_BIGetPTFlagInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddFirstSettingTask
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_AddFirstSettingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddFirstSettingTask_PecID;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddBeHomeSideAllTask_PecID;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddFirstSettingTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddFirstSettingTask");
static_assert(sizeof(BattleSkillActionBase_C_AddFirstSettingTask) == 0x000028, "Wrong size on BattleSkillActionBase_C_AddFirstSettingTask");
static_assert(offsetof(BattleSkillActionBase_C_AddFirstSettingTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_AddFirstSettingTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddFirstSettingTask, CallFunc_BIGetTaskFactory_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_AddFirstSettingTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddFirstSettingTask, CallFunc_BI_AddFirstSettingTask_PecID) == 0x000020, "Member 'BattleSkillActionBase_C_AddFirstSettingTask::CallFunc_BI_AddFirstSettingTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddFirstSettingTask, CallFunc_BI_AddBeHomeSideAllTask_PecID) == 0x000024, "Member 'BattleSkillActionBase_C_AddFirstSettingTask::CallFunc_BI_AddBeHomeSideAllTask_PecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckLastAnimCamera
// 0x00A0 (0x00A0 - 0x0000)
struct BattleSkillActionBase_C_CheckLastAnimCamera final
{
public:
	bool                                          Lo_Duration;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D8[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BI_GetTaskForPecID_ActionTask;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D9[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleActionTask_C*                    K2Node_DynamicCast_AsBattle_Action_Task;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DA[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetSkillPerformDuration_self_CastInput; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_GetSkillPerformDuration_isTrue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DB[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleAnimationCamera_C*               K2Node_DynamicCast_AsBattle_Animation_Camera;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DC[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetParentNameTaskCnt_retCnt;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetTaskTypeTaskCnt_cnt;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckLastAnimCamera) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckLastAnimCamera");
static_assert(sizeof(BattleSkillActionBase_C_CheckLastAnimCamera) == 0x0000A0, "Wrong size on BattleSkillActionBase_C_CheckLastAnimCamera");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, Lo_Duration) == 0x000000, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::Lo_Duration' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_GetActorPartyIndex_index) == 0x000014, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BIGetTaskFactory_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_FindUnit_Unit) == 0x000028, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BI_GetTaskForPecID_ActionTask) == 0x000038, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BI_GetTaskForPecID_ActionTask' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, K2Node_DynamicCast_AsBattle_Action_Task) == 0x000048, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::K2Node_DynamicCast_AsBattle_Action_Task' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BI_GetSkillPerformDuration_self_CastInput) == 0x000058, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BI_GetSkillPerformDuration_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BI_GetSkillPerformDuration_isTrue) == 0x000068, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BI_GetSkillPerformDuration_isTrue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, K2Node_DynamicCast_AsBattle_Animation_Camera) == 0x000070, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::K2Node_DynamicCast_AsBattle_Animation_Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BIGetTaskFactory_retValue_1) == 0x000080, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BI_GetParentNameTaskCnt_retCnt) == 0x000090, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BI_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BI_GetTaskTypeTaskCnt_cnt) == 0x000094, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BI_GetTaskTypeTaskCnt_cnt' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000099, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BooleanAND_ReturnValue_1) == 0x00009B, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckLastAnimCamera, CallFunc_BooleanAND_ReturnValue_2) == 0x00009C, "Member 'BattleSkillActionBase_C_CheckLastAnimCamera::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AnimNotifyState_Reset
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_AnimNotifyState_Reset final
{
public:
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetSkillPerformDuration_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetSkillPerformDuration_NoUse;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DD[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AnimNotifyState_Reset) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AnimNotifyState_Reset");
static_assert(sizeof(BattleSkillActionBase_C_AnimNotifyState_Reset) == 0x000030, "Wrong size on BattleSkillActionBase_C_AnimNotifyState_Reset");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotifyState_Reset, Lo_Unit) == 0x000000, "Member 'BattleSkillActionBase_C_AnimNotifyState_Reset::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotifyState_Reset, CallFunc_BI_SetSkillPerformDuration_self_CastInput) == 0x000008, "Member 'BattleSkillActionBase_C_AnimNotifyState_Reset::CallFunc_BI_SetSkillPerformDuration_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotifyState_Reset, CallFunc_BI_SetSkillPerformDuration_NoUse) == 0x000018, "Member 'BattleSkillActionBase_C_AnimNotifyState_Reset::CallFunc_BI_SetSkillPerformDuration_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotifyState_Reset, CallFunc_FindUnit_Unit) == 0x000020, "Member 'BattleSkillActionBase_C_AnimNotifyState_Reset::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AnimNotifyState_Reset, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_AnimNotifyState_Reset::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetNahobinoMotion
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_GetNahobinoMotion final
{
public:
	int32                                         Skill_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NAHOBINO_SKILL_MOTION                       ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DE[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0008(0x0100)(ConstParm)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetNahobinoMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetNahobinoMotion");
static_assert(sizeof(BattleSkillActionBase_C_GetNahobinoMotion) == 0x000110, "Wrong size on BattleSkillActionBase_C_GetNahobinoMotion");
static_assert(offsetof(BattleSkillActionBase_C_GetNahobinoMotion, Skill_ID) == 0x000000, "Member 'BattleSkillActionBase_C_GetNahobinoMotion::Skill_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetNahobinoMotion, ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_GetNahobinoMotion::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetNahobinoMotion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'BattleSkillActionBase_C_GetNahobinoMotion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetNahobinoMotion, CallFunc_GetSkillBaseData_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_GetNahobinoMotion::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetNahobinoMotion, CallFunc_GetValidValue_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_GetNahobinoMotion::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsForcedSkip
// 0x0002 (0x0002 - 0x0000)
struct BattleSkillActionBase_C_IsForcedSkip final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsForcedSkip) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsForcedSkip");
static_assert(sizeof(BattleSkillActionBase_C_IsForcedSkip) == 0x000002, "Wrong size on BattleSkillActionBase_C_IsForcedSkip");
static_assert(offsetof(BattleSkillActionBase_C_IsForcedSkip, Skip) == 0x000000, "Member 'BattleSkillActionBase_C_IsForcedSkip::Skip' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsForcedSkip, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BattleSkillActionBase_C_IsForcedSkip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckBarrierReactionEnd
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_CheckBarrierReactionEnd final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExistTaskForPecID_retValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E0[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckBarrierReactionEnd) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckBarrierReactionEnd");
static_assert(sizeof(BattleSkillActionBase_C_CheckBarrierReactionEnd) == 0x000048, "Wrong size on BattleSkillActionBase_C_CheckBarrierReactionEnd");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_BIGetTaskFactory_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_Map_Values_Values) == 0x000020, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_BI_IsExistTaskForPecID_retValue) == 0x000039, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_BI_IsExistTaskForPecID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckBarrierReactionEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_CheckBarrierReactionEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckUseReflexCam
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_CheckUseReflexCam final
{
public:
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckUseReflexCam) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_CheckUseReflexCam");
static_assert(sizeof(BattleSkillActionBase_C_CheckUseReflexCam) == 0x000008, "Wrong size on BattleSkillActionBase_C_CheckUseReflexCam");
static_assert(offsetof(BattleSkillActionBase_C_CheckUseReflexCam, CallFunc_GetReflexInfoLength_length) == 0x000000, "Member 'BattleSkillActionBase_C_CheckUseReflexCam::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUseReflexCam, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_CheckUseReflexCam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUseReflexCam, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BattleSkillActionBase_C_CheckUseReflexCam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUseReflexCam, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BattleSkillActionBase_C_CheckUseReflexCam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SetAlreadyCameraChanged
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_SetAlreadyCameraChanged final
{
public:
	bool                                          IsTrue;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SetAlreadyCameraChanged) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_SetAlreadyCameraChanged");
static_assert(sizeof(BattleSkillActionBase_C_SetAlreadyCameraChanged) == 0x000001, "Wrong size on BattleSkillActionBase_C_SetAlreadyCameraChanged");
static_assert(offsetof(BattleSkillActionBase_C_SetAlreadyCameraChanged, IsTrue) == 0x000000, "Member 'BattleSkillActionBase_C_SetAlreadyCameraChanged::IsTrue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.DamageResultSetting
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_DamageResultSetting final
{
public:
	bool                                          IsReflected;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is1vs1Reflect;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Is1vs1;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E1[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         Lo_TargetInfo;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_DamageResultSetting) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_DamageResultSetting");
static_assert(sizeof(BattleSkillActionBase_C_DamageResultSetting) == 0x000030, "Wrong size on BattleSkillActionBase_C_DamageResultSetting");
static_assert(offsetof(BattleSkillActionBase_C_DamageResultSetting, IsReflected) == 0x000000, "Member 'BattleSkillActionBase_C_DamageResultSetting::IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DamageResultSetting, Is1vs1Reflect) == 0x000001, "Member 'BattleSkillActionBase_C_DamageResultSetting::Is1vs1Reflect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DamageResultSetting, Lo_Is1vs1) == 0x000002, "Member 'BattleSkillActionBase_C_DamageResultSetting::Lo_Is1vs1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DamageResultSetting, Lo_TargetInfo) == 0x000008, "Member 'BattleSkillActionBase_C_DamageResultSetting::Lo_TargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DamageResultSetting, K2Node_MakeArray_Array) == 0x000018, "Member 'BattleSkillActionBase_C_DamageResultSetting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DamageResultSetting, CallFunc_GetReflexInfoLength_length) == 0x000028, "Member 'BattleSkillActionBase_C_DamageResultSetting::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DamageResultSetting, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_DamageResultSetting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SetChantCameraFront
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_SetChantCameraFront final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SetChantCameraFront) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_SetChantCameraFront");
static_assert(sizeof(BattleSkillActionBase_C_SetChantCameraFront) == 0x000001, "Wrong size on BattleSkillActionBase_C_SetChantCameraFront");
static_assert(offsetof(BattleSkillActionBase_C_SetChantCameraFront, Enable) == 0x000000, "Member 'BattleSkillActionBase_C_SetChantCameraFront::Enable' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetSkillHitStampType
// 0x0288 (0x0288 - 0x0000)
struct BattleSkillActionBase_C_GetSkillHitStampType final
{
public:
	E_SKILL_HIT_STAMP_TYPE                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_SkillId;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0010(0x0100)(ConstParm)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue_1;           // 0x0110(0x0100)(ConstParm)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E4[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemID_ID;                             // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0218(0x005C)(ConstParm, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E5[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UseItemDataGetValue_SkillNo_ReturnValue;  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID_1;                          // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetSkillHitStampType) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetSkillHitStampType");
static_assert(sizeof(BattleSkillActionBase_C_GetSkillHitStampType) == 0x000288, "Wrong size on BattleSkillActionBase_C_GetSkillHitStampType");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, ReturnValue) == 0x000000, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, Lo_SkillId) == 0x000004, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_GetSkillID_ID) == 0x000008, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_GetSkillBaseData_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_GetSkillBaseData_ReturnValue_1) == 0x000110, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_GetSkillBaseData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_GetValidValue_ReturnValue) == 0x000210, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_GetItemID_ID) == 0x000214, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_GetUseItemData_ReturnValue) == 0x000218, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_Greater_IntInt_ReturnValue) == 0x000274, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_UseItemDataGetValue_SkillNo_ReturnValue) == 0x000278, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_UseItemDataGetValue_SkillNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_GetSkillID_ID_1) == 0x00027C, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_GetSkillID_ID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillHitStampType, CallFunc_SelectInt_ReturnValue) == 0x000280, "Member 'BattleSkillActionBase_C_GetSkillHitStampType::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcAttackMotion
// 0x0120 (0x0120 - 0x0000)
struct BattleSkillActionBase_C_CalcAttackMotion final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             AttackMotion;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Lo_AttackMotion;                                   // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E6[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0010(0x0100)(ConstParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetItemID_ID;                             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CalcAttackMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcAttackMotion");
static_assert(sizeof(BattleSkillActionBase_C_CalcAttackMotion) == 0x000120, "Wrong size on BattleSkillActionBase_C_CalcAttackMotion");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, ActorIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CalcAttackMotion::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, AttackMotion) == 0x000004, "Member 'BattleSkillActionBase_C_CalcAttackMotion::AttackMotion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, Lo_AttackMotion) == 0x000005, "Member 'BattleSkillActionBase_C_CalcAttackMotion::Lo_AttackMotion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_GetSkillID_ID) == 0x000008, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_GetHeroIndex_Index) == 0x00000C, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_GetSkillBaseData_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000110, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_Greater_IntInt_ReturnValue) == 0x000111, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_GetValidValue_ReturnValue) == 0x000112, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, K2Node_SwitchEnum_CmpSuccess) == 0x000113, "Member 'BattleSkillActionBase_C_CalcAttackMotion::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_GetItemID_ID) == 0x000114, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_BooleanAND_ReturnValue) == 0x000119, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcAttackMotion, CallFunc_BooleanAND_ReturnValue_1) == 0x00011A, "Member 'BattleSkillActionBase_C_CalcAttackMotion::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcSkillMotion
// 0x008C (0x008C - 0x0000)
struct BattleSkillActionBase_C_CalcSkillMotion final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_SkillId;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Lo_MotionID;                                       // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E8[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemID_ID;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E9[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0018(0x005C)(ConstParm, NoDestructor)
	E_NAHOBINO_SKILL_MOTION                       CallFunc_GetNahobinoMotion_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EA[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EB[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             K2Node_Select_Default;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcSkillMotion) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_CalcSkillMotion");
static_assert(sizeof(BattleSkillActionBase_C_CalcSkillMotion) == 0x00008C, "Wrong size on BattleSkillActionBase_C_CalcSkillMotion");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, ActorIndex) == 0x000000, "Member 'BattleSkillActionBase_C_CalcSkillMotion::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, MotionID) == 0x000004, "Member 'BattleSkillActionBase_C_CalcSkillMotion::MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, Lo_SkillId) == 0x000008, "Member 'BattleSkillActionBase_C_CalcSkillMotion::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, Lo_MotionID) == 0x00000C, "Member 'BattleSkillActionBase_C_CalcSkillMotion::Lo_MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, Temp_byte_Variable) == 0x00000D, "Member 'BattleSkillActionBase_C_CalcSkillMotion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, Temp_byte_Variable_1) == 0x00000E, "Member 'BattleSkillActionBase_C_CalcSkillMotion::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_GetItemID_ID) == 0x000010, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, Temp_bool_Variable) == 0x000014, "Member 'BattleSkillActionBase_C_CalcSkillMotion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000015, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_GetUseItemData_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_GetNahobinoMotion_ReturnValue) == 0x000074, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_GetNahobinoMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_GetHeroIndex_Index) == 0x000078, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, K2Node_SwitchEnum_CmpSuccess) == 0x00007C, "Member 'BattleSkillActionBase_C_CalcSkillMotion::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007D, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_GetSkillID_ID) == 0x000080, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_MakeLiteralByte_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_Greater_IntInt_ReturnValue) == 0x000085, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000086, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, CallFunc_BooleanAND_ReturnValue) == 0x000087, "Member 'BattleSkillActionBase_C_CalcSkillMotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkillMotion, K2Node_Select_Default) == 0x000088, "Member 'BattleSkillActionBase_C_CalcSkillMotion::K2Node_Select_Default' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ValueSelect
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_ValueSelect final
{
public:
	float                                         PlayerSideValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemySideValue;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EC[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ValueSelect) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ValueSelect");
static_assert(sizeof(BattleSkillActionBase_C_ValueSelect) == 0x000028, "Wrong size on BattleSkillActionBase_C_ValueSelect");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, PlayerSideValue) == 0x000000, "Member 'BattleSkillActionBase_C_ValueSelect::PlayerSideValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, EnemySideValue) == 0x000004, "Member 'BattleSkillActionBase_C_ValueSelect::EnemySideValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, Distance) == 0x000008, "Member 'BattleSkillActionBase_C_ValueSelect::Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, CallFunc_GetActorPartyIndex_index) == 0x00000C, "Member 'BattleSkillActionBase_C_ValueSelect::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, CallFunc_BIGetPartySystem_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_ValueSelect::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, CallFunc_BI_GetSide_side) == 0x000020, "Member 'BattleSkillActionBase_C_ValueSelect::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BattleSkillActionBase_C_ValueSelect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ValueSelect, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'BattleSkillActionBase_C_ValueSelect::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsBstOnlySkill
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_IsBstOnlySkill final
{
public:
	bool                                          IsBstOnly;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34ED[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0008(0x0100)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsBstOnlySkill) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsBstOnlySkill");
static_assert(sizeof(BattleSkillActionBase_C_IsBstOnlySkill) == 0x000110, "Wrong size on BattleSkillActionBase_C_IsBstOnlySkill");
static_assert(offsetof(BattleSkillActionBase_C_IsBstOnlySkill, IsBstOnly) == 0x000000, "Member 'BattleSkillActionBase_C_IsBstOnlySkill::IsBstOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstOnlySkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'BattleSkillActionBase_C_IsBstOnlySkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstOnlySkill, CallFunc_GetSkillBaseData_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsBstOnlySkill::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBstOnlySkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_IsBstOnlySkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsSkillForActorSide
// 0x02A0 (0x02A0 - 0x0000)
struct BattleSkillActionBase_C_IsSkillForActorSide final
{
public:
	bool                                          IsForActorSide;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Lo_TargetArea;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EE[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemID_ID;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x000C(0x005C)(ConstParm, NoDestructor)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0068(0x0100)(ConstParm)
	uint8                                         CallFunc_UseItemDataGetValue_RecBst_ReturnValue;   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_UseItemDataGetValue_MpRcvPercent_ReturnValue; // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UseItemDataGetValue_MpRecovery_ReturnValue; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_1;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_UseItemDataGetValue_HpRcvPercent_ReturnValue; // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EF[0x1];                                     // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UseItemDataGetValue_HpRecovery_ReturnValue; // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_2;           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F0[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UseItemDataGetValue_SkillNo_ReturnValue;  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F1[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue_1;           // 0x0188(0x0100)(ConstParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue_1; // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Temp_byte_Variable_1;                              // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                K2Node_Select_Default;                             // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x028F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                K2Node_Select_Default_1;                           // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0296(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0297(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsSkillForActorSide) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsSkillForActorSide");
static_assert(sizeof(BattleSkillActionBase_C_IsSkillForActorSide) == 0x0002A0, "Wrong size on BattleSkillActionBase_C_IsSkillForActorSide");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, IsForActorSide) == 0x000000, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::IsForActorSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, Lo_TargetArea) == 0x000001, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::Lo_TargetArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, Temp_bool_Variable) == 0x000002, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_GetItemID_ID) == 0x000004, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_GetSkillID_ID) == 0x000008, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_GetUseItemData_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_GetSkillBaseData_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_UseItemDataGetValue_RecBst_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_UseItemDataGetValue_RecBst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000169, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_Greater_ByteByte_ReturnValue) == 0x00016A, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_UseItemDataGetValue_MpRcvPercent_ReturnValue) == 0x00016B, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_UseItemDataGetValue_MpRcvPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_UseItemDataGetValue_MpRecovery_ReturnValue) == 0x00016C, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_UseItemDataGetValue_MpRecovery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_Greater_ByteByte_ReturnValue_1) == 0x000170, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_Greater_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_Greater_IntInt_ReturnValue) == 0x000171, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_UseItemDataGetValue_HpRcvPercent_ReturnValue) == 0x000172, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_UseItemDataGetValue_HpRcvPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_UseItemDataGetValue_HpRecovery_ReturnValue) == 0x000174, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_UseItemDataGetValue_HpRecovery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_Greater_ByteByte_ReturnValue_2) == 0x000178, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_Greater_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000179, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_UseItemDataGetValue_SkillNo_ReturnValue) == 0x00017C, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_UseItemDataGetValue_SkillNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue) == 0x000180, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000181, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue_1) == 0x000182, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue_2) == 0x000183, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_GetSkillBaseData_ReturnValue_1) == 0x000188, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_GetSkillBaseData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue_3) == 0x000288, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_SkillBaseDataGetValue_Area_ReturnValue_1) == 0x000289, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_SkillBaseDataGetValue_Area_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00028A, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, Temp_byte_Variable) == 0x00028B, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, Temp_byte_Variable_1) == 0x00028C, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, Temp_bool_Variable_1) == 0x00028D, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, K2Node_Select_Default) == 0x00028E, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00028F, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, K2Node_Select_Default_1) == 0x000290, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000291, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000292, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000293, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000294, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue_4) == 0x000295, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue_5) == 0x000296, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue_6) == 0x000297, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsSkillForActorSide, CallFunc_BooleanOR_ReturnValue_7) == 0x000298, "Member 'BattleSkillActionBase_C_IsSkillForActorSide::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetHeroIndex
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_GetHeroIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetHeroIndex_index;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetHeroIndex) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetHeroIndex");
static_assert(sizeof(BattleSkillActionBase_C_GetHeroIndex) == 0x000020, "Wrong size on BattleSkillActionBase_C_GetHeroIndex");
static_assert(offsetof(BattleSkillActionBase_C_GetHeroIndex, Param_Index) == 0x000000, "Member 'BattleSkillActionBase_C_GetHeroIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHeroIndex, CallFunc_BIGetPartySystem_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_GetHeroIndex::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetHeroIndex, CallFunc_BI_GetHeroIndex_index) == 0x000018, "Member 'BattleSkillActionBase_C_GetHeroIndex::CallFunc_BI_GetHeroIndex_index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.TranslateExtraActionToBadStatus
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_TranslateExtraActionToBadStatus final
{
public:
	E_BTL_EXTRA_ACTION                            ExtraAction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  BadStatus;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Lo_BadStatus;                                      // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_TranslateExtraActionToBadStatus) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_TranslateExtraActionToBadStatus");
static_assert(sizeof(BattleSkillActionBase_C_TranslateExtraActionToBadStatus) == 0x000004, "Wrong size on BattleSkillActionBase_C_TranslateExtraActionToBadStatus");
static_assert(offsetof(BattleSkillActionBase_C_TranslateExtraActionToBadStatus, ExtraAction) == 0x000000, "Member 'BattleSkillActionBase_C_TranslateExtraActionToBadStatus::ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TranslateExtraActionToBadStatus, BadStatus) == 0x000001, "Member 'BattleSkillActionBase_C_TranslateExtraActionToBadStatus::BadStatus' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TranslateExtraActionToBadStatus, Lo_BadStatus) == 0x000002, "Member 'BattleSkillActionBase_C_TranslateExtraActionToBadStatus::Lo_BadStatus' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_TranslateExtraActionToBadStatus, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BattleSkillActionBase_C_TranslateExtraActionToBadStatus::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddNoticeSkillChangedTask
// 0x0170 (0x0170 - 0x0000)
struct BattleSkillActionBase_C_AddNoticeSkillChangedTask final
{
public:
	TArray<E_BAD_STATUS>                          BadStatusType;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_TargetIndex;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            Lo_ExtraAction;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            CallFunc_GetExtraAction_ExtraAction;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F3[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F4[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0038(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  CallFunc_TranslateExtraActionToBadStatus_BadStatus; // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F5[0x5];                                     // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_T                  CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings; // 0x00D8(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F6[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F7[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddExtActMessTask_retPecID;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddNoticeSkillChangedTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddNoticeSkillChangedTask");
static_assert(sizeof(BattleSkillActionBase_C_AddNoticeSkillChangedTask) == 0x000170, "Wrong size on BattleSkillActionBase_C_AddNoticeSkillChangedTask");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, BadStatusType) == 0x000000, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::BadStatusType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, Lo_WaitTaskList) == 0x000010, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, Lo_TargetIndex) == 0x000020, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, Lo_ActorIndex) == 0x000024, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, Lo_ExtraAction) == 0x000028, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::Lo_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_GetExtraAction_ExtraAction) == 0x000029, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_GetExtraAction_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_GetTargetInfoLength_length) == 0x000030, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_GetFirstTargetInfo_Info) == 0x000038, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_GetFirstTargetInfo_valid) == 0x0000D0, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D1, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_TranslateExtraActionToBadStatus_BadStatus) == 0x0000D2, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_TranslateExtraActionToBadStatus_BadStatus' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings) == 0x0000D8, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_BPL_GetBadStatusParticleSetting_ParticleSettings' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_Array_Contains_ReturnValue) == 0x000138, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000148, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_BIGetTaskFactory_retValue) == 0x000158, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_BI_AddExtActMessTask_retPecID) == 0x000168, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_BI_AddExtActMessTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNoticeSkillChangedTask, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x00016C, "Member 'BattleSkillActionBase_C_AddNoticeSkillChangedTask::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcRandomNumPos
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_CalcRandomNumPos final
{
public:
	int32                                         DirectionNum;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DivisionNum;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinimumNum;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RandomPos;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Lo_Last;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F9[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FA[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FB[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetRandom_retValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcRandomNumPos) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcRandomNumPos");
static_assert(sizeof(BattleSkillActionBase_C_CalcRandomNumPos) == 0x000060, "Wrong size on BattleSkillActionBase_C_CalcRandomNumPos");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, DirectionNum) == 0x000000, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::DirectionNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, DivisionNum) == 0x000004, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::DivisionNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, MinimumNum) == 0x000008, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::MinimumNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, RandomPos) == 0x000010, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::RandomPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, Lo_Last) == 0x000020, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::Lo_Last' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, Temp_int_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_Multiply_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_BIGetMainWork_NewParam) == 0x000040, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_BI_GetRandom_retValue) == 0x000054, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_BI_GetRandom_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, CallFunc_Array_Add_ReturnValue_1) == 0x000058, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcRandomNumPos, Temp_int_Variable_1) == 0x00005C, "Member 'BattleSkillActionBase_C_CalcRandomNumPos::Temp_int_Variable_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcSkipCameraName
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_CalcSkipCameraName final
{
public:
	bool                                          IsReflected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_CamName;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CalcSkipCameraName) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcSkipCameraName");
static_assert(sizeof(BattleSkillActionBase_C_CalcSkipCameraName) == 0x000030, "Wrong size on BattleSkillActionBase_C_CalcSkipCameraName");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkipCameraName, IsReflected) == 0x000000, "Member 'BattleSkillActionBase_C_CalcSkipCameraName::IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkipCameraName, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_CalcSkipCameraName::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkipCameraName, Lo_CamName) == 0x000018, "Member 'BattleSkillActionBase_C_CalcSkipCameraName::Lo_CamName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkipCameraName, CallFunc_GetSkillArea_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_CalcSkipCameraName::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcSkipCameraName, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'BattleSkillActionBase_C_CalcSkipCameraName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckChangeCamera
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_CheckChangeCamera final
{
public:
	class ACharaBase_C*                           Lo_Actor;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FD[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CalcSkipCameraName_CameraName;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamTargetRelative_ComIndex;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayMotion_IsPlay;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckChangeCamera) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckChangeCamera");
static_assert(sizeof(BattleSkillActionBase_C_CheckChangeCamera) == 0x000030, "Wrong size on BattleSkillActionBase_C_CheckChangeCamera");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, Lo_Actor) == 0x000000, "Member 'BattleSkillActionBase_C_CheckChangeCamera::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_GetActorPartyIndex_index) == 0x000008, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_IsReflected_IsReflected) == 0x00000C, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_FindUnit_Unit) == 0x000010, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_CalcSkipCameraName_CameraName) == 0x000018, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_CalcSkipCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_Com_SetCamTargetRelative_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_Com_SetCamTargetRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_IsPlayMotion_IsPlay) == 0x00002C, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_IsPlayMotion_IsPlay' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckChangeCamera, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'BattleSkillActionBase_C_CheckChangeCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcDamagePosOffset
// 0x004C (0x004C - 0x0000)
struct BattleSkillActionBase_C_CalcDamagePosOffset final
{
public:
	int32                                         PosNo;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumPosDirection;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcDamagePosOffset) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_CalcDamagePosOffset");
static_assert(sizeof(BattleSkillActionBase_C_CalcDamagePosOffset) == 0x00004C, "Wrong size on BattleSkillActionBase_C_CalcDamagePosOffset");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, PosNo) == 0x000000, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::PosNo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, NumPosDirection) == 0x000004, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::NumPosDirection' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, Offset) == 0x000008, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::Offset' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000018, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Percent_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Multiply_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_DegSin_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_DegCos_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcDamagePosOffset, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_CalcDamagePosOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckTargetResType
// 0x00A8 (0x00A8 - 0x0000)
struct BattleSkillActionBase_C_CheckTargetResType final
{
public:
	struct FSkillActionTargetInfo                 SkillActionTargetInfo;                             // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_BTL_REFLECT_RES_TYPE                        ResType;                                           // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTheSameResType;                                  // 0x0099(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FE[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckTargetResType) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckTargetResType");
static_assert(sizeof(BattleSkillActionBase_C_CheckTargetResType) == 0x0000A8, "Wrong size on BattleSkillActionBase_C_CheckTargetResType");
static_assert(offsetof(BattleSkillActionBase_C_CheckTargetResType, SkillActionTargetInfo) == 0x000000, "Member 'BattleSkillActionBase_C_CheckTargetResType::SkillActionTargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckTargetResType, ResType) == 0x000098, "Member 'BattleSkillActionBase_C_CheckTargetResType::ResType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckTargetResType, IsTheSameResType) == 0x000099, "Member 'BattleSkillActionBase_C_CheckTargetResType::IsTheSameResType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckTargetResType, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_CheckTargetResType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckTargetResType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_CheckTargetResType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckTargetResType, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A1, "Member 'BattleSkillActionBase_C_CheckTargetResType::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.KuishibariInfoMessTask
// 0x0440 (0x0440 - 0x0000)
struct BattleSkillActionBase_C_KuishibariInfoMessTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_SKILL_INFO_MESS_TIMING                      Timing;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> TaskFactory;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 TaSKID;                                            // 0x0028(0x0010)(Parm, OutParm)
	class FString                                 Lo_TiamatHeadDyingParam;                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_ReflectKuishibari;                              // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3500[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_AfterAddWaitTaskList;                           // 0x0050(0x0010)(Edit, BlueprintVisible)
	struct FSkillActionTargetInfo                 Lo_TargetInfo;                                     // 0x0060(0x0098)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x00F8(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_MsgID;                                          // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SkillId;                                        // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Actor;                                          // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Target;                                         // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0118(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3501[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_BIGetPTMemDataInterface_AsBPI_PTMemData;  // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3502[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0170(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0180(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3503[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3504[0x5];                                     // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_MakeMusMahDirection_RetWaitTaskList;   // 0x0240(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3505[0x3];                                     // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3506[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x0270(0x0030)()
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3507[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x02A8(0x0030)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3508[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x02F0(0x0098)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_4;              // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3509[0x8];                                     // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03A0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetKuishibariCureHP_CureHP;            // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddNumEffectTask_retValue;             // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_5;              // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_1;      // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350A[0x2];                                     // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350B[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350C[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_MakeKuishibariInfoTask_RetPecIDs;      // 0x0420(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_MakeKuishibariInfoTask_WaitPecIDs;     // 0x0430(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleSkillActionBase_C_KuishibariInfoMessTask) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_KuishibariInfoMessTask");
static_assert(sizeof(BattleSkillActionBase_C_KuishibariInfoMessTask) == 0x000440, "Wrong size on BattleSkillActionBase_C_KuishibariInfoMessTask");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Timing) == 0x000010, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Timing' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, TaskFactory) == 0x000018, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::TaskFactory' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, TaSKID) == 0x000028, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::TaSKID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_TiamatHeadDyingParam) == 0x000038, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_TiamatHeadDyingParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_ReflectKuishibari) == 0x000048, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_ReflectKuishibari' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_AfterAddWaitTaskList) == 0x000050, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_AfterAddWaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_TargetInfo) == 0x000060, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_TargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_RetTaskList) == 0x0000F8, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_MsgID) == 0x000108, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_MsgID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_SkillId) == 0x00010C, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_Actor) == 0x000110, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_Target) == 0x000114, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Lo_WaitTaskList) == 0x000118, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetTaskFactory_retValue) == 0x000130, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetPTMemDataInterface_AsBPI_PTMemData) == 0x000140, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetPTMemDataInterface_AsBPI_PTMemData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_GetReflexInfo_Info) == 0x000150, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_GetReflexInfoLength_length) == 0x000160, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_GetTargetInfo_Info) == 0x000170, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Array_Get_Item) == 0x000180, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Array_Length_ReturnValue_1) == 0x000218, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Temp_bool_True_if_break_was_hit_Variable) == 0x00021C, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Not_PreBool_ReturnValue) == 0x00021D, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Not_PreBool_ReturnValue_1) == 0x00021E, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Not_PreBool_ReturnValue_2) == 0x00021F, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BooleanAND_ReturnValue) == 0x000220, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetTaskFactory_retValue_1) == 0x000228, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000238, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, K2Node_SwitchEnum_CmpSuccess) == 0x000239, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, K2Node_SwitchEnum_CmpSuccess_1) == 0x00023A, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_MakeMusMahDirection_RetWaitTaskList) == 0x000240, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_MakeMusMahDirection_RetWaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Temp_int_Loop_Counter_Variable) == 0x000250, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Less_IntInt_ReturnValue) == 0x000254, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Add_IntInt_ReturnValue) == 0x000258, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetTaskFactory_retValue_2) == 0x000260, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, K2Node_MakeStruct_BtlTaskData) == 0x000270, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0002A0, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, K2Node_MakeStruct_BtlTaskData_1) == 0x0002A8, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetTaskFactory_retValue_3) == 0x0002D8, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Temp_int_Array_Index_Variable_1) == 0x0002E8, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Array_Get_Item_1) == 0x0002F0, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetTaskFactory_retValue_4) == 0x000388, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetTaskFactory_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_MakeTransform_ReturnValue) == 0x0003A0, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetPartySystem_retValue) == 0x0003D0, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_AddPlayEffectTask_retValue) == 0x0003E0, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_GetKuishibariCureHP_CureHP) == 0x0003E4, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_GetKuishibariCureHP_CureHP' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x0003E8, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_AddNumEffectTask_retValue) == 0x0003EC, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_AddNumEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BIGetTaskFactory_retValue_5) == 0x0003F0, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BIGetTaskFactory_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_GetPlayRate_PlayRate) == 0x000400, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_AddPartyPanelCtrlTask_retValue_1) == 0x000404, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_AddPartyPanelCtrlTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000408, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BooleanAND_ReturnValue_1) == 0x000409, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, Temp_int_Loop_Counter_Variable_1) == 0x00040C, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Less_IntInt_ReturnValue_1) == 0x000410, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x000414, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BooleanAND_ReturnValue_2) == 0x000418, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_MakeKuishibariInfoTask_RetPecIDs) == 0x000420, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_MakeKuishibariInfoTask_RetPecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_KuishibariInfoMessTask, CallFunc_BI_MakeKuishibariInfoTask_WaitPecIDs) == 0x000430, "Member 'BattleSkillActionBase_C_KuishibariInfoMessTask::CallFunc_BI_MakeKuishibariInfoTask_WaitPecIDs' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcMoveDestLocation
// 0x03C0 (0x03C0 - 0x0000)
struct BattleSkillActionBase_C_CalcMoveDestLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ave;                                               // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistFromTarget;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetLocation;                                 // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_DistFromTarget;                                 // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsActorMoveable;                                // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350D[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_ActorUnit;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_MoveLocation;                                   // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorLoc;                                       // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_CheckDot;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MostFarDist;                                    // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Lo_EnemyDefAreaRange;                              // 0x0058(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Lo_EnemyAve;                                       // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350E[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Lo_EnemyLocs;                                      // 0x0078(0x0010)(Edit, BlueprintVisible)
	class ACharaBase_C*                           Lo_TmpTarget;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_Checked;                                        // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350F[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x00B0(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3510[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info_1;                // 0x0158(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid_1;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3511[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcActorLocation_ActorLocation;          // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshRelativeScale_Scale_1;             // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3512[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root;              // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation;    // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate;            // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid;             // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3513[0x3];                                     // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThisOneTargetSkill_IsOneTarget;         // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3514[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMeshRelativeScale_Scale_2;             // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3515[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x02B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3516[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_2;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_Root_1;            // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUnitSocketLocation_SocketLocation_1;  // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcUnitSocketLocation_Rotate_1;          // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcUnitSocketLocation_Valid_1;           // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3517[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMeshRelativeScale_Scale_3;             // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3518[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3519[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351A[0x2];                                     // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351B[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351C[0x3];                                     // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcMoveDestLocation) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CalcMoveDestLocation");
static_assert(sizeof(BattleSkillActionBase_C_CalcMoveDestLocation) == 0x0003C0, "Wrong size on BattleSkillActionBase_C_CalcMoveDestLocation");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Location) == 0x000000, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Ave) == 0x00000C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Ave' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, DistFromTarget) == 0x000018, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::DistFromTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_TargetLocation) == 0x00001C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_TargetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_DistFromTarget) == 0x000028, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_DistFromTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_IsActorMoveable) == 0x00002C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_IsActorMoveable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_ActorUnit) == 0x000030, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_ActorUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_MoveLocation) == 0x000038, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_MoveLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_ActorLoc) == 0x000044, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_ActorLoc' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_CheckDot) == 0x000050, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_CheckDot' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_MostFarDist) == 0x000054, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_MostFarDist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_EnemyDefAreaRange) == 0x000058, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_EnemyDefAreaRange' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_EnemyAve) == 0x000068, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_EnemyAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_EnemyLocs) == 0x000078, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_EnemyLocs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_TmpTarget) == 0x000088, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_TmpTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Lo_Checked) == 0x000090, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Lo_Checked' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetFirstTargetInfo_Info) == 0x0000B0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetFirstTargetInfo_valid) == 0x000148, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_FindUnit_Unit) == 0x000150, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetFirstTargetInfo_Info_1) == 0x000158, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetFirstTargetInfo_Info_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetFirstTargetInfo_valid_1) == 0x0001F0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetFirstTargetInfo_valid_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetActorPartyIndex_index) == 0x0001F4, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_FindUnit_Unit_1) == 0x0001F8, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000200, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcActorLocation_ActorLocation) == 0x00020C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcActorLocation_ActorLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000218, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Normal_ReturnValue) == 0x000224, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000230, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetMeshRelativeScale_Scale) == 0x00023C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetMeshRelativeScale_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000240, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00024C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetMeshRelativeScale_Scale_1) == 0x000250, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetMeshRelativeScale_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_BIGetPartySystem_retValue) == 0x000258, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_Root) == 0x000268, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_Root' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_SocketLocation) == 0x000274, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_Rotate) == 0x000280, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_Rotate' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_Valid) == 0x00028C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_Valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000290, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000294, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_IsThisOneTargetSkill_IsOneTarget) == 0x000298, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_IsThisOneTargetSkill_IsOneTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetMeshRelativeScale_Scale_2) == 0x00029C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetMeshRelativeScale_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_BIGetPartySystem_retValue_1) == 0x0002A0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_BI_GetSide_side) == 0x0002B0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002B4, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_BI_GetSideIsTargetList_List) == 0x0002B8, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Length_ReturnValue) == 0x0002C8, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Temp_int_Array_Index_Variable_1) == 0x0002CC, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Get_Item) == 0x0002D0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_FindUnit_Unit_2) == 0x0002D8, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_FindUnit_Unit_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Add_ReturnValue) == 0x0002E0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_Root_1) == 0x0002E4, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_Root_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_SocketLocation_1) == 0x0002F0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_SocketLocation_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_Rotate_1) == 0x0002FC, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_Rotate_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_CalcUnitSocketLocation_Valid_1) == 0x000308, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_CalcUnitSocketLocation_Valid_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_GetMeshRelativeScale_Scale_3) == 0x00030C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_GetMeshRelativeScale_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000310, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Contains_ReturnValue) == 0x000314, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000318, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, Temp_int_Loop_Counter_Variable_1) == 0x000324, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000328, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x00032C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000330, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000334, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Normal_ReturnValue_1) == 0x000340, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00034C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000358, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_SelectVector_ReturnValue) == 0x000364, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000370, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Length_ReturnValue_1) == 0x00037C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000380, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Less_IntInt_ReturnValue_1) == 0x000381, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000384, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000388, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_VSize_ReturnValue) == 0x00038C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_BooleanOR_ReturnValue) == 0x000390, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000394, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Length_ReturnValue_2) == 0x000398, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00039C, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0003A0, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0003AC, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Add_ReturnValue_1) == 0x0003B8, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcMoveDestLocation, CallFunc_Array_Add_ReturnValue_2) == 0x0003BC, "Member 'BattleSkillActionBase_C_CalcMoveDestLocation::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ActorMoveToTargetLocation
// 0x0250 (0x0250 - 0x0000)
struct BattleSkillActionBase_C_Com_ActorMoveToTargetLocation final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DestLocation;                                      // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookLocation;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMoveFinish;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LookLocatoin;                                   // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_DestLocation;                                   // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CheckAttackReach;                               // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsWaitFinish;                                   // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351E[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_CenterDefenseArea;                              // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CenterNormal;                                   // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CenterPos;                                      // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MoveTIme;                                       // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Distance;                                       // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CheckDefenseArea;                               // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351F[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Actor;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ActorLoc;                                       // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_CheckDot;                                       // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_MostFarDist;                                    // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3520[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill;     // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill;     // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3521[0x1];                                     // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3522[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3523[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_2;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3524[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3525[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3526[0x8];                                     // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3527[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetOnlyActor_ReturnValue;            // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3528[0x1];                                     // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_2;       // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3529[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x01A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_3;       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352A[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetTargetCenter_Pos;                      // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal;                   // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward;                  // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitMoveTask_retPecID;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Pos_1;                    // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal_1;                 // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward_1;                // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea_1;            // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352B[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaAction_C>    CallFunc_SetAttackAimLocation_self_CastInput;      // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackAimLocation_NoUse;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352C[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_ActorMoveToTargetLocation");
static_assert(sizeof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation) == 0x000250, "Wrong size on BattleSkillActionBase_C_Com_ActorMoveToTargetLocation");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, DestLocation) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::DestLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, LookLocation) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::LookLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, MoveTime) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::MoveTime' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, WaitMoveFinish) == 0x000020, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::WaitMoveFinish' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, ComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_LookLocatoin) == 0x000028, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_LookLocatoin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_DestLocation) == 0x000034, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_DestLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_CheckAttackReach) == 0x000040, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_CheckAttackReach' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_IsWaitFinish) == 0x000041, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_IsWaitFinish' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_CenterDefenseArea) == 0x000044, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_CenterDefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_CenterNormal) == 0x000048, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_CenterNormal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_CenterPos) == 0x000054, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_CenterPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_MoveTIme) == 0x000060, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_MoveTIme' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_Distance) == 0x000064, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_CheckDefenseArea) == 0x000068, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_CheckDefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_Actor) == 0x000070, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_ActorLoc) == 0x000078, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_ActorLoc' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_CheckDot) == 0x000084, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_CheckDot' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_MostFarDist) == 0x000088, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_MostFarDist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, Lo_WaitList) == 0x000090, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetComandID_retValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_IsValidCommandIndex_retValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill) == 0x0000A5, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill) == 0x0000A6, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetActorPartyIndex_index) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_Not_PreBool_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_FindUnit_Unit) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetActorScale3D_ReturnValue) == 0x0000BC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetActorPartyIndex_index_1) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetActorPartyIndex_index_2) == 0x0000DC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetActorPartyIndex_index_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_FindUnit_Unit_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_TraceGround_Hit) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_TraceGround_Location) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_TraceGround_Normal) == 0x000104, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_TraceGround_Surface) == 0x000110, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000114, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000118, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_Vector_Up_ReturnValue) == 0x000124, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_MakeRotFromZX_ReturnValue) == 0x00013C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000180, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000184, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_VSize_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000194, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_IsReflected_IsReflected) == 0x000198, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_BooleanAND_ReturnValue_1) == 0x000199, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_IsTargetOnlyActor_ReturnValue) == 0x00019A, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_IsTargetOnlyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetBeforCommandIndex_RetComIndex_2) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetBeforCommandIndex_RetComIndex_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_SelectFloat_ReturnValue) == 0x0001A4, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetPartyIndex_index) == 0x0001A8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetBeforCommandIndex_RetComIndex_3) == 0x0001B8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetBeforCommandIndex_RetComIndex_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_BIGetPartySystem_retValue) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_BIGetTaskFactory_retValue) == 0x0001D0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_Pos) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_Normal) == 0x0001EC, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_forward) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_DefenseArea) == 0x000204, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_DefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_BI_AddUnitMoveTask_retPecID) == 0x000208, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_BI_AddUnitMoveTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_Pos_1) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_Pos_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_Normal_1) == 0x000218, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_Normal_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_forward_1) == 0x000224, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_forward_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_GetTargetCenter_DefenseArea_1) == 0x000230, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_GetTargetCenter_DefenseArea_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_SetAttackAimLocation_self_CastInput) == 0x000238, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_SetAttackAimLocation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_SetAttackAimLocation_NoUse) == 0x000248, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_SetAttackAimLocation_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveToTargetLocation, CallFunc_Array_Add_ReturnValue) == 0x00024C, "Member 'BattleSkillActionBase_C_Com_ActorMoveToTargetLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsInvalidData
// 0x0024 (0x0024 - 0x0000)
struct BattleSkillActionBase_C_IsInvalidData final
{
public:
	E_BTL_DAMAGE_HIT_TYPE                         HitType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Damage;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamgeReal;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rec;                                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageMP;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecMP;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInvalid;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsInvalidData) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_IsInvalidData");
static_assert(sizeof(BattleSkillActionBase_C_IsInvalidData) == 0x000024, "Wrong size on BattleSkillActionBase_C_IsInvalidData");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, HitType) == 0x000000, "Member 'BattleSkillActionBase_C_IsInvalidData::HitType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, Damage) == 0x000004, "Member 'BattleSkillActionBase_C_IsInvalidData::Damage' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, DamgeReal) == 0x000008, "Member 'BattleSkillActionBase_C_IsInvalidData::DamgeReal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, Rec) == 0x00000C, "Member 'BattleSkillActionBase_C_IsInvalidData::Rec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, DamageMP) == 0x000010, "Member 'BattleSkillActionBase_C_IsInvalidData::DamageMP' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, RecMP) == 0x000014, "Member 'BattleSkillActionBase_C_IsInvalidData::RecMP' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, IsInvalid) == 0x000018, "Member 'BattleSkillActionBase_C_IsInvalidData::IsInvalid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001B, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00001C, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00001D, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00001E, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_BooleanAND_ReturnValue) == 0x00001F, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_BooleanAND_ReturnValue_1) == 0x000020, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_BooleanAND_ReturnValue_2) == 0x000021, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_BooleanAND_ReturnValue_3) == 0x000022, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsInvalidData, CallFunc_BooleanAND_ReturnValue_4) == 0x000023, "Member 'BattleSkillActionBase_C_IsInvalidData::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetPartyRotation
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_GetPartyRotation final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Lo_LastUp;                                         // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastForward;                                    // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastPos;                                        // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosSum;                                         // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Max;                                            // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352E[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352F[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetPartyTransform_retValue;            // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_GetPartyRotation) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_GetPartyRotation");
static_assert(sizeof(BattleSkillActionBase_C_GetPartyRotation) == 0x000110, "Wrong size on BattleSkillActionBase_C_GetPartyRotation");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_GetPartyRotation::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Rotation) == 0x000004, "Member 'BattleSkillActionBase_C_GetPartyRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_PartyIndex) == 0x000010, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_LastUp) == 0x000020, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_LastUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_LastForward) == 0x00002C, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_LastForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_LastPos) == 0x000038, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_LastPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_PosSum) == 0x000044, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_PosSum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_PartyNum) == 0x000050, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_Max) == 0x000054, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_Max' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Lo_Start) == 0x000058, "Member 'BattleSkillActionBase_C_GetPartyRotation::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BattleSkillActionBase_C_GetPartyRotation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BattleSkillActionBase_C_GetPartyRotation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BIGetPartySystem_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BI_GetSide_side) == 0x000078, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BIGetPartySystem_retValue_1) == 0x000080, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BI_GetSideIsTargetList_List) == 0x000090, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_Array_Get_Item) == 0x0000A4, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BI_GetPartyTransform_retValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BI_GetPartyTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetPartyRotation, CallFunc_BI_IsExist_retValue) == 0x000104, "Member 'BattleSkillActionBase_C_GetPartyRotation::CallFunc_BI_IsExist_retValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.InitAllDecals
// 0x0038 (0x0038 - 0x0000)
struct BattleSkillActionBase_C_InitAllDecals final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialAnimDecalComponent_C*          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3530[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ADevilSpawnDecal_C*                     CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_InitAllDecals) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_InitAllDecals");
static_assert(sizeof(BattleSkillActionBase_C_InitAllDecals) == 0x000038, "Wrong size on BattleSkillActionBase_C_InitAllDecals");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSkillActionBase_C_InitAllDecals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_InitAllDecals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BattleSkillActionBase_C_InitAllDecals::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BattleSkillActionBase_C_InitAllDecals::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitAllDecals, CallFunc_Less_IntInt_ReturnValue_1) == 0x000035, "Member 'BattleSkillActionBase_C_InitAllDecals::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddStopAllSE Task
// 0x0038 (0x0038 - 0x0000)
struct BattleSkillActionBase_C_AddStopAllSE_Task final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WaitPecID;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3531[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddStopAllSE_Task_PecID;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddStopAllSE_Task) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddStopAllSE_Task");
static_assert(sizeof(BattleSkillActionBase_C_AddStopAllSE_Task) == 0x000038, "Wrong size on BattleSkillActionBase_C_AddStopAllSE_Task");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, WaitPecID) == 0x000004, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::WaitPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, Lo_WaitList) == 0x000008, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, CallFunc_GetComandID_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, CallFunc_IsValidCommandIndex_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, CallFunc_BIGetTaskFactory_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllSE_Task, CallFunc_BI_AddStopAllSE_Task_PecID) == 0x000034, "Member 'BattleSkillActionBase_C_AddStopAllSE_Task::CallFunc_BI_AddStopAllSE_Task_PecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SetActorDitherOff
// 0x0018 (0x0018 - 0x0000)
struct BattleSkillActionBase_C_SetActorDitherOff final
{
public:
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3532[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SetActorDitherOff) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_SetActorDitherOff");
static_assert(sizeof(BattleSkillActionBase_C_SetActorDitherOff) == 0x000018, "Wrong size on BattleSkillActionBase_C_SetActorDitherOff");
static_assert(offsetof(BattleSkillActionBase_C_SetActorDitherOff, CallFunc_GetActorPartyIndex_index) == 0x000000, "Member 'BattleSkillActionBase_C_SetActorDitherOff::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetActorDitherOff, CallFunc_FindUnit_Unit) == 0x000008, "Member 'BattleSkillActionBase_C_SetActorDitherOff::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SetActorDitherOff, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_SetActorDitherOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.InitActorDither
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_InitActorDither final
{
public:
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3533[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3534[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleSkillActionBase_C_InitActorDither) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_InitActorDither");
static_assert(sizeof(BattleSkillActionBase_C_InitActorDither) == 0x000030, "Wrong size on BattleSkillActionBase_C_InitActorDither");
static_assert(offsetof(BattleSkillActionBase_C_InitActorDither, Lo_Unit) == 0x000000, "Member 'BattleSkillActionBase_C_InitActorDither::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitActorDither, CallFunc_GetActorPartyIndex_index) == 0x000008, "Member 'BattleSkillActionBase_C_InitActorDither::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitActorDither, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_InitActorDither::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitActorDither, CallFunc_FindUnit_Unit) == 0x000010, "Member 'BattleSkillActionBase_C_InitActorDither::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitActorDither, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_InitActorDither::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_InitActorDither, K2Node_MakeArray_Array) == 0x000020, "Member 'BattleSkillActionBase_C_InitActorDither::K2Node_MakeArray_Array' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.MakeSkillName
// 0x0220 (0x0220 - 0x0000)
struct BattleSkillActionBase_C_MakeSkillName final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         Aptitude;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Aptitude;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_SkillName;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetSkillName_ReturnValue;                 // 0x0030(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3535[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3536[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3537[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_SKILL_TEKISEI_CATEGORY                      CallFunc_GetSkillTekiseiCategory_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3538[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3539[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharData                           CallFunc_BI_GetCharaData_retValue;                 // 0x00D0(0x0148)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Analyze_CheckIsOpenSkillTekisei_ReturnValue; // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_MakeSkillName) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_MakeSkillName");
static_assert(sizeof(BattleSkillActionBase_C_MakeSkillName) == 0x000220, "Wrong size on BattleSkillActionBase_C_MakeSkillName");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, ID) == 0x000000, "Member 'BattleSkillActionBase_C_MakeSkillName::ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, ActorIndex) == 0x000004, "Member 'BattleSkillActionBase_C_MakeSkillName::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_MakeSkillName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, Aptitude) == 0x000018, "Member 'BattleSkillActionBase_C_MakeSkillName::Aptitude' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, Lo_Aptitude) == 0x00001C, "Member 'BattleSkillActionBase_C_MakeSkillName::Lo_Aptitude' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, Lo_SkillName) == 0x000020, "Member 'BattleSkillActionBase_C_MakeSkillName::Lo_SkillName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_GetSkillName_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_GetSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Abs_Int_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_SelectString_ReturnValue) == 0x000078, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_GetSkillTekiseiCategory_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_GetSkillTekiseiCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_BIGetPartySystem_retValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_BI_GetSide_side) == 0x0000C8, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_BI_GetCharaData_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_BI_GetCharaData_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000218, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Analyze_CheckIsOpenSkillTekisei_ReturnValue) == 0x000219, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Analyze_CheckIsOpenSkillTekisei_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00021A, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_BooleanOR_ReturnValue) == 0x00021B, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillName, CallFunc_BooleanAND_ReturnValue) == 0x00021C, "Member 'BattleSkillActionBase_C_MakeSkillName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsAlreadyCameraChanged
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_IsAlreadyCameraChanged final
{
public:
	bool                                          Changed;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsAlreadyCameraChanged) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsAlreadyCameraChanged");
static_assert(sizeof(BattleSkillActionBase_C_IsAlreadyCameraChanged) == 0x000001, "Wrong size on BattleSkillActionBase_C_IsAlreadyCameraChanged");
static_assert(offsetof(BattleSkillActionBase_C_IsAlreadyCameraChanged, Changed) == 0x000000, "Member 'BattleSkillActionBase_C_IsAlreadyCameraChanged::Changed' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsUseAnimCam
// 0x000C (0x000C - 0x0000)
struct BattleSkillActionBase_C_IsUseAnimCam final
{
public:
	bool                                          IsUsed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsUseAnimCam) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_IsUseAnimCam");
static_assert(sizeof(BattleSkillActionBase_C_IsUseAnimCam) == 0x00000C, "Wrong size on BattleSkillActionBase_C_IsUseAnimCam");
static_assert(offsetof(BattleSkillActionBase_C_IsUseAnimCam, IsUsed) == 0x000000, "Member 'BattleSkillActionBase_C_IsUseAnimCam::IsUsed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUseAnimCam, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_IsUseAnimCam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsUseAnimCam, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsUseAnimCam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsThisCallSkill
// 0x0003 (0x0003 - 0x0000)
struct BattleSkillActionBase_C_IsThisCallSkill final
{
public:
	bool                                          IsCall;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TYPE                                  CallFunc_GetSkillType_Type;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsThisCallSkill) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsThisCallSkill");
static_assert(sizeof(BattleSkillActionBase_C_IsThisCallSkill) == 0x000003, "Wrong size on BattleSkillActionBase_C_IsThisCallSkill");
static_assert(offsetof(BattleSkillActionBase_C_IsThisCallSkill, IsCall) == 0x000000, "Member 'BattleSkillActionBase_C_IsThisCallSkill::IsCall' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisCallSkill, CallFunc_GetSkillType_Type) == 0x000001, "Member 'BattleSkillActionBase_C_IsThisCallSkill::CallFunc_GetSkillType_Type' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisCallSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BattleSkillActionBase_C_IsThisCallSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetSkillType
// 0x0110 (0x0110 - 0x0000)
struct BattleSkillActionBase_C_GetSkillType final
{
public:
	E_SKILL_TYPE                                  Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0008(0x0100)(ConstParm)
	E_SKILL_TYPE                                  CallFunc_SkillBaseDataGetValue_Type_ReturnValue;   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetSkillType) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetSkillType");
static_assert(sizeof(BattleSkillActionBase_C_GetSkillType) == 0x000110, "Wrong size on BattleSkillActionBase_C_GetSkillType");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillType, Type) == 0x000000, "Member 'BattleSkillActionBase_C_GetSkillType::Type' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillType, CallFunc_GetSkillID_ID) == 0x000004, "Member 'BattleSkillActionBase_C_GetSkillType::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillType, CallFunc_GetSkillBaseData_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_GetSkillType::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillType, CallFunc_SkillBaseDataGetValue_Type_ReturnValue) == 0x000108, "Member 'BattleSkillActionBase_C_GetSkillType::CallFunc_SkillBaseDataGetValue_Type_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsThisOneTargetCallSkill
// 0x00E8 (0x00E8 - 0x0000)
struct BattleSkillActionBase_C_IsThisOneTargetCallSkill final
{
public:
	bool                                          IsOneTarget;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Calls;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0018(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0028(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item_1;                         // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353E[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckFlag2_retValue;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsThisOneTargetCallSkill) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsThisOneTargetCallSkill");
static_assert(sizeof(BattleSkillActionBase_C_IsThisOneTargetCallSkill) == 0x0000E8, "Wrong size on BattleSkillActionBase_C_IsThisOneTargetCallSkill");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, IsOneTarget) == 0x000000, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::IsOneTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, Lo_Calls) == 0x000004, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::Lo_Calls' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_GetTargetInfo_Info) == 0x000018, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_Array_Get_Item_1) == 0x0000C5, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C6, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C7, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_BIGetPartySystem_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, Temp_int_Variable) == 0x0000E0, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_BI_CheckFlag2_retValue) == 0x0000E4, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_BI_CheckFlag2_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_Not_PreBool_ReturnValue) == 0x0000E5, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsThisOneTargetCallSkill, CallFunc_BooleanAND_ReturnValue) == 0x0000E6, "Member 'BattleSkillActionBase_C_IsThisOneTargetCallSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SetIgnoreSkip
// 0x0038 (0x0038 - 0x0000)
struct BattleSkillActionBase_C_Com_SetIgnoreSkip final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3540[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddIgnoreSkillSkipTask_RetPecID;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SetIgnoreSkip) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_SetIgnoreSkip");
static_assert(sizeof(BattleSkillActionBase_C_Com_SetIgnoreSkip) == 0x000038, "Wrong size on BattleSkillActionBase_C_Com_SetIgnoreSkip");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetIgnoreSkip, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SetIgnoreSkip::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetIgnoreSkip, Lo_WaitList) == 0x000008, "Member 'BattleSkillActionBase_C_Com_SetIgnoreSkip::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetIgnoreSkip, CallFunc_GetComandID_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_Com_SetIgnoreSkip::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetIgnoreSkip, CallFunc_IsValidCommandIndex_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_SetIgnoreSkip::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetIgnoreSkip, CallFunc_BIGetTaskFactory_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_SetIgnoreSkip::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetIgnoreSkip, CallFunc_BI_AddIgnoreSkillSkipTask_RetPecID) == 0x000030, "Member 'BattleSkillActionBase_C_Com_SetIgnoreSkip::CallFunc_BI_AddIgnoreSkillSkipTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SetIgnoreSkip, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_SetIgnoreSkip::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddStopAllParticleTask
// 0x0038 (0x0038 - 0x0000)
struct BattleSkillActionBase_C_AddStopAllParticleTask final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WaitPecID;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3541[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddStopAllParticleTask_RetPecID;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddStopAllParticleTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddStopAllParticleTask");
static_assert(sizeof(BattleSkillActionBase_C_AddStopAllParticleTask) == 0x000038, "Wrong size on BattleSkillActionBase_C_AddStopAllParticleTask");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, WaitPecID) == 0x000004, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::WaitPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, Lo_WaitList) == 0x000008, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, CallFunc_GetComandID_retValue) == 0x000018, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, CallFunc_IsValidCommandIndex_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, CallFunc_BIGetTaskFactory_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, CallFunc_BI_AddStopAllParticleTask_RetPecID) == 0x000030, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::CallFunc_BI_AddStopAllParticleTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddStopAllParticleTask, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_AddStopAllParticleTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.OverrideActorPartyIndex
// 0x0018 (0x0018 - 0x0000)
struct BattleSkillActionBase_C_OverrideActorPartyIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3542[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Index;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleSkillActionBase_C_OverrideActorPartyIndex) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_OverrideActorPartyIndex");
static_assert(sizeof(BattleSkillActionBase_C_OverrideActorPartyIndex) == 0x000018, "Wrong size on BattleSkillActionBase_C_OverrideActorPartyIndex");
static_assert(offsetof(BattleSkillActionBase_C_OverrideActorPartyIndex, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_OverrideActorPartyIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_OverrideActorPartyIndex, Lo_Index) == 0x000008, "Member 'BattleSkillActionBase_C_OverrideActorPartyIndex::Lo_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CalcActorLocation
// 0x00A0 (0x00A0 - 0x0000)
struct BattleSkillActionBase_C_CalcActorLocation final
{
public:
	struct FVector                                ActorLocation;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3543[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3544[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3545[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_BI_GetPartyHomeTransform_Home;            // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CalcActorLocation) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_CalcActorLocation");
static_assert(sizeof(BattleSkillActionBase_C_CalcActorLocation) == 0x0000A0, "Wrong size on BattleSkillActionBase_C_CalcActorLocation");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, ActorLocation) == 0x000000, "Member 'BattleSkillActionBase_C_CalcActorLocation::ActorLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_BIGetPartySystem_retValue) == 0x000010, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_GetActorPartyIndex_index) == 0x000020, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_BI_GetSide_side) == 0x000024, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_FindUnit_Unit) == 0x000028, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_BI_GetPartyHomeTransform_Home) == 0x000040, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_BI_GetPartyHomeTransform_Home' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CalcActorLocation, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BattleSkillActionBase_C_CalcActorLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetSkillID
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_GetSkillID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetSkillID) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetSkillID");
static_assert(sizeof(BattleSkillActionBase_C_GetSkillID) == 0x000004, "Wrong size on BattleSkillActionBase_C_GetSkillID");
static_assert(offsetof(BattleSkillActionBase_C_GetSkillID, ID) == 0x000000, "Member 'BattleSkillActionBase_C_GetSkillID::ID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsCallWhiteOut
// 0x0005 (0x0005 - 0x0000)
struct BattleSkillActionBase_C_IsCallWhiteOut final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseAnimCam_IsUsed;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsCallWhiteOut) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsCallWhiteOut");
static_assert(sizeof(BattleSkillActionBase_C_IsCallWhiteOut) == 0x000005, "Wrong size on BattleSkillActionBase_C_IsCallWhiteOut");
static_assert(offsetof(BattleSkillActionBase_C_IsCallWhiteOut, ReturnValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsCallWhiteOut::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsCallWhiteOut, CallFunc_IsUseAnimCam_IsUsed) == 0x000001, "Member 'BattleSkillActionBase_C_IsCallWhiteOut::CallFunc_IsUseAnimCam_IsUsed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsCallWhiteOut, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BattleSkillActionBase_C_IsCallWhiteOut::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsCallWhiteOut, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BattleSkillActionBase_C_IsCallWhiteOut::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsCallWhiteOut, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BattleSkillActionBase_C_IsCallWhiteOut::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsHeroDeadByReflection
// 0x00E0 (0x00E0 - 0x0000)
struct BattleSkillActionBase_C_IsHeroDeadByReflection final
{
public:
	bool                                          IsDead;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3546[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         Lo_Ref;                                            // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3547[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0028(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0038(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3548[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsHeroDeadByReflection) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsHeroDeadByReflection");
static_assert(sizeof(BattleSkillActionBase_C_IsHeroDeadByReflection) == 0x0000E0, "Wrong size on BattleSkillActionBase_C_IsHeroDeadByReflection");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, IsDead) == 0x000000, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, Lo_Ref) == 0x000008, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::Lo_Ref' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_GetReflexInfo_Info) == 0x000028, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_GetHeroIndex_Index) == 0x0000D8, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsHeroDeadByReflection, CallFunc_BooleanAND_ReturnValue) == 0x0000DD, "Member 'BattleSkillActionBase_C_IsHeroDeadByReflection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckMagatsuhiSkill
// 0x0088 (0x0088 - 0x0000)
struct BattleSkillActionBase_C_CheckMagatsuhiSkill final
{
public:
	bool                                          IsMagatsuhiSkill;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFixMemberSkill;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3549[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_DevilIDchecker;                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	struct FMultiDevilMagatsuhiSkillData          Lo_SkillData;                                      // 0x0018(0x0028)(Edit, BlueprintVisible)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354A[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMultiDevilMagatsuhiSkillData          CallFunc_GetMultiDevilMagatsuhiSkillData_ReturnValue; // 0x0058(0x0028)(ConstParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckMagatsuhiSkill) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckMagatsuhiSkill");
static_assert(sizeof(BattleSkillActionBase_C_CheckMagatsuhiSkill) == 0x000088, "Wrong size on BattleSkillActionBase_C_CheckMagatsuhiSkill");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, IsMagatsuhiSkill) == 0x000000, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::IsMagatsuhiSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, IsFixMemberSkill) == 0x000001, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::IsFixMemberSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, Lo_DevilIDchecker) == 0x000008, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::Lo_DevilIDchecker' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, Lo_SkillData) == 0x000018, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::Lo_SkillData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, K2Node_MakeArray_Array) == 0x000040, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, CallFunc_GetSkillID_ID) == 0x000054, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, CallFunc_GetMultiDevilMagatsuhiSkillData_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::CallFunc_GetMultiDevilMagatsuhiSkillData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, CallFunc_Array_Identical_ReturnValue) == 0x000081, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckMagatsuhiSkill, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'BattleSkillActionBase_C_CheckMagatsuhiSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Check Model Load
// 0x00A8 (0x00A8 - 0x0000)
struct BattleSkillActionBase_C_Check_Model_Load final
{
public:
	TArray<int32>                                 Lo_ExistPartyIndex;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_lodaded;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354C[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354D[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0068(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue_1;             // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354E[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354F[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Check_Model_Load) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Check_Model_Load");
static_assert(sizeof(BattleSkillActionBase_C_Check_Model_Load) == 0x0000A8, "Wrong size on BattleSkillActionBase_C_Check_Model_Load");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, Lo_ExistPartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Check_Model_Load::Lo_ExistPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, Lo_lodaded) == 0x000010, "Member 'BattleSkillActionBase_C_Check_Model_Load::Lo_lodaded' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleSkillActionBase_C_Check_Model_Load::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BattleSkillActionBase_C_Check_Model_Load::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, Temp_int_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_Check_Model_Load::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000028, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_FindUnit_Unit) == 0x000048, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_BIGetPartySystem_retValue) == 0x000050, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_BI_GetSideActList_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_BI_GetSideActList_retValue_1) == 0x000078, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_BI_GetSideActList_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Not_PreBool_ReturnValue_1) == 0x000089, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008A, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_BooleanAND_ReturnValue_1) == 0x000091, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_FindUnit_Unit_1) == 0x000098, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Check_Model_Load, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BattleSkillActionBase_C_Check_Model_Load::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckCameraHinder
// 0x02E0 (0x02E0 - 0x0000)
struct BattleSkillActionBase_C_CheckCameraHinder final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3550[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Lo_Camera;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_TargetIndex;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ACharaBase_C*>                   Lo_TargetUnit;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3551[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3552[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemID_ID;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_NAHOBINO_SKILL_MOTION                       CallFunc_GetNahobinoMotion_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugGetActorDitherAtSkillHit_Allowed; // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3553[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3554[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3555[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCamera_C*                        K2Node_DynamicCast_AsBattle_Camera;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3556[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3557[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3558[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3559[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355A[0x1];                                     // 0x01CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355B[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355C[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355D[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetDitherEnable_self_CastInput;        // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetDitherEnable_No_Use;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355E[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetDitherRate_self_CastInput;          // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetDitherRate_No_Use;                  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355F[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_Array_Get_Item_1;                         // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3560[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_ResetDitherRate_self_CastInput;        // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_ResetDitherRate_No_Use;                // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3561[0x2];                                     // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3562[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3563[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_CheckCameraHinder) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_CheckCameraHinder");
static_assert(sizeof(BattleSkillActionBase_C_CheckCameraHinder) == 0x0002E0, "Wrong size on BattleSkillActionBase_C_CheckCameraHinder");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Delta) == 0x000000, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Delta' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Lo_Camera) == 0x000008, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Lo_Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Lo_TargetIndex) == 0x000010, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Lo_TargetUnit) == 0x000020, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Lo_TargetUnit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Array_Get_Item) == 0x000044, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_FindUnit_Unit) == 0x000050, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetItemID_ID) == 0x000058, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetSkillID_ID) == 0x00005C, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetNahobinoMotion_ReturnValue) == 0x000061, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetNahobinoMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BattleDesignDebugGetActorDitherAtSkillHit_Allowed) == 0x000062, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BattleDesignDebugGetActorDitherAtSkillHit_Allowed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000063, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BooleanOR_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetComponentByClass_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetViewTarget_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakTransform_Location) == 0x0000B8, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakTransform_Rotation) == 0x0000C4, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakTransform_Scale) == 0x0000D0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, K2Node_DynamicCast_AsBattle_Camera) == 0x0000E0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::K2Node_DynamicCast_AsBattle_Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BattleSkillActionBase_C_CheckCameraHinder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetForwardVector_ReturnValue) == 0x0000EC, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Add_VectorVector_ReturnValue) == 0x000104, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Array_Add_ReturnValue) == 0x000110, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_GetTargetPartyIndex_index) == 0x000118, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000129, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, K2Node_MakeArray_Array) == 0x000130, "Member 'BattleSkillActionBase_C_CheckCameraHinder::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BooleanAND_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000144, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001CC, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_bBlockingHit) == 0x0001CD, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001CE, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_Time) == 0x0001D0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_Distance) == 0x0001D4, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_Location) == 0x0001D8, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E4, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_Normal) == 0x0001F0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_ImpactNormal) == 0x0001FC, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_TraceStart) == 0x000234, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, K2Node_DynamicCast_AsMesh_Component) == 0x000250, "Member 'BattleSkillActionBase_C_CheckCameraHinder::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'BattleSkillActionBase_C_CheckCameraHinder::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, K2Node_DynamicCast_AsChara_Base) == 0x000260, "Member 'BattleSkillActionBase_C_CheckCameraHinder::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, K2Node_DynamicCast_bSuccess_2) == 0x000268, "Member 'BattleSkillActionBase_C_CheckCameraHinder::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BI_SetDitherEnable_self_CastInput) == 0x000270, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BI_SetDitherEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BI_SetDitherEnable_No_Use) == 0x000280, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BI_SetDitherEnable_No_Use' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000284, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BI_SetDitherRate_self_CastInput) == 0x000288, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BI_SetDitherRate_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BI_SetDitherRate_No_Use) == 0x000298, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BI_SetDitherRate_No_Use' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Array_Get_Item_1) == 0x0002A0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Array_Contains_ReturnValue) == 0x0002A8, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BI_ResetDitherRate_self_CastInput) == 0x0002B0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BI_ResetDitherRate_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_BI_ResetDitherRate_No_Use) == 0x0002C0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_BI_ResetDitherRate_No_Use' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002C1, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Array_Length_ReturnValue_1) == 0x0002C4, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Less_IntInt_ReturnValue) == 0x0002C8, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, Temp_int_Loop_Counter_Variable_1) == 0x0002CC, "Member 'BattleSkillActionBase_C_CheckCameraHinder::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Array_Add_ReturnValue_1) == 0x0002D0, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002D4, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckCameraHinder, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002D8, "Member 'BattleSkillActionBase_C_CheckCameraHinder::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckDoWhiteOut
// 0x0108 (0x0108 - 0x0000)
struct BattleSkillActionBase_C_CheckDoWhiteOut final
{
public:
	TArray<struct FSkillActionTargetInfo>         Lo_Info;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_DeadTarget;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsHeroDead;                                     // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_DoWhiteOut;                                     // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3564[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3565[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0028(0x0010)(ReferenceParm)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0038(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3566[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0060(0x0098)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeadImmortalBoss_IsDead;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBossFlag_IsTrue;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsHero_retValue;                       // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3567[0x2];                                     // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckDoWhiteOut) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckDoWhiteOut");
static_assert(sizeof(BattleSkillActionBase_C_CheckDoWhiteOut) == 0x000108, "Wrong size on BattleSkillActionBase_C_CheckDoWhiteOut");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, Lo_Info) == 0x000000, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::Lo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, Lo_DeadTarget) == 0x000010, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::Lo_DeadTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, Lo_IsHeroDead) == 0x000014, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::Lo_IsHeroDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, Lo_DoWhiteOut) == 0x000015, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::Lo_DoWhiteOut' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_GetReflexInfo_Info) == 0x000028, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_GetTargetInfo_Info) == 0x000038, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BIGetPartySystem_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_IsDeadImmortalBoss_IsDead) == 0x0000F9, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_IsDeadImmortalBoss_IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BI_CheckBossFlag_IsTrue) == 0x0000FA, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BI_CheckBossFlag_IsTrue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BooleanAND_ReturnValue_1) == 0x0000FB, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BI_IsHero_retValue) == 0x0000FC, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BI_IsHero_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BooleanAND_ReturnValue_2) == 0x0000FD, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BooleanOR_ReturnValue) == 0x000105, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckDoWhiteOut, CallFunc_BooleanOR_ReturnValue_1) == 0x000106, "Member 'BattleSkillActionBase_C_CheckDoWhiteOut::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsDeadImmortalBoss
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_IsDeadImmortalBoss final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KUISHIBARI_LEVEL                            KuishibariLevel;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3568[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBossFlag_IsTrue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsAlreadyDead_IsDead;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBossFlag_IsTrue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsDeadImmortalBoss) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsDeadImmortalBoss");
static_assert(sizeof(BattleSkillActionBase_C_IsDeadImmortalBoss) == 0x000020, "Wrong size on BattleSkillActionBase_C_IsDeadImmortalBoss");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, KuishibariLevel) == 0x000004, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::KuishibariLevel' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, IsDead) == 0x000005, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_BIGetPartySystem_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_BI_CheckBossFlag_IsTrue) == 0x000018, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_BI_CheckBossFlag_IsTrue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_BI_IsAlreadyDead_IsDead) == 0x000019, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_BI_IsAlreadyDead_IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_BI_CheckBossFlag_IsTrue_1) == 0x00001A, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_BI_CheckBossFlag_IsTrue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_BooleanAND_ReturnValue_1) == 0x00001C, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsDeadImmortalBoss, CallFunc_BooleanAND_ReturnValue_2) == 0x00001D, "Member 'BattleSkillActionBase_C_IsDeadImmortalBoss::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsAllTargetDead
// 0x01A8 (0x01A8 - 0x0000)
struct BattleSkillActionBase_C_IsAllTargetDead final
{
public:
	bool                                          IsDead;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3569[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ReflectedFrom;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionDrainInfo                  CallFunc_GetDrainInfo_m_DrainInfo;                 // 0x0028(0x0008)()
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0030(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0040(0x0098)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356A[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x00E0(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356B[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356C[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356D[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_IsAllTargetDead) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsAllTargetDead");
static_assert(sizeof(BattleSkillActionBase_C_IsAllTargetDead) == 0x0001A8, "Wrong size on BattleSkillActionBase_C_IsAllTargetDead");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, IsDead) == 0x000000, "Member 'BattleSkillActionBase_C_IsAllTargetDead::IsDead' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, Lo_ReflectedFrom) == 0x000008, "Member 'BattleSkillActionBase_C_IsAllTargetDead::Lo_ReflectedFrom' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleSkillActionBase_C_IsAllTargetDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleSkillActionBase_C_IsAllTargetDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BattleSkillActionBase_C_IsAllTargetDead::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_GetDrainInfo_m_DrainInfo) == 0x000028, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_GetDrainInfo_m_DrainInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_GetReflexInfo_Info) == 0x000030, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000D9, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_BooleanOR_ReturnValue) == 0x0000DA, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_GetTargetInfo_Info) == 0x0000E0, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Array_Length_ReturnValue_1) == 0x000188, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Less_IntInt_ReturnValue) == 0x00018C, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_GetHeroIndex_Index) == 0x000190, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000194, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Array_Contains_ReturnValue) == 0x000195, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Array_AddUnique_ReturnValue) == 0x000198, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, Temp_int_Loop_Counter_Variable_1) == 0x00019C, "Member 'BattleSkillActionBase_C_IsAllTargetDead::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A0, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAllTargetDead, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A4, "Member 'BattleSkillActionBase_C_IsAllTargetDead::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsWarpAtIntroductionMelee
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_IsWarpAtIntroductionMelee final
{
public:
	bool                                          M_IsWarpAtIntroductionMelee;                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_IsWarpAtIntroductionMelee) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsWarpAtIntroductionMelee");
static_assert(sizeof(BattleSkillActionBase_C_IsWarpAtIntroductionMelee) == 0x000010, "Wrong size on BattleSkillActionBase_C_IsWarpAtIntroductionMelee");
static_assert(offsetof(BattleSkillActionBase_C_IsWarpAtIntroductionMelee, M_IsWarpAtIntroductionMelee) == 0x000000, "Member 'BattleSkillActionBase_C_IsWarpAtIntroductionMelee::M_IsWarpAtIntroductionMelee' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWarpAtIntroductionMelee, CallFunc_GetActorPartyIndex_index) == 0x000004, "Member 'BattleSkillActionBase_C_IsWarpAtIntroductionMelee::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsWarpAtIntroductionMelee, CallFunc_FindUnit_Unit) == 0x000008, "Member 'BattleSkillActionBase_C_IsWarpAtIntroductionMelee::CallFunc_FindUnit_Unit' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SelectActorCameraName
// 0x0048 (0x0048 - 0x0000)
struct BattleSkillActionBase_C_SelectActorCameraName final
{
public:
	class FString                                 Playerside;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EnemySide;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Camera;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SelectActorCameraName) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_SelectActorCameraName");
static_assert(sizeof(BattleSkillActionBase_C_SelectActorCameraName) == 0x000048, "Wrong size on BattleSkillActionBase_C_SelectActorCameraName");
static_assert(offsetof(BattleSkillActionBase_C_SelectActorCameraName, Playerside) == 0x000000, "Member 'BattleSkillActionBase_C_SelectActorCameraName::Playerside' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectActorCameraName, EnemySide) == 0x000010, "Member 'BattleSkillActionBase_C_SelectActorCameraName::EnemySide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectActorCameraName, Camera) == 0x000020, "Member 'BattleSkillActionBase_C_SelectActorCameraName::Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectActorCameraName, CallFunc_BIGetPartySystem_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_SelectActorCameraName::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectActorCameraName, CallFunc_GetActorPartyIndex_index) == 0x000040, "Member 'BattleSkillActionBase_C_SelectActorCameraName::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectActorCameraName, CallFunc_BI_GetSide_side) == 0x000044, "Member 'BattleSkillActionBase_C_SelectActorCameraName::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectActorCameraName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000045, "Member 'BattleSkillActionBase_C_SelectActorCameraName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SelectTargetCameraName
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_SelectTargetCameraName final
{
public:
	class FString                                 Playerside;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EnemySide;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Camera;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SelectTargetCameraName) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_SelectTargetCameraName");
static_assert(sizeof(BattleSkillActionBase_C_SelectTargetCameraName) == 0x000060, "Wrong size on BattleSkillActionBase_C_SelectTargetCameraName");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, Playerside) == 0x000000, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::Playerside' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, EnemySide) == 0x000010, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::EnemySide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, Camera) == 0x000020, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::Camera' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, CallFunc_GetTargetPartyIndex_index) == 0x000030, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, CallFunc_BIGetPartySystem_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, CallFunc_BI_GetSide_side) == 0x000058, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SelectTargetCameraName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'BattleSkillActionBase_C_SelectTargetCameraName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.FinalizeCameraHinder
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_FinalizeCameraHinder final
{
public:
	bool                                          Immediately;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3570[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3571[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_FinalizeCameraHinder) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_FinalizeCameraHinder");
static_assert(sizeof(BattleSkillActionBase_C_FinalizeCameraHinder) == 0x000028, "Wrong size on BattleSkillActionBase_C_FinalizeCameraHinder");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, Immediately) == 0x000000, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::Immediately' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_FinalizeCameraHinder, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BattleSkillActionBase_C_FinalizeCameraHinder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.RestoreCharaScale
// 0x00F0 (0x00F0 - 0x0000)
struct BattleSkillActionBase_C_RestoreCharaScale final
{
public:
	TArray<int32>                                 Lo_ShowIndex;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3572[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3573[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0050(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors_1;         // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3574[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue;            // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3575[0x1];                                     // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3576[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetActListAll_retValue;                // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3577[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_AdjustMeshScale_self_CastInput;        // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_RestoreCharaScale) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_RestoreCharaScale");
static_assert(sizeof(BattleSkillActionBase_C_RestoreCharaScale) == 0x0000F0, "Wrong size on BattleSkillActionBase_C_RestoreCharaScale");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, Lo_ShowIndex) == 0x000000, "Member 'BattleSkillActionBase_C_RestoreCharaScale::Lo_ShowIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, Lo_PartyIndex) == 0x000010, "Member 'BattleSkillActionBase_C_RestoreCharaScale::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_RestoreCharaScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_RestoreCharaScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BattleSkillActionBase_C_RestoreCharaScale::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_GetActorPartyIndex_index) == 0x000030, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_GetTargetPartyIndex_index) == 0x000038, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000050, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_GetMagatsuhiOtherActors_actors_1) == 0x000060, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_GetMagatsuhiOtherActors_actors_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_GetActorPartyIndex_index_1) == 0x000070, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_BIGetPartySystem_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'BattleSkillActionBase_C_RestoreCharaScale::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Get_Item) == 0x00008C, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Contains_ReturnValue) == 0x000094, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_BI_UnitSetVisibility_retValue) == 0x000096, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_BI_UnitSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_BIGetPartySystem_retValue_1) == 0x0000A0, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_BI_GetActListAll_retValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_BI_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Contains_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C9, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_FindUnit_Unit) == 0x0000D0, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_BI_AdjustMeshScale_self_CastInput) == 0x0000D8, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_BI_AdjustMeshScale_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RestoreCharaScale, CallFunc_Array_Add_ReturnValue_1) == 0x0000E8, "Member 'BattleSkillActionBase_C_RestoreCharaScale::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_MagatsuhiActorSetPosition
// 0x00A0 (0x00A0 - 0x0000)
struct BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PutOnRelativeDegree;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3578[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RelativeDegree;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Com_Index;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_RetComIndex;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3579[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length;     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357C[0xA];                                     // 0x0056(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetPartyHomeTransform_Home;            // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition");
static_assert(sizeof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition) == 0x0000A0, "Wrong size on BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, PutOnRelativeDegree) == 0x000004, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::PutOnRelativeDegree' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, RelativeDegree) == 0x000008, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::RelativeDegree' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, Com_Index) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, Lo_ActorIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, Lo_RetComIndex) == 0x000014, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::Lo_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, Lo_WaitList) == 0x000018, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_GetComandID_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_IsValidCommandIndex_retValue) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_GetMagatsuhiOtherActorsLength_length) == 0x000030, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_GetMagatsuhiOtherActorsLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_GetActorPartyIndex_index) == 0x000038, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_BIGetPartySystem_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_IsReflected_IsReflected) == 0x000054, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_BI_GetPartyHomeTransform_Home) == 0x000060, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_BI_GetPartyHomeTransform_Home' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000090, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorSetPosition::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_MagatsuhiActorResetVisibilityAndScale
// 0x0118 (0x0118 - 0x0000)
struct BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActorVisible;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Lo_ActorSide;                                      // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActorIndex;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_RetComIndex;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3580[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3581[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3582[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3583[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3584[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddBeHomeSideAllTask_PecID;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3585[0x1];                                     // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3586[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitScaleResetTask_Ret_PecID;       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3587[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilityTask_PecID;           // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale");
static_assert(sizeof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale) == 0x000118, "Wrong size on BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, ActorVisible) == 0x000004, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::ActorVisible' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Lo_ActorSide) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Lo_ActorSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Lo_ActorIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Lo_RetComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Lo_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Lo_WaitList) == 0x000028, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_GetComandID_retValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_IsValidCommandIndex_retValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000050, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BIGetPartySystem_retValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BI_GetSideActList_retValue) == 0x000078, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_Get_Item) == 0x000088, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_Contains_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_GetActorPartyIndex_index) == 0x000094, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BI_GetSide_side) == 0x000098, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BIGetTaskFactory_retValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BI_AddBeHomeSideAllTask_PecID) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BI_AddBeHomeSideAllTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BooleanOR_ReturnValue) == 0x0000C1, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C2, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_GetActorPartyIndex_index_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_AddUnique_ReturnValue) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000D8, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BI_AddUnitScaleResetTask_Ret_PecID) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BI_AddUnitScaleResetTask_Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_IsReflected_IsReflected) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BooleanAND_ReturnValue) == 0x0000F1, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BIGetTaskFactory_retValue_2) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000108, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_BI_AddUnitVisibilityTask_PecID) == 0x00010C, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_BI_AddUnitVisibilityTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale, CallFunc_Array_Add_ReturnValue_1) == 0x000110, "Member 'BattleSkillActionBase_C_Com_MagatsuhiActorResetVisibilityAndScale::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectMagatsuhiActorParty
// 0x0220 (0x0220 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3588[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3589[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SE_sync;                                        // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358A[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_ModSocket;                                      // 0x006C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Lo_ModAnim;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lo_ModMesh;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_SE;                                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Lo_Effect;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358C[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358D[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00E8(0x0030)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358E[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358F[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_Pos;              // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_Normal;           // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_forward;          // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3590[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0168(0x0030)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3591[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3592[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item;                           // 0x01B8(0x0038)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0204(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty) == 0x000220, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, RelativeTransform) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, IsWorldRelative) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, LifeSec) == 0x000054, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, TranslucencyPriority) == 0x000058, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, RotYawRandMin) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, RotYawRandMax) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, ComIndex) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_SE_sync) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_SE_sync' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_ModSocket) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_ModSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_ModAnim) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_ModAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_ModMesh) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_ModMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_SE) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_SE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_Effect) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_Effect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_ActorIndex) == 0x000098, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, Lo_WaitList) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_AddRandomYaw_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, K2Node_MakeStruct_BtlTaskData) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_Conv_StringToName_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_IsValidCommandIndex_retValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_GetComandID_retValue) == 0x000124, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_GetActorPartyIndex_index) == 0x000128, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_BIGetPartySystem_retValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_GetMagatsuhiPartyCenter_Pos) == 0x000140, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_GetMagatsuhiPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_GetMagatsuhiPartyCenter_Normal) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_GetMagatsuhiPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_GetMagatsuhiPartyCenter_forward) == 0x000158, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_GetMagatsuhiPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, K2Node_MakeStruct_BtlTaskData_1) == 0x000168, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_BIGetTaskFactory_retValue) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_BIGetTaskFactory_retValue_1) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000200, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000204, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_BI_AddPlayEffectTask_retValue) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty, CallFunc_Array_Add_ReturnValue) == 0x000210, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActorParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetMagatsuhiPartyCenter
// 0x00E0 (0x00E0 - 0x0000)
struct BattleSkillActionBase_C_GetMagatsuhiPartyCenter final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Pos;                                               // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3593[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    Lo_PartySystem;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0050(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Lo_LastUp;                                         // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastForward;                                    // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_LastPos;                                        // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosSum;                                         // 0x0084(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Max;                                            // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Pos;                      // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal;                   // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetMagatsuhiPartyCenter");
static_assert(sizeof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter) == 0x0000E0, "Wrong size on BattleSkillActionBase_C_GetMagatsuhiPartyCenter");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, SocketName) == 0x000000, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, PartySystem) == 0x000008, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Pos) == 0x000018, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Normal) == 0x000024, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Forward) == 0x000030, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_PartySystem) == 0x000040, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_PartyIndex) == 0x000050, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_LastUp) == 0x000060, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_LastUp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_LastForward) == 0x00006C, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_LastForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_LastPos) == 0x000078, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_LastPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_PosSum) == 0x000084, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_PosSum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_PartyNum) == 0x000090, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_Max) == 0x000094, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_Max' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, Lo_Start) == 0x000098, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, CallFunc_GetActorPartyIndex_index) == 0x00009C, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, CallFunc_BIGetPartySystem_retValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, CallFunc_GetTargetCenter_Pos) == 0x0000B4, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::CallFunc_GetTargetCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, CallFunc_GetTargetCenter_Normal) == 0x0000C0, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::CallFunc_GetTargetCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, CallFunc_GetTargetCenter_forward) == 0x0000CC, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::CallFunc_GetTargetCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiPartyCenter, CallFunc_GetTargetCenter_DefenseArea) == 0x0000D8, "Member 'BattleSkillActionBase_C_GetMagatsuhiPartyCenter::CallFunc_GetTargetCenter_DefenseArea' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlayEffectMagatsuhiActor
// 0x0210 (0x0210 - 0x0000)
struct BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SocketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3594[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3595[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIgnoreSideScale;                                 // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3596[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_SE_sync;                                        // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3597[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_ModSocket;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Lo_ModAnim;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lo_ModSkeletal;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_SE;                                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Lo_Particle;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_ActorIndex;                                     // 0x0098(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3598[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_AddRandomYaw_ReturnValue;                 // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData;                     // 0x00F0(0x0030)()
	struct FBtlTaskData                           K2Node_MakeStruct_BtlTaskData_1;                   // 0x0120(0x0030)()
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3599[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0158(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359A[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359B[0x1];                                     // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359C[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPlaySEUnitAttachTask_retPecID;      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359D[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionEffect                     CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0038)()
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayEffectTask_retValue;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor) == 0x000210, "Wrong size on BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, PlayIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::PlayIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, SocketName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, RelativeTransform) == 0x000020, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, IsWorldRelative) == 0x000050, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, LifeSec) == 0x000054, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, TranslucencyPriority) == 0x000058, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, RotYawRandMin) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, RotYawRandMax) == 0x000060, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, IsIgnoreSideScale) == 0x000064, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::IsIgnoreSideScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, ComIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_SE_sync) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_SE_sync' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_ModSocket) == 0x000070, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_ModSocket' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_ModAnim) == 0x000078, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_ModAnim' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_ModSkeletal) == 0x000080, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_ModSkeletal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_SE) == 0x000088, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_SE' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_Particle) == 0x000090, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_Particle' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_ActorIndex) == 0x000098, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Lo_WaitList) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_AddRandomYaw_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_AddRandomYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, K2Node_MakeStruct_BtlTaskData) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::K2Node_MakeStruct_BtlTaskData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, K2Node_MakeStruct_BtlTaskData_1) == 0x000120, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::K2Node_MakeStruct_BtlTaskData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_IsValidCommandIndex_retValue) == 0x000150, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_GetComandID_retValue) == 0x000154, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000158, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Not_PreBool_ReturnValue) == 0x000168, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_GetActorPartyIndex_index) == 0x00016C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Array_Get_Item) == 0x000170, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Array_Add_ReturnValue) == 0x000174, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00017C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_IsReflected_IsReflected) == 0x000180, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_BooleanAND_ReturnValue) == 0x000181, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_IsValid_ReturnValue) == 0x000182, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, Temp_int_Loop_Counter_Variable) == 0x000184, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Add_IntInt_ReturnValue) == 0x00018C, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_BIGetTaskFactory_retValue) == 0x000190, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_BI_AddPlaySEUnitAttachTask_retPecID) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_BI_AddPlaySEUnitAttachTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_BIGetTaskFactory_retValue_1) == 0x0001E0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0001F0, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Conv_StringToName_ReturnValue) == 0x0001F4, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_BI_AddPlayEffectTask_retValue) == 0x0001FC, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_BI_AddPlayEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor, CallFunc_Array_Add_ReturnValue_1) == 0x000200, "Member 'BattleSkillActionBase_C_Com_PlayEffectMagatsuhiActor::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com Add Magatsuhi Actor Point Light Auto
// 0x0100 (0x0100 - 0x0000)
struct BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359E[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightFalloffExponent;                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharaOnly;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckSocketExist;                                  // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359F[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A0[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0078(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSkillLightTask_RetPecID;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto");
static_assert(sizeof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto) == 0x000100, "Wrong size on BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, OffsetPos) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, LightFuncMaterialIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, GroupID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, IsCastShadow) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, IsFollowSokect) == 0x000021, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, Color) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, Intensity) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, Radius) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::Radius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, LightFalloffExponent) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::LightFalloffExponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, IsCharaOnly) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CheckSocketExist) == 0x000049, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CheckSocketExist' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, Lo_WaitList) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_GetComandID_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_IsValidCommandIndex_retValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_IsReflected_IsReflected) == 0x000075, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000078, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_BIGetTaskFactory_retValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto, CallFunc_BI_AddSkillLightTask_RetPecID) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_Add_Magatsuhi_Actor_Point_Light_Auto::CallFunc_BI_AddSkillLightTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddMagatsuhiActorPartyPointLight_Auto
// 0x00F8 (0x00F8 - 0x0000)
struct BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetPos;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LightFuncMaterialIndex;                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowSokect;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A1[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Color;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightFalloutExponent;                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharaOnly;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A2[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A3[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_ADD_SKILL_LIGHT_TASK_DATA         K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA;   // 0x0078(0x0068)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSkillLightTask_RetPecID;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto) == 0x0000F8, "Wrong size on BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, SocketName) == 0x000004, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::SocketName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, OffsetPos) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::OffsetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, LightFuncMaterialIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::LightFuncMaterialIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, GroupID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::GroupID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, IsCastShadow) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::IsCastShadow' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, IsFollowSokect) == 0x000021, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::IsFollowSokect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, Color) == 0x000028, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::Color' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, Intensity) == 0x000030, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::Intensity' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, Radius) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::Radius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, LightFalloutExponent) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::LightFalloutExponent' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, IsCharaOnly) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::IsCharaOnly' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, Lo_WaitList) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, CallFunc_GetComandID_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, CallFunc_IsValidCommandIndex_retValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::K2Node_MakeStruct_BTL_ADD_SKILL_LIGHT_TASK_DATA' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, CallFunc_BIGetTaskFactory_retValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto, CallFunc_BI_AddSkillLightTask_RetPecID) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_AddMagatsuhiActorPartyPointLight_Auto::CallFunc_BI_AddSkillLightTask_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddDecalMagatsuhiActor
// 0x0140 (0x0140 - 0x0000)
struct BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideLifeSec;                                   // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachLocation                               LocationType;                                      // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A5[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0048(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsolutelyNoRotation;                              // 0x005C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x005D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A6[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A7[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PartyIndex;                                     // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0078(0x0010)(Edit, BlueprintVisible)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A8[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A9[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AA[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AB[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AC[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleSkillActionBase_C> CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDecalTask2_RetPecID;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor) == 0x000140, "Wrong size on BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, DecalMaterial) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, MaterialAnimSetting) == 0x000010, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, DecalSize) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, OffsetLocation) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, AttachPointName) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, OverrideLifeSec) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::OverrideLifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, LocationType) == 0x000044, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::LocationType' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, Rotation) == 0x000048, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, RotationRandMin) == 0x000054, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, RotationRandMax) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, AbsolutelyNoRotation) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CastOnlyStaticMesh) == 0x00005D, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, ComIndex) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, Lo_PartyIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, Lo_WaitTaskList) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_BreakRotator_Roll) == 0x000088, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_BreakRotator_Pitch) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_BreakRotator_Yaw) == 0x000090, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_GetComandID_retValue) == 0x000094, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_IsValidCommandIndex_retValue) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_MakeRotator_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_GetActorPartyIndex_index) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_Array_Get_Item) == 0x0000BC, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_IsReflected_IsReflected) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_BooleanAND_ReturnValue) == 0x0000D1, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_Array_Add_ReturnValue_1) == 0x000110, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_BIGetTaskFactory_retValue) == 0x000118, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput) == 0x000128, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor, CallFunc_BI_AddDecalTask2_RetPecID) == 0x000138, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActor::CallFunc_BI_AddDecalTask2_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddDecalMagatsuhiActorParty
// 0x0140 (0x0140 - 0x0000)
struct BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DecalMaterial;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DecalSize;                                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RotationRandMin;                                   // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationRandMax;                                   // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsolutelyNoRotation;                              // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastOnlyStaticMesh;                                // 0x0055(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AE[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AF[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B0[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B1[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_Pos;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_Normal;           // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMagatsuhiPartyCenter_forward;          // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B2[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSkillActionBase_C> CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddDecalTask2_RetPecID;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty) == 0x000140, "Wrong size on BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, DecalMaterial) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, MaterialAnimSetting) == 0x000010, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, DecalSize) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::DecalSize' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, OffsetLocation) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, AttachPointName) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::AttachPointName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, Rotation) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, RotationRandMin) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::RotationRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, RotationRandMax) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::RotationRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, AbsolutelyNoRotation) == 0x000054, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::AbsolutelyNoRotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CastOnlyStaticMesh) == 0x000055, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, Lo_WaitTaskList) == 0x000060, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_GetActorPartyIndex_index) == 0x000070, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_RandomFloatInRange_ReturnValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_GetComandID_retValue) == 0x000084, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_IsValidCommandIndex_retValue) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_BIGetPartySystem_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_GetMagatsuhiPartyCenter_Pos) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_GetMagatsuhiPartyCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_GetMagatsuhiPartyCenter_Normal) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_GetMagatsuhiPartyCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_GetMagatsuhiPartyCenter_forward) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_GetMagatsuhiPartyCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000104, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_BIGetTaskFactory_retValue) == 0x000108, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput) == 0x000120, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_BI_AddDecalTask2_SkillActionBase_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty, CallFunc_BI_AddDecalTask2_RetPecID) == 0x000130, "Member 'BattleSkillActionBase_C_Com_AddDecalMagatsuhiActorParty::CallFunc_BI_AddDecalTask2_RetPecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com Load Servant Model Task
// 0x0230 (0x0230 - 0x0000)
struct BattleSkillActionBase_C_Com_Load_Servant_Model_Task final
{
public:
	int32                                         Load_ID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnAtHome;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RegisterAsAnEnemy;                                 // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B3[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_TargetDefense;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_DotTargetToActor;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Lo_TargetRot;                                      // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_TargetPos;                                      // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B4[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_SpawnTransform;                                 // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B5[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B6[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetPartyHomeTransform_Home;            // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B7[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0110(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Pos;                      // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_Normal;                   // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetCenter_forward;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCenter_DefenseArea;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B8[0xC];                                     // 0x01C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B9[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ConstParm, ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitModelLoadTask_Ret_PecID;        // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_Load_Servant_Model_Task");
static_assert(sizeof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task) == 0x000230, "Wrong size on BattleSkillActionBase_C_Com_Load_Servant_Model_Task");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, Load_ID) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::Load_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, SpawnAtHome) == 0x000004, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::SpawnAtHome' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, RegisterAsAnEnemy) == 0x000005, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::RegisterAsAnEnemy' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, PecID) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, Lo_TargetDefense) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::Lo_TargetDefense' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, Lo_DotTargetToActor) == 0x000010, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::Lo_DotTargetToActor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, Lo_TargetRot) == 0x000014, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::Lo_TargetRot' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, Lo_TargetPos) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::Lo_TargetPos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, Lo_SpawnTransform) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::Lo_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetRightVector_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetForwardVector_ReturnValue) == 0x000074, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_BIGetPartySystem_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_BI_GetPartyHomeTransform_Home) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_BI_GetPartyHomeTransform_Home' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_BreakTransform_Location) == 0x0000DC, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_BreakTransform_Scale) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000100, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetTargetPartyIndex_index) == 0x000110, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetTargetCenter_Pos) == 0x00012C, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetTargetCenter_Pos' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetTargetCenter_Normal) == 0x000138, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetTargetCenter_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetTargetCenter_forward) == 0x000144, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetTargetCenter_forward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetTargetCenter_DefenseArea) == 0x000150, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetTargetCenter_DefenseArea' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000154, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetActorPartyIndex_index) == 0x0001A8, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetRightVector_ReturnValue_1) == 0x0001AC, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_FindUnit_Unit) == 0x0001B8, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetSocketTransform_retValue) == 0x0001D0, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetSocketTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000200, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, K2Node_MakeArray_Array) == 0x000208, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_BIGetTaskFactory_retValue) == 0x000218, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Load_Servant_Model_Task, CallFunc_BI_AddUnitModelLoadTask_Ret_PecID) == 0x000228, "Member 'BattleSkillActionBase_C_Com_Load_Servant_Model_Task::CallFunc_BI_AddUnitModelLoadTask_Ret_PecID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Destroy Loaded Model
// 0x00B8 (0x00B8 - 0x0000)
struct BattleSkillActionBase_C_Destroy_Loaded_Model final
{
public:
	TArray<int32>                                 Lo_ExistPartyIndex;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Lo_AttachedActors;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BA[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0030(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BB[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BC[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue_1;             // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BD[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyUnit_retValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BE[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyUnit_retValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Destroy_Loaded_Model) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Destroy_Loaded_Model");
static_assert(sizeof(BattleSkillActionBase_C_Destroy_Loaded_Model) == 0x0000B8, "Wrong size on BattleSkillActionBase_C_Destroy_Loaded_Model");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, Lo_ExistPartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::Lo_ExistPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, Lo_AttachedActors) == 0x000010, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::Lo_AttachedActors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000030, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_BIGetPartySystem_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_BI_GetSideActList_retValue) == 0x000058, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_Array_Contains_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_BI_GetSideActList_retValue_1) == 0x000070, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_BI_GetSideActList_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_BIGetPartySystem_retValue_1) == 0x000088, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_BI_DestroyUnit_retValue) == 0x000098, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_BI_DestroyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_BIGetPartySystem_retValue_2) == 0x0000A0, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Destroy_Loaded_Model, CallFunc_BI_DestroyUnit_retValue_1) == 0x0000B0, "Member 'BattleSkillActionBase_C_Destroy_Loaded_Model::CallFunc_BI_DestroyUnit_retValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ServantSetVisibility
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_Com_ServantSetVisibility final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ActorIndex;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_RetComIndex;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C1[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C2[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitVisibilityTask_PecID;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C3[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ServantSetVisibility) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_ServantSetVisibility");
static_assert(sizeof(BattleSkillActionBase_C_Com_ServantSetVisibility) == 0x000060, "Wrong size on BattleSkillActionBase_C_Com_ServantSetVisibility");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, Visible) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::Visible' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, Lo_ActorIndex) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, Lo_RetComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::Lo_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, Lo_WaitList) == 0x000018, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_GetComandID_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_IsValidCommandIndex_retValue) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_GetActorPartyIndex_index) == 0x000030, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_BIGetTaskFactory_retValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_BI_AddUnitVisibilityTask_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_BI_AddUnitVisibilityTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_IsReflected_IsReflected) == 0x000050, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000054, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantSetVisibility, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_ServantSetVisibility::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.LoadMagatsuhiOtherActorModel
// 0x0470 (0x0470 - 0x0000)
struct BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel final
{
public:
	TArray<int32>                                 Lo_ExistPartyIndex;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             Lo_spawn;                                          // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C4[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C5[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0088(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue_1;             // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C6[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x00C0(0x0320)()
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0410(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_BI_AddUnitModelLoadTask_Ret_PecID;        // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C7[0x4];                                     // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C8[0x8];                                     // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetSocketTransform_RetVal;             // 0x0440(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel");
static_assert(sizeof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel) == 0x000470, "Wrong size on BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, Lo_ExistPartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::Lo_ExistPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, Lo_spawn) == 0x000010, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::Lo_spawn' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, Temp_int_Variable) == 0x00004C, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000050, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_GetMagatsuhiOtherActorsLength_length) == 0x000060, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_GetMagatsuhiOtherActorsLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_Array_Get_Item) == 0x000064, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_Array_Contains_ReturnValue) == 0x000069, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BIGetPartySystem_retValue) == 0x000070, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BI_GetSideActList_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BI_GetSideActList_retValue_1) == 0x000098, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BI_GetSideActList_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BIGetPartySystem_retValue_1) == 0x0000B0, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BI_GetPartyData_retValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BIGetPartySystem_retValue_2) == 0x0003E0, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BIGetMainWork_NewParam) == 0x0003F0, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BI_GetTaskFactory_retValue) == 0x000400, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, K2Node_MakeArray_Array) == 0x000410, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BI_AddUnitModelLoadTask_Ret_PecID) == 0x000420, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BI_AddUnitModelLoadTask_Ret_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BI_GetPartyUnit_retValue) == 0x000428, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel, CallFunc_BI_GetSocketTransform_RetVal) == 0x000440, "Member 'BattleSkillActionBase_C_LoadMagatsuhiOtherActorModel::CallFunc_BI_GetSocketTransform_RetVal' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsModelLoaded
// 0x0007 (0x0007 - 0x0000)
struct BattleSkillActionBase_C_IsModelLoaded final
{
public:
	bool                                          Done;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsModelLoaded) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsModelLoaded");
static_assert(sizeof(BattleSkillActionBase_C_IsModelLoaded) == 0x000007, "Wrong size on BattleSkillActionBase_C_IsModelLoaded");
static_assert(offsetof(BattleSkillActionBase_C_IsModelLoaded, Done) == 0x000000, "Member 'BattleSkillActionBase_C_IsModelLoaded::Done' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsModelLoaded, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BattleSkillActionBase_C_IsModelLoaded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsModelLoaded, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BattleSkillActionBase_C_IsModelLoaded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsModelLoaded, CallFunc_BooleanAND_ReturnValue_1) == 0x000003, "Member 'BattleSkillActionBase_C_IsModelLoaded::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsModelLoaded, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'BattleSkillActionBase_C_IsModelLoaded::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsModelLoaded, CallFunc_BooleanAND_ReturnValue_2) == 0x000005, "Member 'BattleSkillActionBase_C_IsModelLoaded::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsModelLoaded, CallFunc_BooleanAND_ReturnValue_3) == 0x000006, "Member 'BattleSkillActionBase_C_IsModelLoaded::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.MakeSkillUserTransformTask
// 0x09F0 (0x09F0 - 0x0000)
struct BattleSkillActionBase_C_MakeSkillUserTransformTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FTransform                             Root;                                              // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          PutOnRelativeDegree;                               // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C9[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RelativeDegree;                                    // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_RelativeDegree;                                 // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ActorRadius;                                    // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_NkmLocation;                                    // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CA[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_SkillMember;                                    // 0x0060(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             Lo_Trans;                                          // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TArray<int32>                                 Lo_WaitList;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CB[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CC[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CD[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CE[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CF[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharData                           CallFunc_BI_GetCharaData_retValue;                 // 0x01D8(0x0148)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D0[0x3];                                     // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DevilPostData                      CallFunc_GetDevilPostData_PostData;                // 0x0328(0x0020)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D1[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0370(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSetActorTransformTask_RetPecID;     // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCharData                           CallFunc_BI_GetCharaData_retValue_1;               // 0x03B0(0x0148)()
	struct FST_DevilPostData                      CallFunc_GetDevilPostData_PostData_1;              // 0x04F8(0x0020)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0534(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D2[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0548(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D3[0x3];                                     // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D4[0x4];                                     // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors_1;         // 0x0588(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit_1;                        // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D5[0x3];                                     // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location_1;                   // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal_1;                     // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface_1;                    // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D6[0x3];                                     // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x05D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x05DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D7[0x3];                                     // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D8[0x4];                                     // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_2;                          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D9[0x3];                                     // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue_1;     // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_2;            // 0x0618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0624(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0630(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0684(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0690(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DA[0x4];                                     // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x06A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetActorTransformTask_RetPecID_1;   // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DB[0x4];                                     // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetOriginTransform_retValue;           // 0x06D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0700(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x0724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x0730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x073C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0748(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x0754(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0760(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x076C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x077C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DC[0x3];                                     // 0x0789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x0790(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DD[0x4];                                     // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharData                           CallFunc_BI_GetCharaData_retValue_2;               // 0x07A8(0x0148)()
	int32                                         CallFunc_GetActorPartyIndex_index_2;               // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DE[0x4];                                     // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DevilPostData                      CallFunc_GetDevilPostData_PostData_2;              // 0x08F8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DF[0x3];                                     // 0x0919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_3;               // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0928(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0934(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0940(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill;     // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill;     // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E0[0x2];                                     // 0x0952(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddSetActorTransformTask_RetPecID_2;   // 0x0954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E1[0x3];                                     // 0x0959(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index_4;               // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_7;                // 0x0960(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_7;                // 0x096C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_7;                   // 0x0978(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E2[0xC];                                     // 0x0984(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0990(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_3;              // 0x09C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetActorTransformTask_RetPecID_3;   // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E3[0x4];                                     // 0x09D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_4;              // 0x09D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetActorTransformTask_RetPecID_4;   // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_MakeSkillUserTransformTask) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_MakeSkillUserTransformTask");
static_assert(sizeof(BattleSkillActionBase_C_MakeSkillUserTransformTask) == 0x0009F0, "Wrong size on BattleSkillActionBase_C_MakeSkillUserTransformTask");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Root) == 0x000010, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Root' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, PutOnRelativeDegree) == 0x000040, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::PutOnRelativeDegree' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, RelativeDegree) == 0x000044, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::RelativeDegree' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Lo_RelativeDegree) == 0x000048, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Lo_RelativeDegree' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Lo_ActorRadius) == 0x00004C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Lo_ActorRadius' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Lo_NkmLocation) == 0x000050, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Lo_NkmLocation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Lo_SkillMember) == 0x000060, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Lo_SkillMember' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Lo_Trans) == 0x000070, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Lo_Trans' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Lo_WaitList) == 0x0000A0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Array_Index_Variable_2) == 0x0000CC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Hit) == 0x0000DC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Location) == 0x0000E0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Normal) == 0x0000EC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Surface) == 0x0000F8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Loop_Counter_Variable_2) == 0x0000FC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_IntInt_ReturnValue_2) == 0x000100, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Loop_Counter_Variable_3) == 0x000104, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_IntInt_ReturnValue_3) == 0x000108, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location) == 0x00010C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation) == 0x000118, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale) == 0x000124, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetTaskFactory_retValue) == 0x000130, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location_1) == 0x000140, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation_1) == 0x00014C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale_1) == 0x000158, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetPartySystem_retValue) == 0x000168, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetForwardVector_ReturnValue) == 0x000178, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_RotateAngleAxis_ReturnValue) == 0x000184, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000190, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location_2) == 0x00019C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation_2) == 0x0001A8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale_2) == 0x0001B4, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetPartySystem_retValue_1) == 0x0001C0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorPartyIndex_index) == 0x0001D0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_GetCharaData_retValue) == 0x0001D8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_GetCharaData_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Length_ReturnValue) == 0x000320, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Less_IntInt_ReturnValue) == 0x000324, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetDevilPostData_PostData) == 0x000328, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetDevilPostData_PostData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000348, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, Temp_int_Array_Index_Variable_3) == 0x00034C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Get_Item) == 0x000350, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000354, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_FindUnit_Unit) == 0x000358, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorScale3D_ReturnValue) == 0x000360, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x00036C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_MakeTransform_ReturnValue) == 0x000370, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_MakeVector_ReturnValue) == 0x0003A0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_AddSetActorTransformTask_RetPecID) == 0x0003AC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_AddSetActorTransformTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_GetCharaData_retValue_1) == 0x0003B0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_GetCharaData_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetDevilPostData_PostData_1) == 0x0004F8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetDevilPostData_PostData_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000518, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location_3) == 0x00051C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation_3) == 0x000528, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale_3) == 0x000534, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_FloatFloat_ReturnValue) == 0x000540, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000548, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000558, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Get_Item_1) == 0x00055C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000560, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Length_ReturnValue_1) == 0x000564, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000568, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Less_IntInt_ReturnValue_1) == 0x000574, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000578, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetMagatsuhiOtherActors_actors_1) == 0x000588, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetMagatsuhiOtherActors_actors_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Get_Item_2) == 0x000598, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00059C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_FindUnit_Unit_1) == 0x0005A8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Hit_1) == 0x0005B0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Hit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Location_1) == 0x0005B4, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Location_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Normal_1) == 0x0005C0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Normal_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_TraceGround_Surface_1) == 0x0005CC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_TraceGround_Surface_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorScale3D_ReturnValue_1) == 0x0005D0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0005DC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Length_ReturnValue_2) == 0x0005E8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Less_IntInt_ReturnValue_2) == 0x0005EC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_AddUnique_ReturnValue) == 0x0005F0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorPartyIndex_index_1) == 0x0005F4, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Add_ReturnValue) == 0x0005F8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Get_Item_3) == 0x0005FC, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Length_ReturnValue_3) == 0x000600, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_FindUnit_Unit_2) == 0x000608, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_FindUnit_Unit_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Less_IntInt_ReturnValue_3) == 0x000610, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetScaledCapsuleRadius_ReturnValue_1) == 0x000614, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetScaledCapsuleRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorScale3D_ReturnValue_2) == 0x000618, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorScale3D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_MakeVector_ReturnValue_1) == 0x000624, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_MakeTransform_ReturnValue_1) == 0x000630, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000660, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Array_Length_ReturnValue_4) == 0x00066C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Max_ReturnValue) == 0x000670, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Divide_IntInt_ReturnValue) == 0x000674, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location_4) == 0x000678, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation_4) == 0x000684, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale_4) == 0x000690, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_IntInt_ReturnValue) == 0x00069C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0006A0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetTaskFactory_retValue_1) == 0x0006A8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetMainWork_NewParam) == 0x0006B8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_AddSetActorTransformTask_RetPecID_1) == 0x0006C8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_AddSetActorTransformTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_GetOriginTransform_retValue) == 0x0006D0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location_5) == 0x000700, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation_5) == 0x00070C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale_5) == 0x000718, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location_6) == 0x000724, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation_6) == 0x000730, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale_6) == 0x00073C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetRightVector_ReturnValue) == 0x000748, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetRightVector_ReturnValue_1) == 0x000754, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000760, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x00076C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Dot_VectorVector_ReturnValue) == 0x000778, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00077C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000788, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_SelectFloat_ReturnValue) == 0x00078C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetPartySystem_retValue_2) == 0x000790, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0007A0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_GetCharaData_retValue_2) == 0x0007A8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_GetCharaData_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorPartyIndex_index_2) == 0x0008F0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorPartyIndex_index_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetDevilPostData_PostData_2) == 0x0008F8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetDevilPostData_PostData_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000918, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00091C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorPartyIndex_index_3) == 0x000920, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorPartyIndex_index_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000924, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000928, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000934, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetTaskFactory_retValue_2) == 0x000940, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill) == 0x000950, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_CheckMagatsuhiSkill_IsMagatsuhiSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill) == 0x000951, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_CheckMagatsuhiSkill_IsFixMemberSkill' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_AddSetActorTransformTask_RetPecID_2) == 0x000954, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_AddSetActorTransformTask_RetPecID_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_Not_PreBool_ReturnValue) == 0x000958, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_GetActorPartyIndex_index_4) == 0x00095C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_GetActorPartyIndex_index_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Location_7) == 0x000960, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Location_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Rotation_7) == 0x00096C, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Rotation_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BreakTransform_Scale_7) == 0x000978, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BreakTransform_Scale_7' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_MakeTransform_ReturnValue_2) == 0x000990, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetTaskFactory_retValue_3) == 0x0009C0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_AddSetActorTransformTask_RetPecID_3) == 0x0009D0, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_AddSetActorTransformTask_RetPecID_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BIGetTaskFactory_retValue_4) == 0x0009D8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BIGetTaskFactory_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_MakeSkillUserTransformTask, CallFunc_BI_AddSetActorTransformTask_RetPecID_4) == 0x0009E8, "Member 'BattleSkillActionBase_C_MakeSkillUserTransformTask::CallFunc_BI_AddSetActorTransformTask_RetPecID_4' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Summoner
// 0x0090 (0x0090 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Summoner final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E5[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PecID;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E6[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E7[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E8[0xC];                                     // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Summoner) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Summoner");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Summoner) == 0x000090, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Summoner");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, Distance) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, MotionID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, PecID) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Len_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_GetActorPartyIndex_index) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_FindUnit_Unit) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Summoner, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Summoner::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_100_Series
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_100_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EA[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EB[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_100_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_100_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Len_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_WaitTime_ComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_100_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_100_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_200_Series
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_200_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35ED[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EE[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_200_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_200_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Len_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_WaitTime_ComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_200_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_200_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_300_Series
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_300_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F0[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F1[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_300_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_300_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Len_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_WaitTime_ComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_300_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_300_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_400_Series
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_400_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F3[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F4[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_400_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_400_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Len_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_WaitTime_ComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_400_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_400_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_500_Series
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_500_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F6[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F7[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_500_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_500_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Len_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_WaitTime_ComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_500_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_500_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_600_Series
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_600_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F9[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FA[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_600_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_600_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Len_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_WaitTime_ComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_600_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_600_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_700_Series
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_700_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorLookTarget_ComIndex;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FC[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FD[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_700_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series) == 0x000068, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_700_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Len_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_ActorLookTarget_ComIndex) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_ActorLookTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_WaitTime_ComIndex) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_700_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000060, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_700_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_800_Series
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_800_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FF[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_800_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series) == 0x000060, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_800_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Len_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003D, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Com_WaitTime_ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_800_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_800_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com Introduction Servant 900 Series
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_900_Series final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3600[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CameraName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         DistanceFromSummoner;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MotionStartSec;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPlayMotionSec;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_SetCamActorRelative_ComIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3601[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddActorPointLight_Auto_ComIndex;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectActor_ComIndex;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_900_Series");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series) == 0x000060, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_900_Series");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CameraName) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CameraName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, DistanceFromSummoner) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::DistanceFromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, DegreeFromForward) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, MotionStartSec) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::MotionStartSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, DelayPlayMotionSec) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::DelayPlayMotionSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Com_SetCamActorRelative_ComIndex) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Com_SetCamActorRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Len_ReturnValue) == 0x000034, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Com_ActorAction_Com_Index) == 0x000038, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003D, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_CalcMotionStartPosition_StartPosition) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Com_WaitTime_ComIndex) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000050, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Com_AddActorPointLight_Auto_ComIndex) == 0x000054, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Com_AddActorPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_900_Series, CallFunc_Com_PlayEffectActor_ComIndex) == 0x000058, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_900_Series::CallFunc_Com_PlayEffectActor_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_Introduction_Servant_Melee
// 0x004C (0x004C - 0x0000)
struct BattleSkillActionBase_C_Com_Introduction_Servant_Melee final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromSummoner;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3602[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Distance;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeFromForward;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EXTRA_ACTION                            CallFunc_GetExtraAction_ExtraAction;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3603[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveFromTargetTrans_PecID;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWarpAtIntroductionMelee_m_IsWarpAtIntroductionMelee; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3604[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcMoveDestLocation_Location;            // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcMoveDestLocation_Ave;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMoveDestLocation_DistFromTarget;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTargetLocation_ComIndex;   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_Introduction_Servant_Melee");
static_assert(sizeof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee) == 0x00004C, "Wrong size on BattleSkillActionBase_C_Com_Introduction_Servant_Melee");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, FromSummoner) == 0x000004, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::FromSummoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, Distance) == 0x000008, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, DegreeFromForward) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::DegreeFromForward' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, ComIndex) == 0x000010, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_Com_ActorAction_Com_Index) == 0x000014, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_GetExtraAction_ExtraAction) == 0x000018, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_GetExtraAction_ExtraAction' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_Com_ActorMoveFromTargetTrans_PecID) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_Com_ActorMoveFromTargetTrans_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_IsWarpAtIntroductionMelee_m_IsWarpAtIntroductionMelee) == 0x000021, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_IsWarpAtIntroductionMelee_m_IsWarpAtIntroductionMelee' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_CalcMoveDestLocation_Location) == 0x000024, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_CalcMoveDestLocation_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_CalcMoveDestLocation_Ave) == 0x000030, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_CalcMoveDestLocation_Ave' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_CalcMoveDestLocation_DistFromTarget) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_CalcMoveDestLocation_DistFromTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_Com_ActorMoveToTargetLocation_ComIndex) == 0x000040, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_Com_ActorMoveToTargetLocation_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_SelectFloat_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_Introduction_Servant_Melee, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x000048, "Member 'BattleSkillActionBase_C_Com_Introduction_Servant_Melee::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetServantPartyIndex
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_GetServantPartyIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetServantPartyIndex) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetServantPartyIndex");
static_assert(sizeof(BattleSkillActionBase_C_GetServantPartyIndex) == 0x000004, "Wrong size on BattleSkillActionBase_C_GetServantPartyIndex");
static_assert(offsetof(BattleSkillActionBase_C_GetServantPartyIndex, PartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_GetServantPartyIndex::PartyIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ActorMoveFromTargetTrans
// 0x0190 (0x0190 - 0x0000)
struct BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Degree;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PecID;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3605[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3606[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3607[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3608[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3609[0xE];                                     // 0x0142(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_2;       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_TransformTransform_ReturnValue; // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans");
static_assert(sizeof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans) == 0x000190, "Wrong size on BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, Distance) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::Distance' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, Degree) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::Degree' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, PecID) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, Lo_WaitTaskList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000020, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_BreakTransform_Location) == 0x000024, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_BreakTransform_Rotation) == 0x000030, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_BreakTransform_Scale) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetActorPartyIndex_index) == 0x000048, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_FindUnit_Unit) == 0x000050, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetActorScale3D_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_BreakTransform_Location_1) == 0x000074, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_BreakTransform_Rotation_1) == 0x000080, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_BreakTransform_Scale_1) == 0x00008C, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_IsValidCommandIndex_retValue) == 0x000098, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetForwardVector_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetComandID_retValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C4, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_TraceGround_Hit) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_TraceGround_Location) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_TraceGround_Normal) == 0x0000F4, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_TraceGround_Surface) == 0x000100, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000104, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_IsReflected_IsReflected) == 0x000140, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_BooleanAND_ReturnValue) == 0x000141, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_MakeTransform_ReturnValue_1) == 0x000150, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_GetBeforCommandIndex_RetComIndex_2) == 0x000180, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_GetBeforCommandIndex_RetComIndex_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans, CallFunc_NearlyEqual_TransformTransform_ReturnValue) == 0x000184, "Member 'BattleSkillActionBase_C_Com_ActorMoveFromTargetTrans::CallFunc_NearlyEqual_TransformTransform_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddLightFuncMaterial
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_AddLightFuncMaterial final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_AddLightFuncMaterial) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddLightFuncMaterial");
static_assert(sizeof(BattleSkillActionBase_C_AddLightFuncMaterial) == 0x000030, "Wrong size on BattleSkillActionBase_C_AddLightFuncMaterial");
static_assert(offsetof(BattleSkillActionBase_C_AddLightFuncMaterial, Material) == 0x000000, "Member 'BattleSkillActionBase_C_AddLightFuncMaterial::Material' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddLightFuncMaterial, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_AddLightFuncMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_CamShake_Impl
// 0x01C8 (0x01C8 - 0x0000)
struct BattleSkillActionBase_C_Com_CamShake_Impl final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeScale;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMultiHit;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CamShakeTableIndex;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 RowName;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 ShakeClass;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCheckHit;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360B[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NumHit;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NumBlockOrAbsorb;                               // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_ShakeScale;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360C[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0040(0x0010)(Edit, BlueprintVisible)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360F[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0080(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0090(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        CallFunc_Array_Get_Item_1;                         // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3610[0x2];                                     // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3611[0x1];                                     // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3612[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x014C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_2;                              // 0x014D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3613[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         Temp_byte_Variable_3;                              // 0x0168(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3614[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_DAMAGE_HIT_TYPE                         Temp_byte_Variable_4;                              // 0x0171(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_4;             // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3615[0x2];                                     // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         Temp_byte_Variable_5;                              // 0x0184(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3616[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_5;             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3617[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPlayCamShake_retValue;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_CamShake_Impl) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_CamShake_Impl");
static_assert(sizeof(BattleSkillActionBase_C_Com_CamShake_Impl) == 0x0001C8, "Wrong size on BattleSkillActionBase_C_Com_CamShake_Impl");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, ShakeScale) == 0x000004, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, IsMultiHit) == 0x000008, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::IsMultiHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CamShakeTableIndex) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CamShakeTableIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, RowName) == 0x000010, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::RowName' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, ShakeClass) == 0x000020, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::ShakeClass' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, IsCheckHit) == 0x000028, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::IsCheckHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, ComIndex) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Lo_NumHit) == 0x000030, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Lo_NumHit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Lo_NumBlockOrAbsorb) == 0x000034, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Lo_NumBlockOrAbsorb' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Lo_ShakeScale) == 0x000038, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Lo_ShakeScale' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Lo_WaitList) == 0x000040, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_byte_Variable) == 0x000050, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_GetComandID_retValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_IsValidCommandIndex_retValue) == 0x000058, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_int_Variable) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_GetTargetInfo_Info) == 0x000080, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Get_Item) == 0x000090, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Greater_IntInt_ReturnValue) == 0x00012D, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Get_Item_1) == 0x00012E, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00012F, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000130, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanOR_ReturnValue) == 0x000131, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Length_ReturnValue_1) == 0x000134, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanAND_ReturnValue) == 0x000138, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Less_IntInt_ReturnValue_1) == 0x000139, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Contains_ReturnValue) == 0x00013A, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_GetTargetInfoLength_length) == 0x00013C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_GetSkillID_ID) == 0x000140, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000144, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_int_Variable_1) == 0x000148, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_byte_Variable_1) == 0x00014C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_byte_Variable_2) == 0x00014D, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Contains_ReturnValue_1) == 0x00014E, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Contains_ReturnValue_2) == 0x00014F, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000150, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanOR_ReturnValue_1) == 0x000154, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000155, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Not_PreBool_ReturnValue) == 0x000156, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanAND_ReturnValue_1) == 0x000157, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Clamp_ReturnValue) == 0x000158, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Subtract_IntInt_ReturnValue) == 0x00015C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000160, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Add_IntInt_ReturnValue_3) == 0x000164, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_byte_Variable_3) == 0x000168, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_GetActorPartyIndex_index) == 0x00016C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Contains_ReturnValue_3) == 0x000170, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_byte_Variable_4) == 0x000171, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000172, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanAND_ReturnValue_2) == 0x000173, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Contains_ReturnValue_4) == 0x000174, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanOR_ReturnValue_2) == 0x000175, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Add_IntInt_ReturnValue_4) == 0x000178, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00017C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_int_Variable_2) == 0x000180, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, Temp_byte_Variable_5) == 0x000184, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BIGetPartySystem_retValue) == 0x000188, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BI_GetSide_side) == 0x000198, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Contains_ReturnValue_5) == 0x000199, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00019A, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanOR_ReturnValue_3) == 0x00019B, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BooleanOR_ReturnValue_4) == 0x00019C, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BIGetTaskFactory_retValue) == 0x0001A0, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x0001B0, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x0001B4, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Add_ReturnValue) == 0x0001B8, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_BI_AddPlayCamShake_retValue) == 0x0001BC, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_BI_AddPlayCamShake_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CamShake_Impl, CallFunc_Array_Add_ReturnValue_1) == 0x0001C0, "Member 'BattleSkillActionBase_C_Com_CamShake_Impl::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_CtrlPostProcess
// 0x0070 (0x0070 - 0x0000)
struct BattleSkillActionBase_C_Com_CtrlPostProcess final
{
public:
	int32                                         WaitComIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3618[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstance*>              Material;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FMaterialAnimSetting_T>         MaterialAnimSetting;                               // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ComIndex;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3619[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361A[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361B[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddCtrlPostProcess_PecID;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_CtrlPostProcess) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_CtrlPostProcess");
static_assert(sizeof(BattleSkillActionBase_C_Com_CtrlPostProcess) == 0x000070, "Wrong size on BattleSkillActionBase_C_Com_CtrlPostProcess");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, WaitComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::WaitComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, Material) == 0x000008, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::Material' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, MaterialAnimSetting) == 0x000018, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::MaterialAnimSetting' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, ComIndex) == 0x000028, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, Lo_WaitList) == 0x000030, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, CallFunc_GetComandID_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, CallFunc_IsValidCommandIndex_retValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000048, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, CallFunc_BIGetTaskFactory_retValue) == 0x000050, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000060, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, CallFunc_BI_AddCtrlPostProcess_PecID) == 0x000064, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::CallFunc_BI_AddCtrlPostProcess_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_CtrlPostProcess, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_CtrlPostProcess::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.PursuitAddDrawPressIcon
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_PursuitAddDrawPressIcon final
{
public:
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface;  // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleFlag_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPressIconTask_RetPecID;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361D[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPressIconTask_RetPecID_1;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_PursuitAddDrawPressIcon) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_PursuitAddDrawPressIcon");
static_assert(sizeof(BattleSkillActionBase_C_PursuitAddDrawPressIcon) == 0x000068, "Wrong size on BattleSkillActionBase_C_PursuitAddDrawPressIcon");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, CallFunc_BIGetMainInterface_AsBPI_Main_Interface) == 0x000000, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::CallFunc_BIGetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, CallFunc_BI_CheckBattleFlag_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::CallFunc_BI_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, K2Node_MakeArray_Array) == 0x000018, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, CallFunc_BIGetTaskFactory_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, CallFunc_BI_AddPressIconTask_RetPecID) == 0x000038, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::CallFunc_BI_AddPressIconTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, K2Node_MakeArray_Array_1) == 0x000040, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, CallFunc_BIGetTaskFactory_retValue_1) == 0x000050, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PursuitAddDrawPressIcon, CallFunc_BI_AddPressIconTask_RetPecID_1) == 0x000060, "Member 'BattleSkillActionBase_C_PursuitAddDrawPressIcon::CallFunc_BI_AddPressIconTask_RetPecID_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_PlaySound2D
// 0x0050 (0x0050 - 0x0000)
struct BattleSkillActionBase_C_Com_PlaySound2D final
{
public:
	int32                                         WaitComIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          AtomCue;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SE_Sync_Playback_Speed;                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ComIndex;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3620[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3621[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPlaySETask_retValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_PlaySound2D) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_PlaySound2D");
static_assert(sizeof(BattleSkillActionBase_C_Com_PlaySound2D) == 0x000050, "Wrong size on BattleSkillActionBase_C_Com_PlaySound2D");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, WaitComIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::WaitComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, AtomCue) == 0x000008, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::AtomCue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, SE_Sync_Playback_Speed) == 0x000010, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::SE_Sync_Playback_Speed' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, ComIndex) == 0x000014, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, Lo_WaitList) == 0x000018, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, CallFunc_GetComandID_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, CallFunc_IsValidCommandIndex_retValue) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, CallFunc_BIGetTaskFactory_retValue) == 0x000030, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000040, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, CallFunc_BI_AddPlaySETask_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::CallFunc_BI_AddPlaySETask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_PlaySound2D, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_PlaySound2D::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Check Light Func Material Load
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_Check_Light_Func_Material_Load final
{
public:
	int32                                         Lo_lodaded;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Check_Light_Func_Material_Load) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Check_Light_Func_Material_Load");
static_assert(sizeof(BattleSkillActionBase_C_Check_Light_Func_Material_Load) == 0x000004, "Wrong size on BattleSkillActionBase_C_Check_Light_Func_Material_Load");
static_assert(offsetof(BattleSkillActionBase_C_Check_Light_Func_Material_Load, Lo_lodaded) == 0x000000, "Member 'BattleSkillActionBase_C_Check_Light_Func_Material_Load::Lo_lodaded' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsLightFuncMaterialLoaded
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_IsLightFuncMaterialLoaded final
{
public:
	bool                                          Done;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsLightFuncMaterialLoaded) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsLightFuncMaterialLoaded");
static_assert(sizeof(BattleSkillActionBase_C_IsLightFuncMaterialLoaded) == 0x000001, "Wrong size on BattleSkillActionBase_C_IsLightFuncMaterialLoaded");
static_assert(offsetof(BattleSkillActionBase_C_IsLightFuncMaterialLoaded, Done) == 0x000000, "Member 'BattleSkillActionBase_C_IsLightFuncMaterialLoaded::Done' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckActorsUniqueSkillExtraEffect
// 0x03A0 (0x03A0 - 0x0000)
struct BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect final
{
public:
	E_AUTO_SKILL_EXTRA_EFFECT                     ExtraEffect;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collect;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3622[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3623[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x0020(0x0320)()
	struct FSkillAutoErupt                        CallFunc_GetSkillAutoEruptData_ReturnValue;        // 0x0340(0x0058)(ConstParm)
	bool                                          CallFunc_SkillAutoEruptIsHaveExtraEffect_ReturnValue; // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect");
static_assert(sizeof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect) == 0x0003A0, "Wrong size on BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect");
static_assert(offsetof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect, ExtraEffect) == 0x000000, "Member 'BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect::ExtraEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect, Collect) == 0x000001, "Member 'BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect::Collect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect, CallFunc_BIGetPartySystem_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect, CallFunc_GetActorPartyIndex_index) == 0x000018, "Member 'BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect, CallFunc_BI_GetPartyData_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect, CallFunc_GetSkillAutoEruptData_ReturnValue) == 0x000340, "Member 'BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect::CallFunc_GetSkillAutoEruptData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect, CallFunc_SkillAutoEruptIsHaveExtraEffect_ReturnValue) == 0x000398, "Member 'BattleSkillActionBase_C_CheckActorsUniqueSkillExtraEffect::CallFunc_SkillAutoEruptIsHaveExtraEffect_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsAnyCritical
// 0x01F0 (0x01F0 - 0x0000)
struct BattleSkillActionBase_C_IsAnyCritical final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3624[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_PosTarget;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_ToAve;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_TargetRightVec;                                 // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_End;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Begin;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyNum;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_PosAve;                                         // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerEnd;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerBegin;                                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyEnd;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EnemyBegin;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0080(0x0010)(ReferenceParm)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0090(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0098)()
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0098)()
	E_BTL_DAMAGE_HIT_TYPE                         CallFunc_Array_Get_Item_2;                         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_DAMAGE_HIT_TYPE                         CallFunc_Array_Get_Item_3;                         // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3625[0x2];                                     // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsAnyCritical) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsAnyCritical");
static_assert(sizeof(BattleSkillActionBase_C_IsAnyCritical) == 0x0001F0, "Wrong size on BattleSkillActionBase_C_IsAnyCritical");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, RetValue) == 0x000000, "Member 'BattleSkillActionBase_C_IsAnyCritical::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_PosTarget) == 0x000004, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_PosTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_ToAve) == 0x000010, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_ToAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_TargetRightVec) == 0x00001C, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_TargetRightVec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_End) == 0x000028, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_Begin) == 0x00002C, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_Begin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_PartyNum) == 0x000030, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_PartyNum' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_PosAve) == 0x000034, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_PosAve' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_PlayerEnd) == 0x000040, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_PlayerEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_PlayerBegin) == 0x000044, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_PlayerBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_EnemyEnd) == 0x000048, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_EnemyEnd' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Lo_EnemyBegin) == 0x00004C, "Member 'BattleSkillActionBase_C_IsAnyCritical::Lo_EnemyBegin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Loop_Counter_Variable_2) == 0x000060, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Loop_Counter_Variable_3) == 0x000074, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Add_IntInt_ReturnValue_3) == 0x000078, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, Temp_int_Array_Index_Variable_3) == 0x00007C, "Member 'BattleSkillActionBase_C_IsAnyCritical::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_GetReflexInfo_Info) == 0x000080, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_GetTargetInfo_Info) == 0x000090, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Get_Item_2) == 0x0001D0, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Get_Item_3) == 0x0001D1, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D2, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001D3, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Length_ReturnValue) == 0x0001D4, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Length_ReturnValue_1) == 0x0001D8, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Less_IntInt_ReturnValue) == 0x0001DC, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001DD, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Length_ReturnValue_2) == 0x0001E0, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Array_Length_ReturnValue_3) == 0x0001E4, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001E8, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsAnyCritical, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001E9, "Member 'BattleSkillActionBase_C_IsAnyCritical::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetCriticalTargetPartyIndex
// 0x0250 (0x0250 - 0x0000)
struct BattleSkillActionBase_C_GetCriticalTargetPartyIndex final
{
public:
	TArray<int32>                                 Param_Index;                                       // 0x0000(0x0010)(Parm, OutParm)
	E_BTL_SIDE                                    Lo_TargetSide;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsAllRandom;                                    // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Lo_CorrectSide;                                    // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Lo_ActorSide;                                      // 0x0013(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Lo_SkillTarget;                                    // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3626[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Index;                                          // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3627[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0030(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0040(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3628[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3629[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362A[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_DAMAGE_HIT_TYPE                         Temp_byte_Variable;                                // 0x0130(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362B[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0140(0x0100)(ConstParm)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side_1;                        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362C[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetCriticalTargetPartyIndex");
static_assert(sizeof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex) == 0x000250, "Wrong size on BattleSkillActionBase_C_GetCriticalTargetPartyIndex");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Param_Index) == 0x000000, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Lo_TargetSide) == 0x000010, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Lo_TargetSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Lo_IsAllRandom) == 0x000011, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Lo_IsAllRandom' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Lo_CorrectSide) == 0x000012, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Lo_CorrectSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Lo_ActorSide) == 0x000013, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Lo_ActorSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Lo_SkillTarget) == 0x000014, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Lo_SkillTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Lo_Index) == 0x000018, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_GetTargetInfo_Info) == 0x000030, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BIGetPartySystem_retValue) == 0x0000E0, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BIGetPartySystem_retValue_1) == 0x0000F0, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BI_GetSideIsTargetList_List) == 0x000100, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Array_Contains_ReturnValue) == 0x000110, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Temp_int_Loop_Counter_Variable) == 0x000114, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BIGetPartySystem_retValue_2) == 0x000120, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, Temp_byte_Variable) == 0x000130, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BI_GetSide_side) == 0x000131, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000132, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Array_Contains_ReturnValue_1) == 0x000133, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BooleanOR_ReturnValue) == 0x000134, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BooleanAND_ReturnValue) == 0x000135, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, K2Node_SwitchEnum_CmpSuccess) == 0x000136, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x000137, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Array_AddUnique_ReturnValue) == 0x000138, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_GetSkillBaseData_ReturnValue) == 0x000140, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_BI_GetSide_side_1) == 0x000240, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_BI_GetSide_side_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_GetValidValue_ReturnValue) == 0x000241, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000244, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetCriticalTargetPartyIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000248, "Member 'BattleSkillActionBase_C_GetCriticalTargetPartyIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ReturnTargetTask
// 0x0138 (0x0138 - 0x0000)
struct BattleSkillActionBase_C_ReturnTargetTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 TargetIndex;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 RetTaskIDs;                                        // 0x0020(0x0010)(Parm, OutParm)
	TArray<int32>                                 Lo_DeadTargets;                                    // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_TargetIndex;                                    // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_HeroIndex;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362D[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PecIDs;                                         // 0x0058(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362E[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Skill_Info_Mess_Task_Ta__ID;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362F[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsInField_retValue;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3630[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3631[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3632[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_MakeCloseUpCameraTask_PecID;           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3633[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_2;              // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSummonTask_RetPecID;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ReturnTargetTask) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ReturnTargetTask");
static_assert(sizeof(BattleSkillActionBase_C_ReturnTargetTask) == 0x000138, "Wrong size on BattleSkillActionBase_C_ReturnTargetTask");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ReturnTargetTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, TargetIndex) == 0x000010, "Member 'BattleSkillActionBase_C_ReturnTargetTask::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, RetTaskIDs) == 0x000020, "Member 'BattleSkillActionBase_C_ReturnTargetTask::RetTaskIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Lo_DeadTargets) == 0x000030, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Lo_DeadTargets' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Lo_TargetIndex) == 0x000040, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Lo_HeroIndex) == 0x000050, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Lo_HeroIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Lo_PecIDs) == 0x000058, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Lo_PecIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BIGetTaskFactory_retValue) == 0x000088, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Skill_Info_Mess_Task_Ta__ID) == 0x000098, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Skill_Info_Mess_Task_Ta__ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A8, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BIGetPartySystem_retValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, Temp_int_Loop_Counter_Variable_2) == 0x0000C0, "Member 'BattleSkillActionBase_C_ReturnTargetTask::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Get_Item_1) == 0x0000C4, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Add_ReturnValue_1) == 0x0000CC, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BI_IsInField_retValue) == 0x0000D1, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BI_IsInField_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D2, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Length_ReturnValue_2) == 0x0000DC, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_GetHeroIndex_Index) == 0x0000E0, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E4, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000E5, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Length_ReturnValue_3) == 0x0000E8, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Conv_IntToBool_ReturnValue) == 0x0000EC, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BattleSkillActionBase_C_ReturnTargetTask::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BIGetTaskFactory_retValue_1) == 0x000100, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BI_MakeCloseUpCameraTask_PecID) == 0x000110, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BI_MakeCloseUpCameraTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x000114, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BI_AddUnitVisibilitySideAll_PecID) == 0x000118, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BI_AddUnitVisibilitySideAll_PecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BIGetTaskFactory_retValue_2) == 0x000120, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BIGetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_BI_AddSummonTask_RetPecID) == 0x000130, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_BI_AddSummonTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ReturnTargetTask, CallFunc_Array_Add_ReturnValue_2) == 0x000134, "Member 'BattleSkillActionBase_C_ReturnTargetTask::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.CheckUniqueSkillEfficacy
// 0x0090 (0x0090 - 0x0000)
struct BattleSkillActionBase_C_CheckUniqueSkillEfficacy final
{
public:
	int32                                         UniqueSkillID;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Efficacy;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3634[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillAutoErupt                        CallFunc_GetSkillAutoEruptData_ReturnValue;        // 0x0010(0x0058)(ConstParm)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_BIGetMainInterface_AsBPI_Main_Interface;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<E_AUTO_SKILL_EXTRA_EFFECT>             CallFunc_SkillAutoEruptGetExtraEffects_list;       // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_RetrieveUniqueSkillEfficacy_forInfo_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_CheckUniqueSkillEfficacy");
static_assert(sizeof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy) == 0x000090, "Wrong size on BattleSkillActionBase_C_CheckUniqueSkillEfficacy");
static_assert(offsetof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy, UniqueSkillID) == 0x000000, "Member 'BattleSkillActionBase_C_CheckUniqueSkillEfficacy::UniqueSkillID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy, PartyIndex) == 0x000004, "Member 'BattleSkillActionBase_C_CheckUniqueSkillEfficacy::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy, Efficacy) == 0x000008, "Member 'BattleSkillActionBase_C_CheckUniqueSkillEfficacy::Efficacy' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy, CallFunc_GetSkillAutoEruptData_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_CheckUniqueSkillEfficacy::CallFunc_GetSkillAutoEruptData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy, CallFunc_BIGetMainInterface_AsBPI_Main_Interface) == 0x000068, "Member 'BattleSkillActionBase_C_CheckUniqueSkillEfficacy::CallFunc_BIGetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy, CallFunc_SkillAutoEruptGetExtraEffects_list) == 0x000078, "Member 'BattleSkillActionBase_C_CheckUniqueSkillEfficacy::CallFunc_SkillAutoEruptGetExtraEffects_list' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_CheckUniqueSkillEfficacy, CallFunc_BI_RetrieveUniqueSkillEfficacy_forInfo_ReturnValue) == 0x000088, "Member 'BattleSkillActionBase_C_CheckUniqueSkillEfficacy::CallFunc_BI_RetrieveUniqueSkillEfficacy_forInfo_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetItemID
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_GetItemID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetItemID) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetItemID");
static_assert(sizeof(BattleSkillActionBase_C_GetItemID) == 0x000004, "Wrong size on BattleSkillActionBase_C_GetItemID");
static_assert(offsetof(BattleSkillActionBase_C_GetItemID, ID) == 0x000000, "Member 'BattleSkillActionBase_C_GetItemID::ID' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BIGetPTMemDataInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_BIGetPTMemDataInterface final
{
public:
	TScriptInterface<class IBPI_PTMemDataInterface> AsBPI_PTMemData;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> K2Node_DynamicCast_AsBPI_PTMem_Data_Interface;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_BIGetPTMemDataInterface) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BIGetPTMemDataInterface");
static_assert(sizeof(BattleSkillActionBase_C_BIGetPTMemDataInterface) == 0x000030, "Wrong size on BattleSkillActionBase_C_BIGetPTMemDataInterface");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTMemDataInterface, AsBPI_PTMemData) == 0x000000, "Member 'BattleSkillActionBase_C_BIGetPTMemDataInterface::AsBPI_PTMemData' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTMemDataInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_BIGetPTMemDataInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTMemDataInterface, K2Node_DynamicCast_AsBPI_PTMem_Data_Interface) == 0x000018, "Member 'BattleSkillActionBase_C_BIGetPTMemDataInterface::K2Node_DynamicCast_AsBPI_PTMem_Data_Interface' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BIGetPTMemDataInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSkillActionBase_C_BIGetPTMemDataInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ResetTargetCharaParticle
// 0x01E0 (0x01E0 - 0x0000)
struct BattleSkillActionBase_C_ResetTargetCharaParticle final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Lo_ResetTargets;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3635[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x0040(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0050(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3636[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x00F0(0x0010)(ReferenceParm)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0100(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3637[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddStopAllParticleTask_RetPecID;       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddResetCharaParticleTask_RetPecID;    // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3638[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_ResetTargetCharaParticle) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ResetTargetCharaParticle");
static_assert(sizeof(BattleSkillActionBase_C_ResetTargetCharaParticle) == 0x0001E0, "Wrong size on BattleSkillActionBase_C_ResetTargetCharaParticle");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, Lo_ResetTargets) == 0x000010, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::Lo_ResetTargets' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_GetReflexInfo_Info) == 0x000040, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_GetTargetInfo_Info) == 0x0000F0, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_Length_ReturnValue_1) == 0x000198, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Less_IntInt_ReturnValue_1) == 0x00019C, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_BIGetTaskFactory_retValue) == 0x0001A0, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_BI_AddStopAllParticleTask_RetPecID) == 0x0001B0, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_BI_AddStopAllParticleTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_Get_Item_2) == 0x0001B4, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_Length_ReturnValue_2) == 0x0001B8, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_BI_AddResetCharaParticleTask_RetPecID) == 0x0001BC, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_BI_AddResetCharaParticleTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_Add_ReturnValue) == 0x0001C0, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_AddUnique_ReturnValue) == 0x0001C4, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, Temp_int_Loop_Counter_Variable_2) == 0x0001C8, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001CC, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001D0, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001D4, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetTargetCharaParticle, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0001D8, "Member 'BattleSkillActionBase_C_ResetTargetCharaParticle::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.ResetActorCharaParticle
// 0x0070 (0x0070 - 0x0000)
struct BattleSkillActionBase_C_ResetActorCharaParticle final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Lo_ResetTargets;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3639[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363A[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddResetCharaParticleTask_RetPecID;    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_ResetActorCharaParticle) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_ResetActorCharaParticle");
static_assert(sizeof(BattleSkillActionBase_C_ResetActorCharaParticle) == 0x000070, "Wrong size on BattleSkillActionBase_C_ResetActorCharaParticle");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, Lo_ResetTargets) == 0x000010, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::Lo_ResetTargets' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000028, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_GetActorPartyIndex_index) == 0x000038, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_BIGetTaskFactory_retValue) == 0x000048, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_Array_Get_Item) == 0x000058, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_BI_AddResetCharaParticleTask_RetPecID) == 0x000060, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_BI_AddResetCharaParticleTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_ResetActorCharaParticle, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BattleSkillActionBase_C_ResetActorCharaParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UnlockOpeningAchievement
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_UnlockOpeningAchievement final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<EAchievementFlag>                      Lo_OpeningAchievement;                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363B[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAchievementFlag>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAchievementFlag                              CallFunc_Array_Get_Item;                           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363C[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddUnlockAchievementTask_RetPecID;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_UnlockOpeningAchievement) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UnlockOpeningAchievement");
static_assert(sizeof(BattleSkillActionBase_C_UnlockOpeningAchievement) == 0x000060, "Wrong size on BattleSkillActionBase_C_UnlockOpeningAchievement");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, Lo_OpeningAchievement) == 0x000010, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::Lo_OpeningAchievement' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, K2Node_MakeArray_Array) == 0x000030, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, CallFunc_BIGetTaskFactory_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, CallFunc_Array_Get_Item) == 0x000054, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, CallFunc_BI_AddUnlockAchievementTask_RetPecID) == 0x000058, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::CallFunc_BI_AddUnlockAchievementTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockOpeningAchievement, CallFunc_Array_Contains_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_UnlockOpeningAchievement::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UnlockHIttingAchievement
// 0x0060 (0x0060 - 0x0000)
struct BattleSkillActionBase_C_UnlockHIttingAchievement final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<EAchievementFlag>                      Lo_HittingAchievement;                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAchievementFlag>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAchievementFlag                              CallFunc_Array_Get_Item;                           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363E[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddUnlockAchievementTask_RetPecID;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_UnlockHIttingAchievement) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UnlockHIttingAchievement");
static_assert(sizeof(BattleSkillActionBase_C_UnlockHIttingAchievement) == 0x000060, "Wrong size on BattleSkillActionBase_C_UnlockHIttingAchievement");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, WaitTaskList) == 0x000000, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, Lo_HittingAchievement) == 0x000010, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::Lo_HittingAchievement' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, K2Node_MakeArray_Array) == 0x000030, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, CallFunc_BIGetTaskFactory_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, CallFunc_Array_Get_Item) == 0x000054, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, CallFunc_BI_AddUnlockAchievementTask_RetPecID) == 0x000058, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::CallFunc_BI_AddUnlockAchievementTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UnlockHIttingAchievement, CallFunc_Array_Contains_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_UnlockHIttingAchievement::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetTargetInfo
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_GetTargetInfo final
{
public:
	TArray<struct FSkillActionTargetInfo>         Info;                                              // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BattleSkillActionBase_C_GetTargetInfo) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetTargetInfo");
static_assert(sizeof(BattleSkillActionBase_C_GetTargetInfo) == 0x000010, "Wrong size on BattleSkillActionBase_C_GetTargetInfo");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetInfo, Info) == 0x000000, "Member 'BattleSkillActionBase_C_GetTargetInfo::Info' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.SeparateTargetInfo
// 0x0218 (0x0218 - 0x0000)
struct BattleSkillActionBase_C_SeparateTargetInfo final
{
public:
	bool                                          Lo_IsAllRandom;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Lo_CorrectSide;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Lo_SkillTarget;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363F[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillID_ID;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3640[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0018(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3641[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x0130(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3642[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x0168(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3643[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side_1;                        // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_SeparateTargetInfo) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_SeparateTargetInfo");
static_assert(sizeof(BattleSkillActionBase_C_SeparateTargetInfo) == 0x000218, "Wrong size on BattleSkillActionBase_C_SeparateTargetInfo");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, Lo_IsAllRandom) == 0x000000, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::Lo_IsAllRandom' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, Lo_CorrectSide) == 0x000001, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::Lo_CorrectSide' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, Lo_SkillTarget) == 0x000002, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::Lo_SkillTarget' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_GetSkillID_ID) == 0x000010, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_GetSkillBaseData_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000118, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_GetValidValue_ReturnValue) == 0x000119, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BIGetPartySystem_retValue) == 0x000120, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BI_GetSideIsTargetList_List) == 0x000130, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BIGetPartySystem_retValue_1) == 0x000140, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000150, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BIGetPartySystem_retValue_2) == 0x000158, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Array_Get_Item) == 0x000168, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Array_Add_ReturnValue) == 0x000204, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Array_Add_ReturnValue_1) == 0x00020C, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_Array_Contains_ReturnValue) == 0x000210, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BI_GetSide_side) == 0x000211, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000212, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BooleanOR_ReturnValue) == 0x000213, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BI_GetSide_side_1) == 0x000214, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BI_GetSide_side_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_SeparateTargetInfo, CallFunc_BooleanAND_ReturnValue) == 0x000215, "Member 'BattleSkillActionBase_C_SeparateTargetInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetTargetInfoLength
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_GetTargetInfoLength final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3644[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetTargetInfoLength) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetTargetInfoLength");
static_assert(sizeof(BattleSkillActionBase_C_GetTargetInfoLength) == 0x000020, "Wrong size on BattleSkillActionBase_C_GetTargetInfoLength");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetInfoLength, Length) == 0x000000, "Member 'BattleSkillActionBase_C_GetTargetInfoLength::Length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetInfoLength, CallFunc_GetTargetInfo_Info) == 0x000008, "Member 'BattleSkillActionBase_C_GetTargetInfoLength::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetTargetInfoLength, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_GetTargetInfoLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetFirstTargetInfo
// 0x0150 (0x0150 - 0x0000)
struct BattleSkillActionBase_C_GetFirstTargetInfo final
{
public:
	struct FSkillActionTargetInfo                 Info;                                              // 0x0000(0x0098)(Parm, OutParm)
	bool                                          Valid;                                             // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3645[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 K2Node_MakeStruct_SkillActionTargetInfo;           // 0x00A0(0x0098)()
	int32                                         CallFunc_GetTargetInfoLength_length;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3646[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0140(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleSkillActionBase_C_GetFirstTargetInfo) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetFirstTargetInfo");
static_assert(sizeof(BattleSkillActionBase_C_GetFirstTargetInfo) == 0x000150, "Wrong size on BattleSkillActionBase_C_GetFirstTargetInfo");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstTargetInfo, Info) == 0x000000, "Member 'BattleSkillActionBase_C_GetFirstTargetInfo::Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstTargetInfo, Valid) == 0x000098, "Member 'BattleSkillActionBase_C_GetFirstTargetInfo::Valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstTargetInfo, K2Node_MakeStruct_SkillActionTargetInfo) == 0x0000A0, "Member 'BattleSkillActionBase_C_GetFirstTargetInfo::K2Node_MakeStruct_SkillActionTargetInfo' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstTargetInfo, CallFunc_GetTargetInfoLength_length) == 0x000138, "Member 'BattleSkillActionBase_C_GetFirstTargetInfo::CallFunc_GetTargetInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstTargetInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x00013C, "Member 'BattleSkillActionBase_C_GetFirstTargetInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstTargetInfo, CallFunc_GetTargetInfo_Info) == 0x000140, "Member 'BattleSkillActionBase_C_GetFirstTargetInfo::CallFunc_GetTargetInfo_Info' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetReflexInfo
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_GetReflexInfo final
{
public:
	TArray<struct FSkillActionTargetInfo>         Info;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSkillActionTargetInfo>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleSkillActionBase_C_GetReflexInfo) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetReflexInfo");
static_assert(sizeof(BattleSkillActionBase_C_GetReflexInfo) == 0x000020, "Wrong size on BattleSkillActionBase_C_GetReflexInfo");
static_assert(offsetof(BattleSkillActionBase_C_GetReflexInfo, Info) == 0x000000, "Member 'BattleSkillActionBase_C_GetReflexInfo::Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetReflexInfo, K2Node_MakeArray_Array) == 0x000010, "Member 'BattleSkillActionBase_C_GetReflexInfo::K2Node_MakeArray_Array' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetReflexInfoLength
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_GetReflexInfoLength final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetReflexInfoLength) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetReflexInfoLength");
static_assert(sizeof(BattleSkillActionBase_C_GetReflexInfoLength) == 0x000008, "Wrong size on BattleSkillActionBase_C_GetReflexInfoLength");
static_assert(offsetof(BattleSkillActionBase_C_GetReflexInfoLength, Length) == 0x000000, "Member 'BattleSkillActionBase_C_GetReflexInfoLength::Length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetReflexInfoLength, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_GetReflexInfoLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetMagatsuhiOtherActors
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_GetMagatsuhiOtherActors final
{
public:
	TArray<int32>                                 Actors;                                            // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BattleSkillActionBase_C_GetMagatsuhiOtherActors) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetMagatsuhiOtherActors");
static_assert(sizeof(BattleSkillActionBase_C_GetMagatsuhiOtherActors) == 0x000010, "Wrong size on BattleSkillActionBase_C_GetMagatsuhiOtherActors");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiOtherActors, Actors) == 0x000000, "Member 'BattleSkillActionBase_C_GetMagatsuhiOtherActors::Actors' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetMagatsuhiOtherActorsLength
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength");
static_assert(sizeof(BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength) == 0x000008, "Wrong size on BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength, Length) == 0x000000, "Member 'BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength::Length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BattleSkillActionBase_C_GetMagatsuhiOtherActorsLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetExtraAction
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_GetExtraAction final
{
public:
	E_BTL_EXTRA_ACTION                            ExtraAction;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetExtraAction) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_GetExtraAction");
static_assert(sizeof(BattleSkillActionBase_C_GetExtraAction) == 0x000001, "Wrong size on BattleSkillActionBase_C_GetExtraAction");
static_assert(offsetof(BattleSkillActionBase_C_GetExtraAction, ExtraAction) == 0x000000, "Member 'BattleSkillActionBase_C_GetExtraAction::ExtraAction' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetDrainInfo
// 0x0008 (0x0008 - 0x0000)
struct BattleSkillActionBase_C_GetDrainInfo final
{
public:
	struct FSkillActionDrainInfo                  M_DrainInfo;                                       // 0x0000(0x0008)(Parm, OutParm)
};
static_assert(alignof(BattleSkillActionBase_C_GetDrainInfo) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetDrainInfo");
static_assert(sizeof(BattleSkillActionBase_C_GetDrainInfo) == 0x000008, "Wrong size on BattleSkillActionBase_C_GetDrainInfo");
static_assert(offsetof(BattleSkillActionBase_C_GetDrainInfo, M_DrainInfo) == 0x000000, "Member 'BattleSkillActionBase_C_GetDrainInfo::M_DrainInfo' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetFirstReflexInfo
// 0x0150 (0x0150 - 0x0000)
struct BattleSkillActionBase_C_GetFirstReflexInfo final
{
public:
	struct FSkillActionTargetInfo                 Info;                                              // 0x0000(0x0098)(Parm, OutParm)
	bool                                          Valid;                                             // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3647[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetReflexInfo_Info;                       // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetReflexInfoLength_length;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3648[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 K2Node_MakeStruct_SkillActionTargetInfo;           // 0x00B8(0x0098)()
};
static_assert(alignof(BattleSkillActionBase_C_GetFirstReflexInfo) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetFirstReflexInfo");
static_assert(sizeof(BattleSkillActionBase_C_GetFirstReflexInfo) == 0x000150, "Wrong size on BattleSkillActionBase_C_GetFirstReflexInfo");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstReflexInfo, Info) == 0x000000, "Member 'BattleSkillActionBase_C_GetFirstReflexInfo::Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstReflexInfo, Valid) == 0x000098, "Member 'BattleSkillActionBase_C_GetFirstReflexInfo::Valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstReflexInfo, CallFunc_GetReflexInfo_Info) == 0x0000A0, "Member 'BattleSkillActionBase_C_GetFirstReflexInfo::CallFunc_GetReflexInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstReflexInfo, CallFunc_GetReflexInfoLength_length) == 0x0000B0, "Member 'BattleSkillActionBase_C_GetFirstReflexInfo::CallFunc_GetReflexInfoLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstReflexInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B4, "Member 'BattleSkillActionBase_C_GetFirstReflexInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetFirstReflexInfo, K2Node_MakeStruct_SkillActionTargetInfo) == 0x0000B8, "Member 'BattleSkillActionBase_C_GetFirstReflexInfo::K2Node_MakeStruct_SkillActionTargetInfo' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetAddMagGauge
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_GetAddMagGauge final
{
public:
	int32                                         AddMagGauge;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetAddMagGauge) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetAddMagGauge");
static_assert(sizeof(BattleSkillActionBase_C_GetAddMagGauge) == 0x000004, "Wrong size on BattleSkillActionBase_C_GetAddMagGauge");
static_assert(offsetof(BattleSkillActionBase_C_GetAddMagGauge, AddMagGauge) == 0x000000, "Member 'BattleSkillActionBase_C_GetAddMagGauge::AddMagGauge' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetAddReichi
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_GetAddReichi final
{
public:
	int32                                         AddReichi;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetAddReichi) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetAddReichi");
static_assert(sizeof(BattleSkillActionBase_C_GetAddReichi) == 0x000004, "Wrong size on BattleSkillActionBase_C_GetAddReichi");
static_assert(offsetof(BattleSkillActionBase_C_GetAddReichi, AddReichi) == 0x000000, "Member 'BattleSkillActionBase_C_GetAddReichi::AddReichi' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetActorBst
// 0x0004 (0x0004 - 0x0000)
struct BattleSkillActionBase_C_GetActorBst final
{
public:
	int32                                         bst;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetActorBst) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_GetActorBst");
static_assert(sizeof(BattleSkillActionBase_C_GetActorBst) == 0x000004, "Wrong size on BattleSkillActionBase_C_GetActorBst");
static_assert(offsetof(BattleSkillActionBase_C_GetActorBst, bst) == 0x000000, "Member 'BattleSkillActionBase_C_GetActorBst::bst' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_SecondApplyHit
// 0x0240 (0x0240 - 0x0000)
struct BattleSkillActionBase_C_Com_SecondApplyHit final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitEffect;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3649[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsWorldRelative;                                   // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364A[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeSec;                                           // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencyPriority;                              // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMin;                                     // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotYawRandMax;                                     // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyBlur;                                         // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364B[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartBlurAmount;                                   // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndBlurAmount;                                     // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurStartKeepSec;                                  // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurLerpSec;                                       // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364C[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Com;                                            // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList2;                                      // 0x0080(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364D[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_AddActorBstTask_ComIndex;                 // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364E[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364F[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	TArray<struct FSkillActionTargetInfo>         CallFunc_GetTargetInfo_Info;                       // 0x0138(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3650[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item_1;                         // 0x0150(0x0098)()
	TArray<int32>                                 CallFunc_ApplyHit_One_RetComIDs;                   // 0x01E8(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_ApplyHit_One_RetNecessaryWaitComID;       // 0x01F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3651[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3652[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3653[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex_1;       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_SecondApplyHit) == 0x000010, "Wrong alignment on BattleSkillActionBase_C_Com_SecondApplyHit");
static_assert(sizeof(BattleSkillActionBase_C_Com_SecondApplyHit) == 0x000240, "Wrong size on BattleSkillActionBase_C_Com_SecondApplyHit");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, HitEffect) == 0x000004, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::HitEffect' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, RelativeTransform) == 0x000010, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, IsWorldRelative) == 0x000040, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::IsWorldRelative' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, LifeSec) == 0x000044, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::LifeSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, TranslucencyPriority) == 0x000048, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::TranslucencyPriority' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, RotYawRandMin) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::RotYawRandMin' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, RotYawRandMax) == 0x000050, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::RotYawRandMax' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, ApplyBlur) == 0x000054, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::ApplyBlur' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, StartBlurAmount) == 0x000058, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::StartBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, EndBlurAmount) == 0x00005C, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::EndBlurAmount' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, BlurStartKeepSec) == 0x000060, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::BlurStartKeepSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, BlurLerpSec) == 0x000064, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::BlurLerpSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, ComIndex) == 0x000068, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Lo_Com) == 0x000070, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Lo_Com' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Lo_WaitList2) == 0x000080, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Lo_WaitList2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Lo_WaitList) == 0x000090, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Temp_int_Array_Index_Variable_2) == 0x0000B0, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_AddActorBstTask_ComIndex) == 0x0000B8, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_AddActorBstTask_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_BIGetTaskFactory_retValue) == 0x0000D0, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Temp_int_Loop_Counter_Variable_1) == 0x0000E0, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x0000E4, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Add_ReturnValue) == 0x0000E8, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_BIGetTaskFactory_retValue_1) == 0x0000F8, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_BIGetPartySystem_retValue) == 0x000108, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_BIGetMainWork_NewParam) == 0x000118, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, K2Node_MakeArray_Array) == 0x000128, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_GetTargetInfo_Info) == 0x000138, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_GetTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, Temp_int_Loop_Counter_Variable_2) == 0x000148, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_ApplyHit_One_RetComIDs) == 0x0001E8, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_ApplyHit_One_RetComIDs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_ApplyHit_One_RetNecessaryWaitComID) == 0x0001F8, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_ApplyHit_One_RetNecessaryWaitComID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Add_IntInt_ReturnValue_2) == 0x000208, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Get_Item_2) == 0x00020C, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Length_ReturnValue_1) == 0x000210, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Less_IntInt_ReturnValue_1) == 0x000214, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Length_ReturnValue_2) == 0x000218, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Less_IntInt_ReturnValue_2) == 0x00021C, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_GetComandID_retValue) == 0x000220, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_IsValidCommandIndex_retValue) == 0x000224, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_Array_Add_ReturnValue_1) == 0x000228, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x00022C, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_SecondApplyHit, CallFunc_GetBeforCommandIndex_RetComIndex_1) == 0x000230, "Member 'BattleSkillActionBase_C_Com_SecondApplyHit::CallFunc_GetBeforCommandIndex_RetComIndex_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsSkiped
// 0x0001 (0x0001 - 0x0000)
struct BattleSkillActionBase_C_IsSkiped final
{
public:
	bool                                          Skiped;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsSkiped) == 0x000001, "Wrong alignment on BattleSkillActionBase_C_IsSkiped");
static_assert(sizeof(BattleSkillActionBase_C_IsSkiped) == 0x000001, "Wrong size on BattleSkillActionBase_C_IsSkiped");
static_assert(offsetof(BattleSkillActionBase_C_IsSkiped, Skiped) == 0x000000, "Member 'BattleSkillActionBase_C_IsSkiped::Skiped' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.DisableUpliftingEffect
// 0x0068 (0x0068 - 0x0000)
struct BattleSkillActionBase_C_DisableUpliftingEffect final
{
public:
	TArray<int32>                                 Lo_Actors;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3654[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3655[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsUplifting_Ret;                       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3656[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3657[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_DisableUpliftingEffect) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_DisableUpliftingEffect");
static_assert(sizeof(BattleSkillActionBase_C_DisableUpliftingEffect) == 0x000068, "Wrong size on BattleSkillActionBase_C_DisableUpliftingEffect");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, Lo_Actors) == 0x000000, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::Lo_Actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_BIGetPartySystem_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000030, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_FindUnit_Unit) == 0x000048, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_BI_IsUplifting_Ret) == 0x000054, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_BI_IsUplifting_Ret' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_GetActorPartyIndex_index) == 0x000060, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_DisableUpliftingEffect, CallFunc_Array_AddUnique_ReturnValue) == 0x000064, "Member 'BattleSkillActionBase_C_DisableUpliftingEffect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.EnableUpliftingEffect
// 0x0028 (0x0028 - 0x0000)
struct BattleSkillActionBase_C_EnableUpliftingEffect final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3658[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_EnableUpliftingEffect) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_EnableUpliftingEffect");
static_assert(sizeof(BattleSkillActionBase_C_EnableUpliftingEffect) == 0x000028, "Wrong size on BattleSkillActionBase_C_EnableUpliftingEffect");
static_assert(offsetof(BattleSkillActionBase_C_EnableUpliftingEffect, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSkillActionBase_C_EnableUpliftingEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_EnableUpliftingEffect, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSkillActionBase_C_EnableUpliftingEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_EnableUpliftingEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSkillActionBase_C_EnableUpliftingEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_EnableUpliftingEffect, CallFunc_Array_Get_Item) == 0x00000C, "Member 'BattleSkillActionBase_C_EnableUpliftingEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_EnableUpliftingEffect, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BattleSkillActionBase_C_EnableUpliftingEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_EnableUpliftingEffect, CallFunc_FindUnit_Unit) == 0x000018, "Member 'BattleSkillActionBase_C_EnableUpliftingEffect::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_EnableUpliftingEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_EnableUpliftingEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.StopAttachedSkeletalMeshActor
// 0x0058 (0x0058 - 0x0000)
struct BattleSkillActionBase_C_StopAttachedSkeletalMeshActor final
{
public:
	TArray<class AActor*>                         Lo_AttachedActors;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3659[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_StopAttachedSkeletalMeshActor");
static_assert(sizeof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor) == 0x000058, "Wrong size on BattleSkillActionBase_C_StopAttachedSkeletalMeshActor");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, Lo_AttachedActors) == 0x000000, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::Lo_AttachedActors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_GetActorPartyIndex_index) == 0x00001C, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_FindUnit_Unit) == 0x000028, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000030, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_GetAttachedActors_OutActors) == 0x000040, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_StopAttachedSkeletalMeshActor, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_StopAttachedSkeletalMeshActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.AddNahobinoMotion
// 0x0050 (0x0050 - 0x0000)
struct BattleSkillActionBase_C_AddNahobinoMotion final
{
public:
	E_CHARA_MOTION_ID                             Motion;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPrimeMinisterNahobino_ReturnValue;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365A[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaMotion                           K2Node_MakeStruct_CharaMotion;                     // 0x0018(0x0018)(NoDestructor)
	struct FCharaMotion                           CallFunc_Map_Find_Value;                           // 0x0030(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_AddNahobinoMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_AddNahobinoMotion");
static_assert(sizeof(BattleSkillActionBase_C_AddNahobinoMotion) == 0x000050, "Wrong size on BattleSkillActionBase_C_AddNahobinoMotion");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, Motion) == 0x000000, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, Temp_bool_Variable) == 0x000001, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, CallFunc_CheckPrimeMinisterNahobino_ReturnValue) == 0x000002, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::CallFunc_CheckPrimeMinisterNahobino_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, CallFunc_GetHeroIndex_Index) == 0x000004, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, CallFunc_FindUnit_Unit) == 0x000008, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, K2Node_Select_Default) == 0x000010, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, K2Node_MakeStruct_CharaMotion) == 0x000018, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::K2Node_MakeStruct_CharaMotion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, CallFunc_Map_Find_Value) == 0x000030, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_AddNahobinoMotion, CallFunc_Map_Remove_ReturnValue) == 0x000049, "Member 'BattleSkillActionBase_C_AddNahobinoMotion::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.RemoveNahobinoMotion
// 0x0030 (0x0030 - 0x0000)
struct BattleSkillActionBase_C_RemoveNahobinoMotion final
{
public:
	E_CHARA_MOTION_ID                             Motion;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaMotion                           CallFunc_Map_Find_Value;                           // 0x0010(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_RemoveNahobinoMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_RemoveNahobinoMotion");
static_assert(sizeof(BattleSkillActionBase_C_RemoveNahobinoMotion) == 0x000030, "Wrong size on BattleSkillActionBase_C_RemoveNahobinoMotion");
static_assert(offsetof(BattleSkillActionBase_C_RemoveNahobinoMotion, Motion) == 0x000000, "Member 'BattleSkillActionBase_C_RemoveNahobinoMotion::Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RemoveNahobinoMotion, CallFunc_GetHeroIndex_Index) == 0x000004, "Member 'BattleSkillActionBase_C_RemoveNahobinoMotion::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RemoveNahobinoMotion, CallFunc_FindUnit_Unit) == 0x000008, "Member 'BattleSkillActionBase_C_RemoveNahobinoMotion::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RemoveNahobinoMotion, CallFunc_Map_Find_Value) == 0x000010, "Member 'BattleSkillActionBase_C_RemoveNahobinoMotion::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RemoveNahobinoMotion, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_RemoveNahobinoMotion::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_RemoveNahobinoMotion, CallFunc_Map_Remove_ReturnValue) == 0x000029, "Member 'BattleSkillActionBase_C_RemoveNahobinoMotion::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_AddUplifting
// 0x0058 (0x0058 - 0x0000)
struct BattleSkillActionBase_C_Com_AddUplifting final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365D[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_MakeUpliftingTask_Ret;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_AddUplifting) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_AddUplifting");
static_assert(sizeof(BattleSkillActionBase_C_Com_AddUplifting) == 0x000058, "Wrong size on BattleSkillActionBase_C_Com_AddUplifting");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_AddUplifting::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, ComIndex) == 0x000004, "Member 'BattleSkillActionBase_C_Com_AddUplifting::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, Lo_WaitList) == 0x000008, "Member 'BattleSkillActionBase_C_Com_AddUplifting::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000018, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_GetComandID_retValue) == 0x00001C, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_IsValidCommandIndex_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_BIGetPartySystem_retValue) == 0x000028, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_GetActorPartyIndex_index) == 0x000038, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_BI_GetSide_side) == 0x00003C, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_BIGetTaskFactory_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_BI_MakeUpliftingTask_Ret) == 0x000050, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_BI_MakeUpliftingTask_Ret' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_AddUplifting, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BattleSkillActionBase_C_Com_AddUplifting::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_OtherMagatsuhiActorsMotion
// 0x0088 (0x0088 - 0x0000)
struct BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             Motion;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetComandID_retValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCommandIndex_retValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3660[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3661[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetBeforCommandIndex_RetComIndex;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddDeltaWaitTask_retValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3662[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue_1;              // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion");
static_assert(sizeof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion) == 0x000088, "Wrong size on BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, Motion) == 0x000004, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::Motion' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, Lo_WaitList) == 0x000010, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_GetComandID_retValue) == 0x000020, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_GetComandID_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_IsValidCommandIndex_retValue) == 0x000024, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_IsValidCommandIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000030, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_BIGetTaskFactory_retValue) == 0x000050, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_GetBeforCommandIndex_RetComIndex) == 0x000060, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_GetBeforCommandIndex_RetComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_BI_AddDeltaWaitTask_retValue) == 0x000064, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_BI_AddDeltaWaitTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_BIGetTaskFactory_retValue_1) == 0x000070, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_BIGetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_BI_AddSetUnitMotion_retValue) == 0x000080, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'BattleSkillActionBase_C_Com_OtherMagatsuhiActorsMotion::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UpdatePlayRate_SkelMeshParticle
// 0x0050 (0x0050 - 0x0000)
struct BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle final
{
public:
	class ASkeletalMeshActor*                     SkelMesh;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       Lo_PSCs;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3663[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3664[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3665[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle");
static_assert(sizeof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle) == 0x000050, "Wrong size on BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, SkelMesh) == 0x000000, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::SkelMesh' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, Lo_PSCs) == 0x000008, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::Lo_PSCs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.UpdatePlayRate_SkelMeshCompParticle
// 0x0070 (0x0070 - 0x0000)
struct BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                Lo_Cmps;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       Lo_PSCs;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3666[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3667[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3668[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3669[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               K2Node_DynamicCast_AsParticle_System_Component;    // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle");
static_assert(sizeof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle) == 0x000070, "Wrong size on BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, SkelMeshComp) == 0x000000, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, Lo_Cmps) == 0x000008, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::Lo_Cmps' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, Lo_PSCs) == 0x000018, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::Lo_PSCs' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, CallFunc_GetChildrenComponents_Children) == 0x000038, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, K2Node_DynamicCast_AsParticle_System_Component) == 0x000060, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::K2Node_DynamicCast_AsParticle_System_Component' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BattleSkillActionBase_C_UpdatePlayRate_SkelMeshCompParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Invisible Loaded Model
// 0x00F0 (0x00F0 - 0x0000)
struct BattleSkillActionBase_C_Invisible_Loaded_Model final
{
public:
	TArray<int32>                                 Lo_ExistPartyIndex;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Lo_AttachedActors;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366A[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0030(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366B[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0058(0x0010)(ReferenceParm)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_BattleStopMotion_self_CastInput;       // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleStopMotion_NoUse;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366C[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue_1;             // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366D[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366E[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue_1;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366F[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_BattleStopMotion_self_CastInput_1;     // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleStopMotion_NoUse_1;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_Invisible_Loaded_Model) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_Invisible_Loaded_Model");
static_assert(sizeof(BattleSkillActionBase_C_Invisible_Loaded_Model) == 0x0000F0, "Wrong size on BattleSkillActionBase_C_Invisible_Loaded_Model");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, Lo_ExistPartyIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::Lo_ExistPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, Lo_AttachedActors) == 0x000010, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::Lo_AttachedActors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000030, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BIGetPartySystem_retValue) == 0x000040, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_GetSideActList_retValue) == 0x000058, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_FindUnit_Unit) == 0x000068, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_BattleStopMotion_self_CastInput) == 0x000070, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_BattleStopMotion_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_BattleStopMotion_NoUse) == 0x000080, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_BattleStopMotion_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_Array_Contains_ReturnValue) == 0x000081, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_GetSideActList_retValue_1) == 0x000088, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_GetSideActList_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BIGetPartySystem_retValue_1) == 0x0000A0, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_UnitSetVisibility_retValue) == 0x0000B1, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_UnitSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BIGetPartySystem_retValue_2) == 0x0000B8, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_FindUnit_Unit_1) == 0x0000C8, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_UnitSetVisibility_retValue_1) == 0x0000D0, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_UnitSetVisibility_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_BattleStopMotion_self_CastInput_1) == 0x0000D8, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_BattleStopMotion_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Invisible_Loaded_Model, CallFunc_BI_BattleStopMotion_NoUse_1) == 0x0000E8, "Member 'BattleSkillActionBase_C_Invisible_Loaded_Model::CallFunc_BI_BattleStopMotion_NoUse_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.Com_ServantReturn
// 0x0014 (0x0014 - 0x0000)
struct BattleSkillActionBase_C_Com_ServantReturn final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitSec;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComIndex;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorAction_Com_Index;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_Com_ServantReturn) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_Com_ServantReturn");
static_assert(sizeof(BattleSkillActionBase_C_Com_ServantReturn) == 0x000014, "Wrong size on BattleSkillActionBase_C_Com_ServantReturn");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantReturn, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_Com_ServantReturn::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantReturn, WaitSec) == 0x000004, "Member 'BattleSkillActionBase_C_Com_ServantReturn::WaitSec' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantReturn, ComIndex) == 0x000008, "Member 'BattleSkillActionBase_C_Com_ServantReturn::ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantReturn, CallFunc_Com_WaitTime_ComIndex) == 0x00000C, "Member 'BattleSkillActionBase_C_Com_ServantReturn::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_Com_ServantReturn, CallFunc_Com_ActorAction_Com_Index) == 0x000010, "Member 'BattleSkillActionBase_C_Com_ServantReturn::CallFunc_Com_ActorAction_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.GetActorSide
// 0x0020 (0x0020 - 0x0000)
struct BattleSkillActionBase_C_GetActorSide final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3670[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_GetActorSide) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_GetActorSide");
static_assert(sizeof(BattleSkillActionBase_C_GetActorSide) == 0x000020, "Wrong size on BattleSkillActionBase_C_GetActorSide");
static_assert(offsetof(BattleSkillActionBase_C_GetActorSide, Side) == 0x000000, "Member 'BattleSkillActionBase_C_GetActorSide::Side' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetActorSide, CallFunc_BIGetPartySystem_retValue) == 0x000008, "Member 'BattleSkillActionBase_C_GetActorSide::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetActorSide, CallFunc_GetActorPartyIndex_index) == 0x000018, "Member 'BattleSkillActionBase_C_GetActorSide::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_GetActorSide, CallFunc_BI_GetSide_side) == 0x00001C, "Member 'BattleSkillActionBase_C_GetActorSide::CallFunc_BI_GetSide_side' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.PrepareCounter
// 0x0018 (0x0018 - 0x0000)
struct BattleSkillActionBase_C_PrepareCounter final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BeHomeSideAll_NoUse;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BeHomeSideAll_NoUse_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_PrepareCounter) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_PrepareCounter");
static_assert(sizeof(BattleSkillActionBase_C_PrepareCounter) == 0x000018, "Wrong size on BattleSkillActionBase_C_PrepareCounter");
static_assert(offsetof(BattleSkillActionBase_C_PrepareCounter, CallFunc_BIGetPartySystem_retValue) == 0x000000, "Member 'BattleSkillActionBase_C_PrepareCounter::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareCounter, CallFunc_BI_BeHomeSideAll_NoUse) == 0x000010, "Member 'BattleSkillActionBase_C_PrepareCounter::CallFunc_BI_BeHomeSideAll_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareCounter, CallFunc_BI_BeHomeSideAll_NoUse_1) == 0x000011, "Member 'BattleSkillActionBase_C_PrepareCounter::CallFunc_BI_BeHomeSideAll_NoUse_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.PrepareServantSkillVoiceSetting
// 0x00E0 (0x00E0 - 0x0000)
struct BattleSkillActionBase_C_PrepareServantSkillVoiceSetting final
{
public:
	class ACharaBase_C*                           Lo_Servant;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Summoner;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillType_self_CastInput;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TYPE                                  CallFunc_BI_GetVoiceSkillType_Type;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3671[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillType_self_CastInput;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillType_NoUse;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3672[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillTarget_self_CastInput;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_BI_GetVoiceSkillTarget_Target;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3673[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillAttr_self_CastInput;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              CallFunc_BI_GetVoiceSkillAttr_SkillAttr;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3674[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillTarget_self_CastInput;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillTarget_NoUse;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3675[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillAttr_self_CastInput;      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillAttr_NoUse;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3676[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillID_self_CastInput;        // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetVoiceSkillID_SkillID;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3677[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillID_self_CastInput;        // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillID_NoUse;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3678[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_PrepareServantSkillVoiceSetting");
static_assert(sizeof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting) == 0x0000E0, "Wrong size on BattleSkillActionBase_C_PrepareServantSkillVoiceSetting");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, Lo_Servant) == 0x000000, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::Lo_Servant' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, Lo_Summoner) == 0x000008, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::Lo_Summoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillType_self_CastInput) == 0x000010, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillType_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillType_Type) == 0x000020, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillType_Type' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillType_self_CastInput) == 0x000028, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillType_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillType_NoUse) == 0x000038, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillType_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillTarget_self_CastInput) == 0x000040, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillTarget_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillTarget_Target) == 0x000050, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillTarget_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillAttr_self_CastInput) == 0x000058, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillAttr_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillAttr_SkillAttr) == 0x000068, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillAttr_SkillAttr' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillTarget_self_CastInput) == 0x000070, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillTarget_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillTarget_NoUse) == 0x000080, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillTarget_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillAttr_self_CastInput) == 0x000088, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillAttr_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillAttr_NoUse) == 0x000098, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillAttr_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillID_self_CastInput) == 0x0000A0, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_GetVoiceSkillID_SkillID) == 0x0000B0, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_GetVoiceSkillID_SkillID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillID_self_CastInput) == 0x0000B8, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_BI_SetVoiceSkillID_NoUse) == 0x0000C8, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_BI_SetVoiceSkillID_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_FindUnit_Unit) == 0x0000D0, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareServantSkillVoiceSetting, CallFunc_FindUnit_Unit_1) == 0x0000D8, "Member 'BattleSkillActionBase_C_PrepareServantSkillVoiceSetting::CallFunc_FindUnit_Unit_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.PrepareMagatsuhiSkillVoiceSetting
// 0x0120 (0x0120 - 0x0000)
struct BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting final
{
public:
	class ACharaBase_C*                           Lo_Servant;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Summoner;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3679[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetMagatsuhiOtherActorsLength_length;     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillType_self_CastInput;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TYPE                                  CallFunc_BI_GetVoiceSkillType_Type;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367D[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillTarget_self_CastInput;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_BI_GetVoiceSkillTarget_Target;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367E[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillType_self_CastInput;      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillType_NoUse;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367F[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillTarget_self_CastInput;    // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillTarget_NoUse;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3680[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillAttr_self_CastInput;      // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              CallFunc_BI_GetVoiceSkillAttr_SkillAttr;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3681[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetVoiceSkillID_self_CastInput;        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetVoiceSkillID_SkillID;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3682[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillAttr_self_CastInput;      // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillAttr_NoUse;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3683[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_SetVoiceSkillID_self_CastInput;        // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetVoiceSkillID_NoUse;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3684[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting");
static_assert(sizeof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting) == 0x000120, "Wrong size on BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, Lo_Servant) == 0x000000, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::Lo_Servant' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, Lo_Summoner) == 0x000008, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::Lo_Summoner' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000020, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_GetMagatsuhiOtherActorsLength_length) == 0x000030, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_GetMagatsuhiOtherActorsLength_length' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_FindUnit_Unit) == 0x000040, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillType_self_CastInput) == 0x000058, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillType_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillType_Type) == 0x000068, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillType_Type' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillTarget_self_CastInput) == 0x000070, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillTarget_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillTarget_Target) == 0x000080, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillTarget_Target' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillType_self_CastInput) == 0x000088, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillType_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillType_NoUse) == 0x000098, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillType_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillTarget_self_CastInput) == 0x0000A0, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillTarget_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillTarget_NoUse) == 0x0000B0, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillTarget_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillAttr_self_CastInput) == 0x0000B8, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillAttr_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillAttr_SkillAttr) == 0x0000C8, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillAttr_SkillAttr' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillID_self_CastInput) == 0x0000D0, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_GetVoiceSkillID_SkillID) == 0x0000E0, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_GetVoiceSkillID_SkillID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillAttr_self_CastInput) == 0x0000E8, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillAttr_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillAttr_NoUse) == 0x0000F8, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillAttr_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillID_self_CastInput) == 0x000100, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_BI_SetVoiceSkillID_NoUse) == 0x000110, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_BI_SetVoiceSkillID_NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting, CallFunc_FindUnit_Unit_1) == 0x000118, "Member 'BattleSkillActionBase_C_PrepareMagatsuhiSkillVoiceSetting::CallFunc_FindUnit_Unit_1' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.IsBlockOrAbsorb
// 0x00A8 (0x00A8 - 0x0000)
struct BattleSkillActionBase_C_IsBlockOrAbsorb final
{
public:
	bool                                          BlockOrAbsorb;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable;                                // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_REFLECT_RES_TYPE                        Temp_byte_Variable_1;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3685[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_GetFirstTargetInfo_Info;                  // 0x0008(0x0098)()
	bool                                          CallFunc_GetFirstTargetInfo_valid;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSkillActionBase_C_IsBlockOrAbsorb) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_IsBlockOrAbsorb");
static_assert(sizeof(BattleSkillActionBase_C_IsBlockOrAbsorb) == 0x0000A8, "Wrong size on BattleSkillActionBase_C_IsBlockOrAbsorb");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, BlockOrAbsorb) == 0x000000, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::BlockOrAbsorb' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, Temp_byte_Variable) == 0x000001, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, Temp_byte_Variable_1) == 0x000002, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, CallFunc_GetFirstTargetInfo_Info) == 0x000008, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::CallFunc_GetFirstTargetInfo_Info' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, CallFunc_GetFirstTargetInfo_valid) == 0x0000A0, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::CallFunc_GetFirstTargetInfo_valid' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, CallFunc_Array_Contains_ReturnValue) == 0x0000A1, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, CallFunc_Array_Contains_ReturnValue_1) == 0x0000A2, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_IsBlockOrAbsorb, CallFunc_BooleanOR_ReturnValue) == 0x0000A3, "Member 'BattleSkillActionBase_C_IsBlockOrAbsorb::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BI_Com_ActorSetMotion
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_BI_Com_ActorSetMotion final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitMotionFinished;                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3686[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Com_Index;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_BI_Com_ActorSetMotion) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_BI_Com_ActorSetMotion");
static_assert(sizeof(BattleSkillActionBase_C_BI_Com_ActorSetMotion) == 0x000010, "Wrong size on BattleSkillActionBase_C_BI_Com_ActorSetMotion");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_ActorSetMotion, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_BI_Com_ActorSetMotion::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_ActorSetMotion, MotionID) == 0x000004, "Member 'BattleSkillActionBase_C_BI_Com_ActorSetMotion::MotionID' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_ActorSetMotion, WaitMotionFinished) == 0x000005, "Member 'BattleSkillActionBase_C_BI_Com_ActorSetMotion::WaitMotionFinished' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_ActorSetMotion, Com_Index) == 0x000008, "Member 'BattleSkillActionBase_C_BI_Com_ActorSetMotion::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_ActorSetMotion, CallFunc_Com_ActorSetMotion_Com_Index) == 0x00000C, "Member 'BattleSkillActionBase_C_BI_Com_ActorSetMotion::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BI_Com_AttackMoveActor
// 0x000C (0x000C - 0x0000)
struct BattleSkillActionBase_C_BI_Com_AttackMoveActor final
{
public:
	int32                                         WaitCommandIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Com_Index;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AttackMoveActor_ComIndex;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_BI_Com_AttackMoveActor) == 0x000004, "Wrong alignment on BattleSkillActionBase_C_BI_Com_AttackMoveActor");
static_assert(sizeof(BattleSkillActionBase_C_BI_Com_AttackMoveActor) == 0x00000C, "Wrong size on BattleSkillActionBase_C_BI_Com_AttackMoveActor");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_AttackMoveActor, WaitCommandIndex) == 0x000000, "Member 'BattleSkillActionBase_C_BI_Com_AttackMoveActor::WaitCommandIndex' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_AttackMoveActor, Com_Index) == 0x000004, "Member 'BattleSkillActionBase_C_BI_Com_AttackMoveActor::Com_Index' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_Com_AttackMoveActor, CallFunc_Com_AttackMoveActor_ComIndex) == 0x000008, "Member 'BattleSkillActionBase_C_BI_Com_AttackMoveActor::CallFunc_Com_AttackMoveActor_ComIndex' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BI_RegisterDecal
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_BI_RegisterDecal final
{
public:
	class ADevilSpawnDecal_C*                     Decal;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3687[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_BI_RegisterDecal) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BI_RegisterDecal");
static_assert(sizeof(BattleSkillActionBase_C_BI_RegisterDecal) == 0x000010, "Wrong size on BattleSkillActionBase_C_BI_RegisterDecal");
static_assert(offsetof(BattleSkillActionBase_C_BI_RegisterDecal, Decal) == 0x000000, "Member 'BattleSkillActionBase_C_BI_RegisterDecal::Decal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_RegisterDecal, NoUse) == 0x000008, "Member 'BattleSkillActionBase_C_BI_RegisterDecal::NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_RegisterDecal, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_BI_RegisterDecal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSkillActionBase.BattleSkillActionBase_C.BI_RegisterDecalComponent
// 0x0010 (0x0010 - 0x0000)
struct BattleSkillActionBase_C_BI_RegisterDecalComponent final
{
public:
	class UMaterialAnimDecalComponent_C*          Decal;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3688[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSkillActionBase_C_BI_RegisterDecalComponent) == 0x000008, "Wrong alignment on BattleSkillActionBase_C_BI_RegisterDecalComponent");
static_assert(sizeof(BattleSkillActionBase_C_BI_RegisterDecalComponent) == 0x000010, "Wrong size on BattleSkillActionBase_C_BI_RegisterDecalComponent");
static_assert(offsetof(BattleSkillActionBase_C_BI_RegisterDecalComponent, Decal) == 0x000000, "Member 'BattleSkillActionBase_C_BI_RegisterDecalComponent::Decal' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_RegisterDecalComponent, NoUse) == 0x000008, "Member 'BattleSkillActionBase_C_BI_RegisterDecalComponent::NoUse' has a wrong offset!");
static_assert(offsetof(BattleSkillActionBase_C_BI_RegisterDecalComponent, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BattleSkillActionBase_C_BI_RegisterDecalComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

