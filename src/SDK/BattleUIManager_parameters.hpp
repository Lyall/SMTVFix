#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleUIManager

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleUIManager.BattleUIManager_C.ExecuteUbergraph_BattleUIManager
// 0x0138 (0x0138 - 0x0000)
struct BattleUIManager_C_ExecuteUbergraph_BattleUIManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3352[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TurnChange_C*                       CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3353[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3354[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3355[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PressIcon_C*                        CallFunc_Create_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3356[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3357[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleUtilIconActor_C*                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3358[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3359[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleNumberActor_C*                   CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335A[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335B[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_335C[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335D[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMagatsuhiGaugeCtrl_outActor;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MagatsuhiGaugeCtrl_C> K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl;     // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335E[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MagatsuhiGaugeCtrl_C> K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl_1;   // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335F[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBtlUpliftingGaugeBase*               CallFunc_BI_GetWidgetBase_WidgetBase;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_MagatsuhiGauge_C*                   K2Node_DynamicCast_AsWB_Magatsuhi_Gauge;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager) == 0x000008, "Wrong alignment on BattleUIManager_C_ExecuteUbergraph_BattleUIManager");
static_assert(sizeof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager) == 0x000138, "Wrong size on BattleUIManager_C_ExecuteUbergraph_BattleUIManager");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, EntryPoint) == 0x000000, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000020, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x000028, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Create_ReturnValue_1) == 0x000038, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, Temp_class_Variable) == 0x000040, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_CustomEvent_Loaded) == 0x000048, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000054, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_Event_EndPlayReason) == 0x000059, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000060, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_Event_DeltaSeconds) == 0x000064, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Max_ReturnValue) == 0x000068, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_IsValidClass_ReturnValue) == 0x00006C, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, Temp_class_Variable_1) == 0x000070, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Array_Get_Item) == 0x000078, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000088, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Max_ReturnValue_1) == 0x00008C, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_IsValidClass_ReturnValue_1) == 0x000094, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_CustomEvent_Loaded_1) == 0x0000A8, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_IsValid_ReturnValue_3) == 0x0000B1, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_IsValid_ReturnValue_4) == 0x0000B2, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B4, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_Get_ReturnValue) == 0x0000C8, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_AsBPI_UIManager) == 0x0000D0, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_BPI_GetMagatsuhiGaugeCtrl_outActor) == 0x0000E8, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_BPI_GetMagatsuhiGaugeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl) == 0x0000F0, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl_1) == 0x000108, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, CallFunc_BI_GetWidgetBase_WidgetBase) == 0x000120, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::CallFunc_BI_GetWidgetBase_WidgetBase' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_AsWB_Magatsuhi_Gauge) == 0x000128, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_AsWB_Magatsuhi_Gauge' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ExecuteUbergraph_BattleUIManager, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'BattleUIManager_C_ExecuteUbergraph_BattleUIManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleUIManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleUIManager_C_ReceiveTick");
static_assert(sizeof(BattleUIManager_C_ReceiveTick) == 0x000004, "Wrong size on BattleUIManager_C_ReceiveTick");
static_assert(offsetof(BattleUIManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleUIManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleUIManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleUIManager_C_ReceiveEndPlay");
static_assert(sizeof(BattleUIManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleUIManager_C_ReceiveEndPlay");
static_assert(offsetof(BattleUIManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleUIManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.OnLoaded_480EF4F74D1735F8C80EB88B12F10B00
// 0x0008 (0x0008 - 0x0000)
struct BattleUIManager_C_OnLoaded_480EF4F74D1735F8C80EB88B12F10B00 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_OnLoaded_480EF4F74D1735F8C80EB88B12F10B00) == 0x000008, "Wrong alignment on BattleUIManager_C_OnLoaded_480EF4F74D1735F8C80EB88B12F10B00");
static_assert(sizeof(BattleUIManager_C_OnLoaded_480EF4F74D1735F8C80EB88B12F10B00) == 0x000008, "Wrong size on BattleUIManager_C_OnLoaded_480EF4F74D1735F8C80EB88B12F10B00");
static_assert(offsetof(BattleUIManager_C_OnLoaded_480EF4F74D1735F8C80EB88B12F10B00, Loaded) == 0x000000, "Member 'BattleUIManager_C_OnLoaded_480EF4F74D1735F8C80EB88B12F10B00::Loaded' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.OnLoaded_2D1128B94EA6152C05F061AD7E8976BF
// 0x0008 (0x0008 - 0x0000)
struct BattleUIManager_C_OnLoaded_2D1128B94EA6152C05F061AD7E8976BF final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_OnLoaded_2D1128B94EA6152C05F061AD7E8976BF) == 0x000008, "Wrong alignment on BattleUIManager_C_OnLoaded_2D1128B94EA6152C05F061AD7E8976BF");
static_assert(sizeof(BattleUIManager_C_OnLoaded_2D1128B94EA6152C05F061AD7E8976BF) == 0x000008, "Wrong size on BattleUIManager_C_OnLoaded_2D1128B94EA6152C05F061AD7E8976BF");
static_assert(offsetof(BattleUIManager_C_OnLoaded_2D1128B94EA6152C05F061AD7E8976BF, Loaded) == 0x000000, "Member 'BattleUIManager_C_OnLoaded_2D1128B94EA6152C05F061AD7E8976BF::Loaded' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.GetMainWork
// 0x0020 (0x0020 - 0x0000)
struct BattleUIManager_C_GetMainWork final
{
public:
	class ABattleMain_C*                          RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_GetMainWork) == 0x000008, "Wrong alignment on BattleUIManager_C_GetMainWork");
static_assert(sizeof(BattleUIManager_C_GetMainWork) == 0x000020, "Wrong size on BattleUIManager_C_GetMainWork");
static_assert(offsetof(BattleUIManager_C_GetMainWork, RetValue) == 0x000000, "Member 'BattleUIManager_C_GetMainWork::RetValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BattleUIManager_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetMainWork, K2Node_DynamicCast_AsBattle_Main) == 0x000010, "Member 'BattleUIManager_C_GetMainWork::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleUIManager_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.Initialize
// 0x0080 (0x0080 - 0x0000)
struct BattleUIManager_C_Initialize final
{
public:
	int32                                         Lo_Cnt;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3360[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_OriginTransform;                                // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3361[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_retValue;              // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_Initialize) == 0x000010, "Wrong alignment on BattleUIManager_C_Initialize");
static_assert(sizeof(BattleUIManager_C_Initialize) == 0x000080, "Wrong size on BattleUIManager_C_Initialize");
static_assert(offsetof(BattleUIManager_C_Initialize, Lo_Cnt) == 0x000000, "Member 'BattleUIManager_C_Initialize::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_Initialize, Lo_OriginTransform) == 0x000010, "Member 'BattleUIManager_C_Initialize::Lo_OriginTransform' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_Initialize, CallFunc_GetMainWork_retValue) == 0x000040, "Member 'BattleUIManager_C_Initialize::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_Initialize, CallFunc_GetOriginTransform_retValue) == 0x000050, "Member 'BattleUIManager_C_Initialize::CallFunc_GetOriginTransform_retValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.GetBlankNumber
// 0x00A0 (0x00A0 - 0x0000)
struct BattleUIManager_C_GetBlankNumber final
{
public:
	class ABattleNumberActor_C*                   RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3362[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue_1;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3363[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_retValue;              // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsBattle_Number_Actor;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3364[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleNumberActor_C*                   CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleNumberActor_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3365[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_GetBlankNumber) == 0x000010, "Wrong alignment on BattleUIManager_C_GetBlankNumber");
static_assert(sizeof(BattleUIManager_C_GetBlankNumber) == 0x0000A0, "Wrong size on BattleUIManager_C_GetBlankNumber");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, RetValue) == 0x000000, "Member 'BattleUIManager_C_GetBlankNumber::RetValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattleUIManager_C_GetBlankNumber::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattleUIManager_C_GetBlankNumber::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_GetMainWork_retValue) == 0x000018, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_GetMainWork_retValue_1) == 0x000020, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_GetMainWork_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_GetOriginTransform_retValue) == 0x000030, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, K2Node_ClassDynamicCast_AsBattle_Number_Actor) == 0x000060, "Member 'BattleUIManager_C_GetBlankNumber::K2Node_ClassDynamicCast_AsBattle_Number_Actor' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, K2Node_ClassDynamicCast_bSuccess) == 0x000068, "Member 'BattleUIManager_C_GetBlankNumber::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_Array_Get_Item) == 0x000078, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_IsFinished_retValue) == 0x000088, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_IsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankNumber, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BattleUIManager_C_GetBlankNumber::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.ShowBlankNumber
// 0x0050 (0x0050 - 0x0000)
struct BattleUIManager_C_ShowBlankNumber final
{
public:
	int32                                         HP_Value;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MP_Value;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          HitType;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3366[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  NumEffectType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3367[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SocketLocation;                                    // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosOffset;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ratio;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeRatio;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleNumberActor_C*                   RetValue;                                          // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleNumberActor_C*                   CallFunc_GetBlankNumber_retValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_ShowBlankNumber) == 0x000008, "Wrong alignment on BattleUIManager_C_ShowBlankNumber");
static_assert(sizeof(BattleUIManager_C_ShowBlankNumber) == 0x000050, "Wrong size on BattleUIManager_C_ShowBlankNumber");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, HP_Value) == 0x000000, "Member 'BattleUIManager_C_ShowBlankNumber::HP_Value' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, MP_Value) == 0x000004, "Member 'BattleUIManager_C_ShowBlankNumber::MP_Value' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, HitType) == 0x000008, "Member 'BattleUIManager_C_ShowBlankNumber::HitType' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, Level) == 0x00000C, "Member 'BattleUIManager_C_ShowBlankNumber::Level' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, NumEffectType) == 0x000010, "Member 'BattleUIManager_C_ShowBlankNumber::NumEffectType' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, SocketLocation) == 0x000014, "Member 'BattleUIManager_C_ShowBlankNumber::SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, PosOffset) == 0x000020, "Member 'BattleUIManager_C_ShowBlankNumber::PosOffset' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, Ratio) == 0x000028, "Member 'BattleUIManager_C_ShowBlankNumber::Ratio' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, PlayRate) == 0x00002C, "Member 'BattleUIManager_C_ShowBlankNumber::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, SizeRatio) == 0x000030, "Member 'BattleUIManager_C_ShowBlankNumber::SizeRatio' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, PartyIndex) == 0x000034, "Member 'BattleUIManager_C_ShowBlankNumber::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, RetValue) == 0x000038, "Member 'BattleUIManager_C_ShowBlankNumber::RetValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, CallFunc_GetBlankNumber_retValue) == 0x000040, "Member 'BattleUIManager_C_ShowBlankNumber::CallFunc_GetBlankNumber_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankNumber, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BattleUIManager_C_ShowBlankNumber::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.HideNumber
// 0x0008 (0x0008 - 0x0000)
struct BattleUIManager_C_HideNumber final
{
public:
	class ABattleNumberActor_C*                   NumberActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_HideNumber) == 0x000008, "Wrong alignment on BattleUIManager_C_HideNumber");
static_assert(sizeof(BattleUIManager_C_HideNumber) == 0x000008, "Wrong size on BattleUIManager_C_HideNumber");
static_assert(offsetof(BattleUIManager_C_HideNumber, NumberActor) == 0x000000, "Member 'BattleUIManager_C_HideNumber::NumberActor' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct BattleUIManager_C_IsInitialized final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_IsInitialized) == 0x000001, "Wrong alignment on BattleUIManager_C_IsInitialized");
static_assert(sizeof(BattleUIManager_C_IsInitialized) == 0x000001, "Wrong size on BattleUIManager_C_IsInitialized");
static_assert(offsetof(BattleUIManager_C_IsInitialized, RetValue) == 0x000000, "Member 'BattleUIManager_C_IsInitialized::RetValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.GetBlankIcon
// 0x00A0 (0x00A0 - 0x0000)
struct BattleUIManager_C_GetBlankIcon final
{
public:
	class ABattleUtilIconActor_C*                 RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3368[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue_1;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3369[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_retValue;              // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsBattle_Util_Icon_Actor;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleUtilIconActor_C*                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleUtilIconActor_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336B[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_GetBlankIcon) == 0x000010, "Wrong alignment on BattleUIManager_C_GetBlankIcon");
static_assert(sizeof(BattleUIManager_C_GetBlankIcon) == 0x0000A0, "Wrong size on BattleUIManager_C_GetBlankIcon");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, RetValue) == 0x000000, "Member 'BattleUIManager_C_GetBlankIcon::RetValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BattleUIManager_C_GetBlankIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BattleUIManager_C_GetBlankIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_GetMainWork_retValue) == 0x000018, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_GetMainWork_retValue_1) == 0x000020, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_GetMainWork_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_GetOriginTransform_retValue) == 0x000030, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, K2Node_ClassDynamicCast_AsBattle_Util_Icon_Actor) == 0x000060, "Member 'BattleUIManager_C_GetBlankIcon::K2Node_ClassDynamicCast_AsBattle_Util_Icon_Actor' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, K2Node_ClassDynamicCast_bSuccess) == 0x000068, "Member 'BattleUIManager_C_GetBlankIcon::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_Array_Get_Item) == 0x000078, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_IsFinished_retValue) == 0x000088, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_IsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetBlankIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BattleUIManager_C_GetBlankIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.HideIcon
// 0x0008 (0x0008 - 0x0000)
struct BattleUIManager_C_HideIcon final
{
public:
	class ABattleUtilIconActor_C*                 IconActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_HideIcon) == 0x000008, "Wrong alignment on BattleUIManager_C_HideIcon");
static_assert(sizeof(BattleUIManager_C_HideIcon) == 0x000008, "Wrong size on BattleUIManager_C_HideIcon");
static_assert(offsetof(BattleUIManager_C_HideIcon, IconActor) == 0x000000, "Member 'BattleUIManager_C_HideIcon::IconActor' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.ShowBlankIconByPartyIndex
// 0x0030 (0x0030 - 0x0000)
struct BattleUIManager_C_ShowBlankIconByPartyIndex final
{
public:
	E_BTL_UTIL_ICON_TYPE                          Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleUtilIconActor_C*                 RetValue;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleUtilIconActor_C*                 CallFunc_GetBlankIcon_retValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_ShowBlankIconByPartyIndex) == 0x000008, "Wrong alignment on BattleUIManager_C_ShowBlankIconByPartyIndex");
static_assert(sizeof(BattleUIManager_C_ShowBlankIconByPartyIndex) == 0x000030, "Wrong size on BattleUIManager_C_ShowBlankIconByPartyIndex");
static_assert(offsetof(BattleUIManager_C_ShowBlankIconByPartyIndex, Type) == 0x000000, "Member 'BattleUIManager_C_ShowBlankIconByPartyIndex::Type' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankIconByPartyIndex, PlayRate) == 0x000004, "Member 'BattleUIManager_C_ShowBlankIconByPartyIndex::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankIconByPartyIndex, PartyIndex) == 0x000008, "Member 'BattleUIManager_C_ShowBlankIconByPartyIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankIconByPartyIndex, SocketName) == 0x00000C, "Member 'BattleUIManager_C_ShowBlankIconByPartyIndex::SocketName' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankIconByPartyIndex, RetValue) == 0x000018, "Member 'BattleUIManager_C_ShowBlankIconByPartyIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankIconByPartyIndex, CallFunc_GetBlankIcon_retValue) == 0x000020, "Member 'BattleUIManager_C_ShowBlankIconByPartyIndex::CallFunc_GetBlankIcon_retValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_ShowBlankIconByPartyIndex, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BattleUIManager_C_ShowBlankIconByPartyIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.SetPressIconVisibility
// 0x0006 (0x0006 - 0x0000)
struct BattleUIManager_C_SetPressIconVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_SetPressIconVisibility) == 0x000001, "Wrong alignment on BattleUIManager_C_SetPressIconVisibility");
static_assert(sizeof(BattleUIManager_C_SetPressIconVisibility) == 0x000006, "Wrong size on BattleUIManager_C_SetPressIconVisibility");
static_assert(offsetof(BattleUIManager_C_SetPressIconVisibility, IsVisible) == 0x000000, "Member 'BattleUIManager_C_SetPressIconVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetPressIconVisibility, Temp_bool_Variable) == 0x000001, "Member 'BattleUIManager_C_SetPressIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetPressIconVisibility, Temp_byte_Variable) == 0x000002, "Member 'BattleUIManager_C_SetPressIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetPressIconVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BattleUIManager_C_SetPressIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetPressIconVisibility, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BattleUIManager_C_SetPressIconVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetPressIconVisibility, K2Node_Select_Default) == 0x000005, "Member 'BattleUIManager_C_SetPressIconVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.SetUpliftingGaugeVisibility
// 0x0006 (0x0006 - 0x0000)
struct BattleUIManager_C_SetUpliftingGaugeVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_SetUpliftingGaugeVisibility) == 0x000001, "Wrong alignment on BattleUIManager_C_SetUpliftingGaugeVisibility");
static_assert(sizeof(BattleUIManager_C_SetUpliftingGaugeVisibility) == 0x000006, "Wrong size on BattleUIManager_C_SetUpliftingGaugeVisibility");
static_assert(offsetof(BattleUIManager_C_SetUpliftingGaugeVisibility, IsVisible) == 0x000000, "Member 'BattleUIManager_C_SetUpliftingGaugeVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetUpliftingGaugeVisibility, Temp_bool_Variable) == 0x000001, "Member 'BattleUIManager_C_SetUpliftingGaugeVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetUpliftingGaugeVisibility, Temp_byte_Variable) == 0x000002, "Member 'BattleUIManager_C_SetUpliftingGaugeVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetUpliftingGaugeVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BattleUIManager_C_SetUpliftingGaugeVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetUpliftingGaugeVisibility, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BattleUIManager_C_SetUpliftingGaugeVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetUpliftingGaugeVisibility, K2Node_Select_Default) == 0x000005, "Member 'BattleUIManager_C_SetUpliftingGaugeVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.SetDamageVisibility
// 0x0040 (0x0040 - 0x0000)
struct BattleUIManager_C_SetDamageVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleUtilIconActor_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleNumberActor_C*                   CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3370[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_SetDamageVisibility) == 0x000008, "Wrong alignment on BattleUIManager_C_SetDamageVisibility");
static_assert(sizeof(BattleUIManager_C_SetDamageVisibility) == 0x000040, "Wrong size on BattleUIManager_C_SetDamageVisibility");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, IsVisible) == 0x000000, "Member 'BattleUIManager_C_SetDamageVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleUIManager_C_SetDamageVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleUIManager_C_SetDamageVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BattleUIManager_C_SetDamageVisibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BattleUIManager_C_SetDamageVisibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_SetDamageVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003D, "Member 'BattleUIManager_C_SetDamageVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.IsDisappearedMainUI
// 0x0004 (0x0004 - 0x0000)
struct BattleUIManager_C_IsDisappearedMainUI final
{
public:
	bool                                          IsDisappeared;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared_1;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_IsDisappearedMainUI) == 0x000001, "Wrong alignment on BattleUIManager_C_IsDisappearedMainUI");
static_assert(sizeof(BattleUIManager_C_IsDisappearedMainUI) == 0x000004, "Wrong size on BattleUIManager_C_IsDisappearedMainUI");
static_assert(offsetof(BattleUIManager_C_IsDisappearedMainUI, IsDisappeared) == 0x000000, "Member 'BattleUIManager_C_IsDisappearedMainUI::IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_IsDisappearedMainUI, CallFunc_IsDisappeared_IsDisappeared) == 0x000001, "Member 'BattleUIManager_C_IsDisappearedMainUI::CallFunc_IsDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_IsDisappearedMainUI, CallFunc_IsDisappeared_IsDisappeared_1) == 0x000002, "Member 'BattleUIManager_C_IsDisappearedMainUI::CallFunc_IsDisappeared_IsDisappeared_1' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_IsDisappearedMainUI, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BattleUIManager_C_IsDisappearedMainUI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.GetMainUIDisappear
// 0x0004 (0x0004 - 0x0000)
struct BattleUIManager_C_GetMainUIDisappear final
{
public:
	bool                                          PressIcon;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Uplifting;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared_1;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_GetMainUIDisappear) == 0x000001, "Wrong alignment on BattleUIManager_C_GetMainUIDisappear");
static_assert(sizeof(BattleUIManager_C_GetMainUIDisappear) == 0x000004, "Wrong size on BattleUIManager_C_GetMainUIDisappear");
static_assert(offsetof(BattleUIManager_C_GetMainUIDisappear, PressIcon) == 0x000000, "Member 'BattleUIManager_C_GetMainUIDisappear::PressIcon' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetMainUIDisappear, Uplifting) == 0x000001, "Member 'BattleUIManager_C_GetMainUIDisappear::Uplifting' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetMainUIDisappear, CallFunc_IsDisappeared_IsDisappeared) == 0x000002, "Member 'BattleUIManager_C_GetMainUIDisappear::CallFunc_IsDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_GetMainUIDisappear, CallFunc_IsDisappeared_IsDisappeared_1) == 0x000003, "Member 'BattleUIManager_C_GetMainUIDisappear::CallFunc_IsDisappeared_IsDisappeared_1' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_PressIconSlideOut
// 0x0001 (0x0001 - 0x0000)
struct BattleUIManager_C_BI_PressIconSlideOut final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_PressIconSlideOut) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_PressIconSlideOut");
static_assert(sizeof(BattleUIManager_C_BI_PressIconSlideOut) == 0x000001, "Wrong size on BattleUIManager_C_BI_PressIconSlideOut");
static_assert(offsetof(BattleUIManager_C_BI_PressIconSlideOut, Ret) == 0x000000, "Member 'BattleUIManager_C_BI_PressIconSlideOut::Ret' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_PressIconSlideIn
// 0x0001 (0x0001 - 0x0000)
struct BattleUIManager_C_BI_PressIconSlideIn final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_PressIconSlideIn) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_PressIconSlideIn");
static_assert(sizeof(BattleUIManager_C_BI_PressIconSlideIn) == 0x000001, "Wrong size on BattleUIManager_C_BI_PressIconSlideIn");
static_assert(offsetof(BattleUIManager_C_BI_PressIconSlideIn, Ret) == 0x000000, "Member 'BattleUIManager_C_BI_PressIconSlideIn::Ret' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_UpliftingGaugeSlideOut
// 0x0001 (0x0001 - 0x0000)
struct BattleUIManager_C_BI_UpliftingGaugeSlideOut final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_UpliftingGaugeSlideOut) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_UpliftingGaugeSlideOut");
static_assert(sizeof(BattleUIManager_C_BI_UpliftingGaugeSlideOut) == 0x000001, "Wrong size on BattleUIManager_C_BI_UpliftingGaugeSlideOut");
static_assert(offsetof(BattleUIManager_C_BI_UpliftingGaugeSlideOut, Ret) == 0x000000, "Member 'BattleUIManager_C_BI_UpliftingGaugeSlideOut::Ret' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_UpliftingGaugeSlideIn
// 0x0002 (0x0002 - 0x0000)
struct BattleUIManager_C_BI_UpliftingGaugeSlideIn final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_UpliftingGaugeSlideIn) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_UpliftingGaugeSlideIn");
static_assert(sizeof(BattleUIManager_C_BI_UpliftingGaugeSlideIn) == 0x000002, "Wrong size on BattleUIManager_C_BI_UpliftingGaugeSlideIn");
static_assert(offsetof(BattleUIManager_C_BI_UpliftingGaugeSlideIn, Ret) == 0x000000, "Member 'BattleUIManager_C_BI_UpliftingGaugeSlideIn::Ret' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UpliftingGaugeSlideIn, CallFunc_CheckEventFlag_ReturnValue) == 0x000001, "Member 'BattleUIManager_C_BI_UpliftingGaugeSlideIn::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_ShowBlankNumber
// 0x0050 (0x0050 - 0x0000)
struct BattleUIManager_C_BI_ShowBlankNumber final
{
public:
	int32                                         HP_Value;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MP_Value;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          HitType;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3371[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  NumEffectType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3372[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SocketLocation;                                    // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosOffset;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ratio_;                                            // 0x0028(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeRate;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleNumberActor_C> Number;                                            // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABattleNumberActor_C*                   CallFunc_ShowBlankNumber_retValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_BI_ShowBlankNumber) == 0x000008, "Wrong alignment on BattleUIManager_C_BI_ShowBlankNumber");
static_assert(sizeof(BattleUIManager_C_BI_ShowBlankNumber) == 0x000050, "Wrong size on BattleUIManager_C_BI_ShowBlankNumber");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, HP_Value) == 0x000000, "Member 'BattleUIManager_C_BI_ShowBlankNumber::HP_Value' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, MP_Value) == 0x000004, "Member 'BattleUIManager_C_BI_ShowBlankNumber::MP_Value' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, HitType) == 0x000008, "Member 'BattleUIManager_C_BI_ShowBlankNumber::HitType' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, Level) == 0x00000C, "Member 'BattleUIManager_C_BI_ShowBlankNumber::Level' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, NumEffectType) == 0x000010, "Member 'BattleUIManager_C_BI_ShowBlankNumber::NumEffectType' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, SocketLocation) == 0x000014, "Member 'BattleUIManager_C_BI_ShowBlankNumber::SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, PosOffset) == 0x000020, "Member 'BattleUIManager_C_BI_ShowBlankNumber::PosOffset' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, Ratio_) == 0x000028, "Member 'BattleUIManager_C_BI_ShowBlankNumber::Ratio_' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, PlayRate) == 0x00002C, "Member 'BattleUIManager_C_BI_ShowBlankNumber::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, SizeRate) == 0x000030, "Member 'BattleUIManager_C_BI_ShowBlankNumber::SizeRate' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, PartyIndex) == 0x000034, "Member 'BattleUIManager_C_BI_ShowBlankNumber::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, Number) == 0x000038, "Member 'BattleUIManager_C_BI_ShowBlankNumber::Number' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_ShowBlankNumber, CallFunc_ShowBlankNumber_retValue) == 0x000048, "Member 'BattleUIManager_C_BI_ShowBlankNumber::CallFunc_ShowBlankNumber_retValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_HideNumber
// 0x0028 (0x0028 - 0x0000)
struct BattleUIManager_C_BI_HideNumber final
{
public:
	TScriptInterface<class IBPI_BattleNumberActor_C> Number;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3373[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleNumberActor_C*                   K2Node_DynamicCast_AsBattle_Number_Actor;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_HideNumber) == 0x000008, "Wrong alignment on BattleUIManager_C_BI_HideNumber");
static_assert(sizeof(BattleUIManager_C_BI_HideNumber) == 0x000028, "Wrong size on BattleUIManager_C_BI_HideNumber");
static_assert(offsetof(BattleUIManager_C_BI_HideNumber, Number) == 0x000000, "Member 'BattleUIManager_C_BI_HideNumber::Number' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_HideNumber, NoUse) == 0x000010, "Member 'BattleUIManager_C_BI_HideNumber::NoUse' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_HideNumber, K2Node_DynamicCast_AsBattle_Number_Actor) == 0x000018, "Member 'BattleUIManager_C_BI_HideNumber::K2Node_DynamicCast_AsBattle_Number_Actor' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_HideNumber, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleUIManager_C_BI_HideNumber::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_UtilIconShowByPartyIndex
// 0x0030 (0x0030 - 0x0000)
struct BattleUIManager_C_BI_UtilIconShowByPartyIndex final
{
public:
	E_BTL_UTIL_ICON_TYPE                          Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3374[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3375[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleUtilIconActor_C> Icon;                                              // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABattleUtilIconActor_C*                 CallFunc_ShowBlankIconByPartyIndex_retValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUIManager_C_BI_UtilIconShowByPartyIndex) == 0x000008, "Wrong alignment on BattleUIManager_C_BI_UtilIconShowByPartyIndex");
static_assert(sizeof(BattleUIManager_C_BI_UtilIconShowByPartyIndex) == 0x000030, "Wrong size on BattleUIManager_C_BI_UtilIconShowByPartyIndex");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconShowByPartyIndex, Type) == 0x000000, "Member 'BattleUIManager_C_BI_UtilIconShowByPartyIndex::Type' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconShowByPartyIndex, PlayRate) == 0x000004, "Member 'BattleUIManager_C_BI_UtilIconShowByPartyIndex::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconShowByPartyIndex, PartyIndex) == 0x000008, "Member 'BattleUIManager_C_BI_UtilIconShowByPartyIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconShowByPartyIndex, SocketName) == 0x00000C, "Member 'BattleUIManager_C_BI_UtilIconShowByPartyIndex::SocketName' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconShowByPartyIndex, Icon) == 0x000018, "Member 'BattleUIManager_C_BI_UtilIconShowByPartyIndex::Icon' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconShowByPartyIndex, CallFunc_ShowBlankIconByPartyIndex_retValue) == 0x000028, "Member 'BattleUIManager_C_BI_UtilIconShowByPartyIndex::CallFunc_ShowBlankIconByPartyIndex_retValue' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_UtilIconHide
// 0x0028 (0x0028 - 0x0000)
struct BattleUIManager_C_BI_UtilIconHide final
{
public:
	TScriptInterface<class IBPI_BattleUtilIconActor_C> Icon;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3376[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleUtilIconActor_C*                 K2Node_DynamicCast_AsBattle_Util_Icon_Actor;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_UtilIconHide) == 0x000008, "Wrong alignment on BattleUIManager_C_BI_UtilIconHide");
static_assert(sizeof(BattleUIManager_C_BI_UtilIconHide) == 0x000028, "Wrong size on BattleUIManager_C_BI_UtilIconHide");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconHide, Icon) == 0x000000, "Member 'BattleUIManager_C_BI_UtilIconHide::Icon' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconHide, NoUse) == 0x000010, "Member 'BattleUIManager_C_BI_UtilIconHide::NoUse' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconHide, K2Node_DynamicCast_AsBattle_Util_Icon_Actor) == 0x000018, "Member 'BattleUIManager_C_BI_UtilIconHide::K2Node_DynamicCast_AsBattle_Util_Icon_Actor' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_UtilIconHide, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleUIManager_C_BI_UtilIconHide::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_PressIconIsWorking
// 0x0002 (0x0002 - 0x0000)
struct BattleUIManager_C_BI_PressIconIsWorking final
{
public:
	bool                                          IsWorking;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWorking_IsWorking;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_PressIconIsWorking) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_PressIconIsWorking");
static_assert(sizeof(BattleUIManager_C_BI_PressIconIsWorking) == 0x000002, "Wrong size on BattleUIManager_C_BI_PressIconIsWorking");
static_assert(offsetof(BattleUIManager_C_BI_PressIconIsWorking, IsWorking) == 0x000000, "Member 'BattleUIManager_C_BI_PressIconIsWorking::IsWorking' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_PressIconIsWorking, CallFunc_IsWorking_IsWorking) == 0x000001, "Member 'BattleUIManager_C_BI_PressIconIsWorking::CallFunc_IsWorking_IsWorking' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_IsDisappearedMainUI
// 0x0002 (0x0002 - 0x0000)
struct BattleUIManager_C_BI_IsDisappearedMainUI final
{
public:
	bool                                          IsDisappeared;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappearedMainUI_IsDIsappeared;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_IsDisappearedMainUI) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_IsDisappearedMainUI");
static_assert(sizeof(BattleUIManager_C_BI_IsDisappearedMainUI) == 0x000002, "Wrong size on BattleUIManager_C_BI_IsDisappearedMainUI");
static_assert(offsetof(BattleUIManager_C_BI_IsDisappearedMainUI, IsDisappeared) == 0x000000, "Member 'BattleUIManager_C_BI_IsDisappearedMainUI::IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_IsDisappearedMainUI, CallFunc_IsDisappearedMainUI_IsDIsappeared) == 0x000001, "Member 'BattleUIManager_C_BI_IsDisappearedMainUI::CallFunc_IsDisappearedMainUI_IsDIsappeared' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_GetMainUIDisappeared
// 0x0004 (0x0004 - 0x0000)
struct BattleUIManager_C_BI_GetMainUIDisappeared final
{
public:
	bool                                          PressIcon;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Uplifting;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMainUIDisappear_PressIcon;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMainUIDisappear_Uplifting;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_GetMainUIDisappeared) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_GetMainUIDisappeared");
static_assert(sizeof(BattleUIManager_C_BI_GetMainUIDisappeared) == 0x000004, "Wrong size on BattleUIManager_C_BI_GetMainUIDisappeared");
static_assert(offsetof(BattleUIManager_C_BI_GetMainUIDisappeared, PressIcon) == 0x000000, "Member 'BattleUIManager_C_BI_GetMainUIDisappeared::PressIcon' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_GetMainUIDisappeared, Uplifting) == 0x000001, "Member 'BattleUIManager_C_BI_GetMainUIDisappeared::Uplifting' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_GetMainUIDisappeared, CallFunc_GetMainUIDisappear_PressIcon) == 0x000002, "Member 'BattleUIManager_C_BI_GetMainUIDisappeared::CallFunc_GetMainUIDisappear_PressIcon' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_GetMainUIDisappeared, CallFunc_GetMainUIDisappear_Uplifting) == 0x000003, "Member 'BattleUIManager_C_BI_GetMainUIDisappeared::CallFunc_GetMainUIDisappear_Uplifting' has a wrong offset!");

// Function BattleUIManager.BattleUIManager_C.BI_PressIconAreAllShown
// 0x0002 (0x0002 - 0x0000)
struct BattleUIManager_C_BI_PressIconAreAllShown final
{
public:
	bool                                          Shown;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreAllIconsShown_Shown;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleUIManager_C_BI_PressIconAreAllShown) == 0x000001, "Wrong alignment on BattleUIManager_C_BI_PressIconAreAllShown");
static_assert(sizeof(BattleUIManager_C_BI_PressIconAreAllShown) == 0x000002, "Wrong size on BattleUIManager_C_BI_PressIconAreAllShown");
static_assert(offsetof(BattleUIManager_C_BI_PressIconAreAllShown, Shown) == 0x000000, "Member 'BattleUIManager_C_BI_PressIconAreAllShown::Shown' has a wrong offset!");
static_assert(offsetof(BattleUIManager_C_BI_PressIconAreAllShown, CallFunc_AreAllIconsShown_Shown) == 0x000001, "Member 'BattleUIManager_C_BI_PressIconAreAllShown::CallFunc_AreAllIconsShown_Shown' has a wrong offset!");

}

