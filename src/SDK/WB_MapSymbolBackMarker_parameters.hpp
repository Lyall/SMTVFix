#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MapSymbolBackMarker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_MapSymbolBackMarker.WB_MapSymbolBackMarker_C.ExecuteUbergraph_WB_MapSymbolBackMarker
// 0x0004 (0x0004 - 0x0000)
struct WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker) == 0x000004, "Wrong alignment on WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker");
static_assert(sizeof(WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker) == 0x000004, "Wrong size on WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker");
static_assert(offsetof(WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker, EntryPoint) == 0x000000, "Member 'WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker::EntryPoint' has a wrong offset!");

// Function WB_MapSymbolBackMarker.WB_MapSymbolBackMarker_C.SetSymbolLocation
// 0x0280 (0x0280 - 0x0000)
struct WB_MapSymbolBackMarker_C_SetSymbolLocation final
{
public:
	struct FVector                                SymbolLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_MarkerPos;                                       // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Angle;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_SymbolDir;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_Player2DPos;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_PlayerLocation;                                  // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_SymbolLocation;                                  // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD2[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD3[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD4[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD5[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD6[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_2;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_3;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCrossPoint_Cross;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrossPoint_Success;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD7[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCrossPoint_Cross_1;                    // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrossPoint_Success_1;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD8[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD9[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDA[0x1];                                     // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDB[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_4;                // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BDC[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0158(0x0028)()
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_5;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CrossProduct2D_ReturnValue;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_1;                           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDD[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_2;       // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BDE[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_6;           // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCrossPoint_Cross_2;                    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrossPoint_Success_2;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDF[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE0[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1; // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue_1; // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE1[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation_2; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue_2; // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE2[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x026C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0274(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapSymbolBackMarker_C_SetSymbolLocation) == 0x000008, "Wrong alignment on WB_MapSymbolBackMarker_C_SetSymbolLocation");
static_assert(sizeof(WB_MapSymbolBackMarker_C_SetSymbolLocation) == 0x000280, "Wrong size on WB_MapSymbolBackMarker_C_SetSymbolLocation");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, SymbolLocation) == 0x000000, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::SymbolLocation' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, L_MarkerPos) == 0x00000C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::L_MarkerPos' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, L_Angle) == 0x000014, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::L_Angle' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, L_SymbolDir) == 0x000018, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::L_SymbolDir' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, L_Player2DPos) == 0x000020, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::L_Player2DPos' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, L_PlayerLocation) == 0x000028, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::L_PlayerLocation' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, L_SymbolLocation) == 0x000034, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::L_SymbolLocation' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, Temp_bool_Variable) == 0x000040, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, Temp_struct_Variable) == 0x000044, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, Temp_struct_Variable_1) == 0x000054, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, Temp_bool_Variable_1) == 0x000064, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, Temp_float_Variable) == 0x000068, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, Temp_float_Variable_1) == 0x00006C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000078, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000080, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPosition_ReturnValue) == 0x000084, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000090, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000098, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPosition_ReturnValue_1) == 0x0000A0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPosition_ReturnValue_2) == 0x0000A8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPosition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0000B0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000B8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPosition_ReturnValue_3) == 0x0000C0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPosition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPlayerController_ReturnValue) == 0x0000C8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000D0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetCrossPoint_Cross) == 0x0000D8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetCrossPoint_Cross' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetCrossPoint_Success) == 0x0000E0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetCrossPoint_Success' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000E4, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000EC, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetCrossPoint_Cross_1) == 0x0000F4, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetCrossPoint_Cross_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetCrossPoint_Success_1) == 0x0000FC, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetCrossPoint_Success_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x000100, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x000108, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_BreakVector2D_X) == 0x00010C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_BreakVector2D_Y) == 0x000110, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000114, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000115, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_BooleanOR_ReturnValue) == 0x000116, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000118, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_VSize_ReturnValue) == 0x000124, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x000128, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000130, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPosition_ReturnValue_4) == 0x000134, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPosition_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, K2Node_Select_Default) == 0x00013C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x000150, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, K2Node_MakeStruct_SlateColor) == 0x000158, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPosition_ReturnValue_5) == 0x000180, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPosition_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetViewportScale_ReturnValue) == 0x000188, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x00018C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetViewportScale_ReturnValue_1) == 0x000194, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetViewportSize_ReturnValue) == 0x000198, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_BreakVector2D_X_1) == 0x0001A0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_BreakVector2D_Y_1) == 0x0001A4, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_CrossProduct2D_ReturnValue) == 0x0001A8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_CrossProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001AC, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0001AD, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0001AE, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_BooleanOR_ReturnValue_1) == 0x0001AF, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, K2Node_Select_Default_1) == 0x0001B0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_BooleanOR_ReturnValue_2) == 0x0001B4, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_DotProduct2D_ReturnValue) == 0x0001B8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_DegAcos_ReturnValue) == 0x0001BC, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Add_Vector2DVector2D_ReturnValue_2) == 0x0001C4, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Add_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_SlotAsCanvasSlot_ReturnValue_6) == 0x0001D0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_SlotAsCanvasSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetCrossPoint_Cross_2) == 0x0001D8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetCrossPoint_Cross_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetCrossPoint_Success_2) == 0x0001E0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetCrossPoint_Success_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001E8, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001F0, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPlayerController_ReturnValue_2) == 0x000200, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Normal_ReturnValue) == 0x000208, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1) == 0x000214, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_ProjectWorldLocationToScreen_ReturnValue_1) == 0x00021C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_ProjectWorldLocationToScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000220, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00022C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000234, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_ProjectWorldLocationToScreen_ScreenLocation_2) == 0x000240, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_ProjectWorldLocationToScreen_ScreenLocation_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_ProjectWorldLocationToScreen_ReturnValue_2) == 0x000248, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_ProjectWorldLocationToScreen_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_GetPlayerPawn_ReturnValue) == 0x000250, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000258, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000260, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00026C, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_SetSymbolLocation, CallFunc_Normal2D_ReturnValue) == 0x000274, "Member 'WB_MapSymbolBackMarker_C_SetSymbolLocation::CallFunc_Normal2D_ReturnValue' has a wrong offset!");

// Function WB_MapSymbolBackMarker.WB_MapSymbolBackMarker_C.GetCrossPoint
// 0x01D8 (0x01D8 - 0x0000)
struct WB_MapSymbolBackMarker_C_GetCrossPoint final
{
public:
	struct FVector2D                              Line1;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Line2;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Line3;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Line4;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Cross;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              L_Cross;                                           // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_D2;                                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_D1;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Dev;                                             // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_Line4;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_Line3;                                           // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_Line2;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_Line1;                                           // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE4[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE5[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE6[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE7[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE8[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_7;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_7;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_8;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_8;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_9;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_9;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_10;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_10;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_11;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_11;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_12;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_12;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_13;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_13;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_14;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_14;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_15;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_15;                       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_16;                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_16;                       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_17;                       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_17;                       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_18;                       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_18;                       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_19;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_19;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_20;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_20;                       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_21;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_21;                       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_22;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_22;                       // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_23;                       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_23;                       // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_24;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_24;                       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_25;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_25;                       // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_26;                       // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_26;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_9;        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_27;                       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_27;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_10;       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_28;                       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_28;                       // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_29;                       // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_29;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_11;       // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_12;       // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapSymbolBackMarker_C_GetCrossPoint) == 0x000004, "Wrong alignment on WB_MapSymbolBackMarker_C_GetCrossPoint");
static_assert(sizeof(WB_MapSymbolBackMarker_C_GetCrossPoint) == 0x0001D8, "Wrong size on WB_MapSymbolBackMarker_C_GetCrossPoint");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, Line1) == 0x000000, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::Line1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, Line2) == 0x000008, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::Line2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, Line3) == 0x000010, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::Line3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, Line4) == 0x000018, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::Line4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, Cross) == 0x000020, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::Cross' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, Success) == 0x000028, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::Success' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_Cross) == 0x00002C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_Cross' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_D2) == 0x000034, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_D2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_D1) == 0x000038, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_D1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_Dev) == 0x00003C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_Dev' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_Line4) == 0x000040, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_Line4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_Line3) == 0x000048, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_Line3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_Line2) == 0x000050, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_Line2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, L_Line1) == 0x000058, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::L_Line1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X) == 0x000064, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_1) == 0x00006C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_1) == 0x000070, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_2) == 0x000074, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_2) == 0x000078, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_3) == 0x00007C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_3) == 0x000080, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000084, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000085, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000086, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BooleanAND_ReturnValue) == 0x000087, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000088, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BooleanAND_ReturnValue_1) == 0x000089, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_4) == 0x00008C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_4) == 0x000090, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BooleanOR_ReturnValue) == 0x000094, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_5) == 0x000098, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_5) == 0x00009C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0000A0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0000A1, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x0000A2, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A3, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BooleanAND_ReturnValue_3) == 0x0000A5, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_6) == 0x0000A8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_6) == 0x0000AC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BooleanAND_ReturnValue_4) == 0x0000B1, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_7) == 0x0000B4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_7) == 0x0000B8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000BC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_8) == 0x0000C4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_8) == 0x0000C8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_9) == 0x0000CC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_9) == 0x0000D0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_10) == 0x0000DC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_10' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_10) == 0x0000E0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_10' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000E4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_11) == 0x0000EC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_11' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_11) == 0x0000F0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_11' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000F4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000F8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_12) == 0x0000FC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_12' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_12) == 0x000100, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_12' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_13) == 0x000104, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_13' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_13) == 0x000108, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_13' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x00010C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_14) == 0x000110, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_14' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_14) == 0x000114, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_14' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000118, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x00011C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_15) == 0x000120, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_15' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_15) == 0x000124, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_15' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000128, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00012C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_MakeVector2D_ReturnValue) == 0x000130, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_16) == 0x000138, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_16' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_16) == 0x00013C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_16' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_17) == 0x000140, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_17' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_17) == 0x000144, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_17' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_18) == 0x000148, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_18' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_18) == 0x00014C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_18' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000150, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000154, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_19) == 0x000158, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_19' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_19) == 0x00015C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_19' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000160, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_20) == 0x000164, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_20' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_20) == 0x000168, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_20' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_21) == 0x00016C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_21' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_21) == 0x000170, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_21' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000174, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_22) == 0x000178, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_22' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_22) == 0x00017C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_22' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x000180, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_23) == 0x000184, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_23' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_23) == 0x000188, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_23' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x00018C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_24) == 0x000190, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_24' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_24) == 0x000194, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_24' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_25) == 0x000198, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_25' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_25) == 0x00019C, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_25' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_26) == 0x0001A0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_26' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_26) == 0x0001A4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_26' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_9) == 0x0001A8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0001AC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_27) == 0x0001B0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_27' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_27) == 0x0001B4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_27' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_10) == 0x0001B8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_28) == 0x0001BC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_28' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_28) == 0x0001C0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_28' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_X_29) == 0x0001C4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_X_29' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_BreakVector2D_Y_29) == 0x0001C8, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_BreakVector2D_Y_29' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_11) == 0x0001CC, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0001D0, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_MapSymbolBackMarker_C_GetCrossPoint, CallFunc_Subtract_FloatFloat_ReturnValue_12) == 0x0001D4, "Member 'WB_MapSymbolBackMarker_C_GetCrossPoint::CallFunc_Subtract_FloatFloat_ReturnValue_12' has a wrong offset!");

}

